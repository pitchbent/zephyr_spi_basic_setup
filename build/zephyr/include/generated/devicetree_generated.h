/*
 * Generated by gen_defines.py
 *
 * DTS input file:
 *   /Users/julius/Documents/devel/spi_basic_setup/zephyr_spi_basic_setup/build/zephyr/zephyr.dts.pre
 *
 * Directories with bindings:
 *   /Users/julius/Documents/devel/spi_basic_setup/zephyr_spi_basic_setup/dts/bindings, $ZEPHYR_BASE/dts/bindings
 *
 * Node dependency ordering (ordinal and path):
 *   0   /
 *   1   /aliases
 *   2   /chosen
 *   3   /connector
 *   4   /memory@80000000
 *   5   /system-clock
 *   6   /cpus
 *   7   /cpus/cpu@0
 *   8   /cpus/cpu@0/itm@e0000000
 *   9   /cpus/cpu@0/mpu@e000ed90
 *   10  /gpio_keys
 *   11  /soc
 *   12  /soc/interrupt-controller@e000e100
 *   13  /soc/iomuxc@401f8000
 *   14  /soc/iomuxc@401f8000/IOMUXC_SNVS_PMIC_ON_REQ_GPIO5_IO01
 *   15  /soc/iomuxc@401f8000/IOMUXC_SNVS_PMIC_STBY_REQ_GPIO5_IO02
 *   16  /soc/iomuxc@401f8000/IOMUXC_SNVS_WAKEUP_GPIO5_IO00
 *   17  /soc/gpio@400c0000
 *   18  /gpio_keys/button-1
 *   19  /leds
 *   20  /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_00_GPIO1_IO00
 *   21  /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_01_GPIO1_IO01
 *   22  /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_02_GPIO1_IO02
 *   23  /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_03_GPIO1_IO03
 *   24  /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_04_GPIO1_IO04
 *   25  /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_05_GPIO1_IO05
 *   26  /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_06_GPIO1_IO06
 *   27  /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_07_GPIO1_IO07
 *   28  /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_08_GPIO1_IO08
 *   29  /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_09_GPIO1_IO09
 *   30  /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_10_GPIO1_IO10
 *   31  /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_11_GPIO1_IO11
 *   32  /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_12_GPIO1_IO12
 *   33  /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_13_GPIO1_IO13
 *   34  /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_14_GPIO1_IO14
 *   35  /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_15_GPIO1_IO15
 *   36  /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B1_00_GPIO1_IO16
 *   37  /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B1_01_GPIO1_IO17
 *   38  /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B1_02_GPIO1_IO18
 *   39  /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B1_03_GPIO1_IO19
 *   40  /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B1_04_GPIO1_IO20
 *   41  /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B1_05_GPIO1_IO21
 *   42  /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B1_06_GPIO1_IO22
 *   43  /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B1_07_GPIO1_IO23
 *   44  /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B1_08_GPIO1_IO24
 *   45  /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B1_09_GPIO1_IO25
 *   46  /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B1_10_GPIO1_IO26
 *   47  /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B1_11_GPIO1_IO27
 *   48  /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B1_12_GPIO1_IO28
 *   49  /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B1_13_GPIO1_IO29
 *   50  /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B1_14_GPIO1_IO30
 *   51  /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B1_15_GPIO1_IO31
 *   52  /soc/gpio@401b8000
 *   53  /leds/led-1
 *   54  /soc/iomuxc@401f8000/pinctrl
 *   55  /soc/iomuxc@401f8000/pinctrl/pinmux_adc1
 *   56  /soc/adc@400c4000
 *   57  /soc/adc@400c8000
 *   58  /clock-rtc-xtal
 *   59  /clock-xtal
 *   60  /soc/ccm@400fc000
 *   61  /soc/can@401d0000
 *   62  /soc/can@401d4000
 *   63  /soc/can@401d8000
 *   64  /soc/csi@402bc000
 *   65  /soc/display-controller@402b8000
 *   66  /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_00_GPIO2_IO00
 *   67  /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_01_GPIO2_IO01
 *   68  /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_02_GPIO2_IO02
 *   69  /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_03_GPIO2_IO03
 *   70  /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_04_GPIO2_IO04
 *   71  /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_05_GPIO2_IO05
 *   72  /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_06_GPIO2_IO06
 *   73  /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_07_GPIO2_IO07
 *   74  /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_08_GPIO2_IO08
 *   75  /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_09_GPIO2_IO09
 *   76  /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_10_GPIO2_IO10
 *   77  /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_11_GPIO2_IO11
 *   78  /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_12_GPIO2_IO12
 *   79  /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_13_GPIO2_IO13
 *   80  /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_14_GPIO2_IO14
 *   81  /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_15_GPIO2_IO15
 *   82  /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_16_GPIO2_IO16
 *   83  /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_17_GPIO2_IO17
 *   84  /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_18_GPIO2_IO18
 *   85  /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_19_GPIO2_IO19
 *   86  /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_20_GPIO2_IO20
 *   87  /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_21_GPIO2_IO21
 *   88  /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_22_GPIO2_IO22
 *   89  /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_23_GPIO2_IO23
 *   90  /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_24_GPIO2_IO24
 *   91  /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_25_GPIO2_IO25
 *   92  /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_26_GPIO2_IO26
 *   93  /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_27_GPIO2_IO27
 *   94  /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_28_GPIO2_IO28
 *   95  /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_29_GPIO2_IO29
 *   96  /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_30_GPIO2_IO30
 *   97  /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_31_GPIO2_IO31
 *   98  /soc/gpio@401bc000
 *   99  /soc/gpt@401ec000
 *   100 /soc/gpt@401f0000
 *   101 /soc/iomuxc@401f8000/pinctrl/pinmux_lpi2c1
 *   102 /soc/i2c@403f0000
 *   103 /soc/i2c@403f4000
 *   104 /soc/i2c@403f8000
 *   105 /soc/iomuxc@401f8000/pinctrl/pinmux_lpi2c4
 *   106 /soc/i2c@403fc000
 *   107 /soc/qdec@403c8000
 *   108 /soc/qdec@403cc000
 *   109 /soc/qdec@403d0000
 *   110 /soc/qdec@403d4000
 *   111 /soc/random@400cc000
 *   112 /soc/reset-controller@400f8000
 *   113 /soc/anatop@400d8000
 *   114 /soc/dma-controller@400e8000
 *   115 /soc/iomuxcgpr@400ac000
 *   116 /soc/sai@40384000
 *   117 /soc/sai@40388000
 *   118 /soc/iomuxc@401f8000/pinctrl/pinmux_sai3
 *   119 /soc/sai@4038c000
 *   120 /soc/semc0@402f0000
 *   121 /soc/spi@40398000
 *   122 /soc/spi@4039c000
 *   123 /soc/spi@403a0000
 *   124 /soc/timer@e000e010
 *   125 /soc/iomuxc@401f8000/pinctrl/pinmux_lpuart1
 *   126 /soc/iomuxc@401f8000/pinctrl/pinmux_lpuart1_sleep
 *   127 /soc/uart@40184000
 *   128 /soc/iomuxc@401f8000/pinctrl/pinmux_lpuart2
 *   129 /soc/iomuxc@401f8000/pinctrl/pinmux_lpuart2_sleep
 *   130 /soc/uart@40188000
 *   131 /soc/uart@4018c000
 *   132 /soc/uart@40190000
 *   133 /soc/uart@40194000
 *   134 /soc/uart@40198000
 *   135 /soc/uart@4019c000
 *   136 /soc/uart@401a0000
 *   137 /usbpll-clock
 *   138 /soc/usbd@402e0000
 *   139 /soc/usbd@402e0200
 *   140 /soc/usdhc@402c4000
 *   141 /soc/wdog@400b8000
 *   142 /soc/wdog@400d0000
 *   143 /soc/xbar1@403bc000
 *   144 /soc/xbar2@403c0000
 *   145 /soc/xbar3@403c4000
 *   146 /soc/ccm@400fc000/ahb-podf
 *   147 /soc/ccm@400fc000/arm-podf
 *   148 /soc/ccm@400fc000/ipg-podf
 *   149 /soc/iomuxc@401f8000/pinctrl/pinmux_enet
 *   150 /soc/ethernet@402d8000
 *   151 /soc/iomuxc@401f8000/pinctrl/pinmux_ptp
 *   152 /soc/ethernet@402d8000/ptp
 *   153 /soc/flexpwm@403dc000
 *   154 /soc/flexpwm@403dc000/pwm0
 *   155 /soc/flexpwm@403dc000/pwm1
 *   156 /soc/flexpwm@403dc000/pwm2
 *   157 /soc/flexpwm@403dc000/pwm3
 *   158 /soc/flexpwm@403e0000
 *   159 /soc/flexpwm@403e0000/pwm0
 *   160 /soc/flexpwm@403e0000/pwm1
 *   161 /soc/flexpwm@403e0000/pwm2
 *   162 /soc/flexpwm@403e0000/pwm3
 *   163 /soc/flexpwm@403e4000
 *   164 /soc/flexpwm@403e4000/pwm0
 *   165 /soc/flexpwm@403e4000/pwm1
 *   166 /soc/flexpwm@403e4000/pwm2
 *   167 /soc/flexpwm@403e4000/pwm3
 *   168 /soc/flexpwm@403e8000
 *   169 /soc/flexpwm@403e8000/pwm0
 *   170 /soc/flexpwm@403e8000/pwm1
 *   171 /soc/flexpwm@403e8000/pwm2
 *   172 /soc/flexpwm@403e8000/pwm3
 *   173 /soc/flexram@400b0000
 *   174 /soc/flexram@400b0000/dtcm@20000000
 *   175 /soc/flexram@400b0000/itcm@0
 *   176 /soc/flexram@400b0000/ocram@20200000
 *   177 /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B1_10_ADC1_IN10
 *   178 /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B1_11_ADC1_IN11
 *   179 /soc/iomuxc@401f8000/pinctrl/pinmux_adc1/group0
 *   180 /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_08_ENET_REF_CLK
 *   181 /soc/iomuxc@401f8000/pinctrl/pinmux_enet/group0
 *   182 /soc/iomuxc@401f8000/pinctrl/pinmux_enet/group1
 *   183 /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_09_ENET_RX_DATA1
 *   184 /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_11_ENET_RX_EN
 *   185 /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_12_ENET_RX_ER
 *   186 /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_13_ENET_TX_EN
 *   187 /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_14_ENET_TX_DATA0
 *   188 /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_15_ENET_TX_DATA1
 *   189 /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_40_ENET_MDIO
 *   190 /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_41_ENET_MDC
 *   191 /soc/iomuxc@401f8000/pinctrl/pinmux_enet/group2
 *   192 /soc/iomuxc@401f8000/pinctrl/pinmux_enet/group3
 *   193 /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_10_ENET_RX_DATA0
 *   194 /soc/iomuxc@401f8000/pinctrl/pinmux_enet/group4
 *   195 /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B1_00_FLEXCAN1_TX
 *   196 /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B1_01_FLEXCAN1_RX
 *   197 /soc/iomuxc@401f8000/pinctrl/pinmux_flexcan1
 *   198 /soc/iomuxc@401f8000/pinctrl/pinmux_flexcan1/group0
 *   199 /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B1_14_LPI2C1_SCL
 *   200 /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B1_15_LPI2C1_SDA
 *   201 /soc/iomuxc@401f8000/pinctrl/pinmux_lpi2c1/group0
 *   202 /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B1_02_LPI2C4_SCL
 *   203 /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B1_03_LPI2C4_SDA
 *   204 /soc/iomuxc@401f8000/pinctrl/pinmux_lpi2c4/group0
 *   205 /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_10_LPSPI1_SCK
 *   206 /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_11_LPSPI1_PCS0
 *   207 /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_12_LPSPI1_SDO
 *   208 /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_13_LPSPI1_SDI
 *   209 /soc/iomuxc@401f8000/pinctrl/pinmux_lpspi1
 *   210 /soc/iomuxc@401f8000/pinctrl/pinmux_lpspi1/group0
 *   211 /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_06_LPUART1_TX
 *   212 /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_07_LPUART1_RX
 *   213 /soc/iomuxc@401f8000/pinctrl/pinmux_lpuart1/group0
 *   214 /soc/iomuxc@401f8000/pinctrl/pinmux_lpuart1_sleep/group0
 *   215 /soc/iomuxc@401f8000/pinctrl/pinmux_lpuart1_sleep/group1
 *   216 /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B1_08_LPUART2_TX
 *   217 /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B1_09_LPUART2_RX
 *   218 /soc/iomuxc@401f8000/pinctrl/pinmux_lpuart2/group0
 *   219 /soc/iomuxc@401f8000/pinctrl/pinmux_lpuart2_sleep/group0
 *   220 /soc/iomuxc@401f8000/pinctrl/pinmux_lpuart2_sleep/group1
 *   221 /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_28_SAI3_MCLK
 *   222 /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B1_06_SAI3_TX_BCLK
 *   223 /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B1_07_SAI3_TX_SYNC
 *   224 /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B1_08_SAI3_TX_DATA
 *   225 /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B1_11_SAI3_RX_DATA
 *   226 /soc/iomuxc@401f8000/pinctrl/pinmux_sai3/group0
 *   227 /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B0_03_USDHC1_CLK
 *   228 /soc/iomuxc@401f8000/pinctrl/pinmux_usdhc1
 *   229 /soc/iomuxc@401f8000/pinctrl/pinmux_usdhc1/group0
 *   230 /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B0_00_USDHC1_DATA2
 *   231 /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B0_01_USDHC1_DATA3
 *   232 /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B0_02_USDHC1_CMD
 *   233 /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B0_04_USDHC1_DATA0
 *   234 /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B0_05_USDHC1_DATA1
 *   235 /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B0_06_GPIO3_IO19
 *   236 /soc/iomuxc@401f8000/pinctrl/pinmux_usdhc1/group1
 *   237 /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B1_07_USDHC1_VSELECT
 *   238 /soc/iomuxc@401f8000/pinctrl/pinmux_usdhc1/group2
 *   239 /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B1_04_GPIO3_IO24
 *   240 /soc/iomuxc@401f8000/pinctrl/pinmux_usdhc1/group3
 *   241 /soc/iomuxc@401f8000/pinctrl/pinmux_usdhc1_fast
 *   242 /soc/iomuxc@401f8000/pinctrl/pinmux_usdhc1_fast/group0
 *   243 /soc/iomuxc@401f8000/pinctrl/pinmux_usdhc1_fast/group1
 *   244 /soc/iomuxc@401f8000/pinctrl/pinmux_usdhc1_med
 *   245 /soc/iomuxc@401f8000/pinctrl/pinmux_usdhc1_med/group0
 *   246 /soc/iomuxc@401f8000/pinctrl/pinmux_usdhc1_med/group1
 *   247 /soc/iomuxc@401f8000/pinctrl/pinmux_usdhc1_slow
 *   248 /soc/iomuxc@401f8000/pinctrl/pinmux_usdhc1_slow/group0
 *   249 /soc/iomuxc@401f8000/pinctrl/pinmux_usdhc1_slow/group1
 *   250 /soc/iomuxc@401f8000/pinctrl/pinmux_user
 *   251 /soc/iomuxc@401f8000/pinctrl/pinmux_user/group0
 *   252 /soc/iomuxc@401f8000/pinctrl/pinmux_user/group1
 *   253 /soc/qtmr@401dc000
 *   254 /soc/qtmr@401dc000/timer0
 *   255 /soc/qtmr@401dc000/timer1
 *   256 /soc/qtmr@401dc000/timer2
 *   257 /soc/qtmr@401dc000/timer3
 *   258 /soc/qtmr@401e0000
 *   259 /soc/qtmr@401e0000/timer0
 *   260 /soc/qtmr@401e0000/timer1
 *   261 /soc/qtmr@401e0000/timer2
 *   262 /soc/qtmr@401e0000/timer3
 *   263 /soc/qtmr@401e4000
 *   264 /soc/qtmr@401e4000/timer0
 *   265 /soc/qtmr@401e4000/timer1
 *   266 /soc/qtmr@401e4000/timer2
 *   267 /soc/qtmr@401e4000/timer3
 *   268 /soc/qtmr@401e8000
 *   269 /soc/qtmr@401e8000/timer0
 *   270 /soc/qtmr@401e8000/timer1
 *   271 /soc/qtmr@401e8000/timer2
 *   272 /soc/qtmr@401e8000/timer3
 *   273 /soc/snvs@400d4000
 *   274 /soc/snvs@400d4000/rtc
 *   275 /soc/spi@402a8000
 *   276 /soc/spi@402a8000/is25wp064@0
 *   277 /soc/spi@402a8000/is25wp064@0/partitions
 *   278 /soc/spi@402a8000/is25wp064@0/partitions/partition@0
 *   279 /soc/spi@402a8000/is25wp064@0/partitions/partition@10000
 *   280 /soc/spi@402a8000/is25wp064@0/partitions/partition@310000
 *   281 /soc/spi@402a8000/is25wp064@0/partitions/partition@610000
 *   282 /soc/spi@402a8000/is25wp064@0/partitions/partition@630000
 *   283 /soc/spi@40394000
 *   284 /soc/spi@40394000/fast@0
 *   285 /soc/spi@40394000/slow@0
 *   286 /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_32_GPIO3_IO00
 *   287 /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_33_GPIO3_IO01
 *   288 /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_34_GPIO3_IO02
 *   289 /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_35_GPIO3_IO03
 *   290 /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_36_GPIO3_IO04
 *   291 /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_37_GPIO3_IO05
 *   292 /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_38_GPIO3_IO06
 *   293 /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_39_GPIO3_IO07
 *   294 /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_40_GPIO3_IO08
 *   295 /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_41_GPIO3_IO09
 *   296 /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B0_00_GPIO3_IO13
 *   297 /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B0_01_GPIO3_IO14
 *   298 /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B0_02_GPIO3_IO15
 *   299 /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B0_03_GPIO3_IO16
 *   300 /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B0_04_GPIO3_IO17
 *   301 /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B0_05_GPIO3_IO18
 *   302 /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B1_00_GPIO3_IO20
 *   303 /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B1_01_GPIO3_IO21
 *   304 /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B1_02_GPIO3_IO22
 *   305 /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B1_03_GPIO3_IO23
 *   306 /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B1_05_GPIO3_IO25
 *   307 /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B1_06_GPIO3_IO26
 *   308 /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B1_07_GPIO3_IO27
 *   309 /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B1_08_GPIO3_IO28
 *   310 /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B1_09_GPIO3_IO29
 *   311 /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B1_10_GPIO3_IO30
 *   312 /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B1_11_GPIO3_IO31
 *   313 /soc/gpio@401c0000
 *   314 /soc/usdhc@402c0000
 *   315 /soc/usdhc@402c0000/sdmmc
 *
 * Definitions derived from these nodes in dependency order are next,
 * followed by /chosen nodes.
 */

/* Used to remove brackets from around a single argument */
#define DT_DEBRACKET_INTERNAL(...) __VA_ARGS__

/*
 * Devicetree node: /
 *
 * Node identifier: DT_N
 */

/* Node's full path: */
#define DT_N_PATH "/"

/* Node's name with unit-address: */
#define DT_N_FULL_NAME "/"

/* Helper macros for child nodes of this node. */
#define DT_N_FOREACH_CHILD(fn) fn(DT_N_S_chosen) fn(DT_N_S_aliases) fn(DT_N_S_soc) fn(DT_N_S_cpus) fn(DT_N_S_system_clock) fn(DT_N_S_clock_xtal) fn(DT_N_S_clock_rtc_xtal) fn(DT_N_S_usbpll_clock) fn(DT_N_S_memory_80000000) fn(DT_N_S_leds) fn(DT_N_S_gpio_keys) fn(DT_N_S_connector)
#define DT_N_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_chosen) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_aliases) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_system_clock) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clock_xtal) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clock_rtc_xtal) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_usbpll_clock) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_memory_80000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_gpio_keys) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_connector)
#define DT_N_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_chosen, __VA_ARGS__) fn(DT_N_S_aliases, __VA_ARGS__) fn(DT_N_S_soc, __VA_ARGS__) fn(DT_N_S_cpus, __VA_ARGS__) fn(DT_N_S_system_clock, __VA_ARGS__) fn(DT_N_S_clock_xtal, __VA_ARGS__) fn(DT_N_S_clock_rtc_xtal, __VA_ARGS__) fn(DT_N_S_usbpll_clock, __VA_ARGS__) fn(DT_N_S_memory_80000000, __VA_ARGS__) fn(DT_N_S_leds, __VA_ARGS__) fn(DT_N_S_gpio_keys, __VA_ARGS__) fn(DT_N_S_connector, __VA_ARGS__)
#define DT_N_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_chosen, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_aliases, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_system_clock, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clock_xtal, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clock_rtc_xtal, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_usbpll_clock, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_memory_80000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_gpio_keys, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_connector, __VA_ARGS__)
#define DT_N_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_chosen) fn(DT_N_S_aliases) fn(DT_N_S_soc) fn(DT_N_S_cpus) fn(DT_N_S_system_clock) fn(DT_N_S_clock_xtal) fn(DT_N_S_clock_rtc_xtal) fn(DT_N_S_usbpll_clock) fn(DT_N_S_memory_80000000) fn(DT_N_S_leds) fn(DT_N_S_gpio_keys) fn(DT_N_S_connector)
#define DT_N_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_chosen) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_aliases) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_system_clock) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clock_xtal) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clock_rtc_xtal) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_usbpll_clock) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_memory_80000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_gpio_keys) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_connector)
#define DT_N_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_chosen, __VA_ARGS__) fn(DT_N_S_aliases, __VA_ARGS__) fn(DT_N_S_soc, __VA_ARGS__) fn(DT_N_S_cpus, __VA_ARGS__) fn(DT_N_S_system_clock, __VA_ARGS__) fn(DT_N_S_clock_xtal, __VA_ARGS__) fn(DT_N_S_clock_rtc_xtal, __VA_ARGS__) fn(DT_N_S_usbpll_clock, __VA_ARGS__) fn(DT_N_S_memory_80000000, __VA_ARGS__) fn(DT_N_S_leds, __VA_ARGS__) fn(DT_N_S_gpio_keys, __VA_ARGS__) fn(DT_N_S_connector, __VA_ARGS__)
#define DT_N_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_chosen, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_aliases, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_system_clock, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clock_xtal, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clock_rtc_xtal, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_usbpll_clock, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_memory_80000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_gpio_keys, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_connector, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_ORD 0

/* Ordinals for what this node depends on directly: */
#define DT_N_REQUIRES_ORDS /* nothing */

/* Ordinals for what depends directly on this node: */
#define DT_N_SUPPORTS_ORDS \
	1, /* /aliases */ \
	2, /* /chosen */ \
	3, /* /connector */ \
	4, /* /memory@80000000 */ \
	5, /* /system-clock */ \
	6, /* /cpus */ \
	10, /* /gpio_keys */ \
	11, /* /soc */ \
	19, /* /leds */ \
	58, /* /clock-rtc-xtal */ \
	59, /* /clock-xtal */ \
	137, /* /usbpll-clock */

/* Existence and alternate IDs: */
#define DT_N_EXISTS 1
#define DT_N_INST_0_nxp_mimxrt1021 DT_N

/* Macros for properties that are special in the specification: */
#define DT_N_REG_NUM 0
#define DT_N_RANGES_NUM 0
#define DT_N_FOREACH_RANGE(fn) 
#define DT_N_IRQ_NUM 0
#define DT_N_COMPAT_MATCHES_nxp_mimxrt1021 1
#define DT_N_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_COMPAT_MODEL_IDX_0 "mimxrt1021"
#define DT_N_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_P_compatible {"nxp,mimxrt1021"}
#define DT_N_P_compatible_IDX_0 "nxp,mimxrt1021"
#define DT_N_P_compatible_IDX_0_STRING_UNQUOTED nxp,mimxrt1021
#define DT_N_P_compatible_IDX_0_STRING_TOKEN nxp_mimxrt1021
#define DT_N_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_MIMXRT1021
#define DT_N_P_compatible_IDX_0_EXISTS 1
#define DT_N_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N, compatible, 0)
#define DT_N_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N, compatible, 0)
#define DT_N_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N, compatible, 0, __VA_ARGS__)
#define DT_N_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N, compatible, 0, __VA_ARGS__)
#define DT_N_P_compatible_LEN 1
#define DT_N_P_compatible_EXISTS 1

/*
 * Devicetree node: /aliases
 *
 * Node identifier: DT_N_S_aliases
 */

/* Node's full path: */
#define DT_N_S_aliases_PATH "/aliases"

/* Node's name with unit-address: */
#define DT_N_S_aliases_FULL_NAME "aliases"

/* Node parent (/) identifier: */
#define DT_N_S_aliases_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_aliases_CHILD_IDX 1

/* Helper macros for child nodes of this node. */
#define DT_N_S_aliases_FOREACH_CHILD(fn) 
#define DT_N_S_aliases_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_aliases_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_aliases_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_aliases_ORD 1

/* Ordinals for what this node depends on directly: */
#define DT_N_S_aliases_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_aliases_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_aliases_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_aliases_REG_NUM 0
#define DT_N_S_aliases_RANGES_NUM 0
#define DT_N_S_aliases_FOREACH_RANGE(fn) 
#define DT_N_S_aliases_IRQ_NUM 0
#define DT_N_S_aliases_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_aliases_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /chosen
 *
 * Node identifier: DT_N_S_chosen
 */

/* Node's full path: */
#define DT_N_S_chosen_PATH "/chosen"

/* Node's name with unit-address: */
#define DT_N_S_chosen_FULL_NAME "chosen"

/* Node parent (/) identifier: */
#define DT_N_S_chosen_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_chosen_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_chosen_FOREACH_CHILD(fn) 
#define DT_N_S_chosen_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_chosen_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_chosen_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_chosen_ORD 2

/* Ordinals for what this node depends on directly: */
#define DT_N_S_chosen_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_chosen_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_chosen_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_chosen_REG_NUM 0
#define DT_N_S_chosen_RANGES_NUM 0
#define DT_N_S_chosen_FOREACH_RANGE(fn) 
#define DT_N_S_chosen_IRQ_NUM 0
#define DT_N_S_chosen_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_chosen_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /connector
 *
 * Node identifier: DT_N_S_connector
 *
 * Binding (compatible = arduino-header-r3):
 *   $ZEPHYR_BASE/dts/bindings/gpio/arduino-header-r3.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_connector_PATH "/connector"

/* Node's name with unit-address: */
#define DT_N_S_connector_FULL_NAME "connector"

/* Node parent (/) identifier: */
#define DT_N_S_connector_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_connector_CHILD_IDX 11

/* Helper macros for child nodes of this node. */
#define DT_N_S_connector_FOREACH_CHILD(fn) 
#define DT_N_S_connector_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_connector_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_connector_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_connector_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_connector_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_connector_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_connector_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_connector_ORD 3

/* Ordinals for what this node depends on directly: */
#define DT_N_S_connector_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_connector_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_connector_EXISTS 1
#define DT_N_INST_0_arduino_header_r3 DT_N_S_connector
#define DT_N_NODELABEL_arduino_header DT_N_S_connector

/* Macros for properties that are special in the specification: */
#define DT_N_S_connector_REG_NUM 0
#define DT_N_S_connector_RANGES_NUM 0
#define DT_N_S_connector_FOREACH_RANGE(fn) 
#define DT_N_S_connector_IRQ_NUM 0
#define DT_N_S_connector_COMPAT_MATCHES_arduino_header_r3 1
#define DT_N_S_connector_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_connector_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_connector_P_compatible {"arduino-header-r3"}
#define DT_N_S_connector_P_compatible_IDX_0 "arduino-header-r3"
#define DT_N_S_connector_P_compatible_IDX_0_STRING_UNQUOTED arduino-header-r3
#define DT_N_S_connector_P_compatible_IDX_0_STRING_TOKEN arduino_header_r3
#define DT_N_S_connector_P_compatible_IDX_0_STRING_UPPER_TOKEN ARDUINO_HEADER_R3
#define DT_N_S_connector_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_connector_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_connector, compatible, 0)
#define DT_N_S_connector_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_connector, compatible, 0)
#define DT_N_S_connector_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_connector, compatible, 0, __VA_ARGS__)
#define DT_N_S_connector_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_connector, compatible, 0, __VA_ARGS__)
#define DT_N_S_connector_P_compatible_LEN 1
#define DT_N_S_connector_P_compatible_EXISTS 1
#define DT_N_S_connector_P_wakeup_source 0
#define DT_N_S_connector_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /memory@80000000
 *
 * Node identifier: DT_N_S_memory_80000000
 */

/* Node's full path: */
#define DT_N_S_memory_80000000_PATH "/memory@80000000"

/* Node's name with unit-address: */
#define DT_N_S_memory_80000000_FULL_NAME "memory@80000000"

/* Node parent (/) identifier: */
#define DT_N_S_memory_80000000_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_memory_80000000_CHILD_IDX 8

/* Helper macros for child nodes of this node. */
#define DT_N_S_memory_80000000_FOREACH_CHILD(fn) 
#define DT_N_S_memory_80000000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_memory_80000000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_memory_80000000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_memory_80000000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_memory_80000000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_memory_80000000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_memory_80000000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_memory_80000000_ORD 4

/* Ordinals for what this node depends on directly: */
#define DT_N_S_memory_80000000_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_memory_80000000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_memory_80000000_EXISTS 1
#define DT_N_NODELABEL_sdram0 DT_N_S_memory_80000000

/* Macros for properties that are special in the specification: */
#define DT_N_S_memory_80000000_REG_NUM 1
#define DT_N_S_memory_80000000_REG_IDX_0_EXISTS 1
#define DT_N_S_memory_80000000_REG_IDX_0_VAL_ADDRESS 2147483648 /* 0x80000000 */
#define DT_N_S_memory_80000000_REG_IDX_0_VAL_SIZE 33554432 /* 0x2000000 */
#define DT_N_S_memory_80000000_RANGES_NUM 0
#define DT_N_S_memory_80000000_FOREACH_RANGE(fn) 
#define DT_N_S_memory_80000000_IRQ_NUM 0
#define DT_N_S_memory_80000000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_memory_80000000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_memory_80000000_P_reg {2147483648 /* 0x80000000 */, 33554432 /* 0x2000000 */}
#define DT_N_S_memory_80000000_P_reg_IDX_0 2147483648
#define DT_N_S_memory_80000000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_memory_80000000_P_reg_IDX_1 33554432
#define DT_N_S_memory_80000000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_memory_80000000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_memory_80000000, reg, 0) \
	fn(DT_N_S_memory_80000000, reg, 1)
#define DT_N_S_memory_80000000_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_memory_80000000, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_memory_80000000, reg, 1)
#define DT_N_S_memory_80000000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_memory_80000000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_memory_80000000, reg, 1, __VA_ARGS__)
#define DT_N_S_memory_80000000_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_memory_80000000, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_memory_80000000, reg, 1, __VA_ARGS__)
#define DT_N_S_memory_80000000_P_reg_EXISTS 1

/*
 * Devicetree node: /system-clock
 *
 * Node identifier: DT_N_S_system_clock
 *
 * Binding (compatible = fixed-clock):
 *   $ZEPHYR_BASE/dts/bindings/clock/fixed-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_system_clock_PATH "/system-clock"

/* Node's name with unit-address: */
#define DT_N_S_system_clock_FULL_NAME "system-clock"

/* Node parent (/) identifier: */
#define DT_N_S_system_clock_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_system_clock_CHILD_IDX 4

/* Helper macros for child nodes of this node. */
#define DT_N_S_system_clock_FOREACH_CHILD(fn) 
#define DT_N_S_system_clock_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_system_clock_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_system_clock_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_system_clock_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_system_clock_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_system_clock_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_system_clock_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_system_clock_ORD 5

/* Ordinals for what this node depends on directly: */
#define DT_N_S_system_clock_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_system_clock_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_system_clock_EXISTS 1
#define DT_N_INST_0_fixed_clock DT_N_S_system_clock
#define DT_N_NODELABEL_sysclk   DT_N_S_system_clock

/* Macros for properties that are special in the specification: */
#define DT_N_S_system_clock_REG_NUM 0
#define DT_N_S_system_clock_RANGES_NUM 0
#define DT_N_S_system_clock_FOREACH_RANGE(fn) 
#define DT_N_S_system_clock_IRQ_NUM 0
#define DT_N_S_system_clock_COMPAT_MATCHES_fixed_clock 1
#define DT_N_S_system_clock_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_system_clock_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_system_clock_P_clock_frequency 500000000
#define DT_N_S_system_clock_P_clock_frequency_EXISTS 1

/*
 * Devicetree node: /cpus
 *
 * Node identifier: DT_N_S_cpus
 */

/* Node's full path: */
#define DT_N_S_cpus_PATH "/cpus"

/* Node's name with unit-address: */
#define DT_N_S_cpus_FULL_NAME "cpus"

/* Node parent (/) identifier: */
#define DT_N_S_cpus_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_cpus_CHILD_IDX 3

/* Helper macros for child nodes of this node. */
#define DT_N_S_cpus_FOREACH_CHILD(fn) fn(DT_N_S_cpus_S_cpu_0)
#define DT_N_S_cpus_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_0)
#define DT_N_S_cpus_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__)
#define DT_N_S_cpus_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__)
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_cpus_S_cpu_0)
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_0)
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__)
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_cpus_ORD 6

/* Ordinals for what this node depends on directly: */
#define DT_N_S_cpus_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_cpus_SUPPORTS_ORDS \
	7, /* /cpus/cpu@0 */

/* Existence and alternate IDs: */
#define DT_N_S_cpus_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_cpus_REG_NUM 0
#define DT_N_S_cpus_RANGES_NUM 0
#define DT_N_S_cpus_FOREACH_RANGE(fn) 
#define DT_N_S_cpus_IRQ_NUM 0
#define DT_N_S_cpus_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_cpus_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /cpus/cpu@0
 *
 * Node identifier: DT_N_S_cpus_S_cpu_0
 *
 * Binding (compatible = arm,cortex-m7):
 *   $ZEPHYR_BASE/dts/bindings/cpu/arm,cortex-m7.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_cpus_S_cpu_0_PATH "/cpus/cpu@0"

/* Node's name with unit-address: */
#define DT_N_S_cpus_S_cpu_0_FULL_NAME "cpu@0"

/* Node parent (/cpus) identifier: */
#define DT_N_S_cpus_S_cpu_0_PARENT DT_N_S_cpus

/* Node's index in its parent's list of children: */
#define DT_N_S_cpus_S_cpu_0_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD(fn) fn(DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90) fn(DT_N_S_cpus_S_cpu_0_S_itm_e0000000)
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus_S_cpu_0_S_itm_e0000000)
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90, __VA_ARGS__) fn(DT_N_S_cpus_S_cpu_0_S_itm_e0000000, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus_S_cpu_0_S_itm_e0000000, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90) fn(DT_N_S_cpus_S_cpu_0_S_itm_e0000000)
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus_S_cpu_0_S_itm_e0000000)
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90, __VA_ARGS__) fn(DT_N_S_cpus_S_cpu_0_S_itm_e0000000, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus_S_cpu_0_S_itm_e0000000, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_cpus_S_cpu_0_ORD 7

/* Ordinals for what this node depends on directly: */
#define DT_N_S_cpus_S_cpu_0_REQUIRES_ORDS \
	6, /* /cpus */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_cpus_S_cpu_0_SUPPORTS_ORDS \
	8, /* /cpus/cpu@0/itm@e0000000 */ \
	9, /* /cpus/cpu@0/mpu@e000ed90 */

/* Existence and alternate IDs: */
#define DT_N_S_cpus_S_cpu_0_EXISTS 1
#define DT_N_INST_0_arm_cortex_m7 DT_N_S_cpus_S_cpu_0
#define DT_N_NODELABEL_cpu0       DT_N_S_cpus_S_cpu_0

/* Macros for properties that are special in the specification: */
#define DT_N_S_cpus_S_cpu_0_REG_NUM 1
#define DT_N_S_cpus_S_cpu_0_REG_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_REG_IDX_0_VAL_ADDRESS 0 /* 0x0 */
#define DT_N_S_cpus_S_cpu_0_RANGES_NUM 0
#define DT_N_S_cpus_S_cpu_0_FOREACH_RANGE(fn) 
#define DT_N_S_cpus_S_cpu_0_IRQ_NUM 0
#define DT_N_S_cpus_S_cpu_0_COMPAT_MATCHES_arm_cortex_m7 1
#define DT_N_S_cpus_S_cpu_0_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_COMPAT_VENDOR_IDX_0 "ARM Ltd."
#define DT_N_S_cpus_S_cpu_0_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_COMPAT_MODEL_IDX_0 "cortex-m7"
#define DT_N_S_cpus_S_cpu_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_cpus_S_cpu_0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_cpus_S_cpu_0_P_d_cache_line_size 32
#define DT_N_S_cpus_S_cpu_0_P_d_cache_line_size_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_compatible {"arm,cortex-m7"}
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0 "arm,cortex-m7"
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0_STRING_UNQUOTED arm,cortex-m7
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0_STRING_TOKEN arm_cortex_m7
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0_STRING_UPPER_TOKEN ARM_CORTEX_M7
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_cpus_S_cpu_0, compatible, 0)
#define DT_N_S_cpus_S_cpu_0_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_0, compatible, 0)
#define DT_N_S_cpus_S_cpu_0_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_P_compatible_LEN 1
#define DT_N_S_cpus_S_cpu_0_P_compatible_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_reg {0 /* 0x0 */}
#define DT_N_S_cpus_S_cpu_0_P_reg_IDX_0 0
#define DT_N_S_cpus_S_cpu_0_P_reg_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_cpus_S_cpu_0, reg, 0)
#define DT_N_S_cpus_S_cpu_0_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_0, reg, 0)
#define DT_N_S_cpus_S_cpu_0_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0, reg, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_0, reg, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_P_reg_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_wakeup_source 0
#define DT_N_S_cpus_S_cpu_0_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /cpus/cpu@0/itm@e0000000
 *
 * Node identifier: DT_N_S_cpus_S_cpu_0_S_itm_e0000000
 *
 * Binding (compatible = arm,armv7m-itm):
 *   $ZEPHYR_BASE/dts/bindings/debug/arm,armv7m-itm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_PATH "/cpus/cpu@0/itm@e0000000"

/* Node's name with unit-address: */
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_FULL_NAME "itm@e0000000"

/* Node parent (/cpus/cpu@0) identifier: */
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_PARENT DT_N_S_cpus_S_cpu_0

/* Node's index in its parent's list of children: */
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_CHILD_IDX 1

/* Helper macros for child nodes of this node. */
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_FOREACH_CHILD(fn) 
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_ORD 8

/* Ordinals for what this node depends on directly: */
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_REQUIRES_ORDS \
	7, /* /cpus/cpu@0 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_EXISTS 1
#define DT_N_INST_0_arm_armv7m_itm DT_N_S_cpus_S_cpu_0_S_itm_e0000000
#define DT_N_NODELABEL_itm         DT_N_S_cpus_S_cpu_0_S_itm_e0000000

/* Macros for properties that are special in the specification: */
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_REG_NUM 1
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_REG_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_REG_IDX_0_VAL_ADDRESS 3758096384 /* 0xe0000000 */
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_RANGES_NUM 0
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_FOREACH_RANGE(fn) 
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_IRQ_NUM 0
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_COMPAT_MATCHES_arm_armv7m_itm 1
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_COMPAT_VENDOR_IDX_0 "ARM Ltd."
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_COMPAT_MODEL_IDX_0 "armv7m-itm"
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_P_swo_ref_frequency 132000000
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_P_swo_ref_frequency_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_P_compatible {"arm,armv7m-itm"}
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_P_compatible_IDX_0 "arm,armv7m-itm"
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_P_compatible_IDX_0_STRING_UNQUOTED arm,armv7m-itm
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_P_compatible_IDX_0_STRING_TOKEN arm_armv7m_itm
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_P_compatible_IDX_0_STRING_UPPER_TOKEN ARM_ARMV7M_ITM
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_cpus_S_cpu_0_S_itm_e0000000, compatible, 0)
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_0_S_itm_e0000000, compatible, 0)
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0_S_itm_e0000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_0_S_itm_e0000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_P_compatible_LEN 1
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_P_compatible_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_P_reg {3758096384 /* 0xe0000000 */, 4096 /* 0x1000 */}
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_P_reg_IDX_0 3758096384
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_P_reg_IDX_1 4096
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_cpus_S_cpu_0_S_itm_e0000000, reg, 0) \
	fn(DT_N_S_cpus_S_cpu_0_S_itm_e0000000, reg, 1)
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_0_S_itm_e0000000, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_cpus_S_cpu_0_S_itm_e0000000, reg, 1)
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0_S_itm_e0000000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_cpus_S_cpu_0_S_itm_e0000000, reg, 1, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_0_S_itm_e0000000, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_cpus_S_cpu_0_S_itm_e0000000, reg, 1, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_P_reg_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_P_wakeup_source 0
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /cpus/cpu@0/mpu@e000ed90
 *
 * Node identifier: DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90
 *
 * Binding (compatible = arm,armv7m-mpu):
 *   $ZEPHYR_BASE/dts/bindings/mmu_mpu/arm,armv7m-mpu.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_PATH "/cpus/cpu@0/mpu@e000ed90"

/* Node's name with unit-address: */
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_FULL_NAME "mpu@e000ed90"

/* Node parent (/cpus/cpu@0) identifier: */
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_PARENT DT_N_S_cpus_S_cpu_0

/* Node's index in its parent's list of children: */
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_FOREACH_CHILD(fn) 
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_ORD 9

/* Ordinals for what this node depends on directly: */
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_REQUIRES_ORDS \
	7, /* /cpus/cpu@0 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_EXISTS 1
#define DT_N_INST_0_arm_armv7m_mpu DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90
#define DT_N_NODELABEL_mpu         DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90

/* Macros for properties that are special in the specification: */
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_REG_NUM 1
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_REG_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_REG_IDX_0_VAL_ADDRESS 3758157200 /* 0xe000ed90 */
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_REG_IDX_0_VAL_SIZE 64 /* 0x40 */
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_RANGES_NUM 0
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_FOREACH_RANGE(fn) 
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_IRQ_NUM 0
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_COMPAT_MATCHES_arm_armv7m_mpu 1
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_COMPAT_VENDOR_IDX_0 "ARM Ltd."
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_COMPAT_MODEL_IDX_0 "armv7m-mpu"
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_reg {3758157200 /* 0xe000ed90 */, 64 /* 0x40 */}
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_reg_IDX_0 3758157200
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_reg_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_reg_IDX_1 64
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_reg_IDX_1_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90, reg, 0) \
	fn(DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90, reg, 1)
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90, reg, 1)
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90, reg, 1, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90, reg, 1, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_reg_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_arm_num_mpu_regions 16
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_arm_num_mpu_regions_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_compatible {"arm,armv7m-mpu"}
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_compatible_IDX_0 "arm,armv7m-mpu"
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_compatible_IDX_0_STRING_UNQUOTED arm,armv7m-mpu
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_compatible_IDX_0_STRING_TOKEN arm_armv7m_mpu
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_compatible_IDX_0_STRING_UPPER_TOKEN ARM_ARMV7M_MPU
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90, compatible, 0)
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90, compatible, 0)
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90, compatible, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90, compatible, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_compatible_LEN 1
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_compatible_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_wakeup_source 0
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /gpio_keys
 *
 * Node identifier: DT_N_S_gpio_keys
 *
 * Binding (compatible = gpio-keys):
 *   $ZEPHYR_BASE/dts/bindings/input/gpio-keys.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_gpio_keys_PATH "/gpio_keys"

/* Node's name with unit-address: */
#define DT_N_S_gpio_keys_FULL_NAME "gpio_keys"

/* Node parent (/) identifier: */
#define DT_N_S_gpio_keys_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_gpio_keys_CHILD_IDX 10

/* Helper macros for child nodes of this node. */
#define DT_N_S_gpio_keys_FOREACH_CHILD(fn) fn(DT_N_S_gpio_keys_S_button_1)
#define DT_N_S_gpio_keys_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_gpio_keys_S_button_1)
#define DT_N_S_gpio_keys_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_gpio_keys_S_button_1, __VA_ARGS__)
#define DT_N_S_gpio_keys_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_gpio_keys_S_button_1, __VA_ARGS__)
#define DT_N_S_gpio_keys_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_gpio_keys_S_button_1)
#define DT_N_S_gpio_keys_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_gpio_keys_S_button_1)
#define DT_N_S_gpio_keys_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_gpio_keys_S_button_1, __VA_ARGS__)
#define DT_N_S_gpio_keys_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_gpio_keys_S_button_1, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_gpio_keys_ORD 10

/* Ordinals for what this node depends on directly: */
#define DT_N_S_gpio_keys_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_gpio_keys_SUPPORTS_ORDS \
	18, /* /gpio_keys/button-1 */

/* Existence and alternate IDs: */
#define DT_N_S_gpio_keys_EXISTS 1
#define DT_N_INST_0_gpio_keys DT_N_S_gpio_keys

/* Macros for properties that are special in the specification: */
#define DT_N_S_gpio_keys_REG_NUM 0
#define DT_N_S_gpio_keys_RANGES_NUM 0
#define DT_N_S_gpio_keys_FOREACH_RANGE(fn) 
#define DT_N_S_gpio_keys_IRQ_NUM 0
#define DT_N_S_gpio_keys_COMPAT_MATCHES_gpio_keys 1
#define DT_N_S_gpio_keys_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_gpio_keys_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_gpio_keys_P_debounce_interval_ms 30
#define DT_N_S_gpio_keys_P_debounce_interval_ms_EXISTS 1
#define DT_N_S_gpio_keys_P_compatible {"gpio-keys"}
#define DT_N_S_gpio_keys_P_compatible_IDX_0 "gpio-keys"
#define DT_N_S_gpio_keys_P_compatible_IDX_0_STRING_UNQUOTED gpio-keys
#define DT_N_S_gpio_keys_P_compatible_IDX_0_STRING_TOKEN gpio_keys
#define DT_N_S_gpio_keys_P_compatible_IDX_0_STRING_UPPER_TOKEN GPIO_KEYS
#define DT_N_S_gpio_keys_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_gpio_keys_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_gpio_keys, compatible, 0)
#define DT_N_S_gpio_keys_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_gpio_keys, compatible, 0)
#define DT_N_S_gpio_keys_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_gpio_keys, compatible, 0, __VA_ARGS__)
#define DT_N_S_gpio_keys_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_gpio_keys, compatible, 0, __VA_ARGS__)
#define DT_N_S_gpio_keys_P_compatible_LEN 1
#define DT_N_S_gpio_keys_P_compatible_EXISTS 1
#define DT_N_S_gpio_keys_P_wakeup_source 0
#define DT_N_S_gpio_keys_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc
 *
 * Node identifier: DT_N_S_soc
 */

/* Node's full path: */
#define DT_N_S_soc_PATH "/soc"

/* Node's name with unit-address: */
#define DT_N_S_soc_FULL_NAME "soc"

/* Node parent (/) identifier: */
#define DT_N_S_soc_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_CHILD_IDX 2

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100) fn(DT_N_S_soc_S_timer_e000e010) fn(DT_N_S_soc_S_flexram_400b0000) fn(DT_N_S_soc_S_spi_402a8000) fn(DT_N_S_soc_S_semc0_402f0000) fn(DT_N_S_soc_S_gpt_401ec000) fn(DT_N_S_soc_S_gpt_401f0000) fn(DT_N_S_soc_S_qtmr_401dc000) fn(DT_N_S_soc_S_qtmr_401e0000) fn(DT_N_S_soc_S_qtmr_401e4000) fn(DT_N_S_soc_S_qtmr_401e8000) fn(DT_N_S_soc_S_ccm_400fc000) fn(DT_N_S_soc_S_snvs_400d4000) fn(DT_N_S_soc_S_gpio_401b8000) fn(DT_N_S_soc_S_gpio_401bc000) fn(DT_N_S_soc_S_gpio_401c0000) fn(DT_N_S_soc_S_gpio_400c0000) fn(DT_N_S_soc_S_i2c_403f0000) fn(DT_N_S_soc_S_i2c_403f4000) fn(DT_N_S_soc_S_i2c_403f8000) fn(DT_N_S_soc_S_i2c_403fc000) fn(DT_N_S_soc_S_iomuxc_401f8000) fn(DT_N_S_soc_S_display_controller_402b8000) fn(DT_N_S_soc_S_spi_40394000) fn(DT_N_S_soc_S_spi_40398000) fn(DT_N_S_soc_S_spi_4039c000) fn(DT_N_S_soc_S_spi_403a0000) fn(DT_N_S_soc_S_uart_40184000) fn(DT_N_S_soc_S_uart_40188000) fn(DT_N_S_soc_S_uart_4018c000) fn(DT_N_S_soc_S_uart_40190000) fn(DT_N_S_soc_S_uart_40194000) fn(DT_N_S_soc_S_uart_40198000) fn(DT_N_S_soc_S_uart_4019c000) fn(DT_N_S_soc_S_uart_401a0000) fn(DT_N_S_soc_S_adc_400c4000) fn(DT_N_S_soc_S_adc_400c8000) fn(DT_N_S_soc_S_flexpwm_403dc000) fn(DT_N_S_soc_S_flexpwm_403e0000) fn(DT_N_S_soc_S_flexpwm_403e4000) fn(DT_N_S_soc_S_flexpwm_403e8000) fn(DT_N_S_soc_S_ethernet_402d8000) fn(DT_N_S_soc_S_reset_controller_400f8000) fn(DT_N_S_soc_S_random_400cc000) fn(DT_N_S_soc_S_usbd_402e0000) fn(DT_N_S_soc_S_usbd_402e0200) fn(DT_N_S_soc_S_usdhc_402c0000) fn(DT_N_S_soc_S_usdhc_402c4000) fn(DT_N_S_soc_S_csi_402bc000) fn(DT_N_S_soc_S_dma_controller_400e8000) fn(DT_N_S_soc_S_can_401d0000) fn(DT_N_S_soc_S_can_401d4000) fn(DT_N_S_soc_S_can_401d8000) fn(DT_N_S_soc_S_wdog_400b8000) fn(DT_N_S_soc_S_wdog_400d0000) fn(DT_N_S_soc_S_anatop_400d8000) fn(DT_N_S_soc_S_iomuxcgpr_400ac000) fn(DT_N_S_soc_S_sai_40384000) fn(DT_N_S_soc_S_sai_40388000) fn(DT_N_S_soc_S_sai_4038c000) fn(DT_N_S_soc_S_qdec_403c8000) fn(DT_N_S_soc_S_qdec_403cc000) fn(DT_N_S_soc_S_qdec_403d0000) fn(DT_N_S_soc_S_qdec_403d4000) fn(DT_N_S_soc_S_xbar1_403bc000) fn(DT_N_S_soc_S_xbar2_403c0000) fn(DT_N_S_soc_S_xbar3_403c4000)
#define DT_N_S_soc_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_interrupt_controller_e000e100) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_e000e010) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flexram_400b0000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_402a8000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_semc0_402f0000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpt_401ec000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpt_401f0000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_qtmr_401dc000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_qtmr_401e0000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_qtmr_401e4000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_qtmr_401e8000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ccm_400fc000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_snvs_400d4000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio_401b8000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio_401bc000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio_401c0000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio_400c0000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_403f0000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_403f4000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_403f8000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_403fc000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_display_controller_402b8000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40394000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40398000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_4039c000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_403a0000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_uart_40184000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_uart_40188000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_uart_4018c000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_uart_40190000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_uart_40194000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_uart_40198000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_uart_4019c000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_uart_401a0000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_adc_400c4000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_adc_400c8000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flexpwm_403dc000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flexpwm_403e0000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flexpwm_403e4000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flexpwm_403e8000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ethernet_402d8000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_reset_controller_400f8000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_random_400cc000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_usbd_402e0000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_usbd_402e0200) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_usdhc_402c0000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_usdhc_402c4000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_csi_402bc000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_dma_controller_400e8000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_can_401d0000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_can_401d4000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_can_401d8000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_wdog_400b8000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_wdog_400d0000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_anatop_400d8000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxcgpr_400ac000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_sai_40384000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_sai_40388000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_sai_4038c000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_qdec_403c8000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_qdec_403cc000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_qdec_403d0000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_qdec_403d4000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_xbar1_403bc000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_xbar2_403c0000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_xbar3_403c4000)
#define DT_N_S_soc_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__) fn(DT_N_S_soc_S_flexram_400b0000, __VA_ARGS__) fn(DT_N_S_soc_S_spi_402a8000, __VA_ARGS__) fn(DT_N_S_soc_S_semc0_402f0000, __VA_ARGS__) fn(DT_N_S_soc_S_gpt_401ec000, __VA_ARGS__) fn(DT_N_S_soc_S_gpt_401f0000, __VA_ARGS__) fn(DT_N_S_soc_S_qtmr_401dc000, __VA_ARGS__) fn(DT_N_S_soc_S_qtmr_401e0000, __VA_ARGS__) fn(DT_N_S_soc_S_qtmr_401e4000, __VA_ARGS__) fn(DT_N_S_soc_S_qtmr_401e8000, __VA_ARGS__) fn(DT_N_S_soc_S_ccm_400fc000, __VA_ARGS__) fn(DT_N_S_soc_S_snvs_400d4000, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_401b8000, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_401bc000, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_401c0000, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_400c0000, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_403f0000, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_403f4000, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_403f8000, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_403fc000, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000, __VA_ARGS__) fn(DT_N_S_soc_S_display_controller_402b8000, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40394000, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40398000, __VA_ARGS__) fn(DT_N_S_soc_S_spi_4039c000, __VA_ARGS__) fn(DT_N_S_soc_S_spi_403a0000, __VA_ARGS__) fn(DT_N_S_soc_S_uart_40184000, __VA_ARGS__) fn(DT_N_S_soc_S_uart_40188000, __VA_ARGS__) fn(DT_N_S_soc_S_uart_4018c000, __VA_ARGS__) fn(DT_N_S_soc_S_uart_40190000, __VA_ARGS__) fn(DT_N_S_soc_S_uart_40194000, __VA_ARGS__) fn(DT_N_S_soc_S_uart_40198000, __VA_ARGS__) fn(DT_N_S_soc_S_uart_4019c000, __VA_ARGS__) fn(DT_N_S_soc_S_uart_401a0000, __VA_ARGS__) fn(DT_N_S_soc_S_adc_400c4000, __VA_ARGS__) fn(DT_N_S_soc_S_adc_400c8000, __VA_ARGS__) fn(DT_N_S_soc_S_flexpwm_403dc000, __VA_ARGS__) fn(DT_N_S_soc_S_flexpwm_403e0000, __VA_ARGS__) fn(DT_N_S_soc_S_flexpwm_403e4000, __VA_ARGS__) fn(DT_N_S_soc_S_flexpwm_403e8000, __VA_ARGS__) fn(DT_N_S_soc_S_ethernet_402d8000, __VA_ARGS__) fn(DT_N_S_soc_S_reset_controller_400f8000, __VA_ARGS__) fn(DT_N_S_soc_S_random_400cc000, __VA_ARGS__) fn(DT_N_S_soc_S_usbd_402e0000, __VA_ARGS__) fn(DT_N_S_soc_S_usbd_402e0200, __VA_ARGS__) fn(DT_N_S_soc_S_usdhc_402c0000, __VA_ARGS__) fn(DT_N_S_soc_S_usdhc_402c4000, __VA_ARGS__) fn(DT_N_S_soc_S_csi_402bc000, __VA_ARGS__) fn(DT_N_S_soc_S_dma_controller_400e8000, __VA_ARGS__) fn(DT_N_S_soc_S_can_401d0000, __VA_ARGS__) fn(DT_N_S_soc_S_can_401d4000, __VA_ARGS__) fn(DT_N_S_soc_S_can_401d8000, __VA_ARGS__) fn(DT_N_S_soc_S_wdog_400b8000, __VA_ARGS__) fn(DT_N_S_soc_S_wdog_400d0000, __VA_ARGS__) fn(DT_N_S_soc_S_anatop_400d8000, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxcgpr_400ac000, __VA_ARGS__) fn(DT_N_S_soc_S_sai_40384000, __VA_ARGS__) fn(DT_N_S_soc_S_sai_40388000, __VA_ARGS__) fn(DT_N_S_soc_S_sai_4038c000, __VA_ARGS__) fn(DT_N_S_soc_S_qdec_403c8000, __VA_ARGS__) fn(DT_N_S_soc_S_qdec_403cc000, __VA_ARGS__) fn(DT_N_S_soc_S_qdec_403d0000, __VA_ARGS__) fn(DT_N_S_soc_S_qdec_403d4000, __VA_ARGS__) fn(DT_N_S_soc_S_xbar1_403bc000, __VA_ARGS__) fn(DT_N_S_soc_S_xbar2_403c0000, __VA_ARGS__) fn(DT_N_S_soc_S_xbar3_403c4000, __VA_ARGS__)
#define DT_N_S_soc_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flexram_400b0000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_402a8000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_semc0_402f0000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpt_401ec000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpt_401f0000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_qtmr_401dc000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_qtmr_401e0000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_qtmr_401e4000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_qtmr_401e8000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ccm_400fc000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_snvs_400d4000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio_401b8000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio_401bc000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio_401c0000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio_400c0000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_403f0000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_403f4000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_403f8000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_403fc000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_display_controller_402b8000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40394000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40398000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_4039c000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_403a0000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_uart_40184000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_uart_40188000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_uart_4018c000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_uart_40190000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_uart_40194000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_uart_40198000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_uart_4019c000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_uart_401a0000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_adc_400c4000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_adc_400c8000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flexpwm_403dc000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flexpwm_403e0000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flexpwm_403e4000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flexpwm_403e8000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ethernet_402d8000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_reset_controller_400f8000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_random_400cc000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_usbd_402e0000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_usbd_402e0200, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_usdhc_402c0000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_usdhc_402c4000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_csi_402bc000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_dma_controller_400e8000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_can_401d0000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_can_401d4000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_can_401d8000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_wdog_400b8000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_wdog_400d0000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_anatop_400d8000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxcgpr_400ac000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_sai_40384000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_sai_40388000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_sai_4038c000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_qdec_403c8000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_qdec_403cc000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_qdec_403d0000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_qdec_403d4000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_xbar1_403bc000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_xbar2_403c0000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_xbar3_403c4000, __VA_ARGS__)
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100) fn(DT_N_S_soc_S_timer_e000e010) fn(DT_N_S_soc_S_flexram_400b0000) fn(DT_N_S_soc_S_spi_402a8000) fn(DT_N_S_soc_S_semc0_402f0000) fn(DT_N_S_soc_S_gpt_401ec000) fn(DT_N_S_soc_S_gpt_401f0000) fn(DT_N_S_soc_S_qtmr_401dc000) fn(DT_N_S_soc_S_qtmr_401e0000) fn(DT_N_S_soc_S_qtmr_401e4000) fn(DT_N_S_soc_S_qtmr_401e8000) fn(DT_N_S_soc_S_ccm_400fc000) fn(DT_N_S_soc_S_snvs_400d4000) fn(DT_N_S_soc_S_gpio_401b8000) fn(DT_N_S_soc_S_gpio_401bc000) fn(DT_N_S_soc_S_gpio_401c0000) fn(DT_N_S_soc_S_gpio_400c0000) fn(DT_N_S_soc_S_i2c_403f0000) fn(DT_N_S_soc_S_i2c_403fc000) fn(DT_N_S_soc_S_iomuxc_401f8000) fn(DT_N_S_soc_S_spi_40394000) fn(DT_N_S_soc_S_uart_40184000) fn(DT_N_S_soc_S_adc_400c4000) fn(DT_N_S_soc_S_flexpwm_403dc000) fn(DT_N_S_soc_S_flexpwm_403e0000) fn(DT_N_S_soc_S_flexpwm_403e4000) fn(DT_N_S_soc_S_flexpwm_403e8000) fn(DT_N_S_soc_S_ethernet_402d8000) fn(DT_N_S_soc_S_reset_controller_400f8000) fn(DT_N_S_soc_S_random_400cc000) fn(DT_N_S_soc_S_usbd_402e0000) fn(DT_N_S_soc_S_usdhc_402c0000) fn(DT_N_S_soc_S_dma_controller_400e8000) fn(DT_N_S_soc_S_anatop_400d8000) fn(DT_N_S_soc_S_iomuxcgpr_400ac000)
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_interrupt_controller_e000e100) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_e000e010) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flexram_400b0000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_402a8000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_semc0_402f0000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpt_401ec000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpt_401f0000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_qtmr_401dc000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_qtmr_401e0000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_qtmr_401e4000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_qtmr_401e8000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ccm_400fc000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_snvs_400d4000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio_401b8000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio_401bc000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio_401c0000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio_400c0000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_403f0000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_403fc000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40394000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_uart_40184000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_adc_400c4000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flexpwm_403dc000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flexpwm_403e0000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flexpwm_403e4000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flexpwm_403e8000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ethernet_402d8000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_reset_controller_400f8000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_random_400cc000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_usbd_402e0000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_usdhc_402c0000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_dma_controller_400e8000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_anatop_400d8000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxcgpr_400ac000)
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__) fn(DT_N_S_soc_S_flexram_400b0000, __VA_ARGS__) fn(DT_N_S_soc_S_spi_402a8000, __VA_ARGS__) fn(DT_N_S_soc_S_semc0_402f0000, __VA_ARGS__) fn(DT_N_S_soc_S_gpt_401ec000, __VA_ARGS__) fn(DT_N_S_soc_S_gpt_401f0000, __VA_ARGS__) fn(DT_N_S_soc_S_qtmr_401dc000, __VA_ARGS__) fn(DT_N_S_soc_S_qtmr_401e0000, __VA_ARGS__) fn(DT_N_S_soc_S_qtmr_401e4000, __VA_ARGS__) fn(DT_N_S_soc_S_qtmr_401e8000, __VA_ARGS__) fn(DT_N_S_soc_S_ccm_400fc000, __VA_ARGS__) fn(DT_N_S_soc_S_snvs_400d4000, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_401b8000, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_401bc000, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_401c0000, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_400c0000, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_403f0000, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_403fc000, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40394000, __VA_ARGS__) fn(DT_N_S_soc_S_uart_40184000, __VA_ARGS__) fn(DT_N_S_soc_S_adc_400c4000, __VA_ARGS__) fn(DT_N_S_soc_S_flexpwm_403dc000, __VA_ARGS__) fn(DT_N_S_soc_S_flexpwm_403e0000, __VA_ARGS__) fn(DT_N_S_soc_S_flexpwm_403e4000, __VA_ARGS__) fn(DT_N_S_soc_S_flexpwm_403e8000, __VA_ARGS__) fn(DT_N_S_soc_S_ethernet_402d8000, __VA_ARGS__) fn(DT_N_S_soc_S_reset_controller_400f8000, __VA_ARGS__) fn(DT_N_S_soc_S_random_400cc000, __VA_ARGS__) fn(DT_N_S_soc_S_usbd_402e0000, __VA_ARGS__) fn(DT_N_S_soc_S_usdhc_402c0000, __VA_ARGS__) fn(DT_N_S_soc_S_dma_controller_400e8000, __VA_ARGS__) fn(DT_N_S_soc_S_anatop_400d8000, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxcgpr_400ac000, __VA_ARGS__)
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flexram_400b0000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_402a8000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_semc0_402f0000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpt_401ec000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpt_401f0000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_qtmr_401dc000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_qtmr_401e0000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_qtmr_401e4000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_qtmr_401e8000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ccm_400fc000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_snvs_400d4000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio_401b8000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio_401bc000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio_401c0000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio_400c0000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_403f0000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_403fc000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40394000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_uart_40184000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_adc_400c4000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flexpwm_403dc000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flexpwm_403e0000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flexpwm_403e4000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flexpwm_403e8000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ethernet_402d8000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_reset_controller_400f8000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_random_400cc000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_usbd_402e0000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_usdhc_402c0000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_dma_controller_400e8000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_anatop_400d8000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxcgpr_400ac000, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_ORD 11

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_SUPPORTS_ORDS \
	12, /* /soc/interrupt-controller@e000e100 */ \
	13, /* /soc/iomuxc@401f8000 */ \
	17, /* /soc/gpio@400c0000 */ \
	52, /* /soc/gpio@401b8000 */ \
	56, /* /soc/adc@400c4000 */ \
	57, /* /soc/adc@400c8000 */ \
	60, /* /soc/ccm@400fc000 */ \
	61, /* /soc/can@401d0000 */ \
	62, /* /soc/can@401d4000 */ \
	63, /* /soc/can@401d8000 */ \
	64, /* /soc/csi@402bc000 */ \
	65, /* /soc/display-controller@402b8000 */ \
	98, /* /soc/gpio@401bc000 */ \
	99, /* /soc/gpt@401ec000 */ \
	100, /* /soc/gpt@401f0000 */ \
	102, /* /soc/i2c@403f0000 */ \
	103, /* /soc/i2c@403f4000 */ \
	104, /* /soc/i2c@403f8000 */ \
	106, /* /soc/i2c@403fc000 */ \
	107, /* /soc/qdec@403c8000 */ \
	108, /* /soc/qdec@403cc000 */ \
	109, /* /soc/qdec@403d0000 */ \
	110, /* /soc/qdec@403d4000 */ \
	111, /* /soc/random@400cc000 */ \
	112, /* /soc/reset-controller@400f8000 */ \
	113, /* /soc/anatop@400d8000 */ \
	114, /* /soc/dma-controller@400e8000 */ \
	115, /* /soc/iomuxcgpr@400ac000 */ \
	116, /* /soc/sai@40384000 */ \
	117, /* /soc/sai@40388000 */ \
	119, /* /soc/sai@4038c000 */ \
	120, /* /soc/semc0@402f0000 */ \
	121, /* /soc/spi@40398000 */ \
	122, /* /soc/spi@4039c000 */ \
	123, /* /soc/spi@403a0000 */ \
	124, /* /soc/timer@e000e010 */ \
	127, /* /soc/uart@40184000 */ \
	130, /* /soc/uart@40188000 */ \
	131, /* /soc/uart@4018c000 */ \
	132, /* /soc/uart@40190000 */ \
	133, /* /soc/uart@40194000 */ \
	134, /* /soc/uart@40198000 */ \
	135, /* /soc/uart@4019c000 */ \
	136, /* /soc/uart@401a0000 */ \
	138, /* /soc/usbd@402e0000 */ \
	139, /* /soc/usbd@402e0200 */ \
	140, /* /soc/usdhc@402c4000 */ \
	141, /* /soc/wdog@400b8000 */ \
	142, /* /soc/wdog@400d0000 */ \
	143, /* /soc/xbar1@403bc000 */ \
	144, /* /soc/xbar2@403c0000 */ \
	145, /* /soc/xbar3@403c4000 */ \
	150, /* /soc/ethernet@402d8000 */ \
	153, /* /soc/flexpwm@403dc000 */ \
	158, /* /soc/flexpwm@403e0000 */ \
	163, /* /soc/flexpwm@403e4000 */ \
	168, /* /soc/flexpwm@403e8000 */ \
	173, /* /soc/flexram@400b0000 */ \
	253, /* /soc/qtmr@401dc000 */ \
	258, /* /soc/qtmr@401e0000 */ \
	263, /* /soc/qtmr@401e4000 */ \
	268, /* /soc/qtmr@401e8000 */ \
	273, /* /soc/snvs@400d4000 */ \
	275, /* /soc/spi@402a8000 */ \
	283, /* /soc/spi@40394000 */ \
	313, /* /soc/gpio@401c0000 */ \
	314, /* /soc/usdhc@402c0000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_EXISTS 1
#define DT_N_INST_0_simple_bus DT_N_S_soc

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_REG_NUM 0
#define DT_N_S_soc_RANGES_NUM 0
#define DT_N_S_soc_FOREACH_RANGE(fn) 
#define DT_N_S_soc_IRQ_NUM 0
#define DT_N_S_soc_COMPAT_MATCHES_simple_bus 1
#define DT_N_S_soc_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_P_compatible {"simple-bus"}
#define DT_N_S_soc_P_compatible_IDX_0 "simple-bus"
#define DT_N_S_soc_P_compatible_IDX_0_STRING_UNQUOTED simple-bus
#define DT_N_S_soc_P_compatible_IDX_0_STRING_TOKEN simple_bus
#define DT_N_S_soc_P_compatible_IDX_0_STRING_UPPER_TOKEN SIMPLE_BUS
#define DT_N_S_soc_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc, compatible, 0)
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc, compatible, 0)
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_P_compatible_LEN 1
#define DT_N_S_soc_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/interrupt-controller@e000e100
 *
 * Node identifier: DT_N_S_soc_S_interrupt_controller_e000e100
 *
 * Binding (compatible = arm,v7m-nvic):
 *   $ZEPHYR_BASE/dts/bindings/interrupt-controller/arm,v7m-nvic.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_PATH "/soc/interrupt-controller@e000e100"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_FULL_NAME "interrupt-controller@e000e100"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_ORD 12

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_REQUIRES_ORDS \
	11, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_SUPPORTS_ORDS \
	17, /* /soc/gpio@400c0000 */ \
	52, /* /soc/gpio@401b8000 */ \
	56, /* /soc/adc@400c4000 */ \
	57, /* /soc/adc@400c8000 */ \
	61, /* /soc/can@401d0000 */ \
	62, /* /soc/can@401d4000 */ \
	63, /* /soc/can@401d8000 */ \
	64, /* /soc/csi@402bc000 */ \
	65, /* /soc/display-controller@402b8000 */ \
	98, /* /soc/gpio@401bc000 */ \
	99, /* /soc/gpt@401ec000 */ \
	100, /* /soc/gpt@401f0000 */ \
	102, /* /soc/i2c@403f0000 */ \
	103, /* /soc/i2c@403f4000 */ \
	104, /* /soc/i2c@403f8000 */ \
	106, /* /soc/i2c@403fc000 */ \
	107, /* /soc/qdec@403c8000 */ \
	108, /* /soc/qdec@403cc000 */ \
	109, /* /soc/qdec@403d0000 */ \
	110, /* /soc/qdec@403d4000 */ \
	111, /* /soc/random@400cc000 */ \
	114, /* /soc/dma-controller@400e8000 */ \
	116, /* /soc/sai@40384000 */ \
	117, /* /soc/sai@40388000 */ \
	119, /* /soc/sai@4038c000 */ \
	120, /* /soc/semc0@402f0000 */ \
	121, /* /soc/spi@40398000 */ \
	122, /* /soc/spi@4039c000 */ \
	123, /* /soc/spi@403a0000 */ \
	127, /* /soc/uart@40184000 */ \
	130, /* /soc/uart@40188000 */ \
	131, /* /soc/uart@4018c000 */ \
	132, /* /soc/uart@40190000 */ \
	133, /* /soc/uart@40194000 */ \
	134, /* /soc/uart@40198000 */ \
	135, /* /soc/uart@4019c000 */ \
	136, /* /soc/uart@401a0000 */ \
	138, /* /soc/usbd@402e0000 */ \
	139, /* /soc/usbd@402e0200 */ \
	140, /* /soc/usdhc@402c4000 */ \
	141, /* /soc/wdog@400b8000 */ \
	142, /* /soc/wdog@400d0000 */ \
	143, /* /soc/xbar1@403bc000 */ \
	150, /* /soc/ethernet@402d8000 */ \
	152, /* /soc/ethernet@402d8000/ptp */ \
	153, /* /soc/flexpwm@403dc000 */ \
	154, /* /soc/flexpwm@403dc000/pwm0 */ \
	155, /* /soc/flexpwm@403dc000/pwm1 */ \
	156, /* /soc/flexpwm@403dc000/pwm2 */ \
	157, /* /soc/flexpwm@403dc000/pwm3 */ \
	158, /* /soc/flexpwm@403e0000 */ \
	159, /* /soc/flexpwm@403e0000/pwm0 */ \
	160, /* /soc/flexpwm@403e0000/pwm1 */ \
	161, /* /soc/flexpwm@403e0000/pwm2 */ \
	162, /* /soc/flexpwm@403e0000/pwm3 */ \
	163, /* /soc/flexpwm@403e4000 */ \
	164, /* /soc/flexpwm@403e4000/pwm0 */ \
	165, /* /soc/flexpwm@403e4000/pwm1 */ \
	166, /* /soc/flexpwm@403e4000/pwm2 */ \
	167, /* /soc/flexpwm@403e4000/pwm3 */ \
	168, /* /soc/flexpwm@403e8000 */ \
	169, /* /soc/flexpwm@403e8000/pwm0 */ \
	170, /* /soc/flexpwm@403e8000/pwm1 */ \
	171, /* /soc/flexpwm@403e8000/pwm2 */ \
	172, /* /soc/flexpwm@403e8000/pwm3 */ \
	173, /* /soc/flexram@400b0000 */ \
	253, /* /soc/qtmr@401dc000 */ \
	258, /* /soc/qtmr@401e0000 */ \
	263, /* /soc/qtmr@401e4000 */ \
	268, /* /soc/qtmr@401e8000 */ \
	274, /* /soc/snvs@400d4000/rtc */ \
	275, /* /soc/spi@402a8000 */ \
	283, /* /soc/spi@40394000 */ \
	313, /* /soc/gpio@401c0000 */ \
	314, /* /soc/usdhc@402c0000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_EXISTS 1
#define DT_N_INST_0_arm_v7m_nvic DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_NODELABEL_nvic      DT_N_S_soc_S_interrupt_controller_e000e100

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_NUM 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_IDX_0_VAL_ADDRESS 3758153984 /* 0xe000e100 */
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_IDX_0_VAL_SIZE 3072 /* 0xc00 */
#define DT_N_S_soc_S_interrupt_controller_e000e100_RANGES_NUM 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_IRQ_NUM 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_COMPAT_MATCHES_arm_v7m_nvic 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_COMPAT_VENDOR_IDX_0 "ARM Ltd."
#define DT_N_S_soc_S_interrupt_controller_e000e100_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_COMPAT_MODEL_IDX_0 "v7m-nvic"
#define DT_N_S_soc_S_interrupt_controller_e000e100_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg {3758153984 /* 0xe000e100 */, 3072 /* 0xc00 */}
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_0 3758153984
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_1 3072
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100, reg, 0) \
	fn(DT_N_S_soc_S_interrupt_controller_e000e100, reg, 1)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_interrupt_controller_e000e100, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_e000e100, reg, 1)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_e000e100, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_e000e100, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_arm_num_irq_priority_bits 4
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_arm_num_irq_priority_bits_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_interrupt_controller 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_interrupt_controller_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible {"arm,v7m-nvic"}
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0 "arm,v7m-nvic"
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0_STRING_UNQUOTED arm,v7m-nvic
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0_STRING_TOKEN arm_v7m_nvic
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0_STRING_UPPER_TOKEN ARM_V7M_NVIC
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100, compatible, 0)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_interrupt_controller_e000e100, compatible, 0)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_LEN 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_wakeup_source 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000
 *
 * Binding (compatible = nxp,imx-iomuxc):
 *   $ZEPHYR_BASE/dts/bindings/pinctrl/nxp,imx-iomuxc.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_PATH "/soc/iomuxc@401f8000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_FULL_NAME "iomuxc@401f8000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_CHILD_IDX 21

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_00_gpio1_io00) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_01_gpio1_io01) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_02_gpio1_io02) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_03_gpio1_io03) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_04_gpio1_io04) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_05_gpio1_io05) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_gpio1_io06) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_lpuart1_tx) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_gpio1_io07) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_lpuart1_rx) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_enet_ref_clk) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_gpio1_io08) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_enet_rx_data1) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_gpio1_io09) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_enet_rx_data0) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_gpio1_io10) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_lpspi1_sck) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_enet_rx_en) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_gpio1_io11) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_lpspi1_pcs0) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_enet_rx_er) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_gpio1_io12) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_lpspi1_sdo) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_enet_tx_en) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_gpio1_io13) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_lpspi1_sdi) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_enet_tx_data0) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_gpio1_io14) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_enet_tx_data1) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_gpio1_io15) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_00_gpio1_io16) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_01_gpio1_io17) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_02_gpio1_io18) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_03_gpio1_io19) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_04_gpio1_io20) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_05_gpio1_io21) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_06_gpio1_io22) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_gpio1_io23) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_usdhc1_vselect) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_gpio1_io24) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_lpuart2_tx) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_gpio1_io25) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_lpuart2_rx) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_adc1_in10) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_gpio1_io26) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_adc1_in11) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_gpio1_io27) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_12_gpio1_io28) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_13_gpio1_io29) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_gpio1_io30) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_lpi2c1_scl) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_gpio1_io31) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_lpi2c1_sda) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_00_gpio2_io00) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_01_gpio2_io01) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_02_gpio2_io02) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_03_gpio2_io03) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_04_gpio2_io04) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_05_gpio2_io05) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_06_gpio2_io06) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_07_gpio2_io07) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_08_gpio2_io08) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_09_gpio2_io09) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_10_gpio2_io10) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_11_gpio2_io11) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_12_gpio2_io12) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_13_gpio2_io13) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_14_gpio2_io14) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_15_gpio2_io15) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_16_gpio2_io16) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_17_gpio2_io17) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_18_gpio2_io18) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_19_gpio2_io19) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_20_gpio2_io20) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_21_gpio2_io21) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_22_gpio2_io22) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_23_gpio2_io23) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_24_gpio2_io24) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_25_gpio2_io25) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_26_gpio2_io26) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_27_gpio2_io27) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_gpio2_io28) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_sai3_mclk) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_29_gpio2_io29) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_30_gpio2_io30) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_31_gpio2_io31) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_32_gpio3_io00) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_33_gpio3_io01) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_34_gpio3_io02) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_35_gpio3_io03) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_36_gpio3_io04) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_37_gpio3_io05) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_38_gpio3_io06) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_39_gpio3_io07) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_enet_mdio) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_gpio3_io08) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_enet_mdc) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_gpio3_io09) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_gpio3_io13) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_usdhc1_data2) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_gpio3_io14) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_usdhc1_data3) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_gpio3_io15) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_usdhc1_cmd) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_gpio3_io16) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_usdhc1_clk) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_gpio3_io17) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_usdhc1_data0) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_gpio3_io18) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_usdhc1_data1) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_06_gpio3_io19) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_flexcan1_tx) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_gpio3_io20) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_flexcan1_rx) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_gpio3_io21) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_gpio3_io22) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_lpi2c4_scl) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_gpio3_io23) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_lpi2c4_sda) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_04_gpio3_io24) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_05_gpio3_io25) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_gpio3_io26) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_sai3_tx_bclk) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_gpio3_io27) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_sai3_tx_sync) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_gpio3_io28) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_sai3_tx_data) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_09_gpio3_io29) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_10_gpio3_io30) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_gpio3_io31) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_sai3_rx_data) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_on_req_gpio5_io01) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_stby_req_gpio5_io02) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_wakeup_gpio5_io00)
#define DT_N_S_soc_S_iomuxc_401f8000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_00_gpio1_io00) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_01_gpio1_io01) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_02_gpio1_io02) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_03_gpio1_io03) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_04_gpio1_io04) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_05_gpio1_io05) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_gpio1_io06) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_lpuart1_tx) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_gpio1_io07) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_lpuart1_rx) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_enet_ref_clk) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_gpio1_io08) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_enet_rx_data1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_gpio1_io09) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_enet_rx_data0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_gpio1_io10) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_lpspi1_sck) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_enet_rx_en) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_gpio1_io11) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_lpspi1_pcs0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_enet_rx_er) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_gpio1_io12) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_lpspi1_sdo) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_enet_tx_en) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_gpio1_io13) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_lpspi1_sdi) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_enet_tx_data0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_gpio1_io14) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_enet_tx_data1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_gpio1_io15) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_00_gpio1_io16) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_01_gpio1_io17) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_02_gpio1_io18) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_03_gpio1_io19) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_04_gpio1_io20) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_05_gpio1_io21) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_06_gpio1_io22) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_gpio1_io23) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_usdhc1_vselect) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_gpio1_io24) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_lpuart2_tx) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_gpio1_io25) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_lpuart2_rx) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_adc1_in10) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_gpio1_io26) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_adc1_in11) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_gpio1_io27) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_12_gpio1_io28) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_13_gpio1_io29) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_gpio1_io30) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_lpi2c1_scl) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_gpio1_io31) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_lpi2c1_sda) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_00_gpio2_io00) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_01_gpio2_io01) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_02_gpio2_io02) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_03_gpio2_io03) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_04_gpio2_io04) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_05_gpio2_io05) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_06_gpio2_io06) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_07_gpio2_io07) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_08_gpio2_io08) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_09_gpio2_io09) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_10_gpio2_io10) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_11_gpio2_io11) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_12_gpio2_io12) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_13_gpio2_io13) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_14_gpio2_io14) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_15_gpio2_io15) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_16_gpio2_io16) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_17_gpio2_io17) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_18_gpio2_io18) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_19_gpio2_io19) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_20_gpio2_io20) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_21_gpio2_io21) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_22_gpio2_io22) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_23_gpio2_io23) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_24_gpio2_io24) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_25_gpio2_io25) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_26_gpio2_io26) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_27_gpio2_io27) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_gpio2_io28) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_sai3_mclk) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_29_gpio2_io29) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_30_gpio2_io30) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_31_gpio2_io31) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_32_gpio3_io00) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_33_gpio3_io01) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_34_gpio3_io02) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_35_gpio3_io03) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_36_gpio3_io04) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_37_gpio3_io05) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_38_gpio3_io06) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_39_gpio3_io07) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_enet_mdio) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_gpio3_io08) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_enet_mdc) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_gpio3_io09) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_gpio3_io13) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_usdhc1_data2) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_gpio3_io14) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_usdhc1_data3) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_gpio3_io15) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_usdhc1_cmd) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_gpio3_io16) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_usdhc1_clk) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_gpio3_io17) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_usdhc1_data0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_gpio3_io18) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_usdhc1_data1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_06_gpio3_io19) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_flexcan1_tx) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_gpio3_io20) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_flexcan1_rx) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_gpio3_io21) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_gpio3_io22) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_lpi2c4_scl) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_gpio3_io23) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_lpi2c4_sda) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_04_gpio3_io24) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_05_gpio3_io25) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_gpio3_io26) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_sai3_tx_bclk) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_gpio3_io27) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_sai3_tx_sync) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_gpio3_io28) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_sai3_tx_data) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_09_gpio3_io29) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_10_gpio3_io30) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_gpio3_io31) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_sai3_rx_data) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_on_req_gpio5_io01) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_stby_req_gpio5_io02) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_wakeup_gpio5_io00)
#define DT_N_S_soc_S_iomuxc_401f8000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_00_gpio1_io00, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_01_gpio1_io01, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_02_gpio1_io02, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_03_gpio1_io03, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_04_gpio1_io04, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_05_gpio1_io05, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_gpio1_io06, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_lpuart1_tx, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_gpio1_io07, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_lpuart1_rx, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_enet_ref_clk, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_gpio1_io08, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_enet_rx_data1, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_gpio1_io09, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_enet_rx_data0, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_gpio1_io10, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_lpspi1_sck, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_enet_rx_en, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_gpio1_io11, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_lpspi1_pcs0, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_enet_rx_er, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_gpio1_io12, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_lpspi1_sdo, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_enet_tx_en, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_gpio1_io13, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_lpspi1_sdi, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_enet_tx_data0, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_gpio1_io14, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_enet_tx_data1, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_gpio1_io15, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_00_gpio1_io16, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_01_gpio1_io17, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_02_gpio1_io18, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_03_gpio1_io19, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_04_gpio1_io20, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_05_gpio1_io21, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_06_gpio1_io22, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_gpio1_io23, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_usdhc1_vselect, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_gpio1_io24, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_lpuart2_tx, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_gpio1_io25, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_lpuart2_rx, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_adc1_in10, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_gpio1_io26, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_adc1_in11, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_gpio1_io27, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_12_gpio1_io28, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_13_gpio1_io29, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_gpio1_io30, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_lpi2c1_scl, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_gpio1_io31, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_lpi2c1_sda, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_00_gpio2_io00, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_01_gpio2_io01, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_02_gpio2_io02, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_03_gpio2_io03, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_04_gpio2_io04, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_05_gpio2_io05, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_06_gpio2_io06, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_07_gpio2_io07, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_08_gpio2_io08, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_09_gpio2_io09, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_10_gpio2_io10, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_11_gpio2_io11, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_12_gpio2_io12, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_13_gpio2_io13, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_14_gpio2_io14, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_15_gpio2_io15, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_16_gpio2_io16, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_17_gpio2_io17, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_18_gpio2_io18, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_19_gpio2_io19, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_20_gpio2_io20, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_21_gpio2_io21, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_22_gpio2_io22, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_23_gpio2_io23, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_24_gpio2_io24, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_25_gpio2_io25, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_26_gpio2_io26, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_27_gpio2_io27, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_gpio2_io28, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_sai3_mclk, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_29_gpio2_io29, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_30_gpio2_io30, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_31_gpio2_io31, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_32_gpio3_io00, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_33_gpio3_io01, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_34_gpio3_io02, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_35_gpio3_io03, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_36_gpio3_io04, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_37_gpio3_io05, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_38_gpio3_io06, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_39_gpio3_io07, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_enet_mdio, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_gpio3_io08, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_enet_mdc, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_gpio3_io09, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_gpio3_io13, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_usdhc1_data2, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_gpio3_io14, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_usdhc1_data3, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_gpio3_io15, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_usdhc1_cmd, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_gpio3_io16, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_usdhc1_clk, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_gpio3_io17, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_usdhc1_data0, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_gpio3_io18, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_usdhc1_data1, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_06_gpio3_io19, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_flexcan1_tx, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_gpio3_io20, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_flexcan1_rx, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_gpio3_io21, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_gpio3_io22, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_lpi2c4_scl, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_gpio3_io23, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_lpi2c4_sda, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_04_gpio3_io24, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_05_gpio3_io25, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_gpio3_io26, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_sai3_tx_bclk, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_gpio3_io27, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_sai3_tx_sync, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_gpio3_io28, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_sai3_tx_data, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_09_gpio3_io29, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_10_gpio3_io30, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_gpio3_io31, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_sai3_rx_data, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_on_req_gpio5_io01, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_stby_req_gpio5_io02, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_wakeup_gpio5_io00, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_00_gpio1_io00, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_01_gpio1_io01, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_02_gpio1_io02, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_03_gpio1_io03, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_04_gpio1_io04, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_05_gpio1_io05, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_gpio1_io06, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_lpuart1_tx, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_gpio1_io07, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_lpuart1_rx, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_enet_ref_clk, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_gpio1_io08, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_enet_rx_data1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_gpio1_io09, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_enet_rx_data0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_gpio1_io10, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_lpspi1_sck, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_enet_rx_en, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_gpio1_io11, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_lpspi1_pcs0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_enet_rx_er, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_gpio1_io12, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_lpspi1_sdo, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_enet_tx_en, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_gpio1_io13, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_lpspi1_sdi, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_enet_tx_data0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_gpio1_io14, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_enet_tx_data1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_gpio1_io15, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_00_gpio1_io16, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_01_gpio1_io17, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_02_gpio1_io18, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_03_gpio1_io19, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_04_gpio1_io20, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_05_gpio1_io21, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_06_gpio1_io22, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_gpio1_io23, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_usdhc1_vselect, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_gpio1_io24, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_lpuart2_tx, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_gpio1_io25, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_lpuart2_rx, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_adc1_in10, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_gpio1_io26, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_adc1_in11, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_gpio1_io27, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_12_gpio1_io28, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_13_gpio1_io29, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_gpio1_io30, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_lpi2c1_scl, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_gpio1_io31, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_lpi2c1_sda, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_00_gpio2_io00, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_01_gpio2_io01, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_02_gpio2_io02, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_03_gpio2_io03, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_04_gpio2_io04, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_05_gpio2_io05, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_06_gpio2_io06, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_07_gpio2_io07, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_08_gpio2_io08, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_09_gpio2_io09, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_10_gpio2_io10, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_11_gpio2_io11, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_12_gpio2_io12, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_13_gpio2_io13, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_14_gpio2_io14, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_15_gpio2_io15, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_16_gpio2_io16, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_17_gpio2_io17, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_18_gpio2_io18, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_19_gpio2_io19, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_20_gpio2_io20, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_21_gpio2_io21, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_22_gpio2_io22, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_23_gpio2_io23, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_24_gpio2_io24, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_25_gpio2_io25, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_26_gpio2_io26, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_27_gpio2_io27, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_gpio2_io28, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_sai3_mclk, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_29_gpio2_io29, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_30_gpio2_io30, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_31_gpio2_io31, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_32_gpio3_io00, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_33_gpio3_io01, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_34_gpio3_io02, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_35_gpio3_io03, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_36_gpio3_io04, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_37_gpio3_io05, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_38_gpio3_io06, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_39_gpio3_io07, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_enet_mdio, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_gpio3_io08, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_enet_mdc, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_gpio3_io09, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_gpio3_io13, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_usdhc1_data2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_gpio3_io14, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_usdhc1_data3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_gpio3_io15, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_usdhc1_cmd, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_gpio3_io16, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_usdhc1_clk, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_gpio3_io17, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_usdhc1_data0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_gpio3_io18, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_usdhc1_data1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_06_gpio3_io19, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_flexcan1_tx, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_gpio3_io20, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_flexcan1_rx, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_gpio3_io21, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_gpio3_io22, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_lpi2c4_scl, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_gpio3_io23, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_lpi2c4_sda, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_04_gpio3_io24, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_05_gpio3_io25, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_gpio3_io26, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_sai3_tx_bclk, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_gpio3_io27, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_sai3_tx_sync, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_gpio3_io28, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_sai3_tx_data, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_09_gpio3_io29, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_10_gpio3_io30, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_gpio3_io31, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_sai3_rx_data, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_on_req_gpio5_io01, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_stby_req_gpio5_io02, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_wakeup_gpio5_io00, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_00_gpio1_io00) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_01_gpio1_io01) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_02_gpio1_io02) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_03_gpio1_io03) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_04_gpio1_io04) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_05_gpio1_io05) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_gpio1_io06) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_lpuart1_tx) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_gpio1_io07) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_lpuart1_rx) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_enet_ref_clk) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_gpio1_io08) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_enet_rx_data1) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_gpio1_io09) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_enet_rx_data0) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_gpio1_io10) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_lpspi1_sck) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_enet_rx_en) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_gpio1_io11) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_lpspi1_pcs0) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_enet_rx_er) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_gpio1_io12) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_lpspi1_sdo) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_enet_tx_en) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_gpio1_io13) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_lpspi1_sdi) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_enet_tx_data0) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_gpio1_io14) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_enet_tx_data1) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_gpio1_io15) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_00_gpio1_io16) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_01_gpio1_io17) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_02_gpio1_io18) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_03_gpio1_io19) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_04_gpio1_io20) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_05_gpio1_io21) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_06_gpio1_io22) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_gpio1_io23) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_usdhc1_vselect) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_gpio1_io24) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_lpuart2_tx) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_gpio1_io25) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_lpuart2_rx) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_adc1_in10) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_gpio1_io26) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_adc1_in11) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_gpio1_io27) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_12_gpio1_io28) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_13_gpio1_io29) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_gpio1_io30) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_lpi2c1_scl) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_gpio1_io31) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_lpi2c1_sda) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_00_gpio2_io00) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_01_gpio2_io01) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_02_gpio2_io02) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_03_gpio2_io03) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_04_gpio2_io04) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_05_gpio2_io05) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_06_gpio2_io06) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_07_gpio2_io07) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_08_gpio2_io08) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_09_gpio2_io09) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_10_gpio2_io10) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_11_gpio2_io11) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_12_gpio2_io12) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_13_gpio2_io13) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_14_gpio2_io14) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_15_gpio2_io15) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_16_gpio2_io16) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_17_gpio2_io17) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_18_gpio2_io18) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_19_gpio2_io19) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_20_gpio2_io20) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_21_gpio2_io21) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_22_gpio2_io22) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_23_gpio2_io23) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_24_gpio2_io24) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_25_gpio2_io25) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_26_gpio2_io26) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_27_gpio2_io27) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_gpio2_io28) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_sai3_mclk) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_29_gpio2_io29) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_30_gpio2_io30) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_31_gpio2_io31) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_32_gpio3_io00) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_33_gpio3_io01) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_34_gpio3_io02) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_35_gpio3_io03) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_36_gpio3_io04) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_37_gpio3_io05) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_38_gpio3_io06) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_39_gpio3_io07) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_enet_mdio) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_gpio3_io08) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_enet_mdc) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_gpio3_io09) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_gpio3_io13) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_usdhc1_data2) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_gpio3_io14) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_usdhc1_data3) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_gpio3_io15) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_usdhc1_cmd) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_gpio3_io16) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_usdhc1_clk) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_gpio3_io17) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_usdhc1_data0) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_gpio3_io18) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_usdhc1_data1) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_06_gpio3_io19) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_flexcan1_tx) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_gpio3_io20) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_flexcan1_rx) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_gpio3_io21) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_gpio3_io22) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_lpi2c4_scl) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_gpio3_io23) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_lpi2c4_sda) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_04_gpio3_io24) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_05_gpio3_io25) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_gpio3_io26) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_sai3_tx_bclk) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_gpio3_io27) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_sai3_tx_sync) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_gpio3_io28) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_sai3_tx_data) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_09_gpio3_io29) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_10_gpio3_io30) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_gpio3_io31) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_sai3_rx_data) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_on_req_gpio5_io01) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_stby_req_gpio5_io02) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_wakeup_gpio5_io00)
#define DT_N_S_soc_S_iomuxc_401f8000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_00_gpio1_io00) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_01_gpio1_io01) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_02_gpio1_io02) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_03_gpio1_io03) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_04_gpio1_io04) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_05_gpio1_io05) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_gpio1_io06) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_lpuart1_tx) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_gpio1_io07) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_lpuart1_rx) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_enet_ref_clk) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_gpio1_io08) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_enet_rx_data1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_gpio1_io09) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_enet_rx_data0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_gpio1_io10) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_lpspi1_sck) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_enet_rx_en) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_gpio1_io11) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_lpspi1_pcs0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_enet_rx_er) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_gpio1_io12) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_lpspi1_sdo) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_enet_tx_en) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_gpio1_io13) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_lpspi1_sdi) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_enet_tx_data0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_gpio1_io14) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_enet_tx_data1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_gpio1_io15) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_00_gpio1_io16) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_01_gpio1_io17) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_02_gpio1_io18) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_03_gpio1_io19) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_04_gpio1_io20) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_05_gpio1_io21) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_06_gpio1_io22) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_gpio1_io23) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_usdhc1_vselect) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_gpio1_io24) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_lpuart2_tx) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_gpio1_io25) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_lpuart2_rx) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_adc1_in10) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_gpio1_io26) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_adc1_in11) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_gpio1_io27) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_12_gpio1_io28) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_13_gpio1_io29) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_gpio1_io30) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_lpi2c1_scl) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_gpio1_io31) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_lpi2c1_sda) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_00_gpio2_io00) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_01_gpio2_io01) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_02_gpio2_io02) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_03_gpio2_io03) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_04_gpio2_io04) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_05_gpio2_io05) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_06_gpio2_io06) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_07_gpio2_io07) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_08_gpio2_io08) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_09_gpio2_io09) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_10_gpio2_io10) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_11_gpio2_io11) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_12_gpio2_io12) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_13_gpio2_io13) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_14_gpio2_io14) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_15_gpio2_io15) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_16_gpio2_io16) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_17_gpio2_io17) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_18_gpio2_io18) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_19_gpio2_io19) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_20_gpio2_io20) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_21_gpio2_io21) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_22_gpio2_io22) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_23_gpio2_io23) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_24_gpio2_io24) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_25_gpio2_io25) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_26_gpio2_io26) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_27_gpio2_io27) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_gpio2_io28) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_sai3_mclk) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_29_gpio2_io29) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_30_gpio2_io30) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_31_gpio2_io31) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_32_gpio3_io00) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_33_gpio3_io01) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_34_gpio3_io02) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_35_gpio3_io03) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_36_gpio3_io04) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_37_gpio3_io05) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_38_gpio3_io06) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_39_gpio3_io07) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_enet_mdio) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_gpio3_io08) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_enet_mdc) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_gpio3_io09) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_gpio3_io13) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_usdhc1_data2) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_gpio3_io14) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_usdhc1_data3) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_gpio3_io15) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_usdhc1_cmd) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_gpio3_io16) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_usdhc1_clk) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_gpio3_io17) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_usdhc1_data0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_gpio3_io18) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_usdhc1_data1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_06_gpio3_io19) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_flexcan1_tx) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_gpio3_io20) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_flexcan1_rx) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_gpio3_io21) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_gpio3_io22) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_lpi2c4_scl) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_gpio3_io23) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_lpi2c4_sda) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_04_gpio3_io24) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_05_gpio3_io25) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_gpio3_io26) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_sai3_tx_bclk) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_gpio3_io27) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_sai3_tx_sync) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_gpio3_io28) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_sai3_tx_data) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_09_gpio3_io29) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_10_gpio3_io30) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_gpio3_io31) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_sai3_rx_data) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_on_req_gpio5_io01) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_stby_req_gpio5_io02) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_wakeup_gpio5_io00)
#define DT_N_S_soc_S_iomuxc_401f8000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_00_gpio1_io00, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_01_gpio1_io01, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_02_gpio1_io02, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_03_gpio1_io03, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_04_gpio1_io04, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_05_gpio1_io05, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_gpio1_io06, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_lpuart1_tx, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_gpio1_io07, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_lpuart1_rx, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_enet_ref_clk, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_gpio1_io08, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_enet_rx_data1, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_gpio1_io09, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_enet_rx_data0, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_gpio1_io10, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_lpspi1_sck, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_enet_rx_en, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_gpio1_io11, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_lpspi1_pcs0, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_enet_rx_er, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_gpio1_io12, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_lpspi1_sdo, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_enet_tx_en, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_gpio1_io13, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_lpspi1_sdi, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_enet_tx_data0, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_gpio1_io14, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_enet_tx_data1, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_gpio1_io15, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_00_gpio1_io16, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_01_gpio1_io17, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_02_gpio1_io18, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_03_gpio1_io19, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_04_gpio1_io20, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_05_gpio1_io21, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_06_gpio1_io22, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_gpio1_io23, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_usdhc1_vselect, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_gpio1_io24, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_lpuart2_tx, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_gpio1_io25, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_lpuart2_rx, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_adc1_in10, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_gpio1_io26, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_adc1_in11, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_gpio1_io27, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_12_gpio1_io28, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_13_gpio1_io29, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_gpio1_io30, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_lpi2c1_scl, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_gpio1_io31, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_lpi2c1_sda, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_00_gpio2_io00, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_01_gpio2_io01, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_02_gpio2_io02, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_03_gpio2_io03, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_04_gpio2_io04, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_05_gpio2_io05, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_06_gpio2_io06, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_07_gpio2_io07, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_08_gpio2_io08, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_09_gpio2_io09, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_10_gpio2_io10, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_11_gpio2_io11, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_12_gpio2_io12, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_13_gpio2_io13, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_14_gpio2_io14, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_15_gpio2_io15, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_16_gpio2_io16, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_17_gpio2_io17, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_18_gpio2_io18, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_19_gpio2_io19, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_20_gpio2_io20, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_21_gpio2_io21, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_22_gpio2_io22, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_23_gpio2_io23, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_24_gpio2_io24, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_25_gpio2_io25, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_26_gpio2_io26, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_27_gpio2_io27, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_gpio2_io28, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_sai3_mclk, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_29_gpio2_io29, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_30_gpio2_io30, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_31_gpio2_io31, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_32_gpio3_io00, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_33_gpio3_io01, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_34_gpio3_io02, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_35_gpio3_io03, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_36_gpio3_io04, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_37_gpio3_io05, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_38_gpio3_io06, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_39_gpio3_io07, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_enet_mdio, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_gpio3_io08, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_enet_mdc, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_gpio3_io09, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_gpio3_io13, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_usdhc1_data2, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_gpio3_io14, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_usdhc1_data3, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_gpio3_io15, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_usdhc1_cmd, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_gpio3_io16, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_usdhc1_clk, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_gpio3_io17, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_usdhc1_data0, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_gpio3_io18, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_usdhc1_data1, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_06_gpio3_io19, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_flexcan1_tx, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_gpio3_io20, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_flexcan1_rx, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_gpio3_io21, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_gpio3_io22, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_lpi2c4_scl, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_gpio3_io23, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_lpi2c4_sda, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_04_gpio3_io24, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_05_gpio3_io25, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_gpio3_io26, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_sai3_tx_bclk, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_gpio3_io27, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_sai3_tx_sync, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_gpio3_io28, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_sai3_tx_data, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_09_gpio3_io29, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_10_gpio3_io30, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_gpio3_io31, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_sai3_rx_data, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_on_req_gpio5_io01, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_stby_req_gpio5_io02, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_wakeup_gpio5_io00, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_00_gpio1_io00, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_01_gpio1_io01, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_02_gpio1_io02, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_03_gpio1_io03, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_04_gpio1_io04, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_05_gpio1_io05, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_gpio1_io06, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_lpuart1_tx, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_gpio1_io07, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_lpuart1_rx, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_enet_ref_clk, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_gpio1_io08, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_enet_rx_data1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_gpio1_io09, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_enet_rx_data0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_gpio1_io10, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_lpspi1_sck, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_enet_rx_en, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_gpio1_io11, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_lpspi1_pcs0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_enet_rx_er, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_gpio1_io12, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_lpspi1_sdo, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_enet_tx_en, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_gpio1_io13, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_lpspi1_sdi, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_enet_tx_data0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_gpio1_io14, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_enet_tx_data1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_gpio1_io15, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_00_gpio1_io16, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_01_gpio1_io17, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_02_gpio1_io18, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_03_gpio1_io19, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_04_gpio1_io20, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_05_gpio1_io21, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_06_gpio1_io22, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_gpio1_io23, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_usdhc1_vselect, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_gpio1_io24, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_lpuart2_tx, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_gpio1_io25, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_lpuart2_rx, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_adc1_in10, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_gpio1_io26, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_adc1_in11, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_gpio1_io27, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_12_gpio1_io28, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_13_gpio1_io29, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_gpio1_io30, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_lpi2c1_scl, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_gpio1_io31, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_lpi2c1_sda, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_00_gpio2_io00, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_01_gpio2_io01, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_02_gpio2_io02, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_03_gpio2_io03, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_04_gpio2_io04, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_05_gpio2_io05, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_06_gpio2_io06, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_07_gpio2_io07, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_08_gpio2_io08, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_09_gpio2_io09, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_10_gpio2_io10, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_11_gpio2_io11, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_12_gpio2_io12, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_13_gpio2_io13, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_14_gpio2_io14, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_15_gpio2_io15, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_16_gpio2_io16, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_17_gpio2_io17, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_18_gpio2_io18, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_19_gpio2_io19, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_20_gpio2_io20, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_21_gpio2_io21, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_22_gpio2_io22, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_23_gpio2_io23, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_24_gpio2_io24, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_25_gpio2_io25, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_26_gpio2_io26, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_27_gpio2_io27, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_gpio2_io28, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_sai3_mclk, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_29_gpio2_io29, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_30_gpio2_io30, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_31_gpio2_io31, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_32_gpio3_io00, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_33_gpio3_io01, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_34_gpio3_io02, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_35_gpio3_io03, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_36_gpio3_io04, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_37_gpio3_io05, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_38_gpio3_io06, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_39_gpio3_io07, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_enet_mdio, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_gpio3_io08, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_enet_mdc, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_gpio3_io09, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_gpio3_io13, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_usdhc1_data2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_gpio3_io14, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_usdhc1_data3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_gpio3_io15, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_usdhc1_cmd, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_gpio3_io16, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_usdhc1_clk, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_gpio3_io17, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_usdhc1_data0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_gpio3_io18, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_usdhc1_data1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_06_gpio3_io19, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_flexcan1_tx, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_gpio3_io20, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_flexcan1_rx, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_gpio3_io21, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_gpio3_io22, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_lpi2c4_scl, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_gpio3_io23, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_lpi2c4_sda, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_04_gpio3_io24, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_05_gpio3_io25, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_gpio3_io26, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_sai3_tx_bclk, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_gpio3_io27, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_sai3_tx_sync, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_gpio3_io28, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_sai3_tx_data, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_09_gpio3_io29, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_10_gpio3_io30, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_gpio3_io31, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_sai3_rx_data, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_on_req_gpio5_io01, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_stby_req_gpio5_io02, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_wakeup_gpio5_io00, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_ORD 13

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_REQUIRES_ORDS \
	11, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_SUPPORTS_ORDS \
	14, /* /soc/iomuxc@401f8000/IOMUXC_SNVS_PMIC_ON_REQ_GPIO5_IO01 */ \
	15, /* /soc/iomuxc@401f8000/IOMUXC_SNVS_PMIC_STBY_REQ_GPIO5_IO02 */ \
	16, /* /soc/iomuxc@401f8000/IOMUXC_SNVS_WAKEUP_GPIO5_IO00 */ \
	20, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_00_GPIO1_IO00 */ \
	21, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_01_GPIO1_IO01 */ \
	22, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_02_GPIO1_IO02 */ \
	23, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_03_GPIO1_IO03 */ \
	24, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_04_GPIO1_IO04 */ \
	25, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_05_GPIO1_IO05 */ \
	26, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_06_GPIO1_IO06 */ \
	27, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_07_GPIO1_IO07 */ \
	28, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_08_GPIO1_IO08 */ \
	29, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_09_GPIO1_IO09 */ \
	30, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_10_GPIO1_IO10 */ \
	31, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_11_GPIO1_IO11 */ \
	32, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_12_GPIO1_IO12 */ \
	33, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_13_GPIO1_IO13 */ \
	34, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_14_GPIO1_IO14 */ \
	35, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_15_GPIO1_IO15 */ \
	36, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B1_00_GPIO1_IO16 */ \
	37, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B1_01_GPIO1_IO17 */ \
	38, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B1_02_GPIO1_IO18 */ \
	39, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B1_03_GPIO1_IO19 */ \
	40, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B1_04_GPIO1_IO20 */ \
	41, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B1_05_GPIO1_IO21 */ \
	42, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B1_06_GPIO1_IO22 */ \
	43, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B1_07_GPIO1_IO23 */ \
	44, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B1_08_GPIO1_IO24 */ \
	45, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B1_09_GPIO1_IO25 */ \
	46, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B1_10_GPIO1_IO26 */ \
	47, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B1_11_GPIO1_IO27 */ \
	48, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B1_12_GPIO1_IO28 */ \
	49, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B1_13_GPIO1_IO29 */ \
	50, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B1_14_GPIO1_IO30 */ \
	51, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B1_15_GPIO1_IO31 */ \
	54, /* /soc/iomuxc@401f8000/pinctrl */ \
	66, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_00_GPIO2_IO00 */ \
	67, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_01_GPIO2_IO01 */ \
	68, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_02_GPIO2_IO02 */ \
	69, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_03_GPIO2_IO03 */ \
	70, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_04_GPIO2_IO04 */ \
	71, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_05_GPIO2_IO05 */ \
	72, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_06_GPIO2_IO06 */ \
	73, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_07_GPIO2_IO07 */ \
	74, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_08_GPIO2_IO08 */ \
	75, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_09_GPIO2_IO09 */ \
	76, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_10_GPIO2_IO10 */ \
	77, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_11_GPIO2_IO11 */ \
	78, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_12_GPIO2_IO12 */ \
	79, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_13_GPIO2_IO13 */ \
	80, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_14_GPIO2_IO14 */ \
	81, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_15_GPIO2_IO15 */ \
	82, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_16_GPIO2_IO16 */ \
	83, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_17_GPIO2_IO17 */ \
	84, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_18_GPIO2_IO18 */ \
	85, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_19_GPIO2_IO19 */ \
	86, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_20_GPIO2_IO20 */ \
	87, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_21_GPIO2_IO21 */ \
	88, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_22_GPIO2_IO22 */ \
	89, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_23_GPIO2_IO23 */ \
	90, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_24_GPIO2_IO24 */ \
	91, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_25_GPIO2_IO25 */ \
	92, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_26_GPIO2_IO26 */ \
	93, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_27_GPIO2_IO27 */ \
	94, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_28_GPIO2_IO28 */ \
	95, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_29_GPIO2_IO29 */ \
	96, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_30_GPIO2_IO30 */ \
	97, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_31_GPIO2_IO31 */ \
	177, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B1_10_ADC1_IN10 */ \
	178, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B1_11_ADC1_IN11 */ \
	180, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_08_ENET_REF_CLK */ \
	183, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_09_ENET_RX_DATA1 */ \
	184, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_11_ENET_RX_EN */ \
	185, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_12_ENET_RX_ER */ \
	186, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_13_ENET_TX_EN */ \
	187, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_14_ENET_TX_DATA0 */ \
	188, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_15_ENET_TX_DATA1 */ \
	189, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_40_ENET_MDIO */ \
	190, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_41_ENET_MDC */ \
	193, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_10_ENET_RX_DATA0 */ \
	195, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B1_00_FLEXCAN1_TX */ \
	196, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B1_01_FLEXCAN1_RX */ \
	199, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B1_14_LPI2C1_SCL */ \
	200, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B1_15_LPI2C1_SDA */ \
	202, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B1_02_LPI2C4_SCL */ \
	203, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B1_03_LPI2C4_SDA */ \
	205, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_10_LPSPI1_SCK */ \
	206, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_11_LPSPI1_PCS0 */ \
	207, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_12_LPSPI1_SDO */ \
	208, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_13_LPSPI1_SDI */ \
	211, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_06_LPUART1_TX */ \
	212, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_07_LPUART1_RX */ \
	216, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B1_08_LPUART2_TX */ \
	217, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B1_09_LPUART2_RX */ \
	221, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_28_SAI3_MCLK */ \
	222, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B1_06_SAI3_TX_BCLK */ \
	223, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B1_07_SAI3_TX_SYNC */ \
	224, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B1_08_SAI3_TX_DATA */ \
	225, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B1_11_SAI3_RX_DATA */ \
	227, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B0_03_USDHC1_CLK */ \
	230, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B0_00_USDHC1_DATA2 */ \
	231, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B0_01_USDHC1_DATA3 */ \
	232, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B0_02_USDHC1_CMD */ \
	233, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B0_04_USDHC1_DATA0 */ \
	234, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B0_05_USDHC1_DATA1 */ \
	235, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B0_06_GPIO3_IO19 */ \
	237, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B1_07_USDHC1_VSELECT */ \
	239, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B1_04_GPIO3_IO24 */ \
	286, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_32_GPIO3_IO00 */ \
	287, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_33_GPIO3_IO01 */ \
	288, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_34_GPIO3_IO02 */ \
	289, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_35_GPIO3_IO03 */ \
	290, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_36_GPIO3_IO04 */ \
	291, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_37_GPIO3_IO05 */ \
	292, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_38_GPIO3_IO06 */ \
	293, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_39_GPIO3_IO07 */ \
	294, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_40_GPIO3_IO08 */ \
	295, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_41_GPIO3_IO09 */ \
	296, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B0_00_GPIO3_IO13 */ \
	297, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B0_01_GPIO3_IO14 */ \
	298, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B0_02_GPIO3_IO15 */ \
	299, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B0_03_GPIO3_IO16 */ \
	300, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B0_04_GPIO3_IO17 */ \
	301, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B0_05_GPIO3_IO18 */ \
	302, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B1_00_GPIO3_IO20 */ \
	303, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B1_01_GPIO3_IO21 */ \
	304, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B1_02_GPIO3_IO22 */ \
	305, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B1_03_GPIO3_IO23 */ \
	306, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B1_05_GPIO3_IO25 */ \
	307, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B1_06_GPIO3_IO26 */ \
	308, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B1_07_GPIO3_IO27 */ \
	309, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B1_08_GPIO3_IO28 */ \
	310, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B1_09_GPIO3_IO29 */ \
	311, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B1_10_GPIO3_IO30 */ \
	312, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B1_11_GPIO3_IO31 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_EXISTS 1
#define DT_N_INST_0_nxp_imx_iomuxc DT_N_S_soc_S_iomuxc_401f8000
#define DT_N_NODELABEL_iomuxc      DT_N_S_soc_S_iomuxc_401f8000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_REG_NUM 1
#define DT_N_S_soc_S_iomuxc_401f8000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_REG_IDX_0_VAL_ADDRESS 1075806208 /* 0x401f8000 */
#define DT_N_S_soc_S_iomuxc_401f8000_REG_IDX_0_VAL_SIZE 16384 /* 0x4000 */
#define DT_N_S_soc_S_iomuxc_401f8000_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_COMPAT_MATCHES_nxp_imx_iomuxc 1
#define DT_N_S_soc_S_iomuxc_401f8000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_soc_S_iomuxc_401f8000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_COMPAT_MODEL_IDX_0 "imx-iomuxc"
#define DT_N_S_soc_S_iomuxc_401f8000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_P_reg {1075806208 /* 0x401f8000 */, 16384 /* 0x4000 */}
#define DT_N_S_soc_S_iomuxc_401f8000_P_reg_IDX_0 1075806208
#define DT_N_S_soc_S_iomuxc_401f8000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_P_reg_IDX_1 16384
#define DT_N_S_soc_S_iomuxc_401f8000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000, reg, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000, reg, 1)
#define DT_N_S_soc_S_iomuxc_401f8000_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000, reg, 1)
#define DT_N_S_soc_S_iomuxc_401f8000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_P_reg_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_P_status "okay"
#define DT_N_S_soc_S_iomuxc_401f8000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_iomuxc_401f8000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_iomuxc_401f8000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_iomuxc_401f8000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_iomuxc_401f8000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_iomuxc_401f8000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_iomuxc_401f8000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000, status, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000, status, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000, status, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000, status, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000, status, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_P_status_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_P_compatible {"nxp,imx-iomuxc"}
#define DT_N_S_soc_S_iomuxc_401f8000_P_compatible_IDX_0 "nxp,imx-iomuxc"
#define DT_N_S_soc_S_iomuxc_401f8000_P_compatible_IDX_0_STRING_UNQUOTED nxp,imx-iomuxc
#define DT_N_S_soc_S_iomuxc_401f8000_P_compatible_IDX_0_STRING_TOKEN nxp_imx_iomuxc
#define DT_N_S_soc_S_iomuxc_401f8000_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_IMX_IOMUXC
#define DT_N_S_soc_S_iomuxc_401f8000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000, compatible, 0)
#define DT_N_S_soc_S_iomuxc_401f8000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000, compatible, 0)
#define DT_N_S_soc_S_iomuxc_401f8000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_P_compatible_LEN 1
#define DT_N_S_soc_S_iomuxc_401f8000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_P_wakeup_source 0
#define DT_N_S_soc_S_iomuxc_401f8000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/IOMUXC_SNVS_PMIC_ON_REQ_GPIO5_IO01
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_on_req_gpio5_io01
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_on_req_gpio5_io01_PATH "/soc/iomuxc@401f8000/IOMUXC_SNVS_PMIC_ON_REQ_GPIO5_IO01"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_on_req_gpio5_io01_FULL_NAME "IOMUXC_SNVS_PMIC_ON_REQ_GPIO5_IO01"

/* Node parent (/soc/iomuxc@401f8000) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_on_req_gpio5_io01_PARENT DT_N_S_soc_S_iomuxc_401f8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_on_req_gpio5_io01_CHILD_IDX 132

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_on_req_gpio5_io01_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_on_req_gpio5_io01_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_on_req_gpio5_io01_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_on_req_gpio5_io01_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_on_req_gpio5_io01_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_on_req_gpio5_io01_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_on_req_gpio5_io01_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_on_req_gpio5_io01_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_on_req_gpio5_io01_ORD 14

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_on_req_gpio5_io01_REQUIRES_ORDS \
	13, /* /soc/iomuxc@401f8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_on_req_gpio5_io01_SUPPORTS_ORDS \
	17, /* /soc/gpio@400c0000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_on_req_gpio5_io01_EXISTS 1
#define DT_N_NODELABEL_iomuxc_snvs_pmic_on_req_gpio5_io01 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_on_req_gpio5_io01

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_on_req_gpio5_io01_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_on_req_gpio5_io01_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_on_req_gpio5_io01_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_on_req_gpio5_io01_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_on_req_gpio5_io01_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_on_req_gpio5_io01_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_on_req_gpio5_io01_P_pinmux {1074429956 /* 0x400a8004 */, 5 /* 0x5 */, 0 /* 0x0 */, 0 /* 0x0 */, 1074429980 /* 0x400a801c */}
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_on_req_gpio5_io01_P_pinmux_IDX_0 1074429956
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_on_req_gpio5_io01_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_on_req_gpio5_io01_P_pinmux_IDX_1 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_on_req_gpio5_io01_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_on_req_gpio5_io01_P_pinmux_IDX_2 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_on_req_gpio5_io01_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_on_req_gpio5_io01_P_pinmux_IDX_3 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_on_req_gpio5_io01_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_on_req_gpio5_io01_P_pinmux_IDX_4 1074429980
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_on_req_gpio5_io01_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_on_req_gpio5_io01_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_on_req_gpio5_io01, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_on_req_gpio5_io01, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_on_req_gpio5_io01, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_on_req_gpio5_io01, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_on_req_gpio5_io01, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_on_req_gpio5_io01_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_on_req_gpio5_io01, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_on_req_gpio5_io01, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_on_req_gpio5_io01, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_on_req_gpio5_io01, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_on_req_gpio5_io01, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_on_req_gpio5_io01_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_on_req_gpio5_io01, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_on_req_gpio5_io01, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_on_req_gpio5_io01, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_on_req_gpio5_io01, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_on_req_gpio5_io01, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_on_req_gpio5_io01_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_on_req_gpio5_io01, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_on_req_gpio5_io01, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_on_req_gpio5_io01, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_on_req_gpio5_io01, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_on_req_gpio5_io01, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_on_req_gpio5_io01_P_pinmux_LEN 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_on_req_gpio5_io01_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_on_req_gpio5_io01_P_pin_pue 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_on_req_gpio5_io01_P_pin_pue_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_on_req_gpio5_io01_P_pin_pdrv 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_on_req_gpio5_io01_P_pin_pdrv_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_on_req_gpio5_io01_P_pin_lpsr 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_on_req_gpio5_io01_P_pin_lpsr_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_on_req_gpio5_io01_P_pin_snvs 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_on_req_gpio5_io01_P_pin_snvs_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/IOMUXC_SNVS_PMIC_STBY_REQ_GPIO5_IO02
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_stby_req_gpio5_io02
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_stby_req_gpio5_io02_PATH "/soc/iomuxc@401f8000/IOMUXC_SNVS_PMIC_STBY_REQ_GPIO5_IO02"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_stby_req_gpio5_io02_FULL_NAME "IOMUXC_SNVS_PMIC_STBY_REQ_GPIO5_IO02"

/* Node parent (/soc/iomuxc@401f8000) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_stby_req_gpio5_io02_PARENT DT_N_S_soc_S_iomuxc_401f8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_stby_req_gpio5_io02_CHILD_IDX 133

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_stby_req_gpio5_io02_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_stby_req_gpio5_io02_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_stby_req_gpio5_io02_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_stby_req_gpio5_io02_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_stby_req_gpio5_io02_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_stby_req_gpio5_io02_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_stby_req_gpio5_io02_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_stby_req_gpio5_io02_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_stby_req_gpio5_io02_ORD 15

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_stby_req_gpio5_io02_REQUIRES_ORDS \
	13, /* /soc/iomuxc@401f8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_stby_req_gpio5_io02_SUPPORTS_ORDS \
	17, /* /soc/gpio@400c0000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_stby_req_gpio5_io02_EXISTS 1
#define DT_N_NODELABEL_iomuxc_snvs_pmic_stby_req_gpio5_io02 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_stby_req_gpio5_io02

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_stby_req_gpio5_io02_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_stby_req_gpio5_io02_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_stby_req_gpio5_io02_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_stby_req_gpio5_io02_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_stby_req_gpio5_io02_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_stby_req_gpio5_io02_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_stby_req_gpio5_io02_P_pinmux {1074429960 /* 0x400a8008 */, 5 /* 0x5 */, 0 /* 0x0 */, 0 /* 0x0 */, 1074429984 /* 0x400a8020 */}
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_stby_req_gpio5_io02_P_pinmux_IDX_0 1074429960
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_stby_req_gpio5_io02_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_stby_req_gpio5_io02_P_pinmux_IDX_1 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_stby_req_gpio5_io02_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_stby_req_gpio5_io02_P_pinmux_IDX_2 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_stby_req_gpio5_io02_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_stby_req_gpio5_io02_P_pinmux_IDX_3 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_stby_req_gpio5_io02_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_stby_req_gpio5_io02_P_pinmux_IDX_4 1074429984
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_stby_req_gpio5_io02_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_stby_req_gpio5_io02_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_stby_req_gpio5_io02, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_stby_req_gpio5_io02, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_stby_req_gpio5_io02, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_stby_req_gpio5_io02, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_stby_req_gpio5_io02, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_stby_req_gpio5_io02_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_stby_req_gpio5_io02, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_stby_req_gpio5_io02, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_stby_req_gpio5_io02, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_stby_req_gpio5_io02, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_stby_req_gpio5_io02, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_stby_req_gpio5_io02_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_stby_req_gpio5_io02, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_stby_req_gpio5_io02, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_stby_req_gpio5_io02, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_stby_req_gpio5_io02, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_stby_req_gpio5_io02, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_stby_req_gpio5_io02_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_stby_req_gpio5_io02, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_stby_req_gpio5_io02, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_stby_req_gpio5_io02, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_stby_req_gpio5_io02, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_stby_req_gpio5_io02, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_stby_req_gpio5_io02_P_pinmux_LEN 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_stby_req_gpio5_io02_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_stby_req_gpio5_io02_P_pin_pue 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_stby_req_gpio5_io02_P_pin_pue_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_stby_req_gpio5_io02_P_pin_pdrv 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_stby_req_gpio5_io02_P_pin_pdrv_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_stby_req_gpio5_io02_P_pin_lpsr 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_stby_req_gpio5_io02_P_pin_lpsr_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_stby_req_gpio5_io02_P_pin_snvs 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_stby_req_gpio5_io02_P_pin_snvs_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/IOMUXC_SNVS_WAKEUP_GPIO5_IO00
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_wakeup_gpio5_io00
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_wakeup_gpio5_io00_PATH "/soc/iomuxc@401f8000/IOMUXC_SNVS_WAKEUP_GPIO5_IO00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_wakeup_gpio5_io00_FULL_NAME "IOMUXC_SNVS_WAKEUP_GPIO5_IO00"

/* Node parent (/soc/iomuxc@401f8000) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_wakeup_gpio5_io00_PARENT DT_N_S_soc_S_iomuxc_401f8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_wakeup_gpio5_io00_CHILD_IDX 134

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_wakeup_gpio5_io00_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_wakeup_gpio5_io00_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_wakeup_gpio5_io00_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_wakeup_gpio5_io00_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_wakeup_gpio5_io00_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_wakeup_gpio5_io00_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_wakeup_gpio5_io00_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_wakeup_gpio5_io00_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_wakeup_gpio5_io00_ORD 16

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_wakeup_gpio5_io00_REQUIRES_ORDS \
	13, /* /soc/iomuxc@401f8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_wakeup_gpio5_io00_SUPPORTS_ORDS \
	17, /* /soc/gpio@400c0000 */ \
	251, /* /soc/iomuxc@401f8000/pinctrl/pinmux_user/group0 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_wakeup_gpio5_io00_EXISTS 1
#define DT_N_NODELABEL_iomuxc_snvs_wakeup_gpio5_io00 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_wakeup_gpio5_io00

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_wakeup_gpio5_io00_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_wakeup_gpio5_io00_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_wakeup_gpio5_io00_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_wakeup_gpio5_io00_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_wakeup_gpio5_io00_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_wakeup_gpio5_io00_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_wakeup_gpio5_io00_P_pinmux {1074429952 /* 0x400a8000 */, 5 /* 0x5 */, 0 /* 0x0 */, 0 /* 0x0 */, 1074429976 /* 0x400a8018 */}
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_wakeup_gpio5_io00_P_pinmux_IDX_0 1074429952
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_wakeup_gpio5_io00_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_wakeup_gpio5_io00_P_pinmux_IDX_1 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_wakeup_gpio5_io00_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_wakeup_gpio5_io00_P_pinmux_IDX_2 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_wakeup_gpio5_io00_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_wakeup_gpio5_io00_P_pinmux_IDX_3 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_wakeup_gpio5_io00_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_wakeup_gpio5_io00_P_pinmux_IDX_4 1074429976
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_wakeup_gpio5_io00_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_wakeup_gpio5_io00_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_wakeup_gpio5_io00, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_wakeup_gpio5_io00, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_wakeup_gpio5_io00, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_wakeup_gpio5_io00, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_wakeup_gpio5_io00, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_wakeup_gpio5_io00_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_wakeup_gpio5_io00, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_wakeup_gpio5_io00, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_wakeup_gpio5_io00, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_wakeup_gpio5_io00, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_wakeup_gpio5_io00, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_wakeup_gpio5_io00_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_wakeup_gpio5_io00, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_wakeup_gpio5_io00, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_wakeup_gpio5_io00, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_wakeup_gpio5_io00, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_wakeup_gpio5_io00, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_wakeup_gpio5_io00_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_wakeup_gpio5_io00, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_wakeup_gpio5_io00, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_wakeup_gpio5_io00, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_wakeup_gpio5_io00, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_wakeup_gpio5_io00, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_wakeup_gpio5_io00_P_pinmux_LEN 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_wakeup_gpio5_io00_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_wakeup_gpio5_io00_P_pin_pue 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_wakeup_gpio5_io00_P_pin_pue_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_wakeup_gpio5_io00_P_pin_pdrv 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_wakeup_gpio5_io00_P_pin_pdrv_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_wakeup_gpio5_io00_P_pin_lpsr 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_wakeup_gpio5_io00_P_pin_lpsr_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_wakeup_gpio5_io00_P_pin_snvs 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_wakeup_gpio5_io00_P_pin_snvs_EXISTS 1

/*
 * Devicetree node: /soc/gpio@400c0000
 *
 * Node identifier: DT_N_S_soc_S_gpio_400c0000
 *
 * Binding (compatible = nxp,imx-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/nxp,imx-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_gpio_400c0000_PATH "/soc/gpio@400c0000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_gpio_400c0000_FULL_NAME "gpio@400c0000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_gpio_400c0000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_gpio_400c0000_CHILD_IDX 16

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_gpio_400c0000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_gpio_400c0000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_gpio_400c0000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_gpio_400c0000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_gpio_400c0000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_gpio_400c0000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_gpio_400c0000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_gpio_400c0000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_gpio_400c0000_ORD 17

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_gpio_400c0000_REQUIRES_ORDS \
	11, /* /soc */ \
	12, /* /soc/interrupt-controller@e000e100 */ \
	14, /* /soc/iomuxc@401f8000/IOMUXC_SNVS_PMIC_ON_REQ_GPIO5_IO01 */ \
	15, /* /soc/iomuxc@401f8000/IOMUXC_SNVS_PMIC_STBY_REQ_GPIO5_IO02 */ \
	16, /* /soc/iomuxc@401f8000/IOMUXC_SNVS_WAKEUP_GPIO5_IO00 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_gpio_400c0000_SUPPORTS_ORDS \
	18, /* /gpio_keys/button-1 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_gpio_400c0000_EXISTS 1
#define DT_N_INST_3_nxp_imx_gpio DT_N_S_soc_S_gpio_400c0000
#define DT_N_NODELABEL_gpio5     DT_N_S_soc_S_gpio_400c0000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_gpio_400c0000_REG_NUM 1
#define DT_N_S_soc_S_gpio_400c0000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_400c0000_REG_IDX_0_VAL_ADDRESS 1074528256 /* 0x400c0000 */
#define DT_N_S_soc_S_gpio_400c0000_REG_IDX_0_VAL_SIZE 16384 /* 0x4000 */
#define DT_N_S_soc_S_gpio_400c0000_RANGES_NUM 0
#define DT_N_S_soc_S_gpio_400c0000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_gpio_400c0000_IRQ_NUM 2
#define DT_N_S_soc_S_gpio_400c0000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_400c0000_IRQ_IDX_0_VAL_irq 88
#define DT_N_S_soc_S_gpio_400c0000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_gpio_400c0000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_400c0000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_gpio_400c0000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_gpio_400c0000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpio_400c0000_IRQ_IDX_1_VAL_irq 89
#define DT_N_S_soc_S_gpio_400c0000_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_gpio_400c0000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpio_400c0000_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_gpio_400c0000_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_gpio_400c0000_COMPAT_MATCHES_nxp_imx_gpio 1
#define DT_N_S_soc_S_gpio_400c0000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_400c0000_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_soc_S_gpio_400c0000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_400c0000_COMPAT_MODEL_IDX_0 "imx-gpio"
#define DT_N_S_soc_S_gpio_400c0000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_gpio_400c0000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_gpio_400c0000_P_reg {1074528256 /* 0x400c0000 */, 16384 /* 0x4000 */}
#define DT_N_S_soc_S_gpio_400c0000_P_reg_IDX_0 1074528256
#define DT_N_S_soc_S_gpio_400c0000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_400c0000_P_reg_IDX_1 16384
#define DT_N_S_soc_S_gpio_400c0000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpio_400c0000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_400c0000, reg, 0) \
	fn(DT_N_S_soc_S_gpio_400c0000, reg, 1)
#define DT_N_S_soc_S_gpio_400c0000_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_400c0000, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_400c0000, reg, 1)
#define DT_N_S_soc_S_gpio_400c0000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_400c0000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_400c0000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_400c0000_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_400c0000, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_400c0000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_400c0000_P_reg_EXISTS 1
#define DT_N_S_soc_S_gpio_400c0000_P_pinmux_IDX_0 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_wakeup_gpio5_io00
#define DT_N_S_soc_S_gpio_400c0000_P_pinmux_IDX_0_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_wakeup_gpio5_io00
#define DT_N_S_soc_S_gpio_400c0000_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_400c0000_P_pinmux_IDX_1 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_on_req_gpio5_io01
#define DT_N_S_soc_S_gpio_400c0000_P_pinmux_IDX_1_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_on_req_gpio5_io01
#define DT_N_S_soc_S_gpio_400c0000_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpio_400c0000_P_pinmux_IDX_2 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_stby_req_gpio5_io02
#define DT_N_S_soc_S_gpio_400c0000_P_pinmux_IDX_2_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_stby_req_gpio5_io02
#define DT_N_S_soc_S_gpio_400c0000_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_gpio_400c0000_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_400c0000, pinmux, 0) \
	fn(DT_N_S_soc_S_gpio_400c0000, pinmux, 1) \
	fn(DT_N_S_soc_S_gpio_400c0000, pinmux, 2)
#define DT_N_S_soc_S_gpio_400c0000_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_400c0000, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_400c0000, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_400c0000, pinmux, 2)
#define DT_N_S_soc_S_gpio_400c0000_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_400c0000, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_400c0000, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_400c0000, pinmux, 2, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_400c0000_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_400c0000, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_400c0000, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_400c0000, pinmux, 2, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_400c0000_P_pinmux_LEN 3
#define DT_N_S_soc_S_gpio_400c0000_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_gpio_400c0000_P_gpio_controller 1
#define DT_N_S_soc_S_gpio_400c0000_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_gpio_400c0000_P_ngpios 32
#define DT_N_S_soc_S_gpio_400c0000_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_gpio_400c0000_P_compatible {"nxp,imx-gpio"}
#define DT_N_S_soc_S_gpio_400c0000_P_compatible_IDX_0 "nxp,imx-gpio"
#define DT_N_S_soc_S_gpio_400c0000_P_compatible_IDX_0_STRING_UNQUOTED nxp,imx-gpio
#define DT_N_S_soc_S_gpio_400c0000_P_compatible_IDX_0_STRING_TOKEN nxp_imx_gpio
#define DT_N_S_soc_S_gpio_400c0000_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_IMX_GPIO
#define DT_N_S_soc_S_gpio_400c0000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_400c0000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_400c0000, compatible, 0)
#define DT_N_S_soc_S_gpio_400c0000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_400c0000, compatible, 0)
#define DT_N_S_soc_S_gpio_400c0000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_400c0000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_400c0000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_400c0000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_400c0000_P_compatible_LEN 1
#define DT_N_S_soc_S_gpio_400c0000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_gpio_400c0000_P_interrupts {88 /* 0x58 */, 0 /* 0x0 */, 89 /* 0x59 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_gpio_400c0000_P_interrupts_IDX_0 88
#define DT_N_S_soc_S_gpio_400c0000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_400c0000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_gpio_400c0000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpio_400c0000_P_interrupts_IDX_2 89
#define DT_N_S_soc_S_gpio_400c0000_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_gpio_400c0000_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_gpio_400c0000_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_gpio_400c0000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_400c0000, interrupts, 0) \
	fn(DT_N_S_soc_S_gpio_400c0000, interrupts, 1) \
	fn(DT_N_S_soc_S_gpio_400c0000, interrupts, 2) \
	fn(DT_N_S_soc_S_gpio_400c0000, interrupts, 3)
#define DT_N_S_soc_S_gpio_400c0000_P_interrupts_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_400c0000, interrupts, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_400c0000, interrupts, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_400c0000, interrupts, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_400c0000, interrupts, 3)
#define DT_N_S_soc_S_gpio_400c0000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_400c0000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_400c0000, interrupts, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_400c0000, interrupts, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_400c0000, interrupts, 3, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_400c0000_P_interrupts_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_400c0000, interrupts, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_400c0000, interrupts, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_400c0000, interrupts, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_400c0000, interrupts, 3, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_400c0000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_gpio_400c0000_P_wakeup_source 0
#define DT_N_S_soc_S_gpio_400c0000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /gpio_keys/button-1
 *
 * Node identifier: DT_N_S_gpio_keys_S_button_1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_gpio_keys_S_button_1_PATH "/gpio_keys/button-1"

/* Node's name with unit-address: */
#define DT_N_S_gpio_keys_S_button_1_FULL_NAME "button-1"

/* Node parent (/gpio_keys) identifier: */
#define DT_N_S_gpio_keys_S_button_1_PARENT DT_N_S_gpio_keys

/* Node's index in its parent's list of children: */
#define DT_N_S_gpio_keys_S_button_1_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_gpio_keys_S_button_1_FOREACH_CHILD(fn) 
#define DT_N_S_gpio_keys_S_button_1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_gpio_keys_S_button_1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_gpio_keys_S_button_1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_gpio_keys_S_button_1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_gpio_keys_S_button_1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_gpio_keys_S_button_1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_gpio_keys_S_button_1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_gpio_keys_S_button_1_ORD 18

/* Ordinals for what this node depends on directly: */
#define DT_N_S_gpio_keys_S_button_1_REQUIRES_ORDS \
	10, /* /gpio_keys */ \
	17, /* /soc/gpio@400c0000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_gpio_keys_S_button_1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_gpio_keys_S_button_1_EXISTS 1
#define DT_N_ALIAS_sw0             DT_N_S_gpio_keys_S_button_1
#define DT_N_NODELABEL_user_button DT_N_S_gpio_keys_S_button_1

/* Macros for properties that are special in the specification: */
#define DT_N_S_gpio_keys_S_button_1_REG_NUM 0
#define DT_N_S_gpio_keys_S_button_1_RANGES_NUM 0
#define DT_N_S_gpio_keys_S_button_1_FOREACH_RANGE(fn) 
#define DT_N_S_gpio_keys_S_button_1_IRQ_NUM 0
#define DT_N_S_gpio_keys_S_button_1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_gpio_keys_S_button_1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_gpio_keys_S_button_1_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_gpio_keys_S_button_1_P_gpios_IDX_0_PH DT_N_S_soc_S_gpio_400c0000
#define DT_N_S_gpio_keys_S_button_1_P_gpios_IDX_0_VAL_pin 0
#define DT_N_S_gpio_keys_S_button_1_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_gpio_keys_S_button_1_P_gpios_IDX_0_VAL_flags 17
#define DT_N_S_gpio_keys_S_button_1_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_gpio_keys_S_button_1_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_gpio_keys_S_button_1, gpios, 0)
#define DT_N_S_gpio_keys_S_button_1_P_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_gpio_keys_S_button_1, gpios, 0)
#define DT_N_S_gpio_keys_S_button_1_P_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_gpio_keys_S_button_1, gpios, 0, __VA_ARGS__)
#define DT_N_S_gpio_keys_S_button_1_P_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_gpio_keys_S_button_1, gpios, 0, __VA_ARGS__)
#define DT_N_S_gpio_keys_S_button_1_P_gpios_LEN 1
#define DT_N_S_gpio_keys_S_button_1_P_gpios_EXISTS 1
#define DT_N_S_gpio_keys_S_button_1_P_label "User SW4"
#define DT_N_S_gpio_keys_S_button_1_P_label_STRING_UNQUOTED User SW4
#define DT_N_S_gpio_keys_S_button_1_P_label_STRING_TOKEN User_SW4
#define DT_N_S_gpio_keys_S_button_1_P_label_STRING_UPPER_TOKEN USER_SW4
#define DT_N_S_gpio_keys_S_button_1_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_gpio_keys_S_button_1, label, 0) \
	fn(DT_N_S_gpio_keys_S_button_1, label, 1) \
	fn(DT_N_S_gpio_keys_S_button_1, label, 2) \
	fn(DT_N_S_gpio_keys_S_button_1, label, 3) \
	fn(DT_N_S_gpio_keys_S_button_1, label, 4) \
	fn(DT_N_S_gpio_keys_S_button_1, label, 5) \
	fn(DT_N_S_gpio_keys_S_button_1, label, 6) \
	fn(DT_N_S_gpio_keys_S_button_1, label, 7)
#define DT_N_S_gpio_keys_S_button_1_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_gpio_keys_S_button_1, label, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_gpio_keys_S_button_1, label, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_gpio_keys_S_button_1, label, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_gpio_keys_S_button_1, label, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_gpio_keys_S_button_1, label, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_gpio_keys_S_button_1, label, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_gpio_keys_S_button_1, label, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_gpio_keys_S_button_1, label, 7)
#define DT_N_S_gpio_keys_S_button_1_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_gpio_keys_S_button_1, label, 0, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_button_1, label, 1, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_button_1, label, 2, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_button_1, label, 3, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_button_1, label, 4, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_button_1, label, 5, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_button_1, label, 6, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_button_1, label, 7, __VA_ARGS__)
#define DT_N_S_gpio_keys_S_button_1_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_gpio_keys_S_button_1, label, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_gpio_keys_S_button_1, label, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_gpio_keys_S_button_1, label, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_gpio_keys_S_button_1, label, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_gpio_keys_S_button_1, label, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_gpio_keys_S_button_1, label, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_gpio_keys_S_button_1, label, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_gpio_keys_S_button_1, label, 7, __VA_ARGS__)
#define DT_N_S_gpio_keys_S_button_1_P_label_EXISTS 1
#define DT_N_S_gpio_keys_S_button_1_P_zephyr_code 0
#define DT_N_S_gpio_keys_S_button_1_P_zephyr_code_EXISTS 1

/*
 * Devicetree node: /leds
 *
 * Node identifier: DT_N_S_leds
 *
 * Binding (compatible = gpio-leds):
 *   $ZEPHYR_BASE/dts/bindings/led/gpio-leds.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_leds_PATH "/leds"

/* Node's name with unit-address: */
#define DT_N_S_leds_FULL_NAME "leds"

/* Node parent (/) identifier: */
#define DT_N_S_leds_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_leds_CHILD_IDX 9

/* Helper macros for child nodes of this node. */
#define DT_N_S_leds_FOREACH_CHILD(fn) fn(DT_N_S_leds_S_led_1)
#define DT_N_S_leds_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_leds_S_led_1)
#define DT_N_S_leds_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_leds_S_led_1, __VA_ARGS__)
#define DT_N_S_leds_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led_1, __VA_ARGS__)
#define DT_N_S_leds_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_leds_S_led_1)
#define DT_N_S_leds_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_leds_S_led_1)
#define DT_N_S_leds_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_leds_S_led_1, __VA_ARGS__)
#define DT_N_S_leds_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led_1, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_leds_ORD 19

/* Ordinals for what this node depends on directly: */
#define DT_N_S_leds_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_leds_SUPPORTS_ORDS \
	53, /* /leds/led-1 */

/* Existence and alternate IDs: */
#define DT_N_S_leds_EXISTS 1
#define DT_N_INST_0_gpio_leds DT_N_S_leds

/* Macros for properties that are special in the specification: */
#define DT_N_S_leds_REG_NUM 0
#define DT_N_S_leds_RANGES_NUM 0
#define DT_N_S_leds_FOREACH_RANGE(fn) 
#define DT_N_S_leds_IRQ_NUM 0
#define DT_N_S_leds_COMPAT_MATCHES_gpio_leds 1
#define DT_N_S_leds_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_leds_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_leds_P_compatible {"gpio-leds"}
#define DT_N_S_leds_P_compatible_IDX_0 "gpio-leds"
#define DT_N_S_leds_P_compatible_IDX_0_STRING_UNQUOTED gpio-leds
#define DT_N_S_leds_P_compatible_IDX_0_STRING_TOKEN gpio_leds
#define DT_N_S_leds_P_compatible_IDX_0_STRING_UPPER_TOKEN GPIO_LEDS
#define DT_N_S_leds_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_leds_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds, compatible, 0)
#define DT_N_S_leds_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_leds, compatible, 0)
#define DT_N_S_leds_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds, compatible, 0, __VA_ARGS__)
#define DT_N_S_leds_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds, compatible, 0, __VA_ARGS__)
#define DT_N_S_leds_P_compatible_LEN 1
#define DT_N_S_leds_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_00_GPIO1_IO00
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_00_gpio1_io00
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_00_gpio1_io00_PATH "/soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_00_GPIO1_IO00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_00_gpio1_io00_FULL_NAME "IOMUXC_GPIO_AD_B0_00_GPIO1_IO00"

/* Node parent (/soc/iomuxc@401f8000) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_00_gpio1_io00_PARENT DT_N_S_soc_S_iomuxc_401f8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_00_gpio1_io00_CHILD_IDX 1

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_00_gpio1_io00_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_00_gpio1_io00_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_00_gpio1_io00_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_00_gpio1_io00_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_00_gpio1_io00_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_00_gpio1_io00_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_00_gpio1_io00_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_00_gpio1_io00_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_00_gpio1_io00_ORD 20

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_00_gpio1_io00_REQUIRES_ORDS \
	13, /* /soc/iomuxc@401f8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_00_gpio1_io00_SUPPORTS_ORDS \
	52, /* /soc/gpio@401b8000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_00_gpio1_io00_EXISTS 1
#define DT_N_NODELABEL_iomuxc_gpio_ad_b0_00_gpio1_io00 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_00_gpio1_io00

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_00_gpio1_io00_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_00_gpio1_io00_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_00_gpio1_io00_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_00_gpio1_io00_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_00_gpio1_io00_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_00_gpio1_io00_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_00_gpio1_io00_P_pinmux {1075806396 /* 0x401f80bc */, 5 /* 0x5 */, 0 /* 0x0 */, 0 /* 0x0 */, 1075806768 /* 0x401f8230 */}
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_00_gpio1_io00_P_pinmux_IDX_0 1075806396
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_00_gpio1_io00_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_00_gpio1_io00_P_pinmux_IDX_1 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_00_gpio1_io00_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_00_gpio1_io00_P_pinmux_IDX_2 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_00_gpio1_io00_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_00_gpio1_io00_P_pinmux_IDX_3 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_00_gpio1_io00_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_00_gpio1_io00_P_pinmux_IDX_4 1075806768
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_00_gpio1_io00_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_00_gpio1_io00_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_00_gpio1_io00, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_00_gpio1_io00, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_00_gpio1_io00, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_00_gpio1_io00, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_00_gpio1_io00, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_00_gpio1_io00_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_00_gpio1_io00, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_00_gpio1_io00, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_00_gpio1_io00, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_00_gpio1_io00, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_00_gpio1_io00, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_00_gpio1_io00_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_00_gpio1_io00, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_00_gpio1_io00, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_00_gpio1_io00, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_00_gpio1_io00, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_00_gpio1_io00, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_00_gpio1_io00_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_00_gpio1_io00, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_00_gpio1_io00, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_00_gpio1_io00, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_00_gpio1_io00, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_00_gpio1_io00, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_00_gpio1_io00_P_pinmux_LEN 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_00_gpio1_io00_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_00_gpio1_io00_P_pin_pue 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_00_gpio1_io00_P_pin_pue_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_00_gpio1_io00_P_pin_pdrv 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_00_gpio1_io00_P_pin_pdrv_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_00_gpio1_io00_P_pin_lpsr 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_00_gpio1_io00_P_pin_lpsr_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_00_gpio1_io00_P_pin_snvs 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_00_gpio1_io00_P_pin_snvs_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_01_GPIO1_IO01
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_01_gpio1_io01
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_01_gpio1_io01_PATH "/soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_01_GPIO1_IO01"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_01_gpio1_io01_FULL_NAME "IOMUXC_GPIO_AD_B0_01_GPIO1_IO01"

/* Node parent (/soc/iomuxc@401f8000) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_01_gpio1_io01_PARENT DT_N_S_soc_S_iomuxc_401f8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_01_gpio1_io01_CHILD_IDX 2

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_01_gpio1_io01_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_01_gpio1_io01_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_01_gpio1_io01_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_01_gpio1_io01_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_01_gpio1_io01_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_01_gpio1_io01_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_01_gpio1_io01_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_01_gpio1_io01_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_01_gpio1_io01_ORD 21

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_01_gpio1_io01_REQUIRES_ORDS \
	13, /* /soc/iomuxc@401f8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_01_gpio1_io01_SUPPORTS_ORDS \
	52, /* /soc/gpio@401b8000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_01_gpio1_io01_EXISTS 1
#define DT_N_NODELABEL_iomuxc_gpio_ad_b0_01_gpio1_io01 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_01_gpio1_io01

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_01_gpio1_io01_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_01_gpio1_io01_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_01_gpio1_io01_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_01_gpio1_io01_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_01_gpio1_io01_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_01_gpio1_io01_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_01_gpio1_io01_P_pinmux {1075806400 /* 0x401f80c0 */, 5 /* 0x5 */, 0 /* 0x0 */, 0 /* 0x0 */, 1075806772 /* 0x401f8234 */}
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_01_gpio1_io01_P_pinmux_IDX_0 1075806400
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_01_gpio1_io01_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_01_gpio1_io01_P_pinmux_IDX_1 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_01_gpio1_io01_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_01_gpio1_io01_P_pinmux_IDX_2 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_01_gpio1_io01_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_01_gpio1_io01_P_pinmux_IDX_3 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_01_gpio1_io01_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_01_gpio1_io01_P_pinmux_IDX_4 1075806772
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_01_gpio1_io01_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_01_gpio1_io01_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_01_gpio1_io01, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_01_gpio1_io01, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_01_gpio1_io01, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_01_gpio1_io01, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_01_gpio1_io01, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_01_gpio1_io01_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_01_gpio1_io01, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_01_gpio1_io01, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_01_gpio1_io01, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_01_gpio1_io01, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_01_gpio1_io01, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_01_gpio1_io01_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_01_gpio1_io01, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_01_gpio1_io01, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_01_gpio1_io01, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_01_gpio1_io01, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_01_gpio1_io01, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_01_gpio1_io01_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_01_gpio1_io01, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_01_gpio1_io01, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_01_gpio1_io01, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_01_gpio1_io01, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_01_gpio1_io01, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_01_gpio1_io01_P_pinmux_LEN 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_01_gpio1_io01_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_01_gpio1_io01_P_pin_pue 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_01_gpio1_io01_P_pin_pue_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_01_gpio1_io01_P_pin_pdrv 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_01_gpio1_io01_P_pin_pdrv_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_01_gpio1_io01_P_pin_lpsr 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_01_gpio1_io01_P_pin_lpsr_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_01_gpio1_io01_P_pin_snvs 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_01_gpio1_io01_P_pin_snvs_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_02_GPIO1_IO02
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_02_gpio1_io02
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_02_gpio1_io02_PATH "/soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_02_GPIO1_IO02"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_02_gpio1_io02_FULL_NAME "IOMUXC_GPIO_AD_B0_02_GPIO1_IO02"

/* Node parent (/soc/iomuxc@401f8000) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_02_gpio1_io02_PARENT DT_N_S_soc_S_iomuxc_401f8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_02_gpio1_io02_CHILD_IDX 3

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_02_gpio1_io02_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_02_gpio1_io02_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_02_gpio1_io02_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_02_gpio1_io02_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_02_gpio1_io02_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_02_gpio1_io02_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_02_gpio1_io02_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_02_gpio1_io02_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_02_gpio1_io02_ORD 22

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_02_gpio1_io02_REQUIRES_ORDS \
	13, /* /soc/iomuxc@401f8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_02_gpio1_io02_SUPPORTS_ORDS \
	52, /* /soc/gpio@401b8000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_02_gpio1_io02_EXISTS 1
#define DT_N_NODELABEL_iomuxc_gpio_ad_b0_02_gpio1_io02 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_02_gpio1_io02

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_02_gpio1_io02_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_02_gpio1_io02_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_02_gpio1_io02_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_02_gpio1_io02_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_02_gpio1_io02_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_02_gpio1_io02_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_02_gpio1_io02_P_pinmux {1075806404 /* 0x401f80c4 */, 5 /* 0x5 */, 0 /* 0x0 */, 0 /* 0x0 */, 1075806776 /* 0x401f8238 */}
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_02_gpio1_io02_P_pinmux_IDX_0 1075806404
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_02_gpio1_io02_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_02_gpio1_io02_P_pinmux_IDX_1 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_02_gpio1_io02_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_02_gpio1_io02_P_pinmux_IDX_2 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_02_gpio1_io02_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_02_gpio1_io02_P_pinmux_IDX_3 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_02_gpio1_io02_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_02_gpio1_io02_P_pinmux_IDX_4 1075806776
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_02_gpio1_io02_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_02_gpio1_io02_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_02_gpio1_io02, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_02_gpio1_io02, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_02_gpio1_io02, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_02_gpio1_io02, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_02_gpio1_io02, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_02_gpio1_io02_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_02_gpio1_io02, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_02_gpio1_io02, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_02_gpio1_io02, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_02_gpio1_io02, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_02_gpio1_io02, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_02_gpio1_io02_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_02_gpio1_io02, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_02_gpio1_io02, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_02_gpio1_io02, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_02_gpio1_io02, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_02_gpio1_io02, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_02_gpio1_io02_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_02_gpio1_io02, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_02_gpio1_io02, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_02_gpio1_io02, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_02_gpio1_io02, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_02_gpio1_io02, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_02_gpio1_io02_P_pinmux_LEN 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_02_gpio1_io02_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_02_gpio1_io02_P_pin_pue 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_02_gpio1_io02_P_pin_pue_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_02_gpio1_io02_P_pin_pdrv 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_02_gpio1_io02_P_pin_pdrv_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_02_gpio1_io02_P_pin_lpsr 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_02_gpio1_io02_P_pin_lpsr_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_02_gpio1_io02_P_pin_snvs 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_02_gpio1_io02_P_pin_snvs_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_03_GPIO1_IO03
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_03_gpio1_io03
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_03_gpio1_io03_PATH "/soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_03_GPIO1_IO03"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_03_gpio1_io03_FULL_NAME "IOMUXC_GPIO_AD_B0_03_GPIO1_IO03"

/* Node parent (/soc/iomuxc@401f8000) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_03_gpio1_io03_PARENT DT_N_S_soc_S_iomuxc_401f8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_03_gpio1_io03_CHILD_IDX 4

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_03_gpio1_io03_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_03_gpio1_io03_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_03_gpio1_io03_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_03_gpio1_io03_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_03_gpio1_io03_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_03_gpio1_io03_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_03_gpio1_io03_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_03_gpio1_io03_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_03_gpio1_io03_ORD 23

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_03_gpio1_io03_REQUIRES_ORDS \
	13, /* /soc/iomuxc@401f8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_03_gpio1_io03_SUPPORTS_ORDS \
	52, /* /soc/gpio@401b8000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_03_gpio1_io03_EXISTS 1
#define DT_N_NODELABEL_iomuxc_gpio_ad_b0_03_gpio1_io03 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_03_gpio1_io03

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_03_gpio1_io03_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_03_gpio1_io03_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_03_gpio1_io03_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_03_gpio1_io03_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_03_gpio1_io03_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_03_gpio1_io03_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_03_gpio1_io03_P_pinmux {1075806408 /* 0x401f80c8 */, 5 /* 0x5 */, 0 /* 0x0 */, 0 /* 0x0 */, 1075806780 /* 0x401f823c */}
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_03_gpio1_io03_P_pinmux_IDX_0 1075806408
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_03_gpio1_io03_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_03_gpio1_io03_P_pinmux_IDX_1 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_03_gpio1_io03_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_03_gpio1_io03_P_pinmux_IDX_2 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_03_gpio1_io03_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_03_gpio1_io03_P_pinmux_IDX_3 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_03_gpio1_io03_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_03_gpio1_io03_P_pinmux_IDX_4 1075806780
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_03_gpio1_io03_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_03_gpio1_io03_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_03_gpio1_io03, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_03_gpio1_io03, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_03_gpio1_io03, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_03_gpio1_io03, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_03_gpio1_io03, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_03_gpio1_io03_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_03_gpio1_io03, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_03_gpio1_io03, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_03_gpio1_io03, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_03_gpio1_io03, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_03_gpio1_io03, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_03_gpio1_io03_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_03_gpio1_io03, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_03_gpio1_io03, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_03_gpio1_io03, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_03_gpio1_io03, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_03_gpio1_io03, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_03_gpio1_io03_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_03_gpio1_io03, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_03_gpio1_io03, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_03_gpio1_io03, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_03_gpio1_io03, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_03_gpio1_io03, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_03_gpio1_io03_P_pinmux_LEN 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_03_gpio1_io03_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_03_gpio1_io03_P_pin_pue 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_03_gpio1_io03_P_pin_pue_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_03_gpio1_io03_P_pin_pdrv 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_03_gpio1_io03_P_pin_pdrv_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_03_gpio1_io03_P_pin_lpsr 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_03_gpio1_io03_P_pin_lpsr_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_03_gpio1_io03_P_pin_snvs 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_03_gpio1_io03_P_pin_snvs_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_04_GPIO1_IO04
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_04_gpio1_io04
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_04_gpio1_io04_PATH "/soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_04_GPIO1_IO04"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_04_gpio1_io04_FULL_NAME "IOMUXC_GPIO_AD_B0_04_GPIO1_IO04"

/* Node parent (/soc/iomuxc@401f8000) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_04_gpio1_io04_PARENT DT_N_S_soc_S_iomuxc_401f8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_04_gpio1_io04_CHILD_IDX 5

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_04_gpio1_io04_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_04_gpio1_io04_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_04_gpio1_io04_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_04_gpio1_io04_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_04_gpio1_io04_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_04_gpio1_io04_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_04_gpio1_io04_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_04_gpio1_io04_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_04_gpio1_io04_ORD 24

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_04_gpio1_io04_REQUIRES_ORDS \
	13, /* /soc/iomuxc@401f8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_04_gpio1_io04_SUPPORTS_ORDS \
	52, /* /soc/gpio@401b8000 */ \
	182, /* /soc/iomuxc@401f8000/pinctrl/pinmux_enet/group1 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_04_gpio1_io04_EXISTS 1
#define DT_N_NODELABEL_iomuxc_gpio_ad_b0_04_gpio1_io04 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_04_gpio1_io04

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_04_gpio1_io04_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_04_gpio1_io04_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_04_gpio1_io04_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_04_gpio1_io04_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_04_gpio1_io04_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_04_gpio1_io04_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_04_gpio1_io04_P_pinmux {1075806412 /* 0x401f80cc */, 5 /* 0x5 */, 0 /* 0x0 */, 0 /* 0x0 */, 1075806784 /* 0x401f8240 */}
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_04_gpio1_io04_P_pinmux_IDX_0 1075806412
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_04_gpio1_io04_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_04_gpio1_io04_P_pinmux_IDX_1 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_04_gpio1_io04_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_04_gpio1_io04_P_pinmux_IDX_2 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_04_gpio1_io04_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_04_gpio1_io04_P_pinmux_IDX_3 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_04_gpio1_io04_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_04_gpio1_io04_P_pinmux_IDX_4 1075806784
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_04_gpio1_io04_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_04_gpio1_io04_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_04_gpio1_io04, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_04_gpio1_io04, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_04_gpio1_io04, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_04_gpio1_io04, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_04_gpio1_io04, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_04_gpio1_io04_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_04_gpio1_io04, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_04_gpio1_io04, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_04_gpio1_io04, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_04_gpio1_io04, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_04_gpio1_io04, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_04_gpio1_io04_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_04_gpio1_io04, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_04_gpio1_io04, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_04_gpio1_io04, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_04_gpio1_io04, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_04_gpio1_io04, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_04_gpio1_io04_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_04_gpio1_io04, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_04_gpio1_io04, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_04_gpio1_io04, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_04_gpio1_io04, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_04_gpio1_io04, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_04_gpio1_io04_P_pinmux_LEN 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_04_gpio1_io04_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_04_gpio1_io04_P_pin_pue 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_04_gpio1_io04_P_pin_pue_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_04_gpio1_io04_P_pin_pdrv 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_04_gpio1_io04_P_pin_pdrv_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_04_gpio1_io04_P_pin_lpsr 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_04_gpio1_io04_P_pin_lpsr_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_04_gpio1_io04_P_pin_snvs 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_04_gpio1_io04_P_pin_snvs_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_05_GPIO1_IO05
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_05_gpio1_io05
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_05_gpio1_io05_PATH "/soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_05_GPIO1_IO05"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_05_gpio1_io05_FULL_NAME "IOMUXC_GPIO_AD_B0_05_GPIO1_IO05"

/* Node parent (/soc/iomuxc@401f8000) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_05_gpio1_io05_PARENT DT_N_S_soc_S_iomuxc_401f8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_05_gpio1_io05_CHILD_IDX 6

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_05_gpio1_io05_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_05_gpio1_io05_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_05_gpio1_io05_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_05_gpio1_io05_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_05_gpio1_io05_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_05_gpio1_io05_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_05_gpio1_io05_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_05_gpio1_io05_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_05_gpio1_io05_ORD 25

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_05_gpio1_io05_REQUIRES_ORDS \
	13, /* /soc/iomuxc@401f8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_05_gpio1_io05_SUPPORTS_ORDS \
	52, /* /soc/gpio@401b8000 */ \
	252, /* /soc/iomuxc@401f8000/pinctrl/pinmux_user/group1 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_05_gpio1_io05_EXISTS 1
#define DT_N_NODELABEL_iomuxc_gpio_ad_b0_05_gpio1_io05 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_05_gpio1_io05

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_05_gpio1_io05_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_05_gpio1_io05_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_05_gpio1_io05_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_05_gpio1_io05_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_05_gpio1_io05_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_05_gpio1_io05_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_05_gpio1_io05_P_pinmux {1075806416 /* 0x401f80d0 */, 5 /* 0x5 */, 0 /* 0x0 */, 0 /* 0x0 */, 1075806788 /* 0x401f8244 */}
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_05_gpio1_io05_P_pinmux_IDX_0 1075806416
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_05_gpio1_io05_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_05_gpio1_io05_P_pinmux_IDX_1 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_05_gpio1_io05_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_05_gpio1_io05_P_pinmux_IDX_2 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_05_gpio1_io05_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_05_gpio1_io05_P_pinmux_IDX_3 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_05_gpio1_io05_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_05_gpio1_io05_P_pinmux_IDX_4 1075806788
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_05_gpio1_io05_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_05_gpio1_io05_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_05_gpio1_io05, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_05_gpio1_io05, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_05_gpio1_io05, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_05_gpio1_io05, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_05_gpio1_io05, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_05_gpio1_io05_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_05_gpio1_io05, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_05_gpio1_io05, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_05_gpio1_io05, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_05_gpio1_io05, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_05_gpio1_io05, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_05_gpio1_io05_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_05_gpio1_io05, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_05_gpio1_io05, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_05_gpio1_io05, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_05_gpio1_io05, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_05_gpio1_io05, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_05_gpio1_io05_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_05_gpio1_io05, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_05_gpio1_io05, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_05_gpio1_io05, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_05_gpio1_io05, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_05_gpio1_io05, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_05_gpio1_io05_P_pinmux_LEN 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_05_gpio1_io05_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_05_gpio1_io05_P_pin_pue 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_05_gpio1_io05_P_pin_pue_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_05_gpio1_io05_P_pin_pdrv 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_05_gpio1_io05_P_pin_pdrv_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_05_gpio1_io05_P_pin_lpsr 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_05_gpio1_io05_P_pin_lpsr_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_05_gpio1_io05_P_pin_snvs 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_05_gpio1_io05_P_pin_snvs_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_06_GPIO1_IO06
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_gpio1_io06
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_gpio1_io06_PATH "/soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_06_GPIO1_IO06"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_gpio1_io06_FULL_NAME "IOMUXC_GPIO_AD_B0_06_GPIO1_IO06"

/* Node parent (/soc/iomuxc@401f8000) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_gpio1_io06_PARENT DT_N_S_soc_S_iomuxc_401f8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_gpio1_io06_CHILD_IDX 7

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_gpio1_io06_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_gpio1_io06_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_gpio1_io06_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_gpio1_io06_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_gpio1_io06_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_gpio1_io06_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_gpio1_io06_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_gpio1_io06_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_gpio1_io06_ORD 26

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_gpio1_io06_REQUIRES_ORDS \
	13, /* /soc/iomuxc@401f8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_gpio1_io06_SUPPORTS_ORDS \
	52, /* /soc/gpio@401b8000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_gpio1_io06_EXISTS 1
#define DT_N_NODELABEL_iomuxc_gpio_ad_b0_06_gpio1_io06 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_gpio1_io06

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_gpio1_io06_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_gpio1_io06_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_gpio1_io06_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_gpio1_io06_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_gpio1_io06_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_gpio1_io06_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_gpio1_io06_P_pinmux {1075806420 /* 0x401f80d4 */, 5 /* 0x5 */, 0 /* 0x0 */, 0 /* 0x0 */, 1075806792 /* 0x401f8248 */}
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_gpio1_io06_P_pinmux_IDX_0 1075806420
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_gpio1_io06_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_gpio1_io06_P_pinmux_IDX_1 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_gpio1_io06_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_gpio1_io06_P_pinmux_IDX_2 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_gpio1_io06_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_gpio1_io06_P_pinmux_IDX_3 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_gpio1_io06_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_gpio1_io06_P_pinmux_IDX_4 1075806792
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_gpio1_io06_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_gpio1_io06_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_gpio1_io06, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_gpio1_io06, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_gpio1_io06, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_gpio1_io06, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_gpio1_io06, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_gpio1_io06_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_gpio1_io06, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_gpio1_io06, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_gpio1_io06, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_gpio1_io06, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_gpio1_io06, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_gpio1_io06_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_gpio1_io06, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_gpio1_io06, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_gpio1_io06, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_gpio1_io06, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_gpio1_io06, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_gpio1_io06_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_gpio1_io06, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_gpio1_io06, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_gpio1_io06, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_gpio1_io06, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_gpio1_io06, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_gpio1_io06_P_pinmux_LEN 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_gpio1_io06_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_gpio1_io06_P_pin_pue 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_gpio1_io06_P_pin_pue_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_gpio1_io06_P_pin_pdrv 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_gpio1_io06_P_pin_pdrv_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_gpio1_io06_P_pin_lpsr 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_gpio1_io06_P_pin_lpsr_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_gpio1_io06_P_pin_snvs 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_gpio1_io06_P_pin_snvs_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_07_GPIO1_IO07
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_gpio1_io07
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_gpio1_io07_PATH "/soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_07_GPIO1_IO07"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_gpio1_io07_FULL_NAME "IOMUXC_GPIO_AD_B0_07_GPIO1_IO07"

/* Node parent (/soc/iomuxc@401f8000) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_gpio1_io07_PARENT DT_N_S_soc_S_iomuxc_401f8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_gpio1_io07_CHILD_IDX 9

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_gpio1_io07_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_gpio1_io07_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_gpio1_io07_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_gpio1_io07_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_gpio1_io07_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_gpio1_io07_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_gpio1_io07_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_gpio1_io07_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_gpio1_io07_ORD 27

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_gpio1_io07_REQUIRES_ORDS \
	13, /* /soc/iomuxc@401f8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_gpio1_io07_SUPPORTS_ORDS \
	52, /* /soc/gpio@401b8000 */ \
	214, /* /soc/iomuxc@401f8000/pinctrl/pinmux_lpuart1_sleep/group0 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_gpio1_io07_EXISTS 1
#define DT_N_NODELABEL_iomuxc_gpio_ad_b0_07_gpio1_io07 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_gpio1_io07

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_gpio1_io07_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_gpio1_io07_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_gpio1_io07_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_gpio1_io07_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_gpio1_io07_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_gpio1_io07_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_gpio1_io07_P_pinmux {1075806424 /* 0x401f80d8 */, 5 /* 0x5 */, 0 /* 0x0 */, 0 /* 0x0 */, 1075806796 /* 0x401f824c */}
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_gpio1_io07_P_pinmux_IDX_0 1075806424
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_gpio1_io07_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_gpio1_io07_P_pinmux_IDX_1 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_gpio1_io07_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_gpio1_io07_P_pinmux_IDX_2 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_gpio1_io07_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_gpio1_io07_P_pinmux_IDX_3 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_gpio1_io07_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_gpio1_io07_P_pinmux_IDX_4 1075806796
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_gpio1_io07_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_gpio1_io07_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_gpio1_io07, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_gpio1_io07, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_gpio1_io07, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_gpio1_io07, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_gpio1_io07, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_gpio1_io07_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_gpio1_io07, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_gpio1_io07, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_gpio1_io07, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_gpio1_io07, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_gpio1_io07, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_gpio1_io07_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_gpio1_io07, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_gpio1_io07, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_gpio1_io07, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_gpio1_io07, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_gpio1_io07, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_gpio1_io07_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_gpio1_io07, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_gpio1_io07, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_gpio1_io07, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_gpio1_io07, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_gpio1_io07, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_gpio1_io07_P_pinmux_LEN 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_gpio1_io07_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_gpio1_io07_P_pin_pue 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_gpio1_io07_P_pin_pue_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_gpio1_io07_P_pin_pdrv 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_gpio1_io07_P_pin_pdrv_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_gpio1_io07_P_pin_lpsr 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_gpio1_io07_P_pin_lpsr_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_gpio1_io07_P_pin_snvs 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_gpio1_io07_P_pin_snvs_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_08_GPIO1_IO08
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_gpio1_io08
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_gpio1_io08_PATH "/soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_08_GPIO1_IO08"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_gpio1_io08_FULL_NAME "IOMUXC_GPIO_AD_B0_08_GPIO1_IO08"

/* Node parent (/soc/iomuxc@401f8000) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_gpio1_io08_PARENT DT_N_S_soc_S_iomuxc_401f8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_gpio1_io08_CHILD_IDX 12

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_gpio1_io08_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_gpio1_io08_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_gpio1_io08_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_gpio1_io08_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_gpio1_io08_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_gpio1_io08_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_gpio1_io08_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_gpio1_io08_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_gpio1_io08_ORD 28

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_gpio1_io08_REQUIRES_ORDS \
	13, /* /soc/iomuxc@401f8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_gpio1_io08_SUPPORTS_ORDS \
	52, /* /soc/gpio@401b8000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_gpio1_io08_EXISTS 1
#define DT_N_NODELABEL_iomuxc_gpio_ad_b0_08_gpio1_io08 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_gpio1_io08

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_gpio1_io08_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_gpio1_io08_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_gpio1_io08_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_gpio1_io08_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_gpio1_io08_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_gpio1_io08_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_gpio1_io08_P_pinmux {1075806428 /* 0x401f80dc */, 5 /* 0x5 */, 0 /* 0x0 */, 0 /* 0x0 */, 1075806800 /* 0x401f8250 */}
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_gpio1_io08_P_pinmux_IDX_0 1075806428
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_gpio1_io08_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_gpio1_io08_P_pinmux_IDX_1 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_gpio1_io08_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_gpio1_io08_P_pinmux_IDX_2 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_gpio1_io08_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_gpio1_io08_P_pinmux_IDX_3 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_gpio1_io08_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_gpio1_io08_P_pinmux_IDX_4 1075806800
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_gpio1_io08_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_gpio1_io08_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_gpio1_io08, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_gpio1_io08, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_gpio1_io08, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_gpio1_io08, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_gpio1_io08, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_gpio1_io08_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_gpio1_io08, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_gpio1_io08, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_gpio1_io08, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_gpio1_io08, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_gpio1_io08, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_gpio1_io08_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_gpio1_io08, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_gpio1_io08, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_gpio1_io08, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_gpio1_io08, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_gpio1_io08, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_gpio1_io08_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_gpio1_io08, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_gpio1_io08, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_gpio1_io08, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_gpio1_io08, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_gpio1_io08, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_gpio1_io08_P_pinmux_LEN 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_gpio1_io08_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_gpio1_io08_P_pin_pue 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_gpio1_io08_P_pin_pue_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_gpio1_io08_P_pin_pdrv 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_gpio1_io08_P_pin_pdrv_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_gpio1_io08_P_pin_lpsr 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_gpio1_io08_P_pin_lpsr_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_gpio1_io08_P_pin_snvs 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_gpio1_io08_P_pin_snvs_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_09_GPIO1_IO09
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_gpio1_io09
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_gpio1_io09_PATH "/soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_09_GPIO1_IO09"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_gpio1_io09_FULL_NAME "IOMUXC_GPIO_AD_B0_09_GPIO1_IO09"

/* Node parent (/soc/iomuxc@401f8000) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_gpio1_io09_PARENT DT_N_S_soc_S_iomuxc_401f8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_gpio1_io09_CHILD_IDX 14

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_gpio1_io09_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_gpio1_io09_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_gpio1_io09_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_gpio1_io09_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_gpio1_io09_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_gpio1_io09_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_gpio1_io09_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_gpio1_io09_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_gpio1_io09_ORD 29

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_gpio1_io09_REQUIRES_ORDS \
	13, /* /soc/iomuxc@401f8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_gpio1_io09_SUPPORTS_ORDS \
	52, /* /soc/gpio@401b8000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_gpio1_io09_EXISTS 1
#define DT_N_NODELABEL_iomuxc_gpio_ad_b0_09_gpio1_io09 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_gpio1_io09

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_gpio1_io09_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_gpio1_io09_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_gpio1_io09_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_gpio1_io09_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_gpio1_io09_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_gpio1_io09_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_gpio1_io09_P_pinmux {1075806432 /* 0x401f80e0 */, 5 /* 0x5 */, 0 /* 0x0 */, 0 /* 0x0 */, 1075806804 /* 0x401f8254 */}
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_gpio1_io09_P_pinmux_IDX_0 1075806432
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_gpio1_io09_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_gpio1_io09_P_pinmux_IDX_1 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_gpio1_io09_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_gpio1_io09_P_pinmux_IDX_2 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_gpio1_io09_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_gpio1_io09_P_pinmux_IDX_3 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_gpio1_io09_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_gpio1_io09_P_pinmux_IDX_4 1075806804
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_gpio1_io09_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_gpio1_io09_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_gpio1_io09, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_gpio1_io09, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_gpio1_io09, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_gpio1_io09, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_gpio1_io09, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_gpio1_io09_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_gpio1_io09, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_gpio1_io09, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_gpio1_io09, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_gpio1_io09, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_gpio1_io09, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_gpio1_io09_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_gpio1_io09, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_gpio1_io09, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_gpio1_io09, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_gpio1_io09, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_gpio1_io09, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_gpio1_io09_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_gpio1_io09, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_gpio1_io09, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_gpio1_io09, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_gpio1_io09, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_gpio1_io09, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_gpio1_io09_P_pinmux_LEN 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_gpio1_io09_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_gpio1_io09_P_pin_pue 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_gpio1_io09_P_pin_pue_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_gpio1_io09_P_pin_pdrv 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_gpio1_io09_P_pin_pdrv_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_gpio1_io09_P_pin_lpsr 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_gpio1_io09_P_pin_lpsr_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_gpio1_io09_P_pin_snvs 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_gpio1_io09_P_pin_snvs_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_10_GPIO1_IO10
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_gpio1_io10
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_gpio1_io10_PATH "/soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_10_GPIO1_IO10"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_gpio1_io10_FULL_NAME "IOMUXC_GPIO_AD_B0_10_GPIO1_IO10"

/* Node parent (/soc/iomuxc@401f8000) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_gpio1_io10_PARENT DT_N_S_soc_S_iomuxc_401f8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_gpio1_io10_CHILD_IDX 16

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_gpio1_io10_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_gpio1_io10_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_gpio1_io10_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_gpio1_io10_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_gpio1_io10_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_gpio1_io10_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_gpio1_io10_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_gpio1_io10_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_gpio1_io10_ORD 30

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_gpio1_io10_REQUIRES_ORDS \
	13, /* /soc/iomuxc@401f8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_gpio1_io10_SUPPORTS_ORDS \
	52, /* /soc/gpio@401b8000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_gpio1_io10_EXISTS 1
#define DT_N_NODELABEL_iomuxc_gpio_ad_b0_10_gpio1_io10 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_gpio1_io10

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_gpio1_io10_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_gpio1_io10_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_gpio1_io10_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_gpio1_io10_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_gpio1_io10_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_gpio1_io10_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_gpio1_io10_P_pinmux {1075806436 /* 0x401f80e4 */, 5 /* 0x5 */, 0 /* 0x0 */, 0 /* 0x0 */, 1075806808 /* 0x401f8258 */}
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_gpio1_io10_P_pinmux_IDX_0 1075806436
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_gpio1_io10_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_gpio1_io10_P_pinmux_IDX_1 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_gpio1_io10_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_gpio1_io10_P_pinmux_IDX_2 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_gpio1_io10_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_gpio1_io10_P_pinmux_IDX_3 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_gpio1_io10_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_gpio1_io10_P_pinmux_IDX_4 1075806808
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_gpio1_io10_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_gpio1_io10_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_gpio1_io10, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_gpio1_io10, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_gpio1_io10, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_gpio1_io10, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_gpio1_io10, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_gpio1_io10_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_gpio1_io10, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_gpio1_io10, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_gpio1_io10, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_gpio1_io10, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_gpio1_io10, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_gpio1_io10_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_gpio1_io10, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_gpio1_io10, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_gpio1_io10, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_gpio1_io10, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_gpio1_io10, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_gpio1_io10_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_gpio1_io10, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_gpio1_io10, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_gpio1_io10, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_gpio1_io10, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_gpio1_io10, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_gpio1_io10_P_pinmux_LEN 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_gpio1_io10_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_gpio1_io10_P_pin_pue 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_gpio1_io10_P_pin_pue_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_gpio1_io10_P_pin_pdrv 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_gpio1_io10_P_pin_pdrv_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_gpio1_io10_P_pin_lpsr 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_gpio1_io10_P_pin_lpsr_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_gpio1_io10_P_pin_snvs 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_gpio1_io10_P_pin_snvs_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_11_GPIO1_IO11
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_gpio1_io11
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_gpio1_io11_PATH "/soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_11_GPIO1_IO11"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_gpio1_io11_FULL_NAME "IOMUXC_GPIO_AD_B0_11_GPIO1_IO11"

/* Node parent (/soc/iomuxc@401f8000) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_gpio1_io11_PARENT DT_N_S_soc_S_iomuxc_401f8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_gpio1_io11_CHILD_IDX 19

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_gpio1_io11_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_gpio1_io11_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_gpio1_io11_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_gpio1_io11_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_gpio1_io11_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_gpio1_io11_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_gpio1_io11_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_gpio1_io11_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_gpio1_io11_ORD 31

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_gpio1_io11_REQUIRES_ORDS \
	13, /* /soc/iomuxc@401f8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_gpio1_io11_SUPPORTS_ORDS \
	52, /* /soc/gpio@401b8000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_gpio1_io11_EXISTS 1
#define DT_N_NODELABEL_iomuxc_gpio_ad_b0_11_gpio1_io11 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_gpio1_io11

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_gpio1_io11_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_gpio1_io11_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_gpio1_io11_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_gpio1_io11_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_gpio1_io11_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_gpio1_io11_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_gpio1_io11_P_pinmux {1075806440 /* 0x401f80e8 */, 5 /* 0x5 */, 0 /* 0x0 */, 0 /* 0x0 */, 1075806812 /* 0x401f825c */}
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_gpio1_io11_P_pinmux_IDX_0 1075806440
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_gpio1_io11_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_gpio1_io11_P_pinmux_IDX_1 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_gpio1_io11_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_gpio1_io11_P_pinmux_IDX_2 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_gpio1_io11_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_gpio1_io11_P_pinmux_IDX_3 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_gpio1_io11_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_gpio1_io11_P_pinmux_IDX_4 1075806812
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_gpio1_io11_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_gpio1_io11_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_gpio1_io11, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_gpio1_io11, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_gpio1_io11, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_gpio1_io11, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_gpio1_io11, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_gpio1_io11_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_gpio1_io11, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_gpio1_io11, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_gpio1_io11, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_gpio1_io11, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_gpio1_io11, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_gpio1_io11_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_gpio1_io11, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_gpio1_io11, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_gpio1_io11, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_gpio1_io11, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_gpio1_io11, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_gpio1_io11_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_gpio1_io11, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_gpio1_io11, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_gpio1_io11, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_gpio1_io11, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_gpio1_io11, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_gpio1_io11_P_pinmux_LEN 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_gpio1_io11_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_gpio1_io11_P_pin_pue 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_gpio1_io11_P_pin_pue_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_gpio1_io11_P_pin_pdrv 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_gpio1_io11_P_pin_pdrv_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_gpio1_io11_P_pin_lpsr 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_gpio1_io11_P_pin_lpsr_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_gpio1_io11_P_pin_snvs 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_gpio1_io11_P_pin_snvs_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_12_GPIO1_IO12
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_gpio1_io12
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_gpio1_io12_PATH "/soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_12_GPIO1_IO12"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_gpio1_io12_FULL_NAME "IOMUXC_GPIO_AD_B0_12_GPIO1_IO12"

/* Node parent (/soc/iomuxc@401f8000) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_gpio1_io12_PARENT DT_N_S_soc_S_iomuxc_401f8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_gpio1_io12_CHILD_IDX 22

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_gpio1_io12_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_gpio1_io12_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_gpio1_io12_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_gpio1_io12_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_gpio1_io12_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_gpio1_io12_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_gpio1_io12_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_gpio1_io12_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_gpio1_io12_ORD 32

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_gpio1_io12_REQUIRES_ORDS \
	13, /* /soc/iomuxc@401f8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_gpio1_io12_SUPPORTS_ORDS \
	52, /* /soc/gpio@401b8000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_gpio1_io12_EXISTS 1
#define DT_N_NODELABEL_iomuxc_gpio_ad_b0_12_gpio1_io12 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_gpio1_io12

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_gpio1_io12_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_gpio1_io12_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_gpio1_io12_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_gpio1_io12_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_gpio1_io12_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_gpio1_io12_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_gpio1_io12_P_pinmux {1075806444 /* 0x401f80ec */, 5 /* 0x5 */, 0 /* 0x0 */, 0 /* 0x0 */, 1075806816 /* 0x401f8260 */}
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_gpio1_io12_P_pinmux_IDX_0 1075806444
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_gpio1_io12_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_gpio1_io12_P_pinmux_IDX_1 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_gpio1_io12_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_gpio1_io12_P_pinmux_IDX_2 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_gpio1_io12_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_gpio1_io12_P_pinmux_IDX_3 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_gpio1_io12_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_gpio1_io12_P_pinmux_IDX_4 1075806816
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_gpio1_io12_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_gpio1_io12_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_gpio1_io12, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_gpio1_io12, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_gpio1_io12, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_gpio1_io12, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_gpio1_io12, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_gpio1_io12_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_gpio1_io12, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_gpio1_io12, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_gpio1_io12, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_gpio1_io12, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_gpio1_io12, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_gpio1_io12_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_gpio1_io12, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_gpio1_io12, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_gpio1_io12, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_gpio1_io12, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_gpio1_io12, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_gpio1_io12_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_gpio1_io12, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_gpio1_io12, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_gpio1_io12, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_gpio1_io12, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_gpio1_io12, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_gpio1_io12_P_pinmux_LEN 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_gpio1_io12_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_gpio1_io12_P_pin_pue 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_gpio1_io12_P_pin_pue_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_gpio1_io12_P_pin_pdrv 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_gpio1_io12_P_pin_pdrv_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_gpio1_io12_P_pin_lpsr 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_gpio1_io12_P_pin_lpsr_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_gpio1_io12_P_pin_snvs 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_gpio1_io12_P_pin_snvs_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_13_GPIO1_IO13
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_gpio1_io13
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_gpio1_io13_PATH "/soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_13_GPIO1_IO13"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_gpio1_io13_FULL_NAME "IOMUXC_GPIO_AD_B0_13_GPIO1_IO13"

/* Node parent (/soc/iomuxc@401f8000) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_gpio1_io13_PARENT DT_N_S_soc_S_iomuxc_401f8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_gpio1_io13_CHILD_IDX 25

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_gpio1_io13_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_gpio1_io13_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_gpio1_io13_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_gpio1_io13_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_gpio1_io13_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_gpio1_io13_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_gpio1_io13_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_gpio1_io13_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_gpio1_io13_ORD 33

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_gpio1_io13_REQUIRES_ORDS \
	13, /* /soc/iomuxc@401f8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_gpio1_io13_SUPPORTS_ORDS \
	52, /* /soc/gpio@401b8000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_gpio1_io13_EXISTS 1
#define DT_N_NODELABEL_iomuxc_gpio_ad_b0_13_gpio1_io13 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_gpio1_io13

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_gpio1_io13_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_gpio1_io13_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_gpio1_io13_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_gpio1_io13_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_gpio1_io13_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_gpio1_io13_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_gpio1_io13_P_pinmux {1075806448 /* 0x401f80f0 */, 5 /* 0x5 */, 0 /* 0x0 */, 0 /* 0x0 */, 1075806820 /* 0x401f8264 */}
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_gpio1_io13_P_pinmux_IDX_0 1075806448
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_gpio1_io13_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_gpio1_io13_P_pinmux_IDX_1 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_gpio1_io13_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_gpio1_io13_P_pinmux_IDX_2 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_gpio1_io13_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_gpio1_io13_P_pinmux_IDX_3 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_gpio1_io13_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_gpio1_io13_P_pinmux_IDX_4 1075806820
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_gpio1_io13_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_gpio1_io13_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_gpio1_io13, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_gpio1_io13, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_gpio1_io13, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_gpio1_io13, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_gpio1_io13, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_gpio1_io13_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_gpio1_io13, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_gpio1_io13, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_gpio1_io13, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_gpio1_io13, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_gpio1_io13, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_gpio1_io13_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_gpio1_io13, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_gpio1_io13, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_gpio1_io13, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_gpio1_io13, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_gpio1_io13, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_gpio1_io13_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_gpio1_io13, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_gpio1_io13, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_gpio1_io13, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_gpio1_io13, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_gpio1_io13, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_gpio1_io13_P_pinmux_LEN 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_gpio1_io13_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_gpio1_io13_P_pin_pue 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_gpio1_io13_P_pin_pue_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_gpio1_io13_P_pin_pdrv 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_gpio1_io13_P_pin_pdrv_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_gpio1_io13_P_pin_lpsr 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_gpio1_io13_P_pin_lpsr_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_gpio1_io13_P_pin_snvs 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_gpio1_io13_P_pin_snvs_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_14_GPIO1_IO14
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_gpio1_io14
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_gpio1_io14_PATH "/soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_14_GPIO1_IO14"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_gpio1_io14_FULL_NAME "IOMUXC_GPIO_AD_B0_14_GPIO1_IO14"

/* Node parent (/soc/iomuxc@401f8000) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_gpio1_io14_PARENT DT_N_S_soc_S_iomuxc_401f8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_gpio1_io14_CHILD_IDX 28

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_gpio1_io14_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_gpio1_io14_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_gpio1_io14_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_gpio1_io14_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_gpio1_io14_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_gpio1_io14_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_gpio1_io14_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_gpio1_io14_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_gpio1_io14_ORD 34

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_gpio1_io14_REQUIRES_ORDS \
	13, /* /soc/iomuxc@401f8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_gpio1_io14_SUPPORTS_ORDS \
	52, /* /soc/gpio@401b8000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_gpio1_io14_EXISTS 1
#define DT_N_NODELABEL_iomuxc_gpio_ad_b0_14_gpio1_io14 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_gpio1_io14

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_gpio1_io14_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_gpio1_io14_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_gpio1_io14_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_gpio1_io14_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_gpio1_io14_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_gpio1_io14_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_gpio1_io14_P_pinmux {1075806452 /* 0x401f80f4 */, 5 /* 0x5 */, 0 /* 0x0 */, 0 /* 0x0 */, 1075806824 /* 0x401f8268 */}
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_gpio1_io14_P_pinmux_IDX_0 1075806452
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_gpio1_io14_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_gpio1_io14_P_pinmux_IDX_1 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_gpio1_io14_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_gpio1_io14_P_pinmux_IDX_2 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_gpio1_io14_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_gpio1_io14_P_pinmux_IDX_3 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_gpio1_io14_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_gpio1_io14_P_pinmux_IDX_4 1075806824
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_gpio1_io14_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_gpio1_io14_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_gpio1_io14, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_gpio1_io14, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_gpio1_io14, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_gpio1_io14, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_gpio1_io14, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_gpio1_io14_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_gpio1_io14, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_gpio1_io14, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_gpio1_io14, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_gpio1_io14, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_gpio1_io14, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_gpio1_io14_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_gpio1_io14, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_gpio1_io14, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_gpio1_io14, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_gpio1_io14, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_gpio1_io14, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_gpio1_io14_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_gpio1_io14, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_gpio1_io14, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_gpio1_io14, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_gpio1_io14, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_gpio1_io14, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_gpio1_io14_P_pinmux_LEN 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_gpio1_io14_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_gpio1_io14_P_pin_pue 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_gpio1_io14_P_pin_pue_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_gpio1_io14_P_pin_pdrv 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_gpio1_io14_P_pin_pdrv_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_gpio1_io14_P_pin_lpsr 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_gpio1_io14_P_pin_lpsr_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_gpio1_io14_P_pin_snvs 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_gpio1_io14_P_pin_snvs_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_15_GPIO1_IO15
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_gpio1_io15
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_gpio1_io15_PATH "/soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_15_GPIO1_IO15"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_gpio1_io15_FULL_NAME "IOMUXC_GPIO_AD_B0_15_GPIO1_IO15"

/* Node parent (/soc/iomuxc@401f8000) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_gpio1_io15_PARENT DT_N_S_soc_S_iomuxc_401f8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_gpio1_io15_CHILD_IDX 30

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_gpio1_io15_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_gpio1_io15_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_gpio1_io15_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_gpio1_io15_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_gpio1_io15_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_gpio1_io15_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_gpio1_io15_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_gpio1_io15_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_gpio1_io15_ORD 35

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_gpio1_io15_REQUIRES_ORDS \
	13, /* /soc/iomuxc@401f8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_gpio1_io15_SUPPORTS_ORDS \
	52, /* /soc/gpio@401b8000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_gpio1_io15_EXISTS 1
#define DT_N_NODELABEL_iomuxc_gpio_ad_b0_15_gpio1_io15 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_gpio1_io15

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_gpio1_io15_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_gpio1_io15_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_gpio1_io15_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_gpio1_io15_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_gpio1_io15_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_gpio1_io15_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_gpio1_io15_P_pinmux {1075806456 /* 0x401f80f8 */, 5 /* 0x5 */, 0 /* 0x0 */, 0 /* 0x0 */, 1075806828 /* 0x401f826c */}
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_gpio1_io15_P_pinmux_IDX_0 1075806456
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_gpio1_io15_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_gpio1_io15_P_pinmux_IDX_1 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_gpio1_io15_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_gpio1_io15_P_pinmux_IDX_2 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_gpio1_io15_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_gpio1_io15_P_pinmux_IDX_3 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_gpio1_io15_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_gpio1_io15_P_pinmux_IDX_4 1075806828
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_gpio1_io15_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_gpio1_io15_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_gpio1_io15, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_gpio1_io15, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_gpio1_io15, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_gpio1_io15, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_gpio1_io15, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_gpio1_io15_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_gpio1_io15, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_gpio1_io15, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_gpio1_io15, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_gpio1_io15, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_gpio1_io15, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_gpio1_io15_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_gpio1_io15, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_gpio1_io15, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_gpio1_io15, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_gpio1_io15, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_gpio1_io15, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_gpio1_io15_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_gpio1_io15, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_gpio1_io15, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_gpio1_io15, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_gpio1_io15, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_gpio1_io15, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_gpio1_io15_P_pinmux_LEN 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_gpio1_io15_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_gpio1_io15_P_pin_pue 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_gpio1_io15_P_pin_pue_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_gpio1_io15_P_pin_pdrv 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_gpio1_io15_P_pin_pdrv_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_gpio1_io15_P_pin_lpsr 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_gpio1_io15_P_pin_lpsr_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_gpio1_io15_P_pin_snvs 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_gpio1_io15_P_pin_snvs_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B1_00_GPIO1_IO16
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_00_gpio1_io16
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_00_gpio1_io16_PATH "/soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B1_00_GPIO1_IO16"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_00_gpio1_io16_FULL_NAME "IOMUXC_GPIO_AD_B1_00_GPIO1_IO16"

/* Node parent (/soc/iomuxc@401f8000) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_00_gpio1_io16_PARENT DT_N_S_soc_S_iomuxc_401f8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_00_gpio1_io16_CHILD_IDX 31

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_00_gpio1_io16_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_00_gpio1_io16_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_00_gpio1_io16_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_00_gpio1_io16_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_00_gpio1_io16_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_00_gpio1_io16_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_00_gpio1_io16_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_00_gpio1_io16_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_00_gpio1_io16_ORD 36

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_00_gpio1_io16_REQUIRES_ORDS \
	13, /* /soc/iomuxc@401f8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_00_gpio1_io16_SUPPORTS_ORDS \
	52, /* /soc/gpio@401b8000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_00_gpio1_io16_EXISTS 1
#define DT_N_NODELABEL_iomuxc_gpio_ad_b1_00_gpio1_io16 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_00_gpio1_io16

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_00_gpio1_io16_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_00_gpio1_io16_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_00_gpio1_io16_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_00_gpio1_io16_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_00_gpio1_io16_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_00_gpio1_io16_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_00_gpio1_io16_P_pinmux {1075806460 /* 0x401f80fc */, 5 /* 0x5 */, 0 /* 0x0 */, 0 /* 0x0 */, 1075806832 /* 0x401f8270 */}
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_00_gpio1_io16_P_pinmux_IDX_0 1075806460
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_00_gpio1_io16_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_00_gpio1_io16_P_pinmux_IDX_1 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_00_gpio1_io16_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_00_gpio1_io16_P_pinmux_IDX_2 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_00_gpio1_io16_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_00_gpio1_io16_P_pinmux_IDX_3 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_00_gpio1_io16_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_00_gpio1_io16_P_pinmux_IDX_4 1075806832
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_00_gpio1_io16_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_00_gpio1_io16_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_00_gpio1_io16, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_00_gpio1_io16, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_00_gpio1_io16, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_00_gpio1_io16, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_00_gpio1_io16, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_00_gpio1_io16_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_00_gpio1_io16, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_00_gpio1_io16, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_00_gpio1_io16, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_00_gpio1_io16, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_00_gpio1_io16, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_00_gpio1_io16_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_00_gpio1_io16, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_00_gpio1_io16, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_00_gpio1_io16, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_00_gpio1_io16, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_00_gpio1_io16, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_00_gpio1_io16_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_00_gpio1_io16, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_00_gpio1_io16, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_00_gpio1_io16, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_00_gpio1_io16, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_00_gpio1_io16, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_00_gpio1_io16_P_pinmux_LEN 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_00_gpio1_io16_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_00_gpio1_io16_P_pin_pue 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_00_gpio1_io16_P_pin_pue_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_00_gpio1_io16_P_pin_pdrv 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_00_gpio1_io16_P_pin_pdrv_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_00_gpio1_io16_P_pin_lpsr 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_00_gpio1_io16_P_pin_lpsr_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_00_gpio1_io16_P_pin_snvs 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_00_gpio1_io16_P_pin_snvs_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B1_01_GPIO1_IO17
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_01_gpio1_io17
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_01_gpio1_io17_PATH "/soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B1_01_GPIO1_IO17"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_01_gpio1_io17_FULL_NAME "IOMUXC_GPIO_AD_B1_01_GPIO1_IO17"

/* Node parent (/soc/iomuxc@401f8000) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_01_gpio1_io17_PARENT DT_N_S_soc_S_iomuxc_401f8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_01_gpio1_io17_CHILD_IDX 32

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_01_gpio1_io17_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_01_gpio1_io17_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_01_gpio1_io17_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_01_gpio1_io17_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_01_gpio1_io17_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_01_gpio1_io17_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_01_gpio1_io17_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_01_gpio1_io17_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_01_gpio1_io17_ORD 37

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_01_gpio1_io17_REQUIRES_ORDS \
	13, /* /soc/iomuxc@401f8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_01_gpio1_io17_SUPPORTS_ORDS \
	52, /* /soc/gpio@401b8000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_01_gpio1_io17_EXISTS 1
#define DT_N_NODELABEL_iomuxc_gpio_ad_b1_01_gpio1_io17 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_01_gpio1_io17

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_01_gpio1_io17_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_01_gpio1_io17_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_01_gpio1_io17_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_01_gpio1_io17_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_01_gpio1_io17_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_01_gpio1_io17_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_01_gpio1_io17_P_pinmux {1075806464 /* 0x401f8100 */, 5 /* 0x5 */, 0 /* 0x0 */, 0 /* 0x0 */, 1075806836 /* 0x401f8274 */}
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_01_gpio1_io17_P_pinmux_IDX_0 1075806464
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_01_gpio1_io17_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_01_gpio1_io17_P_pinmux_IDX_1 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_01_gpio1_io17_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_01_gpio1_io17_P_pinmux_IDX_2 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_01_gpio1_io17_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_01_gpio1_io17_P_pinmux_IDX_3 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_01_gpio1_io17_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_01_gpio1_io17_P_pinmux_IDX_4 1075806836
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_01_gpio1_io17_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_01_gpio1_io17_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_01_gpio1_io17, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_01_gpio1_io17, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_01_gpio1_io17, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_01_gpio1_io17, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_01_gpio1_io17, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_01_gpio1_io17_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_01_gpio1_io17, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_01_gpio1_io17, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_01_gpio1_io17, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_01_gpio1_io17, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_01_gpio1_io17, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_01_gpio1_io17_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_01_gpio1_io17, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_01_gpio1_io17, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_01_gpio1_io17, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_01_gpio1_io17, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_01_gpio1_io17, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_01_gpio1_io17_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_01_gpio1_io17, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_01_gpio1_io17, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_01_gpio1_io17, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_01_gpio1_io17, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_01_gpio1_io17, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_01_gpio1_io17_P_pinmux_LEN 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_01_gpio1_io17_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_01_gpio1_io17_P_pin_pue 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_01_gpio1_io17_P_pin_pue_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_01_gpio1_io17_P_pin_pdrv 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_01_gpio1_io17_P_pin_pdrv_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_01_gpio1_io17_P_pin_lpsr 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_01_gpio1_io17_P_pin_lpsr_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_01_gpio1_io17_P_pin_snvs 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_01_gpio1_io17_P_pin_snvs_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B1_02_GPIO1_IO18
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_02_gpio1_io18
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_02_gpio1_io18_PATH "/soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B1_02_GPIO1_IO18"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_02_gpio1_io18_FULL_NAME "IOMUXC_GPIO_AD_B1_02_GPIO1_IO18"

/* Node parent (/soc/iomuxc@401f8000) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_02_gpio1_io18_PARENT DT_N_S_soc_S_iomuxc_401f8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_02_gpio1_io18_CHILD_IDX 33

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_02_gpio1_io18_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_02_gpio1_io18_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_02_gpio1_io18_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_02_gpio1_io18_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_02_gpio1_io18_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_02_gpio1_io18_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_02_gpio1_io18_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_02_gpio1_io18_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_02_gpio1_io18_ORD 38

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_02_gpio1_io18_REQUIRES_ORDS \
	13, /* /soc/iomuxc@401f8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_02_gpio1_io18_SUPPORTS_ORDS \
	52, /* /soc/gpio@401b8000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_02_gpio1_io18_EXISTS 1
#define DT_N_NODELABEL_iomuxc_gpio_ad_b1_02_gpio1_io18 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_02_gpio1_io18

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_02_gpio1_io18_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_02_gpio1_io18_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_02_gpio1_io18_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_02_gpio1_io18_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_02_gpio1_io18_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_02_gpio1_io18_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_02_gpio1_io18_P_pinmux {1075806468 /* 0x401f8104 */, 5 /* 0x5 */, 0 /* 0x0 */, 0 /* 0x0 */, 1075806840 /* 0x401f8278 */}
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_02_gpio1_io18_P_pinmux_IDX_0 1075806468
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_02_gpio1_io18_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_02_gpio1_io18_P_pinmux_IDX_1 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_02_gpio1_io18_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_02_gpio1_io18_P_pinmux_IDX_2 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_02_gpio1_io18_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_02_gpio1_io18_P_pinmux_IDX_3 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_02_gpio1_io18_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_02_gpio1_io18_P_pinmux_IDX_4 1075806840
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_02_gpio1_io18_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_02_gpio1_io18_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_02_gpio1_io18, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_02_gpio1_io18, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_02_gpio1_io18, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_02_gpio1_io18, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_02_gpio1_io18, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_02_gpio1_io18_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_02_gpio1_io18, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_02_gpio1_io18, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_02_gpio1_io18, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_02_gpio1_io18, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_02_gpio1_io18, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_02_gpio1_io18_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_02_gpio1_io18, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_02_gpio1_io18, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_02_gpio1_io18, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_02_gpio1_io18, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_02_gpio1_io18, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_02_gpio1_io18_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_02_gpio1_io18, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_02_gpio1_io18, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_02_gpio1_io18, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_02_gpio1_io18, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_02_gpio1_io18, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_02_gpio1_io18_P_pinmux_LEN 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_02_gpio1_io18_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_02_gpio1_io18_P_pin_pue 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_02_gpio1_io18_P_pin_pue_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_02_gpio1_io18_P_pin_pdrv 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_02_gpio1_io18_P_pin_pdrv_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_02_gpio1_io18_P_pin_lpsr 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_02_gpio1_io18_P_pin_lpsr_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_02_gpio1_io18_P_pin_snvs 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_02_gpio1_io18_P_pin_snvs_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B1_03_GPIO1_IO19
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_03_gpio1_io19
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_03_gpio1_io19_PATH "/soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B1_03_GPIO1_IO19"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_03_gpio1_io19_FULL_NAME "IOMUXC_GPIO_AD_B1_03_GPIO1_IO19"

/* Node parent (/soc/iomuxc@401f8000) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_03_gpio1_io19_PARENT DT_N_S_soc_S_iomuxc_401f8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_03_gpio1_io19_CHILD_IDX 34

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_03_gpio1_io19_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_03_gpio1_io19_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_03_gpio1_io19_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_03_gpio1_io19_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_03_gpio1_io19_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_03_gpio1_io19_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_03_gpio1_io19_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_03_gpio1_io19_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_03_gpio1_io19_ORD 39

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_03_gpio1_io19_REQUIRES_ORDS \
	13, /* /soc/iomuxc@401f8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_03_gpio1_io19_SUPPORTS_ORDS \
	52, /* /soc/gpio@401b8000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_03_gpio1_io19_EXISTS 1
#define DT_N_NODELABEL_iomuxc_gpio_ad_b1_03_gpio1_io19 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_03_gpio1_io19

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_03_gpio1_io19_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_03_gpio1_io19_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_03_gpio1_io19_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_03_gpio1_io19_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_03_gpio1_io19_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_03_gpio1_io19_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_03_gpio1_io19_P_pinmux {1075806472 /* 0x401f8108 */, 5 /* 0x5 */, 0 /* 0x0 */, 0 /* 0x0 */, 1075806844 /* 0x401f827c */}
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_03_gpio1_io19_P_pinmux_IDX_0 1075806472
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_03_gpio1_io19_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_03_gpio1_io19_P_pinmux_IDX_1 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_03_gpio1_io19_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_03_gpio1_io19_P_pinmux_IDX_2 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_03_gpio1_io19_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_03_gpio1_io19_P_pinmux_IDX_3 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_03_gpio1_io19_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_03_gpio1_io19_P_pinmux_IDX_4 1075806844
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_03_gpio1_io19_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_03_gpio1_io19_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_03_gpio1_io19, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_03_gpio1_io19, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_03_gpio1_io19, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_03_gpio1_io19, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_03_gpio1_io19, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_03_gpio1_io19_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_03_gpio1_io19, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_03_gpio1_io19, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_03_gpio1_io19, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_03_gpio1_io19, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_03_gpio1_io19, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_03_gpio1_io19_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_03_gpio1_io19, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_03_gpio1_io19, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_03_gpio1_io19, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_03_gpio1_io19, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_03_gpio1_io19, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_03_gpio1_io19_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_03_gpio1_io19, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_03_gpio1_io19, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_03_gpio1_io19, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_03_gpio1_io19, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_03_gpio1_io19, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_03_gpio1_io19_P_pinmux_LEN 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_03_gpio1_io19_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_03_gpio1_io19_P_pin_pue 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_03_gpio1_io19_P_pin_pue_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_03_gpio1_io19_P_pin_pdrv 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_03_gpio1_io19_P_pin_pdrv_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_03_gpio1_io19_P_pin_lpsr 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_03_gpio1_io19_P_pin_lpsr_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_03_gpio1_io19_P_pin_snvs 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_03_gpio1_io19_P_pin_snvs_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B1_04_GPIO1_IO20
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_04_gpio1_io20
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_04_gpio1_io20_PATH "/soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B1_04_GPIO1_IO20"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_04_gpio1_io20_FULL_NAME "IOMUXC_GPIO_AD_B1_04_GPIO1_IO20"

/* Node parent (/soc/iomuxc@401f8000) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_04_gpio1_io20_PARENT DT_N_S_soc_S_iomuxc_401f8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_04_gpio1_io20_CHILD_IDX 35

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_04_gpio1_io20_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_04_gpio1_io20_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_04_gpio1_io20_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_04_gpio1_io20_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_04_gpio1_io20_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_04_gpio1_io20_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_04_gpio1_io20_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_04_gpio1_io20_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_04_gpio1_io20_ORD 40

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_04_gpio1_io20_REQUIRES_ORDS \
	13, /* /soc/iomuxc@401f8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_04_gpio1_io20_SUPPORTS_ORDS \
	52, /* /soc/gpio@401b8000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_04_gpio1_io20_EXISTS 1
#define DT_N_NODELABEL_iomuxc_gpio_ad_b1_04_gpio1_io20 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_04_gpio1_io20

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_04_gpio1_io20_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_04_gpio1_io20_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_04_gpio1_io20_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_04_gpio1_io20_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_04_gpio1_io20_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_04_gpio1_io20_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_04_gpio1_io20_P_pinmux {1075806476 /* 0x401f810c */, 5 /* 0x5 */, 0 /* 0x0 */, 0 /* 0x0 */, 1075806848 /* 0x401f8280 */}
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_04_gpio1_io20_P_pinmux_IDX_0 1075806476
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_04_gpio1_io20_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_04_gpio1_io20_P_pinmux_IDX_1 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_04_gpio1_io20_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_04_gpio1_io20_P_pinmux_IDX_2 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_04_gpio1_io20_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_04_gpio1_io20_P_pinmux_IDX_3 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_04_gpio1_io20_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_04_gpio1_io20_P_pinmux_IDX_4 1075806848
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_04_gpio1_io20_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_04_gpio1_io20_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_04_gpio1_io20, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_04_gpio1_io20, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_04_gpio1_io20, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_04_gpio1_io20, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_04_gpio1_io20, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_04_gpio1_io20_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_04_gpio1_io20, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_04_gpio1_io20, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_04_gpio1_io20, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_04_gpio1_io20, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_04_gpio1_io20, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_04_gpio1_io20_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_04_gpio1_io20, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_04_gpio1_io20, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_04_gpio1_io20, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_04_gpio1_io20, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_04_gpio1_io20, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_04_gpio1_io20_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_04_gpio1_io20, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_04_gpio1_io20, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_04_gpio1_io20, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_04_gpio1_io20, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_04_gpio1_io20, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_04_gpio1_io20_P_pinmux_LEN 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_04_gpio1_io20_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_04_gpio1_io20_P_pin_pue 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_04_gpio1_io20_P_pin_pue_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_04_gpio1_io20_P_pin_pdrv 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_04_gpio1_io20_P_pin_pdrv_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_04_gpio1_io20_P_pin_lpsr 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_04_gpio1_io20_P_pin_lpsr_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_04_gpio1_io20_P_pin_snvs 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_04_gpio1_io20_P_pin_snvs_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B1_05_GPIO1_IO21
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_05_gpio1_io21
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_05_gpio1_io21_PATH "/soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B1_05_GPIO1_IO21"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_05_gpio1_io21_FULL_NAME "IOMUXC_GPIO_AD_B1_05_GPIO1_IO21"

/* Node parent (/soc/iomuxc@401f8000) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_05_gpio1_io21_PARENT DT_N_S_soc_S_iomuxc_401f8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_05_gpio1_io21_CHILD_IDX 36

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_05_gpio1_io21_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_05_gpio1_io21_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_05_gpio1_io21_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_05_gpio1_io21_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_05_gpio1_io21_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_05_gpio1_io21_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_05_gpio1_io21_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_05_gpio1_io21_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_05_gpio1_io21_ORD 41

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_05_gpio1_io21_REQUIRES_ORDS \
	13, /* /soc/iomuxc@401f8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_05_gpio1_io21_SUPPORTS_ORDS \
	52, /* /soc/gpio@401b8000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_05_gpio1_io21_EXISTS 1
#define DT_N_NODELABEL_iomuxc_gpio_ad_b1_05_gpio1_io21 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_05_gpio1_io21

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_05_gpio1_io21_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_05_gpio1_io21_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_05_gpio1_io21_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_05_gpio1_io21_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_05_gpio1_io21_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_05_gpio1_io21_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_05_gpio1_io21_P_pinmux {1075806480 /* 0x401f8110 */, 5 /* 0x5 */, 0 /* 0x0 */, 0 /* 0x0 */, 1075806852 /* 0x401f8284 */}
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_05_gpio1_io21_P_pinmux_IDX_0 1075806480
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_05_gpio1_io21_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_05_gpio1_io21_P_pinmux_IDX_1 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_05_gpio1_io21_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_05_gpio1_io21_P_pinmux_IDX_2 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_05_gpio1_io21_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_05_gpio1_io21_P_pinmux_IDX_3 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_05_gpio1_io21_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_05_gpio1_io21_P_pinmux_IDX_4 1075806852
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_05_gpio1_io21_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_05_gpio1_io21_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_05_gpio1_io21, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_05_gpio1_io21, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_05_gpio1_io21, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_05_gpio1_io21, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_05_gpio1_io21, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_05_gpio1_io21_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_05_gpio1_io21, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_05_gpio1_io21, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_05_gpio1_io21, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_05_gpio1_io21, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_05_gpio1_io21, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_05_gpio1_io21_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_05_gpio1_io21, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_05_gpio1_io21, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_05_gpio1_io21, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_05_gpio1_io21, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_05_gpio1_io21, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_05_gpio1_io21_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_05_gpio1_io21, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_05_gpio1_io21, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_05_gpio1_io21, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_05_gpio1_io21, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_05_gpio1_io21, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_05_gpio1_io21_P_pinmux_LEN 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_05_gpio1_io21_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_05_gpio1_io21_P_pin_pue 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_05_gpio1_io21_P_pin_pue_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_05_gpio1_io21_P_pin_pdrv 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_05_gpio1_io21_P_pin_pdrv_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_05_gpio1_io21_P_pin_lpsr 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_05_gpio1_io21_P_pin_lpsr_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_05_gpio1_io21_P_pin_snvs 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_05_gpio1_io21_P_pin_snvs_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B1_06_GPIO1_IO22
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_06_gpio1_io22
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_06_gpio1_io22_PATH "/soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B1_06_GPIO1_IO22"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_06_gpio1_io22_FULL_NAME "IOMUXC_GPIO_AD_B1_06_GPIO1_IO22"

/* Node parent (/soc/iomuxc@401f8000) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_06_gpio1_io22_PARENT DT_N_S_soc_S_iomuxc_401f8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_06_gpio1_io22_CHILD_IDX 37

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_06_gpio1_io22_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_06_gpio1_io22_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_06_gpio1_io22_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_06_gpio1_io22_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_06_gpio1_io22_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_06_gpio1_io22_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_06_gpio1_io22_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_06_gpio1_io22_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_06_gpio1_io22_ORD 42

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_06_gpio1_io22_REQUIRES_ORDS \
	13, /* /soc/iomuxc@401f8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_06_gpio1_io22_SUPPORTS_ORDS \
	52, /* /soc/gpio@401b8000 */ \
	192, /* /soc/iomuxc@401f8000/pinctrl/pinmux_enet/group3 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_06_gpio1_io22_EXISTS 1
#define DT_N_NODELABEL_iomuxc_gpio_ad_b1_06_gpio1_io22 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_06_gpio1_io22

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_06_gpio1_io22_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_06_gpio1_io22_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_06_gpio1_io22_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_06_gpio1_io22_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_06_gpio1_io22_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_06_gpio1_io22_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_06_gpio1_io22_P_pinmux {1075806484 /* 0x401f8114 */, 5 /* 0x5 */, 0 /* 0x0 */, 0 /* 0x0 */, 1075806856 /* 0x401f8288 */}
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_06_gpio1_io22_P_pinmux_IDX_0 1075806484
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_06_gpio1_io22_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_06_gpio1_io22_P_pinmux_IDX_1 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_06_gpio1_io22_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_06_gpio1_io22_P_pinmux_IDX_2 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_06_gpio1_io22_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_06_gpio1_io22_P_pinmux_IDX_3 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_06_gpio1_io22_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_06_gpio1_io22_P_pinmux_IDX_4 1075806856
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_06_gpio1_io22_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_06_gpio1_io22_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_06_gpio1_io22, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_06_gpio1_io22, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_06_gpio1_io22, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_06_gpio1_io22, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_06_gpio1_io22, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_06_gpio1_io22_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_06_gpio1_io22, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_06_gpio1_io22, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_06_gpio1_io22, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_06_gpio1_io22, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_06_gpio1_io22, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_06_gpio1_io22_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_06_gpio1_io22, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_06_gpio1_io22, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_06_gpio1_io22, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_06_gpio1_io22, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_06_gpio1_io22, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_06_gpio1_io22_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_06_gpio1_io22, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_06_gpio1_io22, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_06_gpio1_io22, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_06_gpio1_io22, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_06_gpio1_io22, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_06_gpio1_io22_P_pinmux_LEN 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_06_gpio1_io22_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_06_gpio1_io22_P_pin_pue 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_06_gpio1_io22_P_pin_pue_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_06_gpio1_io22_P_pin_pdrv 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_06_gpio1_io22_P_pin_pdrv_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_06_gpio1_io22_P_pin_lpsr 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_06_gpio1_io22_P_pin_lpsr_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_06_gpio1_io22_P_pin_snvs 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_06_gpio1_io22_P_pin_snvs_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B1_07_GPIO1_IO23
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_gpio1_io23
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_gpio1_io23_PATH "/soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B1_07_GPIO1_IO23"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_gpio1_io23_FULL_NAME "IOMUXC_GPIO_AD_B1_07_GPIO1_IO23"

/* Node parent (/soc/iomuxc@401f8000) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_gpio1_io23_PARENT DT_N_S_soc_S_iomuxc_401f8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_gpio1_io23_CHILD_IDX 38

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_gpio1_io23_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_gpio1_io23_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_gpio1_io23_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_gpio1_io23_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_gpio1_io23_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_gpio1_io23_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_gpio1_io23_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_gpio1_io23_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_gpio1_io23_ORD 43

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_gpio1_io23_REQUIRES_ORDS \
	13, /* /soc/iomuxc@401f8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_gpio1_io23_SUPPORTS_ORDS \
	52, /* /soc/gpio@401b8000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_gpio1_io23_EXISTS 1
#define DT_N_NODELABEL_iomuxc_gpio_ad_b1_07_gpio1_io23 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_gpio1_io23

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_gpio1_io23_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_gpio1_io23_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_gpio1_io23_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_gpio1_io23_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_gpio1_io23_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_gpio1_io23_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_gpio1_io23_P_pinmux {1075806488 /* 0x401f8118 */, 5 /* 0x5 */, 0 /* 0x0 */, 0 /* 0x0 */, 1075806860 /* 0x401f828c */}
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_gpio1_io23_P_pinmux_IDX_0 1075806488
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_gpio1_io23_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_gpio1_io23_P_pinmux_IDX_1 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_gpio1_io23_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_gpio1_io23_P_pinmux_IDX_2 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_gpio1_io23_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_gpio1_io23_P_pinmux_IDX_3 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_gpio1_io23_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_gpio1_io23_P_pinmux_IDX_4 1075806860
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_gpio1_io23_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_gpio1_io23_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_gpio1_io23, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_gpio1_io23, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_gpio1_io23, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_gpio1_io23, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_gpio1_io23, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_gpio1_io23_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_gpio1_io23, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_gpio1_io23, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_gpio1_io23, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_gpio1_io23, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_gpio1_io23, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_gpio1_io23_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_gpio1_io23, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_gpio1_io23, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_gpio1_io23, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_gpio1_io23, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_gpio1_io23, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_gpio1_io23_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_gpio1_io23, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_gpio1_io23, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_gpio1_io23, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_gpio1_io23, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_gpio1_io23, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_gpio1_io23_P_pinmux_LEN 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_gpio1_io23_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_gpio1_io23_P_pin_pue 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_gpio1_io23_P_pin_pue_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_gpio1_io23_P_pin_pdrv 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_gpio1_io23_P_pin_pdrv_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_gpio1_io23_P_pin_lpsr 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_gpio1_io23_P_pin_lpsr_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_gpio1_io23_P_pin_snvs 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_gpio1_io23_P_pin_snvs_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B1_08_GPIO1_IO24
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_gpio1_io24
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_gpio1_io24_PATH "/soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B1_08_GPIO1_IO24"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_gpio1_io24_FULL_NAME "IOMUXC_GPIO_AD_B1_08_GPIO1_IO24"

/* Node parent (/soc/iomuxc@401f8000) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_gpio1_io24_PARENT DT_N_S_soc_S_iomuxc_401f8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_gpio1_io24_CHILD_IDX 40

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_gpio1_io24_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_gpio1_io24_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_gpio1_io24_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_gpio1_io24_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_gpio1_io24_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_gpio1_io24_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_gpio1_io24_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_gpio1_io24_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_gpio1_io24_ORD 44

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_gpio1_io24_REQUIRES_ORDS \
	13, /* /soc/iomuxc@401f8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_gpio1_io24_SUPPORTS_ORDS \
	52, /* /soc/gpio@401b8000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_gpio1_io24_EXISTS 1
#define DT_N_NODELABEL_iomuxc_gpio_ad_b1_08_gpio1_io24 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_gpio1_io24

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_gpio1_io24_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_gpio1_io24_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_gpio1_io24_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_gpio1_io24_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_gpio1_io24_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_gpio1_io24_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_gpio1_io24_P_pinmux {1075806492 /* 0x401f811c */, 5 /* 0x5 */, 0 /* 0x0 */, 0 /* 0x0 */, 1075806864 /* 0x401f8290 */}
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_gpio1_io24_P_pinmux_IDX_0 1075806492
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_gpio1_io24_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_gpio1_io24_P_pinmux_IDX_1 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_gpio1_io24_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_gpio1_io24_P_pinmux_IDX_2 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_gpio1_io24_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_gpio1_io24_P_pinmux_IDX_3 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_gpio1_io24_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_gpio1_io24_P_pinmux_IDX_4 1075806864
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_gpio1_io24_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_gpio1_io24_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_gpio1_io24, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_gpio1_io24, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_gpio1_io24, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_gpio1_io24, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_gpio1_io24, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_gpio1_io24_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_gpio1_io24, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_gpio1_io24, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_gpio1_io24, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_gpio1_io24, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_gpio1_io24, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_gpio1_io24_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_gpio1_io24, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_gpio1_io24, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_gpio1_io24, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_gpio1_io24, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_gpio1_io24, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_gpio1_io24_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_gpio1_io24, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_gpio1_io24, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_gpio1_io24, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_gpio1_io24, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_gpio1_io24, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_gpio1_io24_P_pinmux_LEN 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_gpio1_io24_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_gpio1_io24_P_pin_pue 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_gpio1_io24_P_pin_pue_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_gpio1_io24_P_pin_pdrv 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_gpio1_io24_P_pin_pdrv_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_gpio1_io24_P_pin_lpsr 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_gpio1_io24_P_pin_lpsr_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_gpio1_io24_P_pin_snvs 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_gpio1_io24_P_pin_snvs_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B1_09_GPIO1_IO25
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_gpio1_io25
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_gpio1_io25_PATH "/soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B1_09_GPIO1_IO25"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_gpio1_io25_FULL_NAME "IOMUXC_GPIO_AD_B1_09_GPIO1_IO25"

/* Node parent (/soc/iomuxc@401f8000) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_gpio1_io25_PARENT DT_N_S_soc_S_iomuxc_401f8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_gpio1_io25_CHILD_IDX 42

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_gpio1_io25_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_gpio1_io25_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_gpio1_io25_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_gpio1_io25_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_gpio1_io25_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_gpio1_io25_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_gpio1_io25_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_gpio1_io25_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_gpio1_io25_ORD 45

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_gpio1_io25_REQUIRES_ORDS \
	13, /* /soc/iomuxc@401f8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_gpio1_io25_SUPPORTS_ORDS \
	52, /* /soc/gpio@401b8000 */ \
	219, /* /soc/iomuxc@401f8000/pinctrl/pinmux_lpuart2_sleep/group0 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_gpio1_io25_EXISTS 1
#define DT_N_NODELABEL_iomuxc_gpio_ad_b1_09_gpio1_io25 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_gpio1_io25

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_gpio1_io25_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_gpio1_io25_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_gpio1_io25_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_gpio1_io25_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_gpio1_io25_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_gpio1_io25_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_gpio1_io25_P_pinmux {1075806496 /* 0x401f8120 */, 5 /* 0x5 */, 0 /* 0x0 */, 0 /* 0x0 */, 1075806868 /* 0x401f8294 */}
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_gpio1_io25_P_pinmux_IDX_0 1075806496
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_gpio1_io25_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_gpio1_io25_P_pinmux_IDX_1 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_gpio1_io25_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_gpio1_io25_P_pinmux_IDX_2 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_gpio1_io25_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_gpio1_io25_P_pinmux_IDX_3 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_gpio1_io25_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_gpio1_io25_P_pinmux_IDX_4 1075806868
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_gpio1_io25_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_gpio1_io25_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_gpio1_io25, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_gpio1_io25, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_gpio1_io25, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_gpio1_io25, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_gpio1_io25, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_gpio1_io25_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_gpio1_io25, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_gpio1_io25, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_gpio1_io25, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_gpio1_io25, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_gpio1_io25, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_gpio1_io25_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_gpio1_io25, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_gpio1_io25, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_gpio1_io25, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_gpio1_io25, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_gpio1_io25, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_gpio1_io25_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_gpio1_io25, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_gpio1_io25, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_gpio1_io25, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_gpio1_io25, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_gpio1_io25, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_gpio1_io25_P_pinmux_LEN 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_gpio1_io25_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_gpio1_io25_P_pin_pue 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_gpio1_io25_P_pin_pue_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_gpio1_io25_P_pin_pdrv 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_gpio1_io25_P_pin_pdrv_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_gpio1_io25_P_pin_lpsr 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_gpio1_io25_P_pin_lpsr_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_gpio1_io25_P_pin_snvs 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_gpio1_io25_P_pin_snvs_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B1_10_GPIO1_IO26
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_gpio1_io26
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_gpio1_io26_PATH "/soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B1_10_GPIO1_IO26"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_gpio1_io26_FULL_NAME "IOMUXC_GPIO_AD_B1_10_GPIO1_IO26"

/* Node parent (/soc/iomuxc@401f8000) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_gpio1_io26_PARENT DT_N_S_soc_S_iomuxc_401f8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_gpio1_io26_CHILD_IDX 45

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_gpio1_io26_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_gpio1_io26_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_gpio1_io26_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_gpio1_io26_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_gpio1_io26_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_gpio1_io26_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_gpio1_io26_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_gpio1_io26_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_gpio1_io26_ORD 46

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_gpio1_io26_REQUIRES_ORDS \
	13, /* /soc/iomuxc@401f8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_gpio1_io26_SUPPORTS_ORDS \
	52, /* /soc/gpio@401b8000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_gpio1_io26_EXISTS 1
#define DT_N_NODELABEL_iomuxc_gpio_ad_b1_10_gpio1_io26 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_gpio1_io26

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_gpio1_io26_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_gpio1_io26_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_gpio1_io26_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_gpio1_io26_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_gpio1_io26_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_gpio1_io26_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_gpio1_io26_P_pinmux {1075806500 /* 0x401f8124 */, 5 /* 0x5 */, 0 /* 0x0 */, 0 /* 0x0 */, 1075806872 /* 0x401f8298 */}
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_gpio1_io26_P_pinmux_IDX_0 1075806500
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_gpio1_io26_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_gpio1_io26_P_pinmux_IDX_1 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_gpio1_io26_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_gpio1_io26_P_pinmux_IDX_2 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_gpio1_io26_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_gpio1_io26_P_pinmux_IDX_3 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_gpio1_io26_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_gpio1_io26_P_pinmux_IDX_4 1075806872
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_gpio1_io26_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_gpio1_io26_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_gpio1_io26, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_gpio1_io26, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_gpio1_io26, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_gpio1_io26, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_gpio1_io26, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_gpio1_io26_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_gpio1_io26, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_gpio1_io26, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_gpio1_io26, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_gpio1_io26, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_gpio1_io26, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_gpio1_io26_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_gpio1_io26, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_gpio1_io26, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_gpio1_io26, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_gpio1_io26, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_gpio1_io26, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_gpio1_io26_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_gpio1_io26, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_gpio1_io26, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_gpio1_io26, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_gpio1_io26, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_gpio1_io26, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_gpio1_io26_P_pinmux_LEN 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_gpio1_io26_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_gpio1_io26_P_pin_pue 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_gpio1_io26_P_pin_pue_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_gpio1_io26_P_pin_pdrv 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_gpio1_io26_P_pin_pdrv_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_gpio1_io26_P_pin_lpsr 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_gpio1_io26_P_pin_lpsr_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_gpio1_io26_P_pin_snvs 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_gpio1_io26_P_pin_snvs_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B1_11_GPIO1_IO27
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_gpio1_io27
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_gpio1_io27_PATH "/soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B1_11_GPIO1_IO27"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_gpio1_io27_FULL_NAME "IOMUXC_GPIO_AD_B1_11_GPIO1_IO27"

/* Node parent (/soc/iomuxc@401f8000) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_gpio1_io27_PARENT DT_N_S_soc_S_iomuxc_401f8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_gpio1_io27_CHILD_IDX 47

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_gpio1_io27_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_gpio1_io27_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_gpio1_io27_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_gpio1_io27_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_gpio1_io27_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_gpio1_io27_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_gpio1_io27_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_gpio1_io27_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_gpio1_io27_ORD 47

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_gpio1_io27_REQUIRES_ORDS \
	13, /* /soc/iomuxc@401f8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_gpio1_io27_SUPPORTS_ORDS \
	52, /* /soc/gpio@401b8000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_gpio1_io27_EXISTS 1
#define DT_N_NODELABEL_iomuxc_gpio_ad_b1_11_gpio1_io27 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_gpio1_io27

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_gpio1_io27_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_gpio1_io27_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_gpio1_io27_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_gpio1_io27_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_gpio1_io27_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_gpio1_io27_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_gpio1_io27_P_pinmux {1075806504 /* 0x401f8128 */, 5 /* 0x5 */, 0 /* 0x0 */, 0 /* 0x0 */, 1075806876 /* 0x401f829c */}
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_gpio1_io27_P_pinmux_IDX_0 1075806504
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_gpio1_io27_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_gpio1_io27_P_pinmux_IDX_1 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_gpio1_io27_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_gpio1_io27_P_pinmux_IDX_2 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_gpio1_io27_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_gpio1_io27_P_pinmux_IDX_3 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_gpio1_io27_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_gpio1_io27_P_pinmux_IDX_4 1075806876
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_gpio1_io27_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_gpio1_io27_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_gpio1_io27, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_gpio1_io27, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_gpio1_io27, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_gpio1_io27, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_gpio1_io27, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_gpio1_io27_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_gpio1_io27, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_gpio1_io27, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_gpio1_io27, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_gpio1_io27, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_gpio1_io27, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_gpio1_io27_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_gpio1_io27, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_gpio1_io27, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_gpio1_io27, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_gpio1_io27, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_gpio1_io27, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_gpio1_io27_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_gpio1_io27, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_gpio1_io27, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_gpio1_io27, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_gpio1_io27, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_gpio1_io27, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_gpio1_io27_P_pinmux_LEN 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_gpio1_io27_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_gpio1_io27_P_pin_pue 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_gpio1_io27_P_pin_pue_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_gpio1_io27_P_pin_pdrv 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_gpio1_io27_P_pin_pdrv_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_gpio1_io27_P_pin_lpsr 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_gpio1_io27_P_pin_lpsr_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_gpio1_io27_P_pin_snvs 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_gpio1_io27_P_pin_snvs_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B1_12_GPIO1_IO28
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_12_gpio1_io28
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_12_gpio1_io28_PATH "/soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B1_12_GPIO1_IO28"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_12_gpio1_io28_FULL_NAME "IOMUXC_GPIO_AD_B1_12_GPIO1_IO28"

/* Node parent (/soc/iomuxc@401f8000) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_12_gpio1_io28_PARENT DT_N_S_soc_S_iomuxc_401f8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_12_gpio1_io28_CHILD_IDX 48

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_12_gpio1_io28_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_12_gpio1_io28_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_12_gpio1_io28_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_12_gpio1_io28_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_12_gpio1_io28_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_12_gpio1_io28_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_12_gpio1_io28_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_12_gpio1_io28_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_12_gpio1_io28_ORD 48

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_12_gpio1_io28_REQUIRES_ORDS \
	13, /* /soc/iomuxc@401f8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_12_gpio1_io28_SUPPORTS_ORDS \
	52, /* /soc/gpio@401b8000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_12_gpio1_io28_EXISTS 1
#define DT_N_NODELABEL_iomuxc_gpio_ad_b1_12_gpio1_io28 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_12_gpio1_io28

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_12_gpio1_io28_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_12_gpio1_io28_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_12_gpio1_io28_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_12_gpio1_io28_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_12_gpio1_io28_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_12_gpio1_io28_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_12_gpio1_io28_P_pinmux {1075806508 /* 0x401f812c */, 5 /* 0x5 */, 0 /* 0x0 */, 0 /* 0x0 */, 1075806880 /* 0x401f82a0 */}
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_12_gpio1_io28_P_pinmux_IDX_0 1075806508
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_12_gpio1_io28_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_12_gpio1_io28_P_pinmux_IDX_1 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_12_gpio1_io28_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_12_gpio1_io28_P_pinmux_IDX_2 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_12_gpio1_io28_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_12_gpio1_io28_P_pinmux_IDX_3 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_12_gpio1_io28_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_12_gpio1_io28_P_pinmux_IDX_4 1075806880
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_12_gpio1_io28_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_12_gpio1_io28_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_12_gpio1_io28, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_12_gpio1_io28, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_12_gpio1_io28, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_12_gpio1_io28, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_12_gpio1_io28, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_12_gpio1_io28_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_12_gpio1_io28, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_12_gpio1_io28, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_12_gpio1_io28, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_12_gpio1_io28, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_12_gpio1_io28, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_12_gpio1_io28_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_12_gpio1_io28, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_12_gpio1_io28, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_12_gpio1_io28, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_12_gpio1_io28, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_12_gpio1_io28, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_12_gpio1_io28_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_12_gpio1_io28, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_12_gpio1_io28, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_12_gpio1_io28, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_12_gpio1_io28, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_12_gpio1_io28, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_12_gpio1_io28_P_pinmux_LEN 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_12_gpio1_io28_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_12_gpio1_io28_P_pin_pue 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_12_gpio1_io28_P_pin_pue_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_12_gpio1_io28_P_pin_pdrv 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_12_gpio1_io28_P_pin_pdrv_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_12_gpio1_io28_P_pin_lpsr 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_12_gpio1_io28_P_pin_lpsr_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_12_gpio1_io28_P_pin_snvs 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_12_gpio1_io28_P_pin_snvs_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B1_13_GPIO1_IO29
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_13_gpio1_io29
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_13_gpio1_io29_PATH "/soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B1_13_GPIO1_IO29"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_13_gpio1_io29_FULL_NAME "IOMUXC_GPIO_AD_B1_13_GPIO1_IO29"

/* Node parent (/soc/iomuxc@401f8000) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_13_gpio1_io29_PARENT DT_N_S_soc_S_iomuxc_401f8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_13_gpio1_io29_CHILD_IDX 49

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_13_gpio1_io29_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_13_gpio1_io29_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_13_gpio1_io29_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_13_gpio1_io29_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_13_gpio1_io29_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_13_gpio1_io29_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_13_gpio1_io29_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_13_gpio1_io29_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_13_gpio1_io29_ORD 49

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_13_gpio1_io29_REQUIRES_ORDS \
	13, /* /soc/iomuxc@401f8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_13_gpio1_io29_SUPPORTS_ORDS \
	52, /* /soc/gpio@401b8000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_13_gpio1_io29_EXISTS 1
#define DT_N_NODELABEL_iomuxc_gpio_ad_b1_13_gpio1_io29 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_13_gpio1_io29

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_13_gpio1_io29_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_13_gpio1_io29_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_13_gpio1_io29_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_13_gpio1_io29_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_13_gpio1_io29_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_13_gpio1_io29_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_13_gpio1_io29_P_pinmux {1075806512 /* 0x401f8130 */, 5 /* 0x5 */, 0 /* 0x0 */, 0 /* 0x0 */, 1075806884 /* 0x401f82a4 */}
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_13_gpio1_io29_P_pinmux_IDX_0 1075806512
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_13_gpio1_io29_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_13_gpio1_io29_P_pinmux_IDX_1 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_13_gpio1_io29_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_13_gpio1_io29_P_pinmux_IDX_2 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_13_gpio1_io29_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_13_gpio1_io29_P_pinmux_IDX_3 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_13_gpio1_io29_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_13_gpio1_io29_P_pinmux_IDX_4 1075806884
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_13_gpio1_io29_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_13_gpio1_io29_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_13_gpio1_io29, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_13_gpio1_io29, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_13_gpio1_io29, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_13_gpio1_io29, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_13_gpio1_io29, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_13_gpio1_io29_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_13_gpio1_io29, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_13_gpio1_io29, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_13_gpio1_io29, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_13_gpio1_io29, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_13_gpio1_io29, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_13_gpio1_io29_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_13_gpio1_io29, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_13_gpio1_io29, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_13_gpio1_io29, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_13_gpio1_io29, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_13_gpio1_io29, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_13_gpio1_io29_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_13_gpio1_io29, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_13_gpio1_io29, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_13_gpio1_io29, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_13_gpio1_io29, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_13_gpio1_io29, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_13_gpio1_io29_P_pinmux_LEN 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_13_gpio1_io29_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_13_gpio1_io29_P_pin_pue 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_13_gpio1_io29_P_pin_pue_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_13_gpio1_io29_P_pin_pdrv 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_13_gpio1_io29_P_pin_pdrv_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_13_gpio1_io29_P_pin_lpsr 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_13_gpio1_io29_P_pin_lpsr_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_13_gpio1_io29_P_pin_snvs 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_13_gpio1_io29_P_pin_snvs_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B1_14_GPIO1_IO30
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_gpio1_io30
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_gpio1_io30_PATH "/soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B1_14_GPIO1_IO30"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_gpio1_io30_FULL_NAME "IOMUXC_GPIO_AD_B1_14_GPIO1_IO30"

/* Node parent (/soc/iomuxc@401f8000) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_gpio1_io30_PARENT DT_N_S_soc_S_iomuxc_401f8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_gpio1_io30_CHILD_IDX 50

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_gpio1_io30_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_gpio1_io30_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_gpio1_io30_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_gpio1_io30_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_gpio1_io30_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_gpio1_io30_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_gpio1_io30_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_gpio1_io30_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_gpio1_io30_ORD 50

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_gpio1_io30_REQUIRES_ORDS \
	13, /* /soc/iomuxc@401f8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_gpio1_io30_SUPPORTS_ORDS \
	52, /* /soc/gpio@401b8000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_gpio1_io30_EXISTS 1
#define DT_N_NODELABEL_iomuxc_gpio_ad_b1_14_gpio1_io30 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_gpio1_io30

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_gpio1_io30_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_gpio1_io30_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_gpio1_io30_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_gpio1_io30_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_gpio1_io30_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_gpio1_io30_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_gpio1_io30_P_pinmux {1075806516 /* 0x401f8134 */, 5 /* 0x5 */, 0 /* 0x0 */, 0 /* 0x0 */, 1075806888 /* 0x401f82a8 */}
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_gpio1_io30_P_pinmux_IDX_0 1075806516
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_gpio1_io30_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_gpio1_io30_P_pinmux_IDX_1 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_gpio1_io30_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_gpio1_io30_P_pinmux_IDX_2 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_gpio1_io30_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_gpio1_io30_P_pinmux_IDX_3 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_gpio1_io30_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_gpio1_io30_P_pinmux_IDX_4 1075806888
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_gpio1_io30_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_gpio1_io30_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_gpio1_io30, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_gpio1_io30, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_gpio1_io30, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_gpio1_io30, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_gpio1_io30, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_gpio1_io30_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_gpio1_io30, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_gpio1_io30, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_gpio1_io30, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_gpio1_io30, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_gpio1_io30, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_gpio1_io30_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_gpio1_io30, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_gpio1_io30, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_gpio1_io30, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_gpio1_io30, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_gpio1_io30, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_gpio1_io30_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_gpio1_io30, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_gpio1_io30, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_gpio1_io30, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_gpio1_io30, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_gpio1_io30, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_gpio1_io30_P_pinmux_LEN 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_gpio1_io30_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_gpio1_io30_P_pin_pue 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_gpio1_io30_P_pin_pue_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_gpio1_io30_P_pin_pdrv 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_gpio1_io30_P_pin_pdrv_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_gpio1_io30_P_pin_lpsr 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_gpio1_io30_P_pin_lpsr_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_gpio1_io30_P_pin_snvs 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_gpio1_io30_P_pin_snvs_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B1_15_GPIO1_IO31
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_gpio1_io31
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_gpio1_io31_PATH "/soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B1_15_GPIO1_IO31"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_gpio1_io31_FULL_NAME "IOMUXC_GPIO_AD_B1_15_GPIO1_IO31"

/* Node parent (/soc/iomuxc@401f8000) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_gpio1_io31_PARENT DT_N_S_soc_S_iomuxc_401f8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_gpio1_io31_CHILD_IDX 52

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_gpio1_io31_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_gpio1_io31_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_gpio1_io31_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_gpio1_io31_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_gpio1_io31_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_gpio1_io31_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_gpio1_io31_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_gpio1_io31_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_gpio1_io31_ORD 51

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_gpio1_io31_REQUIRES_ORDS \
	13, /* /soc/iomuxc@401f8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_gpio1_io31_SUPPORTS_ORDS \
	52, /* /soc/gpio@401b8000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_gpio1_io31_EXISTS 1
#define DT_N_NODELABEL_iomuxc_gpio_ad_b1_15_gpio1_io31 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_gpio1_io31

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_gpio1_io31_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_gpio1_io31_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_gpio1_io31_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_gpio1_io31_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_gpio1_io31_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_gpio1_io31_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_gpio1_io31_P_pinmux {1075806520 /* 0x401f8138 */, 5 /* 0x5 */, 0 /* 0x0 */, 0 /* 0x0 */, 1075806892 /* 0x401f82ac */}
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_gpio1_io31_P_pinmux_IDX_0 1075806520
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_gpio1_io31_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_gpio1_io31_P_pinmux_IDX_1 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_gpio1_io31_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_gpio1_io31_P_pinmux_IDX_2 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_gpio1_io31_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_gpio1_io31_P_pinmux_IDX_3 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_gpio1_io31_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_gpio1_io31_P_pinmux_IDX_4 1075806892
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_gpio1_io31_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_gpio1_io31_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_gpio1_io31, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_gpio1_io31, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_gpio1_io31, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_gpio1_io31, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_gpio1_io31, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_gpio1_io31_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_gpio1_io31, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_gpio1_io31, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_gpio1_io31, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_gpio1_io31, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_gpio1_io31, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_gpio1_io31_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_gpio1_io31, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_gpio1_io31, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_gpio1_io31, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_gpio1_io31, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_gpio1_io31, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_gpio1_io31_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_gpio1_io31, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_gpio1_io31, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_gpio1_io31, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_gpio1_io31, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_gpio1_io31, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_gpio1_io31_P_pinmux_LEN 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_gpio1_io31_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_gpio1_io31_P_pin_pue 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_gpio1_io31_P_pin_pue_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_gpio1_io31_P_pin_pdrv 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_gpio1_io31_P_pin_pdrv_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_gpio1_io31_P_pin_lpsr 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_gpio1_io31_P_pin_lpsr_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_gpio1_io31_P_pin_snvs 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_gpio1_io31_P_pin_snvs_EXISTS 1

/*
 * Devicetree node: /soc/gpio@401b8000
 *
 * Node identifier: DT_N_S_soc_S_gpio_401b8000
 *
 * Binding (compatible = nxp,imx-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/nxp,imx-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_gpio_401b8000_PATH "/soc/gpio@401b8000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_gpio_401b8000_FULL_NAME "gpio@401b8000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_gpio_401b8000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_gpio_401b8000_CHILD_IDX 13

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_gpio_401b8000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_gpio_401b8000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_gpio_401b8000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_gpio_401b8000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_gpio_401b8000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_gpio_401b8000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_gpio_401b8000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_gpio_401b8000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_gpio_401b8000_ORD 52

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_gpio_401b8000_REQUIRES_ORDS \
	11, /* /soc */ \
	12, /* /soc/interrupt-controller@e000e100 */ \
	20, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_00_GPIO1_IO00 */ \
	21, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_01_GPIO1_IO01 */ \
	22, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_02_GPIO1_IO02 */ \
	23, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_03_GPIO1_IO03 */ \
	24, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_04_GPIO1_IO04 */ \
	25, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_05_GPIO1_IO05 */ \
	26, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_06_GPIO1_IO06 */ \
	27, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_07_GPIO1_IO07 */ \
	28, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_08_GPIO1_IO08 */ \
	29, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_09_GPIO1_IO09 */ \
	30, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_10_GPIO1_IO10 */ \
	31, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_11_GPIO1_IO11 */ \
	32, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_12_GPIO1_IO12 */ \
	33, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_13_GPIO1_IO13 */ \
	34, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_14_GPIO1_IO14 */ \
	35, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_15_GPIO1_IO15 */ \
	36, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B1_00_GPIO1_IO16 */ \
	37, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B1_01_GPIO1_IO17 */ \
	38, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B1_02_GPIO1_IO18 */ \
	39, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B1_03_GPIO1_IO19 */ \
	40, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B1_04_GPIO1_IO20 */ \
	41, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B1_05_GPIO1_IO21 */ \
	42, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B1_06_GPIO1_IO22 */ \
	43, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B1_07_GPIO1_IO23 */ \
	44, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B1_08_GPIO1_IO24 */ \
	45, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B1_09_GPIO1_IO25 */ \
	46, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B1_10_GPIO1_IO26 */ \
	47, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B1_11_GPIO1_IO27 */ \
	48, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B1_12_GPIO1_IO28 */ \
	49, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B1_13_GPIO1_IO29 */ \
	50, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B1_14_GPIO1_IO30 */ \
	51, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B1_15_GPIO1_IO31 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_gpio_401b8000_SUPPORTS_ORDS \
	53, /* /leds/led-1 */ \
	150, /* /soc/ethernet@402d8000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_gpio_401b8000_EXISTS 1
#define DT_N_INST_0_nxp_imx_gpio DT_N_S_soc_S_gpio_401b8000
#define DT_N_NODELABEL_gpio1     DT_N_S_soc_S_gpio_401b8000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_gpio_401b8000_REG_NUM 1
#define DT_N_S_soc_S_gpio_401b8000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_401b8000_REG_IDX_0_VAL_ADDRESS 1075544064 /* 0x401b8000 */
#define DT_N_S_soc_S_gpio_401b8000_REG_IDX_0_VAL_SIZE 16384 /* 0x4000 */
#define DT_N_S_soc_S_gpio_401b8000_RANGES_NUM 0
#define DT_N_S_soc_S_gpio_401b8000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_gpio_401b8000_IRQ_NUM 2
#define DT_N_S_soc_S_gpio_401b8000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_401b8000_IRQ_IDX_0_VAL_irq 80
#define DT_N_S_soc_S_gpio_401b8000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_gpio_401b8000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_401b8000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_gpio_401b8000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_gpio_401b8000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpio_401b8000_IRQ_IDX_1_VAL_irq 81
#define DT_N_S_soc_S_gpio_401b8000_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_gpio_401b8000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpio_401b8000_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_gpio_401b8000_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_gpio_401b8000_COMPAT_MATCHES_nxp_imx_gpio 1
#define DT_N_S_soc_S_gpio_401b8000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_401b8000_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_soc_S_gpio_401b8000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_401b8000_COMPAT_MODEL_IDX_0 "imx-gpio"
#define DT_N_S_soc_S_gpio_401b8000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_gpio_401b8000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_gpio_401b8000_P_reg {1075544064 /* 0x401b8000 */, 16384 /* 0x4000 */}
#define DT_N_S_soc_S_gpio_401b8000_P_reg_IDX_0 1075544064
#define DT_N_S_soc_S_gpio_401b8000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_401b8000_P_reg_IDX_1 16384
#define DT_N_S_soc_S_gpio_401b8000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpio_401b8000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_401b8000, reg, 0) \
	fn(DT_N_S_soc_S_gpio_401b8000, reg, 1)
#define DT_N_S_soc_S_gpio_401b8000_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_401b8000, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401b8000, reg, 1)
#define DT_N_S_soc_S_gpio_401b8000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_401b8000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_401b8000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_401b8000_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_401b8000, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401b8000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_401b8000_P_reg_EXISTS 1
#define DT_N_S_soc_S_gpio_401b8000_P_pinmux_IDX_0 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_00_gpio1_io00
#define DT_N_S_soc_S_gpio_401b8000_P_pinmux_IDX_0_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_00_gpio1_io00
#define DT_N_S_soc_S_gpio_401b8000_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_401b8000_P_pinmux_IDX_1 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_01_gpio1_io01
#define DT_N_S_soc_S_gpio_401b8000_P_pinmux_IDX_1_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_01_gpio1_io01
#define DT_N_S_soc_S_gpio_401b8000_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpio_401b8000_P_pinmux_IDX_2 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_02_gpio1_io02
#define DT_N_S_soc_S_gpio_401b8000_P_pinmux_IDX_2_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_02_gpio1_io02
#define DT_N_S_soc_S_gpio_401b8000_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_gpio_401b8000_P_pinmux_IDX_3 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_03_gpio1_io03
#define DT_N_S_soc_S_gpio_401b8000_P_pinmux_IDX_3_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_03_gpio1_io03
#define DT_N_S_soc_S_gpio_401b8000_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_gpio_401b8000_P_pinmux_IDX_4 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_04_gpio1_io04
#define DT_N_S_soc_S_gpio_401b8000_P_pinmux_IDX_4_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_04_gpio1_io04
#define DT_N_S_soc_S_gpio_401b8000_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_gpio_401b8000_P_pinmux_IDX_5 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_05_gpio1_io05
#define DT_N_S_soc_S_gpio_401b8000_P_pinmux_IDX_5_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_05_gpio1_io05
#define DT_N_S_soc_S_gpio_401b8000_P_pinmux_IDX_5_EXISTS 1
#define DT_N_S_soc_S_gpio_401b8000_P_pinmux_IDX_6 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_gpio1_io06
#define DT_N_S_soc_S_gpio_401b8000_P_pinmux_IDX_6_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_gpio1_io06
#define DT_N_S_soc_S_gpio_401b8000_P_pinmux_IDX_6_EXISTS 1
#define DT_N_S_soc_S_gpio_401b8000_P_pinmux_IDX_7 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_gpio1_io07
#define DT_N_S_soc_S_gpio_401b8000_P_pinmux_IDX_7_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_gpio1_io07
#define DT_N_S_soc_S_gpio_401b8000_P_pinmux_IDX_7_EXISTS 1
#define DT_N_S_soc_S_gpio_401b8000_P_pinmux_IDX_8 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_gpio1_io08
#define DT_N_S_soc_S_gpio_401b8000_P_pinmux_IDX_8_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_gpio1_io08
#define DT_N_S_soc_S_gpio_401b8000_P_pinmux_IDX_8_EXISTS 1
#define DT_N_S_soc_S_gpio_401b8000_P_pinmux_IDX_9 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_gpio1_io09
#define DT_N_S_soc_S_gpio_401b8000_P_pinmux_IDX_9_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_gpio1_io09
#define DT_N_S_soc_S_gpio_401b8000_P_pinmux_IDX_9_EXISTS 1
#define DT_N_S_soc_S_gpio_401b8000_P_pinmux_IDX_10 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_gpio1_io10
#define DT_N_S_soc_S_gpio_401b8000_P_pinmux_IDX_10_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_gpio1_io10
#define DT_N_S_soc_S_gpio_401b8000_P_pinmux_IDX_10_EXISTS 1
#define DT_N_S_soc_S_gpio_401b8000_P_pinmux_IDX_11 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_gpio1_io11
#define DT_N_S_soc_S_gpio_401b8000_P_pinmux_IDX_11_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_gpio1_io11
#define DT_N_S_soc_S_gpio_401b8000_P_pinmux_IDX_11_EXISTS 1
#define DT_N_S_soc_S_gpio_401b8000_P_pinmux_IDX_12 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_gpio1_io12
#define DT_N_S_soc_S_gpio_401b8000_P_pinmux_IDX_12_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_gpio1_io12
#define DT_N_S_soc_S_gpio_401b8000_P_pinmux_IDX_12_EXISTS 1
#define DT_N_S_soc_S_gpio_401b8000_P_pinmux_IDX_13 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_gpio1_io13
#define DT_N_S_soc_S_gpio_401b8000_P_pinmux_IDX_13_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_gpio1_io13
#define DT_N_S_soc_S_gpio_401b8000_P_pinmux_IDX_13_EXISTS 1
#define DT_N_S_soc_S_gpio_401b8000_P_pinmux_IDX_14 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_gpio1_io14
#define DT_N_S_soc_S_gpio_401b8000_P_pinmux_IDX_14_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_gpio1_io14
#define DT_N_S_soc_S_gpio_401b8000_P_pinmux_IDX_14_EXISTS 1
#define DT_N_S_soc_S_gpio_401b8000_P_pinmux_IDX_15 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_gpio1_io15
#define DT_N_S_soc_S_gpio_401b8000_P_pinmux_IDX_15_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_gpio1_io15
#define DT_N_S_soc_S_gpio_401b8000_P_pinmux_IDX_15_EXISTS 1
#define DT_N_S_soc_S_gpio_401b8000_P_pinmux_IDX_16 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_00_gpio1_io16
#define DT_N_S_soc_S_gpio_401b8000_P_pinmux_IDX_16_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_00_gpio1_io16
#define DT_N_S_soc_S_gpio_401b8000_P_pinmux_IDX_16_EXISTS 1
#define DT_N_S_soc_S_gpio_401b8000_P_pinmux_IDX_17 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_01_gpio1_io17
#define DT_N_S_soc_S_gpio_401b8000_P_pinmux_IDX_17_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_01_gpio1_io17
#define DT_N_S_soc_S_gpio_401b8000_P_pinmux_IDX_17_EXISTS 1
#define DT_N_S_soc_S_gpio_401b8000_P_pinmux_IDX_18 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_02_gpio1_io18
#define DT_N_S_soc_S_gpio_401b8000_P_pinmux_IDX_18_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_02_gpio1_io18
#define DT_N_S_soc_S_gpio_401b8000_P_pinmux_IDX_18_EXISTS 1
#define DT_N_S_soc_S_gpio_401b8000_P_pinmux_IDX_19 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_03_gpio1_io19
#define DT_N_S_soc_S_gpio_401b8000_P_pinmux_IDX_19_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_03_gpio1_io19
#define DT_N_S_soc_S_gpio_401b8000_P_pinmux_IDX_19_EXISTS 1
#define DT_N_S_soc_S_gpio_401b8000_P_pinmux_IDX_20 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_04_gpio1_io20
#define DT_N_S_soc_S_gpio_401b8000_P_pinmux_IDX_20_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_04_gpio1_io20
#define DT_N_S_soc_S_gpio_401b8000_P_pinmux_IDX_20_EXISTS 1
#define DT_N_S_soc_S_gpio_401b8000_P_pinmux_IDX_21 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_05_gpio1_io21
#define DT_N_S_soc_S_gpio_401b8000_P_pinmux_IDX_21_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_05_gpio1_io21
#define DT_N_S_soc_S_gpio_401b8000_P_pinmux_IDX_21_EXISTS 1
#define DT_N_S_soc_S_gpio_401b8000_P_pinmux_IDX_22 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_06_gpio1_io22
#define DT_N_S_soc_S_gpio_401b8000_P_pinmux_IDX_22_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_06_gpio1_io22
#define DT_N_S_soc_S_gpio_401b8000_P_pinmux_IDX_22_EXISTS 1
#define DT_N_S_soc_S_gpio_401b8000_P_pinmux_IDX_23 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_gpio1_io23
#define DT_N_S_soc_S_gpio_401b8000_P_pinmux_IDX_23_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_gpio1_io23
#define DT_N_S_soc_S_gpio_401b8000_P_pinmux_IDX_23_EXISTS 1
#define DT_N_S_soc_S_gpio_401b8000_P_pinmux_IDX_24 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_gpio1_io24
#define DT_N_S_soc_S_gpio_401b8000_P_pinmux_IDX_24_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_gpio1_io24
#define DT_N_S_soc_S_gpio_401b8000_P_pinmux_IDX_24_EXISTS 1
#define DT_N_S_soc_S_gpio_401b8000_P_pinmux_IDX_25 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_gpio1_io25
#define DT_N_S_soc_S_gpio_401b8000_P_pinmux_IDX_25_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_gpio1_io25
#define DT_N_S_soc_S_gpio_401b8000_P_pinmux_IDX_25_EXISTS 1
#define DT_N_S_soc_S_gpio_401b8000_P_pinmux_IDX_26 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_gpio1_io26
#define DT_N_S_soc_S_gpio_401b8000_P_pinmux_IDX_26_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_gpio1_io26
#define DT_N_S_soc_S_gpio_401b8000_P_pinmux_IDX_26_EXISTS 1
#define DT_N_S_soc_S_gpio_401b8000_P_pinmux_IDX_27 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_gpio1_io27
#define DT_N_S_soc_S_gpio_401b8000_P_pinmux_IDX_27_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_gpio1_io27
#define DT_N_S_soc_S_gpio_401b8000_P_pinmux_IDX_27_EXISTS 1
#define DT_N_S_soc_S_gpio_401b8000_P_pinmux_IDX_28 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_12_gpio1_io28
#define DT_N_S_soc_S_gpio_401b8000_P_pinmux_IDX_28_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_12_gpio1_io28
#define DT_N_S_soc_S_gpio_401b8000_P_pinmux_IDX_28_EXISTS 1
#define DT_N_S_soc_S_gpio_401b8000_P_pinmux_IDX_29 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_13_gpio1_io29
#define DT_N_S_soc_S_gpio_401b8000_P_pinmux_IDX_29_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_13_gpio1_io29
#define DT_N_S_soc_S_gpio_401b8000_P_pinmux_IDX_29_EXISTS 1
#define DT_N_S_soc_S_gpio_401b8000_P_pinmux_IDX_30 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_gpio1_io30
#define DT_N_S_soc_S_gpio_401b8000_P_pinmux_IDX_30_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_gpio1_io30
#define DT_N_S_soc_S_gpio_401b8000_P_pinmux_IDX_30_EXISTS 1
#define DT_N_S_soc_S_gpio_401b8000_P_pinmux_IDX_31 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_gpio1_io31
#define DT_N_S_soc_S_gpio_401b8000_P_pinmux_IDX_31_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_gpio1_io31
#define DT_N_S_soc_S_gpio_401b8000_P_pinmux_IDX_31_EXISTS 1
#define DT_N_S_soc_S_gpio_401b8000_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_401b8000, pinmux, 0) \
	fn(DT_N_S_soc_S_gpio_401b8000, pinmux, 1) \
	fn(DT_N_S_soc_S_gpio_401b8000, pinmux, 2) \
	fn(DT_N_S_soc_S_gpio_401b8000, pinmux, 3) \
	fn(DT_N_S_soc_S_gpio_401b8000, pinmux, 4) \
	fn(DT_N_S_soc_S_gpio_401b8000, pinmux, 5) \
	fn(DT_N_S_soc_S_gpio_401b8000, pinmux, 6) \
	fn(DT_N_S_soc_S_gpio_401b8000, pinmux, 7) \
	fn(DT_N_S_soc_S_gpio_401b8000, pinmux, 8) \
	fn(DT_N_S_soc_S_gpio_401b8000, pinmux, 9) \
	fn(DT_N_S_soc_S_gpio_401b8000, pinmux, 10) \
	fn(DT_N_S_soc_S_gpio_401b8000, pinmux, 11) \
	fn(DT_N_S_soc_S_gpio_401b8000, pinmux, 12) \
	fn(DT_N_S_soc_S_gpio_401b8000, pinmux, 13) \
	fn(DT_N_S_soc_S_gpio_401b8000, pinmux, 14) \
	fn(DT_N_S_soc_S_gpio_401b8000, pinmux, 15) \
	fn(DT_N_S_soc_S_gpio_401b8000, pinmux, 16) \
	fn(DT_N_S_soc_S_gpio_401b8000, pinmux, 17) \
	fn(DT_N_S_soc_S_gpio_401b8000, pinmux, 18) \
	fn(DT_N_S_soc_S_gpio_401b8000, pinmux, 19) \
	fn(DT_N_S_soc_S_gpio_401b8000, pinmux, 20) \
	fn(DT_N_S_soc_S_gpio_401b8000, pinmux, 21) \
	fn(DT_N_S_soc_S_gpio_401b8000, pinmux, 22) \
	fn(DT_N_S_soc_S_gpio_401b8000, pinmux, 23) \
	fn(DT_N_S_soc_S_gpio_401b8000, pinmux, 24) \
	fn(DT_N_S_soc_S_gpio_401b8000, pinmux, 25) \
	fn(DT_N_S_soc_S_gpio_401b8000, pinmux, 26) \
	fn(DT_N_S_soc_S_gpio_401b8000, pinmux, 27) \
	fn(DT_N_S_soc_S_gpio_401b8000, pinmux, 28) \
	fn(DT_N_S_soc_S_gpio_401b8000, pinmux, 29) \
	fn(DT_N_S_soc_S_gpio_401b8000, pinmux, 30) \
	fn(DT_N_S_soc_S_gpio_401b8000, pinmux, 31)
#define DT_N_S_soc_S_gpio_401b8000_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_401b8000, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401b8000, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401b8000, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401b8000, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401b8000, pinmux, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401b8000, pinmux, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401b8000, pinmux, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401b8000, pinmux, 7) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401b8000, pinmux, 8) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401b8000, pinmux, 9) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401b8000, pinmux, 10) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401b8000, pinmux, 11) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401b8000, pinmux, 12) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401b8000, pinmux, 13) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401b8000, pinmux, 14) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401b8000, pinmux, 15) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401b8000, pinmux, 16) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401b8000, pinmux, 17) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401b8000, pinmux, 18) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401b8000, pinmux, 19) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401b8000, pinmux, 20) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401b8000, pinmux, 21) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401b8000, pinmux, 22) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401b8000, pinmux, 23) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401b8000, pinmux, 24) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401b8000, pinmux, 25) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401b8000, pinmux, 26) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401b8000, pinmux, 27) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401b8000, pinmux, 28) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401b8000, pinmux, 29) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401b8000, pinmux, 30) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401b8000, pinmux, 31)
#define DT_N_S_soc_S_gpio_401b8000_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_401b8000, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_401b8000, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_401b8000, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_401b8000, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_401b8000, pinmux, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_401b8000, pinmux, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_401b8000, pinmux, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_401b8000, pinmux, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_401b8000, pinmux, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_401b8000, pinmux, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_401b8000, pinmux, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_401b8000, pinmux, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_401b8000, pinmux, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_401b8000, pinmux, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_401b8000, pinmux, 14, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_401b8000, pinmux, 15, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_401b8000, pinmux, 16, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_401b8000, pinmux, 17, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_401b8000, pinmux, 18, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_401b8000, pinmux, 19, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_401b8000, pinmux, 20, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_401b8000, pinmux, 21, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_401b8000, pinmux, 22, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_401b8000, pinmux, 23, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_401b8000, pinmux, 24, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_401b8000, pinmux, 25, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_401b8000, pinmux, 26, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_401b8000, pinmux, 27, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_401b8000, pinmux, 28, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_401b8000, pinmux, 29, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_401b8000, pinmux, 30, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_401b8000, pinmux, 31, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_401b8000_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_401b8000, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401b8000, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401b8000, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401b8000, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401b8000, pinmux, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401b8000, pinmux, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401b8000, pinmux, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401b8000, pinmux, 7, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401b8000, pinmux, 8, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401b8000, pinmux, 9, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401b8000, pinmux, 10, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401b8000, pinmux, 11, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401b8000, pinmux, 12, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401b8000, pinmux, 13, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401b8000, pinmux, 14, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401b8000, pinmux, 15, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401b8000, pinmux, 16, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401b8000, pinmux, 17, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401b8000, pinmux, 18, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401b8000, pinmux, 19, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401b8000, pinmux, 20, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401b8000, pinmux, 21, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401b8000, pinmux, 22, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401b8000, pinmux, 23, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401b8000, pinmux, 24, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401b8000, pinmux, 25, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401b8000, pinmux, 26, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401b8000, pinmux, 27, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401b8000, pinmux, 28, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401b8000, pinmux, 29, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401b8000, pinmux, 30, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401b8000, pinmux, 31, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_401b8000_P_pinmux_LEN 32
#define DT_N_S_soc_S_gpio_401b8000_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_gpio_401b8000_P_gpio_controller 1
#define DT_N_S_soc_S_gpio_401b8000_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_gpio_401b8000_P_ngpios 32
#define DT_N_S_soc_S_gpio_401b8000_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_gpio_401b8000_P_compatible {"nxp,imx-gpio"}
#define DT_N_S_soc_S_gpio_401b8000_P_compatible_IDX_0 "nxp,imx-gpio"
#define DT_N_S_soc_S_gpio_401b8000_P_compatible_IDX_0_STRING_UNQUOTED nxp,imx-gpio
#define DT_N_S_soc_S_gpio_401b8000_P_compatible_IDX_0_STRING_TOKEN nxp_imx_gpio
#define DT_N_S_soc_S_gpio_401b8000_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_IMX_GPIO
#define DT_N_S_soc_S_gpio_401b8000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_401b8000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_401b8000, compatible, 0)
#define DT_N_S_soc_S_gpio_401b8000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_401b8000, compatible, 0)
#define DT_N_S_soc_S_gpio_401b8000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_401b8000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_401b8000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_401b8000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_401b8000_P_compatible_LEN 1
#define DT_N_S_soc_S_gpio_401b8000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_gpio_401b8000_P_interrupts {80 /* 0x50 */, 0 /* 0x0 */, 81 /* 0x51 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_gpio_401b8000_P_interrupts_IDX_0 80
#define DT_N_S_soc_S_gpio_401b8000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_401b8000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_gpio_401b8000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpio_401b8000_P_interrupts_IDX_2 81
#define DT_N_S_soc_S_gpio_401b8000_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_gpio_401b8000_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_gpio_401b8000_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_gpio_401b8000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_401b8000, interrupts, 0) \
	fn(DT_N_S_soc_S_gpio_401b8000, interrupts, 1) \
	fn(DT_N_S_soc_S_gpio_401b8000, interrupts, 2) \
	fn(DT_N_S_soc_S_gpio_401b8000, interrupts, 3)
#define DT_N_S_soc_S_gpio_401b8000_P_interrupts_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_401b8000, interrupts, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401b8000, interrupts, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401b8000, interrupts, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401b8000, interrupts, 3)
#define DT_N_S_soc_S_gpio_401b8000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_401b8000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_401b8000, interrupts, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_401b8000, interrupts, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_401b8000, interrupts, 3, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_401b8000_P_interrupts_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_401b8000, interrupts, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401b8000, interrupts, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401b8000, interrupts, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401b8000, interrupts, 3, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_401b8000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_gpio_401b8000_P_wakeup_source 0
#define DT_N_S_soc_S_gpio_401b8000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /leds/led-1
 *
 * Node identifier: DT_N_S_leds_S_led_1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_leds_S_led_1_PATH "/leds/led-1"

/* Node's name with unit-address: */
#define DT_N_S_leds_S_led_1_FULL_NAME "led-1"

/* Node parent (/leds) identifier: */
#define DT_N_S_leds_S_led_1_PARENT DT_N_S_leds

/* Node's index in its parent's list of children: */
#define DT_N_S_leds_S_led_1_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_leds_S_led_1_FOREACH_CHILD(fn) 
#define DT_N_S_leds_S_led_1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_leds_S_led_1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_leds_S_led_1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_leds_S_led_1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_leds_S_led_1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_leds_S_led_1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_leds_S_led_1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_leds_S_led_1_ORD 53

/* Ordinals for what this node depends on directly: */
#define DT_N_S_leds_S_led_1_REQUIRES_ORDS \
	19, /* /leds */ \
	52, /* /soc/gpio@401b8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_leds_S_led_1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_leds_S_led_1_EXISTS 1
#define DT_N_ALIAS_led0          DT_N_S_leds_S_led_1
#define DT_N_NODELABEL_green_led DT_N_S_leds_S_led_1

/* Macros for properties that are special in the specification: */
#define DT_N_S_leds_S_led_1_REG_NUM 0
#define DT_N_S_leds_S_led_1_RANGES_NUM 0
#define DT_N_S_leds_S_led_1_FOREACH_RANGE(fn) 
#define DT_N_S_leds_S_led_1_IRQ_NUM 0
#define DT_N_S_leds_S_led_1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_leds_S_led_1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_leds_S_led_1_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_leds_S_led_1_P_gpios_IDX_0_PH DT_N_S_soc_S_gpio_401b8000
#define DT_N_S_leds_S_led_1_P_gpios_IDX_0_VAL_pin 5
#define DT_N_S_leds_S_led_1_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_leds_S_led_1_P_gpios_IDX_0_VAL_flags 1
#define DT_N_S_leds_S_led_1_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_leds_S_led_1_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_led_1, gpios, 0)
#define DT_N_S_leds_S_led_1_P_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_leds_S_led_1, gpios, 0)
#define DT_N_S_leds_S_led_1_P_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_led_1, gpios, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_1_P_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led_1, gpios, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_1_P_gpios_LEN 1
#define DT_N_S_leds_S_led_1_P_gpios_EXISTS 1
#define DT_N_S_leds_S_led_1_P_label "User LD1"
#define DT_N_S_leds_S_led_1_P_label_STRING_UNQUOTED User LD1
#define DT_N_S_leds_S_led_1_P_label_STRING_TOKEN User_LD1
#define DT_N_S_leds_S_led_1_P_label_STRING_UPPER_TOKEN USER_LD1
#define DT_N_S_leds_S_led_1_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_led_1, label, 0) \
	fn(DT_N_S_leds_S_led_1, label, 1) \
	fn(DT_N_S_leds_S_led_1, label, 2) \
	fn(DT_N_S_leds_S_led_1, label, 3) \
	fn(DT_N_S_leds_S_led_1, label, 4) \
	fn(DT_N_S_leds_S_led_1, label, 5) \
	fn(DT_N_S_leds_S_led_1, label, 6) \
	fn(DT_N_S_leds_S_led_1, label, 7)
#define DT_N_S_leds_S_led_1_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_leds_S_led_1, label, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_leds_S_led_1, label, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_leds_S_led_1, label, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_leds_S_led_1, label, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_leds_S_led_1, label, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_leds_S_led_1, label, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_leds_S_led_1, label, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_leds_S_led_1, label, 7)
#define DT_N_S_leds_S_led_1_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_led_1, label, 0, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_1, label, 1, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_1, label, 2, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_1, label, 3, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_1, label, 4, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_1, label, 5, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_1, label, 6, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_1, label, 7, __VA_ARGS__)
#define DT_N_S_leds_S_led_1_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led_1, label, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_leds_S_led_1, label, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_leds_S_led_1, label, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_leds_S_led_1, label, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_leds_S_led_1, label, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_leds_S_led_1, label, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_leds_S_led_1, label, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_leds_S_led_1, label, 7, __VA_ARGS__)
#define DT_N_S_leds_S_led_1_P_label_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/pinctrl
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl
 *
 * Binding (compatible = nxp,mcux-rt-pinctrl):
 *   $ZEPHYR_BASE/dts/bindings/pinctrl/nxp,mcux-rt-pinctrl.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_PATH "/soc/iomuxc@401f8000/pinctrl"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_FULL_NAME "pinctrl"

/* Node parent (/soc/iomuxc@401f8000) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_PARENT DT_N_S_soc_S_iomuxc_401f8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_ptp) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_ptp) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_ptp, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_ptp, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_ptp) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_ptp) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_ptp, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_ptp, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_ORD 54

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_REQUIRES_ORDS \
	13, /* /soc/iomuxc@401f8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_SUPPORTS_ORDS \
	55, /* /soc/iomuxc@401f8000/pinctrl/pinmux_adc1 */ \
	101, /* /soc/iomuxc@401f8000/pinctrl/pinmux_lpi2c1 */ \
	105, /* /soc/iomuxc@401f8000/pinctrl/pinmux_lpi2c4 */ \
	118, /* /soc/iomuxc@401f8000/pinctrl/pinmux_sai3 */ \
	125, /* /soc/iomuxc@401f8000/pinctrl/pinmux_lpuart1 */ \
	126, /* /soc/iomuxc@401f8000/pinctrl/pinmux_lpuart1_sleep */ \
	128, /* /soc/iomuxc@401f8000/pinctrl/pinmux_lpuart2 */ \
	129, /* /soc/iomuxc@401f8000/pinctrl/pinmux_lpuart2_sleep */ \
	149, /* /soc/iomuxc@401f8000/pinctrl/pinmux_enet */ \
	151, /* /soc/iomuxc@401f8000/pinctrl/pinmux_ptp */ \
	197, /* /soc/iomuxc@401f8000/pinctrl/pinmux_flexcan1 */ \
	209, /* /soc/iomuxc@401f8000/pinctrl/pinmux_lpspi1 */ \
	228, /* /soc/iomuxc@401f8000/pinctrl/pinmux_usdhc1 */ \
	241, /* /soc/iomuxc@401f8000/pinctrl/pinmux_usdhc1_fast */ \
	244, /* /soc/iomuxc@401f8000/pinctrl/pinmux_usdhc1_med */ \
	247, /* /soc/iomuxc@401f8000/pinctrl/pinmux_usdhc1_slow */ \
	250, /* /soc/iomuxc@401f8000/pinctrl/pinmux_user */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_EXISTS 1
#define DT_N_INST_0_nxp_mcux_rt_pinctrl DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl
#define DT_N_NODELABEL_pinctrl          DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_COMPAT_MATCHES_nxp_mcux_rt_pinctrl 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_COMPAT_MODEL_IDX_0 "mcux-rt-pinctrl"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_P_status "okay"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl, status, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl, status, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl, status, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl, status, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl, status, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_P_status_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_P_compatible {"nxp,mcux-rt-pinctrl"}
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_P_compatible_IDX_0 "nxp,mcux-rt-pinctrl"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_P_compatible_IDX_0_STRING_UNQUOTED nxp,mcux-rt-pinctrl
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_P_compatible_IDX_0_STRING_TOKEN nxp_mcux_rt_pinctrl
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_MCUX_RT_PINCTRL
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl, compatible, 0)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl, compatible, 0)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_P_compatible_LEN 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_P_compatible_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_P_wakeup_source 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/pinctrl/pinmux_adc1
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_PATH "/soc/iomuxc@401f8000/pinctrl/pinmux_adc1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_FULL_NAME "pinmux_adc1"

/* Node parent (/soc/iomuxc@401f8000/pinctrl) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_PARENT DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_ORD 55

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_REQUIRES_ORDS \
	54, /* /soc/iomuxc@401f8000/pinctrl */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_SUPPORTS_ORDS \
	56, /* /soc/adc@400c4000 */ \
	179, /* /soc/iomuxc@401f8000/pinctrl/pinmux_adc1/group0 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_EXISTS 1
#define DT_N_NODELABEL_pinmux_adc1 DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /soc/adc@400c4000
 *
 * Node identifier: DT_N_S_soc_S_adc_400c4000
 *
 * Binding (compatible = nxp,mcux-12b1msps-sar):
 *   $ZEPHYR_BASE/dts/bindings/adc/nxp,mcux-12b1msps-sar.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_adc_400c4000_PATH "/soc/adc@400c4000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_adc_400c4000_FULL_NAME "adc@400c4000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_adc_400c4000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_adc_400c4000_CHILD_IDX 35

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_adc_400c4000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_adc_400c4000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_adc_400c4000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_adc_400c4000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_adc_400c4000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_adc_400c4000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_adc_400c4000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_adc_400c4000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_adc_400c4000_ORD 56

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_adc_400c4000_REQUIRES_ORDS \
	11, /* /soc */ \
	12, /* /soc/interrupt-controller@e000e100 */ \
	55, /* /soc/iomuxc@401f8000/pinctrl/pinmux_adc1 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_adc_400c4000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_adc_400c4000_EXISTS 1
#define DT_N_INST_0_nxp_mcux_12b1msps_sar DT_N_S_soc_S_adc_400c4000
#define DT_N_NODELABEL_adc1               DT_N_S_soc_S_adc_400c4000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_adc_400c4000_REG_NUM 1
#define DT_N_S_soc_S_adc_400c4000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_400c4000_REG_IDX_0_VAL_ADDRESS 1074544640 /* 0x400c4000 */
#define DT_N_S_soc_S_adc_400c4000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_adc_400c4000_RANGES_NUM 0
#define DT_N_S_soc_S_adc_400c4000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_adc_400c4000_IRQ_NUM 1
#define DT_N_S_soc_S_adc_400c4000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_400c4000_IRQ_IDX_0_VAL_irq 67
#define DT_N_S_soc_S_adc_400c4000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_adc_400c4000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_400c4000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_adc_400c4000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_adc_400c4000_COMPAT_MATCHES_nxp_mcux_12b1msps_sar 1
#define DT_N_S_soc_S_adc_400c4000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_400c4000_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_soc_S_adc_400c4000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_400c4000_COMPAT_MODEL_IDX_0 "mcux-12b1msps-sar"
#define DT_N_S_soc_S_adc_400c4000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_adc_400c4000_PINCTRL_NUM 1
#define DT_N_S_soc_S_adc_400c4000_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_400c4000_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_adc_400c4000_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_adc_400c4000_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_adc_400c4000_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_adc_400c4000_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1

/* Generic property macros: */
#define DT_N_S_soc_S_adc_400c4000_P_reg {1074544640 /* 0x400c4000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_adc_400c4000_P_reg_IDX_0 1074544640
#define DT_N_S_soc_S_adc_400c4000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_400c4000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_adc_400c4000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_adc_400c4000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_400c4000, reg, 0) \
	fn(DT_N_S_soc_S_adc_400c4000, reg, 1)
#define DT_N_S_soc_S_adc_400c4000_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_400c4000, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_400c4000, reg, 1)
#define DT_N_S_soc_S_adc_400c4000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_400c4000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_400c4000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_adc_400c4000_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_400c4000, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_400c4000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_adc_400c4000_P_reg_EXISTS 1
#define DT_N_S_soc_S_adc_400c4000_P_interrupts {67 /* 0x43 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_adc_400c4000_P_interrupts_IDX_0 67
#define DT_N_S_soc_S_adc_400c4000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_400c4000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_adc_400c4000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_adc_400c4000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_400c4000, interrupts, 0) \
	fn(DT_N_S_soc_S_adc_400c4000, interrupts, 1)
#define DT_N_S_soc_S_adc_400c4000_P_interrupts_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_400c4000, interrupts, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_400c4000, interrupts, 1)
#define DT_N_S_soc_S_adc_400c4000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_400c4000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_400c4000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_adc_400c4000_P_interrupts_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_400c4000, interrupts, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_400c4000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_adc_400c4000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_adc_400c4000_P_clk_divider 1
#define DT_N_S_soc_S_adc_400c4000_P_clk_divider_EXISTS 1
#define DT_N_S_soc_S_adc_400c4000_P_sample_period_mode 0
#define DT_N_S_soc_S_adc_400c4000_P_sample_period_mode_EXISTS 1
#define DT_N_S_soc_S_adc_400c4000_P_status "okay"
#define DT_N_S_soc_S_adc_400c4000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_adc_400c4000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_adc_400c4000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_adc_400c4000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_adc_400c4000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_adc_400c4000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_adc_400c4000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_400c4000, status, 0) \
	fn(DT_N_S_soc_S_adc_400c4000, status, 1) \
	fn(DT_N_S_soc_S_adc_400c4000, status, 2) \
	fn(DT_N_S_soc_S_adc_400c4000, status, 3)
#define DT_N_S_soc_S_adc_400c4000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_400c4000, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_400c4000, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_400c4000, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_400c4000, status, 3)
#define DT_N_S_soc_S_adc_400c4000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_400c4000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_400c4000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_400c4000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_400c4000, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_adc_400c4000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_400c4000, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_400c4000, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_400c4000, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_400c4000, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_adc_400c4000_P_status_EXISTS 1
#define DT_N_S_soc_S_adc_400c4000_P_compatible {"nxp,mcux-12b1msps-sar"}
#define DT_N_S_soc_S_adc_400c4000_P_compatible_IDX_0 "nxp,mcux-12b1msps-sar"
#define DT_N_S_soc_S_adc_400c4000_P_compatible_IDX_0_STRING_UNQUOTED nxp,mcux-12b1msps-sar
#define DT_N_S_soc_S_adc_400c4000_P_compatible_IDX_0_STRING_TOKEN nxp_mcux_12b1msps_sar
#define DT_N_S_soc_S_adc_400c4000_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_MCUX_12B1MSPS_SAR
#define DT_N_S_soc_S_adc_400c4000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_400c4000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_400c4000, compatible, 0)
#define DT_N_S_soc_S_adc_400c4000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_400c4000, compatible, 0)
#define DT_N_S_soc_S_adc_400c4000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_400c4000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_400c4000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_400c4000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_400c4000_P_compatible_LEN 1
#define DT_N_S_soc_S_adc_400c4000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_adc_400c4000_P_wakeup_source 0
#define DT_N_S_soc_S_adc_400c4000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_adc_400c4000_P_pinctrl_0_IDX_0 DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1
#define DT_N_S_soc_S_adc_400c4000_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1
#define DT_N_S_soc_S_adc_400c4000_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_400c4000_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_400c4000, pinctrl_0, 0)
#define DT_N_S_soc_S_adc_400c4000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_400c4000, pinctrl_0, 0)
#define DT_N_S_soc_S_adc_400c4000_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_400c4000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_400c4000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_400c4000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_400c4000_P_pinctrl_0_LEN 1
#define DT_N_S_soc_S_adc_400c4000_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_adc_400c4000_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_adc_400c4000_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_adc_400c4000_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_adc_400c4000_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_adc_400c4000_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_adc_400c4000_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_400c4000_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_400c4000, pinctrl_names, 0)
#define DT_N_S_soc_S_adc_400c4000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_400c4000, pinctrl_names, 0)
#define DT_N_S_soc_S_adc_400c4000_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_400c4000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_400c4000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_400c4000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_400c4000_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_adc_400c4000_P_pinctrl_names_EXISTS 1

/*
 * Devicetree node: /soc/adc@400c8000
 *
 * Node identifier: DT_N_S_soc_S_adc_400c8000
 *
 * Binding (compatible = nxp,mcux-12b1msps-sar):
 *   $ZEPHYR_BASE/dts/bindings/adc/nxp,mcux-12b1msps-sar.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_adc_400c8000_PATH "/soc/adc@400c8000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_adc_400c8000_FULL_NAME "adc@400c8000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_adc_400c8000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_adc_400c8000_CHILD_IDX 36

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_adc_400c8000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_adc_400c8000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_adc_400c8000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_adc_400c8000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_adc_400c8000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_adc_400c8000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_adc_400c8000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_adc_400c8000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_adc_400c8000_ORD 57

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_adc_400c8000_REQUIRES_ORDS \
	11, /* /soc */ \
	12, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_adc_400c8000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_adc_400c8000_EXISTS 1
#define DT_N_INST_1_nxp_mcux_12b1msps_sar DT_N_S_soc_S_adc_400c8000
#define DT_N_NODELABEL_adc2               DT_N_S_soc_S_adc_400c8000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_adc_400c8000_REG_NUM 1
#define DT_N_S_soc_S_adc_400c8000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_400c8000_REG_IDX_0_VAL_ADDRESS 1074561024 /* 0x400c8000 */
#define DT_N_S_soc_S_adc_400c8000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_adc_400c8000_RANGES_NUM 0
#define DT_N_S_soc_S_adc_400c8000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_adc_400c8000_IRQ_NUM 1
#define DT_N_S_soc_S_adc_400c8000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_400c8000_IRQ_IDX_0_VAL_irq 68
#define DT_N_S_soc_S_adc_400c8000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_adc_400c8000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_400c8000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_adc_400c8000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_adc_400c8000_COMPAT_MATCHES_nxp_mcux_12b1msps_sar 1
#define DT_N_S_soc_S_adc_400c8000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_400c8000_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_soc_S_adc_400c8000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_400c8000_COMPAT_MODEL_IDX_0 "mcux-12b1msps-sar"
#define DT_N_S_soc_S_adc_400c8000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_adc_400c8000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_adc_400c8000_P_reg {1074561024 /* 0x400c8000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_adc_400c8000_P_reg_IDX_0 1074561024
#define DT_N_S_soc_S_adc_400c8000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_400c8000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_adc_400c8000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_adc_400c8000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_400c8000, reg, 0) \
	fn(DT_N_S_soc_S_adc_400c8000, reg, 1)
#define DT_N_S_soc_S_adc_400c8000_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_400c8000, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_400c8000, reg, 1)
#define DT_N_S_soc_S_adc_400c8000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_400c8000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_400c8000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_adc_400c8000_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_400c8000, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_400c8000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_adc_400c8000_P_reg_EXISTS 1
#define DT_N_S_soc_S_adc_400c8000_P_interrupts {68 /* 0x44 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_adc_400c8000_P_interrupts_IDX_0 68
#define DT_N_S_soc_S_adc_400c8000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_400c8000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_adc_400c8000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_adc_400c8000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_400c8000, interrupts, 0) \
	fn(DT_N_S_soc_S_adc_400c8000, interrupts, 1)
#define DT_N_S_soc_S_adc_400c8000_P_interrupts_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_400c8000, interrupts, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_400c8000, interrupts, 1)
#define DT_N_S_soc_S_adc_400c8000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_400c8000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_400c8000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_adc_400c8000_P_interrupts_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_400c8000, interrupts, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_400c8000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_adc_400c8000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_adc_400c8000_P_clk_divider 1
#define DT_N_S_soc_S_adc_400c8000_P_clk_divider_EXISTS 1
#define DT_N_S_soc_S_adc_400c8000_P_sample_period_mode 0
#define DT_N_S_soc_S_adc_400c8000_P_sample_period_mode_EXISTS 1
#define DT_N_S_soc_S_adc_400c8000_P_status "disabled"
#define DT_N_S_soc_S_adc_400c8000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_adc_400c8000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_adc_400c8000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_adc_400c8000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_adc_400c8000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_adc_400c8000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_adc_400c8000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_400c8000, status, 0) \
	fn(DT_N_S_soc_S_adc_400c8000, status, 1) \
	fn(DT_N_S_soc_S_adc_400c8000, status, 2) \
	fn(DT_N_S_soc_S_adc_400c8000, status, 3) \
	fn(DT_N_S_soc_S_adc_400c8000, status, 4) \
	fn(DT_N_S_soc_S_adc_400c8000, status, 5) \
	fn(DT_N_S_soc_S_adc_400c8000, status, 6) \
	fn(DT_N_S_soc_S_adc_400c8000, status, 7)
#define DT_N_S_soc_S_adc_400c8000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_400c8000, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_400c8000, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_400c8000, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_400c8000, status, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_400c8000, status, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_400c8000, status, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_400c8000, status, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_400c8000, status, 7)
#define DT_N_S_soc_S_adc_400c8000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_400c8000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_400c8000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_400c8000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_400c8000, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_400c8000, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_400c8000, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_400c8000, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_400c8000, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_adc_400c8000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_400c8000, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_400c8000, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_400c8000, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_400c8000, status, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_400c8000, status, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_400c8000, status, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_400c8000, status, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_400c8000, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_adc_400c8000_P_status_EXISTS 1
#define DT_N_S_soc_S_adc_400c8000_P_compatible {"nxp,mcux-12b1msps-sar"}
#define DT_N_S_soc_S_adc_400c8000_P_compatible_IDX_0 "nxp,mcux-12b1msps-sar"
#define DT_N_S_soc_S_adc_400c8000_P_compatible_IDX_0_STRING_UNQUOTED nxp,mcux-12b1msps-sar
#define DT_N_S_soc_S_adc_400c8000_P_compatible_IDX_0_STRING_TOKEN nxp_mcux_12b1msps_sar
#define DT_N_S_soc_S_adc_400c8000_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_MCUX_12B1MSPS_SAR
#define DT_N_S_soc_S_adc_400c8000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_400c8000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_400c8000, compatible, 0)
#define DT_N_S_soc_S_adc_400c8000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_400c8000, compatible, 0)
#define DT_N_S_soc_S_adc_400c8000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_400c8000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_400c8000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_400c8000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_400c8000_P_compatible_LEN 1
#define DT_N_S_soc_S_adc_400c8000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_adc_400c8000_P_wakeup_source 0
#define DT_N_S_soc_S_adc_400c8000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /clock-rtc-xtal
 *
 * Node identifier: DT_N_S_clock_rtc_xtal
 *
 * Binding (compatible = fixed-clock):
 *   $ZEPHYR_BASE/dts/bindings/clock/fixed-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clock_rtc_xtal_PATH "/clock-rtc-xtal"

/* Node's name with unit-address: */
#define DT_N_S_clock_rtc_xtal_FULL_NAME "clock-rtc-xtal"

/* Node parent (/) identifier: */
#define DT_N_S_clock_rtc_xtal_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_clock_rtc_xtal_CHILD_IDX 6

/* Helper macros for child nodes of this node. */
#define DT_N_S_clock_rtc_xtal_FOREACH_CHILD(fn) 
#define DT_N_S_clock_rtc_xtal_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_clock_rtc_xtal_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_clock_rtc_xtal_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_clock_rtc_xtal_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_clock_rtc_xtal_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_clock_rtc_xtal_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_clock_rtc_xtal_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_clock_rtc_xtal_ORD 58

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clock_rtc_xtal_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clock_rtc_xtal_SUPPORTS_ORDS \
	60, /* /soc/ccm@400fc000 */

/* Existence and alternate IDs: */
#define DT_N_S_clock_rtc_xtal_EXISTS 1
#define DT_N_INST_2_fixed_clock DT_N_S_clock_rtc_xtal
#define DT_N_NODELABEL_rtc_xtal DT_N_S_clock_rtc_xtal

/* Macros for properties that are special in the specification: */
#define DT_N_S_clock_rtc_xtal_REG_NUM 0
#define DT_N_S_clock_rtc_xtal_RANGES_NUM 0
#define DT_N_S_clock_rtc_xtal_FOREACH_RANGE(fn) 
#define DT_N_S_clock_rtc_xtal_IRQ_NUM 0
#define DT_N_S_clock_rtc_xtal_COMPAT_MATCHES_fixed_clock 1
#define DT_N_S_clock_rtc_xtal_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clock_rtc_xtal_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_clock_rtc_xtal_P_clock_frequency 32768
#define DT_N_S_clock_rtc_xtal_P_clock_frequency_EXISTS 1

/*
 * Devicetree node: /clock-xtal
 *
 * Node identifier: DT_N_S_clock_xtal
 *
 * Binding (compatible = fixed-clock):
 *   $ZEPHYR_BASE/dts/bindings/clock/fixed-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clock_xtal_PATH "/clock-xtal"

/* Node's name with unit-address: */
#define DT_N_S_clock_xtal_FULL_NAME "clock-xtal"

/* Node parent (/) identifier: */
#define DT_N_S_clock_xtal_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_clock_xtal_CHILD_IDX 5

/* Helper macros for child nodes of this node. */
#define DT_N_S_clock_xtal_FOREACH_CHILD(fn) 
#define DT_N_S_clock_xtal_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_clock_xtal_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_clock_xtal_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_clock_xtal_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_clock_xtal_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_clock_xtal_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_clock_xtal_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_clock_xtal_ORD 59

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clock_xtal_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clock_xtal_SUPPORTS_ORDS \
	60, /* /soc/ccm@400fc000 */

/* Existence and alternate IDs: */
#define DT_N_S_clock_xtal_EXISTS 1
#define DT_N_INST_1_fixed_clock DT_N_S_clock_xtal
#define DT_N_NODELABEL_xtal     DT_N_S_clock_xtal

/* Macros for properties that are special in the specification: */
#define DT_N_S_clock_xtal_REG_NUM 0
#define DT_N_S_clock_xtal_RANGES_NUM 0
#define DT_N_S_clock_xtal_FOREACH_RANGE(fn) 
#define DT_N_S_clock_xtal_IRQ_NUM 0
#define DT_N_S_clock_xtal_COMPAT_MATCHES_fixed_clock 1
#define DT_N_S_clock_xtal_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clock_xtal_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_clock_xtal_P_clock_frequency 24000000
#define DT_N_S_clock_xtal_P_clock_frequency_EXISTS 1

/*
 * Devicetree node: /soc/ccm@400fc000
 *
 * Node identifier: DT_N_S_soc_S_ccm_400fc000
 *
 * Binding (compatible = nxp,imx-ccm):
 *   $ZEPHYR_BASE/dts/bindings/clock/nxp,imx-ccm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_ccm_400fc000_PATH "/soc/ccm@400fc000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_ccm_400fc000_FULL_NAME "ccm@400fc000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_ccm_400fc000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_ccm_400fc000_CHILD_IDX 11

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_ccm_400fc000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_ccm_400fc000_S_arm_podf) fn(DT_N_S_soc_S_ccm_400fc000_S_ahb_podf) fn(DT_N_S_soc_S_ccm_400fc000_S_ipg_podf)
#define DT_N_S_soc_S_ccm_400fc000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_ccm_400fc000_S_arm_podf) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ccm_400fc000_S_ahb_podf) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ccm_400fc000_S_ipg_podf)
#define DT_N_S_soc_S_ccm_400fc000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_ccm_400fc000_S_arm_podf, __VA_ARGS__) fn(DT_N_S_soc_S_ccm_400fc000_S_ahb_podf, __VA_ARGS__) fn(DT_N_S_soc_S_ccm_400fc000_S_ipg_podf, __VA_ARGS__)
#define DT_N_S_soc_S_ccm_400fc000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_ccm_400fc000_S_arm_podf, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ccm_400fc000_S_ahb_podf, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ccm_400fc000_S_ipg_podf, __VA_ARGS__)
#define DT_N_S_soc_S_ccm_400fc000_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_ccm_400fc000_S_arm_podf) fn(DT_N_S_soc_S_ccm_400fc000_S_ahb_podf) fn(DT_N_S_soc_S_ccm_400fc000_S_ipg_podf)
#define DT_N_S_soc_S_ccm_400fc000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_ccm_400fc000_S_arm_podf) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ccm_400fc000_S_ahb_podf) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ccm_400fc000_S_ipg_podf)
#define DT_N_S_soc_S_ccm_400fc000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_ccm_400fc000_S_arm_podf, __VA_ARGS__) fn(DT_N_S_soc_S_ccm_400fc000_S_ahb_podf, __VA_ARGS__) fn(DT_N_S_soc_S_ccm_400fc000_S_ipg_podf, __VA_ARGS__)
#define DT_N_S_soc_S_ccm_400fc000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_ccm_400fc000_S_arm_podf, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ccm_400fc000_S_ahb_podf, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ccm_400fc000_S_ipg_podf, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_ccm_400fc000_ORD 60

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_ccm_400fc000_REQUIRES_ORDS \
	11, /* /soc */ \
	58, /* /clock-rtc-xtal */ \
	59, /* /clock-xtal */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_ccm_400fc000_SUPPORTS_ORDS \
	61, /* /soc/can@401d0000 */ \
	62, /* /soc/can@401d4000 */ \
	63, /* /soc/can@401d8000 */ \
	100, /* /soc/gpt@401f0000 */ \
	102, /* /soc/i2c@403f0000 */ \
	103, /* /soc/i2c@403f4000 */ \
	104, /* /soc/i2c@403f8000 */ \
	106, /* /soc/i2c@403fc000 */ \
	114, /* /soc/dma-controller@400e8000 */ \
	116, /* /soc/sai@40384000 */ \
	117, /* /soc/sai@40388000 */ \
	119, /* /soc/sai@4038c000 */ \
	121, /* /soc/spi@40398000 */ \
	122, /* /soc/spi@4039c000 */ \
	123, /* /soc/spi@403a0000 */ \
	127, /* /soc/uart@40184000 */ \
	130, /* /soc/uart@40188000 */ \
	131, /* /soc/uart@4018c000 */ \
	132, /* /soc/uart@40190000 */ \
	133, /* /soc/uart@40194000 */ \
	134, /* /soc/uart@40198000 */ \
	135, /* /soc/uart@4019c000 */ \
	136, /* /soc/uart@401a0000 */ \
	140, /* /soc/usdhc@402c4000 */ \
	146, /* /soc/ccm@400fc000/ahb-podf */ \
	147, /* /soc/ccm@400fc000/arm-podf */ \
	148, /* /soc/ccm@400fc000/ipg-podf */ \
	154, /* /soc/flexpwm@403dc000/pwm0 */ \
	155, /* /soc/flexpwm@403dc000/pwm1 */ \
	156, /* /soc/flexpwm@403dc000/pwm2 */ \
	157, /* /soc/flexpwm@403dc000/pwm3 */ \
	159, /* /soc/flexpwm@403e0000/pwm0 */ \
	160, /* /soc/flexpwm@403e0000/pwm1 */ \
	161, /* /soc/flexpwm@403e0000/pwm2 */ \
	162, /* /soc/flexpwm@403e0000/pwm3 */ \
	164, /* /soc/flexpwm@403e4000/pwm0 */ \
	165, /* /soc/flexpwm@403e4000/pwm1 */ \
	166, /* /soc/flexpwm@403e4000/pwm2 */ \
	167, /* /soc/flexpwm@403e4000/pwm3 */ \
	169, /* /soc/flexpwm@403e8000/pwm0 */ \
	170, /* /soc/flexpwm@403e8000/pwm1 */ \
	171, /* /soc/flexpwm@403e8000/pwm2 */ \
	172, /* /soc/flexpwm@403e8000/pwm3 */ \
	253, /* /soc/qtmr@401dc000 */ \
	258, /* /soc/qtmr@401e0000 */ \
	263, /* /soc/qtmr@401e4000 */ \
	268, /* /soc/qtmr@401e8000 */ \
	283, /* /soc/spi@40394000 */ \
	314, /* /soc/usdhc@402c0000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_ccm_400fc000_EXISTS 1
#define DT_N_INST_0_nxp_imx_ccm DT_N_S_soc_S_ccm_400fc000
#define DT_N_NODELABEL_ccm      DT_N_S_soc_S_ccm_400fc000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_ccm_400fc000_REG_NUM 1
#define DT_N_S_soc_S_ccm_400fc000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ccm_400fc000_REG_IDX_0_VAL_ADDRESS 1074774016 /* 0x400fc000 */
#define DT_N_S_soc_S_ccm_400fc000_REG_IDX_0_VAL_SIZE 16384 /* 0x4000 */
#define DT_N_S_soc_S_ccm_400fc000_RANGES_NUM 0
#define DT_N_S_soc_S_ccm_400fc000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_ccm_400fc000_IRQ_NUM 0
#define DT_N_S_soc_S_ccm_400fc000_COMPAT_MATCHES_nxp_imx_ccm 1
#define DT_N_S_soc_S_ccm_400fc000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ccm_400fc000_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_soc_S_ccm_400fc000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ccm_400fc000_COMPAT_MODEL_IDX_0 "imx-ccm"
#define DT_N_S_soc_S_ccm_400fc000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_ccm_400fc000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_ccm_400fc000_P_reg {1074774016 /* 0x400fc000 */, 16384 /* 0x4000 */}
#define DT_N_S_soc_S_ccm_400fc000_P_reg_IDX_0 1074774016
#define DT_N_S_soc_S_ccm_400fc000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ccm_400fc000_P_reg_IDX_1 16384
#define DT_N_S_soc_S_ccm_400fc000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_ccm_400fc000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ccm_400fc000, reg, 0) \
	fn(DT_N_S_soc_S_ccm_400fc000, reg, 1)
#define DT_N_S_soc_S_ccm_400fc000_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_ccm_400fc000, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_ccm_400fc000, reg, 1)
#define DT_N_S_soc_S_ccm_400fc000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_ccm_400fc000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_ccm_400fc000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_ccm_400fc000_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_ccm_400fc000, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_ccm_400fc000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_ccm_400fc000_P_reg_EXISTS 1
#define DT_N_S_soc_S_ccm_400fc000_P_compatible {"nxp,imx-ccm"}
#define DT_N_S_soc_S_ccm_400fc000_P_compatible_IDX_0 "nxp,imx-ccm"
#define DT_N_S_soc_S_ccm_400fc000_P_compatible_IDX_0_STRING_UNQUOTED nxp,imx-ccm
#define DT_N_S_soc_S_ccm_400fc000_P_compatible_IDX_0_STRING_TOKEN nxp_imx_ccm
#define DT_N_S_soc_S_ccm_400fc000_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_IMX_CCM
#define DT_N_S_soc_S_ccm_400fc000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ccm_400fc000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ccm_400fc000, compatible, 0)
#define DT_N_S_soc_S_ccm_400fc000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_ccm_400fc000, compatible, 0)
#define DT_N_S_soc_S_ccm_400fc000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_ccm_400fc000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ccm_400fc000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_ccm_400fc000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ccm_400fc000_P_compatible_LEN 1
#define DT_N_S_soc_S_ccm_400fc000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_ccm_400fc000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ccm_400fc000_P_clocks_IDX_0_PH DT_N_S_clock_xtal
#define DT_N_S_soc_S_ccm_400fc000_P_clocks_IDX_0_NAME "xtal"
#define DT_N_S_soc_S_ccm_400fc000_P_clocks_NAME_xtal_PH DT_N_S_clock_xtal
#define DT_N_S_soc_S_ccm_400fc000_P_clocks_NAME_xtal_EXISTS 1
#define DT_N_S_soc_S_ccm_400fc000_P_clocks_IDX_1_EXISTS 1
#define DT_N_S_soc_S_ccm_400fc000_P_clocks_IDX_1_PH DT_N_S_clock_rtc_xtal
#define DT_N_S_soc_S_ccm_400fc000_P_clocks_IDX_1_NAME "rtc-xtal"
#define DT_N_S_soc_S_ccm_400fc000_P_clocks_NAME_rtc_xtal_PH DT_N_S_clock_rtc_xtal
#define DT_N_S_soc_S_ccm_400fc000_P_clocks_NAME_rtc_xtal_EXISTS 1
#define DT_N_S_soc_S_ccm_400fc000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ccm_400fc000, clocks, 0) \
	fn(DT_N_S_soc_S_ccm_400fc000, clocks, 1)
#define DT_N_S_soc_S_ccm_400fc000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_ccm_400fc000, clocks, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_ccm_400fc000, clocks, 1)
#define DT_N_S_soc_S_ccm_400fc000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_ccm_400fc000, clocks, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_ccm_400fc000, clocks, 1, __VA_ARGS__)
#define DT_N_S_soc_S_ccm_400fc000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_ccm_400fc000, clocks, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_ccm_400fc000, clocks, 1, __VA_ARGS__)
#define DT_N_S_soc_S_ccm_400fc000_P_clocks_LEN 2
#define DT_N_S_soc_S_ccm_400fc000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_ccm_400fc000_P_clock_names {"xtal", "rtc-xtal"}
#define DT_N_S_soc_S_ccm_400fc000_P_clock_names_IDX_0 "xtal"
#define DT_N_S_soc_S_ccm_400fc000_P_clock_names_IDX_0_STRING_UNQUOTED xtal
#define DT_N_S_soc_S_ccm_400fc000_P_clock_names_IDX_0_STRING_TOKEN xtal
#define DT_N_S_soc_S_ccm_400fc000_P_clock_names_IDX_0_STRING_UPPER_TOKEN XTAL
#define DT_N_S_soc_S_ccm_400fc000_P_clock_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ccm_400fc000_P_clock_names_IDX_1 "rtc-xtal"
#define DT_N_S_soc_S_ccm_400fc000_P_clock_names_IDX_1_STRING_UNQUOTED rtc-xtal
#define DT_N_S_soc_S_ccm_400fc000_P_clock_names_IDX_1_STRING_TOKEN rtc_xtal
#define DT_N_S_soc_S_ccm_400fc000_P_clock_names_IDX_1_STRING_UPPER_TOKEN RTC_XTAL
#define DT_N_S_soc_S_ccm_400fc000_P_clock_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_ccm_400fc000_P_clock_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ccm_400fc000, clock_names, 0) \
	fn(DT_N_S_soc_S_ccm_400fc000, clock_names, 1)
#define DT_N_S_soc_S_ccm_400fc000_P_clock_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_ccm_400fc000, clock_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_ccm_400fc000, clock_names, 1)
#define DT_N_S_soc_S_ccm_400fc000_P_clock_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_ccm_400fc000, clock_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_ccm_400fc000, clock_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_ccm_400fc000_P_clock_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_ccm_400fc000, clock_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_ccm_400fc000, clock_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_ccm_400fc000_P_clock_names_LEN 2
#define DT_N_S_soc_S_ccm_400fc000_P_clock_names_EXISTS 1
#define DT_N_S_soc_S_ccm_400fc000_P_wakeup_source 0
#define DT_N_S_soc_S_ccm_400fc000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/can@401d0000
 *
 * Node identifier: DT_N_S_soc_S_can_401d0000
 *
 * Binding (compatible = nxp,kinetis-flexcan):
 *   $ZEPHYR_BASE/dts/bindings/can/nxp,kinetis-flexcan.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_can_401d0000_PATH "/soc/can@401d0000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_can_401d0000_FULL_NAME "can@401d0000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_can_401d0000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_can_401d0000_CHILD_IDX 50

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_can_401d0000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_can_401d0000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_can_401d0000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_can_401d0000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_can_401d0000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_can_401d0000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_can_401d0000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_can_401d0000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_can_401d0000_ORD 61

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_can_401d0000_REQUIRES_ORDS \
	11, /* /soc */ \
	12, /* /soc/interrupt-controller@e000e100 */ \
	60, /* /soc/ccm@400fc000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_can_401d0000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_can_401d0000_EXISTS 1
#define DT_N_INST_0_nxp_kinetis_flexcan DT_N_S_soc_S_can_401d0000
#define DT_N_NODELABEL_flexcan1         DT_N_S_soc_S_can_401d0000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_can_401d0000_REG_NUM 1
#define DT_N_S_soc_S_can_401d0000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_401d0000_REG_IDX_0_VAL_ADDRESS 1075642368 /* 0x401d0000 */
#define DT_N_S_soc_S_can_401d0000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_can_401d0000_RANGES_NUM 0
#define DT_N_S_soc_S_can_401d0000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_can_401d0000_IRQ_NUM 1
#define DT_N_S_soc_S_can_401d0000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_401d0000_IRQ_IDX_0_VAL_irq 36
#define DT_N_S_soc_S_can_401d0000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_can_401d0000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_401d0000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_can_401d0000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_can_401d0000_IRQ_NAME_common_VAL_irq DT_N_S_soc_S_can_401d0000_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_can_401d0000_IRQ_NAME_common_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_can_401d0000_IRQ_NAME_common_VAL_priority DT_N_S_soc_S_can_401d0000_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_can_401d0000_IRQ_NAME_common_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_can_401d0000_COMPAT_MATCHES_nxp_kinetis_flexcan 1
#define DT_N_S_soc_S_can_401d0000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_401d0000_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_soc_S_can_401d0000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_401d0000_COMPAT_MODEL_IDX_0 "kinetis-flexcan"
#define DT_N_S_soc_S_can_401d0000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_can_401d0000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_can_401d0000_P_reg {1075642368 /* 0x401d0000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_can_401d0000_P_reg_IDX_0 1075642368
#define DT_N_S_soc_S_can_401d0000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_401d0000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_can_401d0000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_can_401d0000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_can_401d0000, reg, 0) \
	fn(DT_N_S_soc_S_can_401d0000, reg, 1)
#define DT_N_S_soc_S_can_401d0000_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_can_401d0000, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_401d0000, reg, 1)
#define DT_N_S_soc_S_can_401d0000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_can_401d0000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_401d0000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_can_401d0000_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_can_401d0000, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_401d0000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_can_401d0000_P_reg_EXISTS 1
#define DT_N_S_soc_S_can_401d0000_P_interrupts {36 /* 0x24 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_can_401d0000_P_interrupts_IDX_0 36
#define DT_N_S_soc_S_can_401d0000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_401d0000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_can_401d0000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_can_401d0000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_can_401d0000, interrupts, 0) \
	fn(DT_N_S_soc_S_can_401d0000, interrupts, 1)
#define DT_N_S_soc_S_can_401d0000_P_interrupts_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_can_401d0000, interrupts, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_401d0000, interrupts, 1)
#define DT_N_S_soc_S_can_401d0000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_can_401d0000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_401d0000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_can_401d0000_P_interrupts_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_can_401d0000, interrupts, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_401d0000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_can_401d0000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_can_401d0000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_401d0000_P_clocks_IDX_0_PH DT_N_S_soc_S_ccm_400fc000
#define DT_N_S_soc_S_can_401d0000_P_clocks_IDX_0_VAL_name 2304
#define DT_N_S_soc_S_can_401d0000_P_clocks_IDX_0_VAL_name_EXISTS 1
#define DT_N_S_soc_S_can_401d0000_P_clocks_IDX_0_VAL_offset 104
#define DT_N_S_soc_S_can_401d0000_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_can_401d0000_P_clocks_IDX_0_VAL_bits 14
#define DT_N_S_soc_S_can_401d0000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_can_401d0000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_can_401d0000, clocks, 0)
#define DT_N_S_soc_S_can_401d0000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_can_401d0000, clocks, 0)
#define DT_N_S_soc_S_can_401d0000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_can_401d0000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_can_401d0000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_can_401d0000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_can_401d0000_P_clocks_LEN 1
#define DT_N_S_soc_S_can_401d0000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_can_401d0000_P_clk_source 2
#define DT_N_S_soc_S_can_401d0000_P_clk_source_EXISTS 1
#define DT_N_S_soc_S_can_401d0000_P_sjw 1
#define DT_N_S_soc_S_can_401d0000_P_sjw_EXISTS 1
#define DT_N_S_soc_S_can_401d0000_P_sample_point 875
#define DT_N_S_soc_S_can_401d0000_P_sample_point_EXISTS 1
#define DT_N_S_soc_S_can_401d0000_P_status "disabled"
#define DT_N_S_soc_S_can_401d0000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_can_401d0000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_can_401d0000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_can_401d0000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_can_401d0000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_can_401d0000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_can_401d0000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_can_401d0000, status, 0) \
	fn(DT_N_S_soc_S_can_401d0000, status, 1) \
	fn(DT_N_S_soc_S_can_401d0000, status, 2) \
	fn(DT_N_S_soc_S_can_401d0000, status, 3) \
	fn(DT_N_S_soc_S_can_401d0000, status, 4) \
	fn(DT_N_S_soc_S_can_401d0000, status, 5) \
	fn(DT_N_S_soc_S_can_401d0000, status, 6) \
	fn(DT_N_S_soc_S_can_401d0000, status, 7)
#define DT_N_S_soc_S_can_401d0000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_can_401d0000, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_401d0000, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_401d0000, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_401d0000, status, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_401d0000, status, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_401d0000, status, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_401d0000, status, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_401d0000, status, 7)
#define DT_N_S_soc_S_can_401d0000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_can_401d0000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_401d0000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_401d0000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_401d0000, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_401d0000, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_401d0000, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_401d0000, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_401d0000, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_can_401d0000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_can_401d0000, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_401d0000, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_401d0000, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_401d0000, status, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_401d0000, status, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_401d0000, status, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_401d0000, status, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_401d0000, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_can_401d0000_P_status_EXISTS 1
#define DT_N_S_soc_S_can_401d0000_P_compatible {"nxp,kinetis-flexcan"}
#define DT_N_S_soc_S_can_401d0000_P_compatible_IDX_0 "nxp,kinetis-flexcan"
#define DT_N_S_soc_S_can_401d0000_P_compatible_IDX_0_STRING_UNQUOTED nxp,kinetis-flexcan
#define DT_N_S_soc_S_can_401d0000_P_compatible_IDX_0_STRING_TOKEN nxp_kinetis_flexcan
#define DT_N_S_soc_S_can_401d0000_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_KINETIS_FLEXCAN
#define DT_N_S_soc_S_can_401d0000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_401d0000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_can_401d0000, compatible, 0)
#define DT_N_S_soc_S_can_401d0000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_can_401d0000, compatible, 0)
#define DT_N_S_soc_S_can_401d0000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_can_401d0000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_can_401d0000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_can_401d0000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_can_401d0000_P_compatible_LEN 1
#define DT_N_S_soc_S_can_401d0000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_can_401d0000_P_interrupt_names {"common"}
#define DT_N_S_soc_S_can_401d0000_P_interrupt_names_IDX_0 "common"
#define DT_N_S_soc_S_can_401d0000_P_interrupt_names_IDX_0_STRING_UNQUOTED common
#define DT_N_S_soc_S_can_401d0000_P_interrupt_names_IDX_0_STRING_TOKEN common
#define DT_N_S_soc_S_can_401d0000_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN COMMON
#define DT_N_S_soc_S_can_401d0000_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_401d0000_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_can_401d0000, interrupt_names, 0)
#define DT_N_S_soc_S_can_401d0000_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_can_401d0000, interrupt_names, 0)
#define DT_N_S_soc_S_can_401d0000_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_can_401d0000, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_can_401d0000_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_can_401d0000, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_can_401d0000_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_can_401d0000_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_can_401d0000_P_wakeup_source 0
#define DT_N_S_soc_S_can_401d0000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/can@401d4000
 *
 * Node identifier: DT_N_S_soc_S_can_401d4000
 *
 * Binding (compatible = nxp,kinetis-flexcan):
 *   $ZEPHYR_BASE/dts/bindings/can/nxp,kinetis-flexcan.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_can_401d4000_PATH "/soc/can@401d4000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_can_401d4000_FULL_NAME "can@401d4000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_can_401d4000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_can_401d4000_CHILD_IDX 51

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_can_401d4000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_can_401d4000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_can_401d4000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_can_401d4000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_can_401d4000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_can_401d4000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_can_401d4000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_can_401d4000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_can_401d4000_ORD 62

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_can_401d4000_REQUIRES_ORDS \
	11, /* /soc */ \
	12, /* /soc/interrupt-controller@e000e100 */ \
	60, /* /soc/ccm@400fc000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_can_401d4000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_can_401d4000_EXISTS 1
#define DT_N_INST_1_nxp_kinetis_flexcan DT_N_S_soc_S_can_401d4000
#define DT_N_NODELABEL_flexcan2         DT_N_S_soc_S_can_401d4000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_can_401d4000_REG_NUM 1
#define DT_N_S_soc_S_can_401d4000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_401d4000_REG_IDX_0_VAL_ADDRESS 1075658752 /* 0x401d4000 */
#define DT_N_S_soc_S_can_401d4000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_can_401d4000_RANGES_NUM 0
#define DT_N_S_soc_S_can_401d4000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_can_401d4000_IRQ_NUM 1
#define DT_N_S_soc_S_can_401d4000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_401d4000_IRQ_IDX_0_VAL_irq 37
#define DT_N_S_soc_S_can_401d4000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_can_401d4000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_401d4000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_can_401d4000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_can_401d4000_IRQ_NAME_common_VAL_irq DT_N_S_soc_S_can_401d4000_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_can_401d4000_IRQ_NAME_common_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_can_401d4000_IRQ_NAME_common_VAL_priority DT_N_S_soc_S_can_401d4000_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_can_401d4000_IRQ_NAME_common_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_can_401d4000_COMPAT_MATCHES_nxp_kinetis_flexcan 1
#define DT_N_S_soc_S_can_401d4000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_401d4000_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_soc_S_can_401d4000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_401d4000_COMPAT_MODEL_IDX_0 "kinetis-flexcan"
#define DT_N_S_soc_S_can_401d4000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_can_401d4000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_can_401d4000_P_reg {1075658752 /* 0x401d4000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_can_401d4000_P_reg_IDX_0 1075658752
#define DT_N_S_soc_S_can_401d4000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_401d4000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_can_401d4000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_can_401d4000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_can_401d4000, reg, 0) \
	fn(DT_N_S_soc_S_can_401d4000, reg, 1)
#define DT_N_S_soc_S_can_401d4000_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_can_401d4000, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_401d4000, reg, 1)
#define DT_N_S_soc_S_can_401d4000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_can_401d4000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_401d4000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_can_401d4000_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_can_401d4000, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_401d4000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_can_401d4000_P_reg_EXISTS 1
#define DT_N_S_soc_S_can_401d4000_P_interrupts {37 /* 0x25 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_can_401d4000_P_interrupts_IDX_0 37
#define DT_N_S_soc_S_can_401d4000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_401d4000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_can_401d4000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_can_401d4000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_can_401d4000, interrupts, 0) \
	fn(DT_N_S_soc_S_can_401d4000, interrupts, 1)
#define DT_N_S_soc_S_can_401d4000_P_interrupts_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_can_401d4000, interrupts, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_401d4000, interrupts, 1)
#define DT_N_S_soc_S_can_401d4000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_can_401d4000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_401d4000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_can_401d4000_P_interrupts_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_can_401d4000, interrupts, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_401d4000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_can_401d4000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_can_401d4000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_401d4000_P_clocks_IDX_0_PH DT_N_S_soc_S_ccm_400fc000
#define DT_N_S_soc_S_can_401d4000_P_clocks_IDX_0_VAL_name 2304
#define DT_N_S_soc_S_can_401d4000_P_clocks_IDX_0_VAL_name_EXISTS 1
#define DT_N_S_soc_S_can_401d4000_P_clocks_IDX_0_VAL_offset 104
#define DT_N_S_soc_S_can_401d4000_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_can_401d4000_P_clocks_IDX_0_VAL_bits 18
#define DT_N_S_soc_S_can_401d4000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_can_401d4000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_can_401d4000, clocks, 0)
#define DT_N_S_soc_S_can_401d4000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_can_401d4000, clocks, 0)
#define DT_N_S_soc_S_can_401d4000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_can_401d4000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_can_401d4000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_can_401d4000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_can_401d4000_P_clocks_LEN 1
#define DT_N_S_soc_S_can_401d4000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_can_401d4000_P_clk_source 2
#define DT_N_S_soc_S_can_401d4000_P_clk_source_EXISTS 1
#define DT_N_S_soc_S_can_401d4000_P_sjw 1
#define DT_N_S_soc_S_can_401d4000_P_sjw_EXISTS 1
#define DT_N_S_soc_S_can_401d4000_P_sample_point 875
#define DT_N_S_soc_S_can_401d4000_P_sample_point_EXISTS 1
#define DT_N_S_soc_S_can_401d4000_P_status "disabled"
#define DT_N_S_soc_S_can_401d4000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_can_401d4000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_can_401d4000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_can_401d4000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_can_401d4000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_can_401d4000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_can_401d4000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_can_401d4000, status, 0) \
	fn(DT_N_S_soc_S_can_401d4000, status, 1) \
	fn(DT_N_S_soc_S_can_401d4000, status, 2) \
	fn(DT_N_S_soc_S_can_401d4000, status, 3) \
	fn(DT_N_S_soc_S_can_401d4000, status, 4) \
	fn(DT_N_S_soc_S_can_401d4000, status, 5) \
	fn(DT_N_S_soc_S_can_401d4000, status, 6) \
	fn(DT_N_S_soc_S_can_401d4000, status, 7)
#define DT_N_S_soc_S_can_401d4000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_can_401d4000, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_401d4000, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_401d4000, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_401d4000, status, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_401d4000, status, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_401d4000, status, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_401d4000, status, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_401d4000, status, 7)
#define DT_N_S_soc_S_can_401d4000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_can_401d4000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_401d4000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_401d4000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_401d4000, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_401d4000, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_401d4000, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_401d4000, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_401d4000, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_can_401d4000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_can_401d4000, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_401d4000, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_401d4000, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_401d4000, status, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_401d4000, status, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_401d4000, status, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_401d4000, status, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_401d4000, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_can_401d4000_P_status_EXISTS 1
#define DT_N_S_soc_S_can_401d4000_P_compatible {"nxp,kinetis-flexcan"}
#define DT_N_S_soc_S_can_401d4000_P_compatible_IDX_0 "nxp,kinetis-flexcan"
#define DT_N_S_soc_S_can_401d4000_P_compatible_IDX_0_STRING_UNQUOTED nxp,kinetis-flexcan
#define DT_N_S_soc_S_can_401d4000_P_compatible_IDX_0_STRING_TOKEN nxp_kinetis_flexcan
#define DT_N_S_soc_S_can_401d4000_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_KINETIS_FLEXCAN
#define DT_N_S_soc_S_can_401d4000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_401d4000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_can_401d4000, compatible, 0)
#define DT_N_S_soc_S_can_401d4000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_can_401d4000, compatible, 0)
#define DT_N_S_soc_S_can_401d4000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_can_401d4000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_can_401d4000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_can_401d4000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_can_401d4000_P_compatible_LEN 1
#define DT_N_S_soc_S_can_401d4000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_can_401d4000_P_interrupt_names {"common"}
#define DT_N_S_soc_S_can_401d4000_P_interrupt_names_IDX_0 "common"
#define DT_N_S_soc_S_can_401d4000_P_interrupt_names_IDX_0_STRING_UNQUOTED common
#define DT_N_S_soc_S_can_401d4000_P_interrupt_names_IDX_0_STRING_TOKEN common
#define DT_N_S_soc_S_can_401d4000_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN COMMON
#define DT_N_S_soc_S_can_401d4000_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_401d4000_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_can_401d4000, interrupt_names, 0)
#define DT_N_S_soc_S_can_401d4000_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_can_401d4000, interrupt_names, 0)
#define DT_N_S_soc_S_can_401d4000_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_can_401d4000, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_can_401d4000_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_can_401d4000, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_can_401d4000_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_can_401d4000_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_can_401d4000_P_wakeup_source 0
#define DT_N_S_soc_S_can_401d4000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/can@401d8000
 *
 * Node identifier: DT_N_S_soc_S_can_401d8000
 *
 * Binding (compatible = nxp,kinetis-flexcan):
 *   $ZEPHYR_BASE/dts/bindings/can/nxp,kinetis-flexcan.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_can_401d8000_PATH "/soc/can@401d8000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_can_401d8000_FULL_NAME "can@401d8000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_can_401d8000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_can_401d8000_CHILD_IDX 52

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_can_401d8000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_can_401d8000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_can_401d8000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_can_401d8000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_can_401d8000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_can_401d8000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_can_401d8000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_can_401d8000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_can_401d8000_ORD 63

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_can_401d8000_REQUIRES_ORDS \
	11, /* /soc */ \
	12, /* /soc/interrupt-controller@e000e100 */ \
	60, /* /soc/ccm@400fc000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_can_401d8000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_can_401d8000_EXISTS 1
#define DT_N_INST_2_nxp_kinetis_flexcan DT_N_S_soc_S_can_401d8000
#define DT_N_NODELABEL_flexcan3         DT_N_S_soc_S_can_401d8000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_can_401d8000_REG_NUM 1
#define DT_N_S_soc_S_can_401d8000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_401d8000_REG_IDX_0_VAL_ADDRESS 1075675136 /* 0x401d8000 */
#define DT_N_S_soc_S_can_401d8000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_can_401d8000_RANGES_NUM 0
#define DT_N_S_soc_S_can_401d8000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_can_401d8000_IRQ_NUM 1
#define DT_N_S_soc_S_can_401d8000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_401d8000_IRQ_IDX_0_VAL_irq 154
#define DT_N_S_soc_S_can_401d8000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_can_401d8000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_401d8000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_can_401d8000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_can_401d8000_IRQ_NAME_common_VAL_irq DT_N_S_soc_S_can_401d8000_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_can_401d8000_IRQ_NAME_common_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_can_401d8000_IRQ_NAME_common_VAL_priority DT_N_S_soc_S_can_401d8000_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_can_401d8000_IRQ_NAME_common_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_can_401d8000_COMPAT_MATCHES_nxp_kinetis_flexcan 1
#define DT_N_S_soc_S_can_401d8000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_401d8000_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_soc_S_can_401d8000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_401d8000_COMPAT_MODEL_IDX_0 "kinetis-flexcan"
#define DT_N_S_soc_S_can_401d8000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_can_401d8000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_can_401d8000_P_reg {1075675136 /* 0x401d8000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_can_401d8000_P_reg_IDX_0 1075675136
#define DT_N_S_soc_S_can_401d8000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_401d8000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_can_401d8000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_can_401d8000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_can_401d8000, reg, 0) \
	fn(DT_N_S_soc_S_can_401d8000, reg, 1)
#define DT_N_S_soc_S_can_401d8000_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_can_401d8000, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_401d8000, reg, 1)
#define DT_N_S_soc_S_can_401d8000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_can_401d8000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_401d8000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_can_401d8000_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_can_401d8000, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_401d8000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_can_401d8000_P_reg_EXISTS 1
#define DT_N_S_soc_S_can_401d8000_P_interrupts {154 /* 0x9a */, 0 /* 0x0 */}
#define DT_N_S_soc_S_can_401d8000_P_interrupts_IDX_0 154
#define DT_N_S_soc_S_can_401d8000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_401d8000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_can_401d8000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_can_401d8000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_can_401d8000, interrupts, 0) \
	fn(DT_N_S_soc_S_can_401d8000, interrupts, 1)
#define DT_N_S_soc_S_can_401d8000_P_interrupts_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_can_401d8000, interrupts, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_401d8000, interrupts, 1)
#define DT_N_S_soc_S_can_401d8000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_can_401d8000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_401d8000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_can_401d8000_P_interrupts_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_can_401d8000, interrupts, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_401d8000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_can_401d8000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_can_401d8000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_401d8000_P_clocks_IDX_0_PH DT_N_S_soc_S_ccm_400fc000
#define DT_N_S_soc_S_can_401d8000_P_clocks_IDX_0_VAL_name 2304
#define DT_N_S_soc_S_can_401d8000_P_clocks_IDX_0_VAL_name_EXISTS 1
#define DT_N_S_soc_S_can_401d8000_P_clocks_IDX_0_VAL_offset 132
#define DT_N_S_soc_S_can_401d8000_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_can_401d8000_P_clocks_IDX_0_VAL_bits 6
#define DT_N_S_soc_S_can_401d8000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_can_401d8000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_can_401d8000, clocks, 0)
#define DT_N_S_soc_S_can_401d8000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_can_401d8000, clocks, 0)
#define DT_N_S_soc_S_can_401d8000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_can_401d8000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_can_401d8000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_can_401d8000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_can_401d8000_P_clocks_LEN 1
#define DT_N_S_soc_S_can_401d8000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_can_401d8000_P_clk_source 2
#define DT_N_S_soc_S_can_401d8000_P_clk_source_EXISTS 1
#define DT_N_S_soc_S_can_401d8000_P_sjw 1
#define DT_N_S_soc_S_can_401d8000_P_sjw_EXISTS 1
#define DT_N_S_soc_S_can_401d8000_P_sample_point 875
#define DT_N_S_soc_S_can_401d8000_P_sample_point_EXISTS 1
#define DT_N_S_soc_S_can_401d8000_P_status "disabled"
#define DT_N_S_soc_S_can_401d8000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_can_401d8000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_can_401d8000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_can_401d8000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_can_401d8000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_can_401d8000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_can_401d8000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_can_401d8000, status, 0) \
	fn(DT_N_S_soc_S_can_401d8000, status, 1) \
	fn(DT_N_S_soc_S_can_401d8000, status, 2) \
	fn(DT_N_S_soc_S_can_401d8000, status, 3) \
	fn(DT_N_S_soc_S_can_401d8000, status, 4) \
	fn(DT_N_S_soc_S_can_401d8000, status, 5) \
	fn(DT_N_S_soc_S_can_401d8000, status, 6) \
	fn(DT_N_S_soc_S_can_401d8000, status, 7)
#define DT_N_S_soc_S_can_401d8000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_can_401d8000, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_401d8000, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_401d8000, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_401d8000, status, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_401d8000, status, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_401d8000, status, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_401d8000, status, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_401d8000, status, 7)
#define DT_N_S_soc_S_can_401d8000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_can_401d8000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_401d8000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_401d8000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_401d8000, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_401d8000, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_401d8000, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_401d8000, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_401d8000, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_can_401d8000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_can_401d8000, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_401d8000, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_401d8000, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_401d8000, status, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_401d8000, status, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_401d8000, status, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_401d8000, status, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_can_401d8000, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_can_401d8000_P_status_EXISTS 1
#define DT_N_S_soc_S_can_401d8000_P_compatible {"nxp,kinetis-flexcan"}
#define DT_N_S_soc_S_can_401d8000_P_compatible_IDX_0 "nxp,kinetis-flexcan"
#define DT_N_S_soc_S_can_401d8000_P_compatible_IDX_0_STRING_UNQUOTED nxp,kinetis-flexcan
#define DT_N_S_soc_S_can_401d8000_P_compatible_IDX_0_STRING_TOKEN nxp_kinetis_flexcan
#define DT_N_S_soc_S_can_401d8000_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_KINETIS_FLEXCAN
#define DT_N_S_soc_S_can_401d8000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_401d8000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_can_401d8000, compatible, 0)
#define DT_N_S_soc_S_can_401d8000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_can_401d8000, compatible, 0)
#define DT_N_S_soc_S_can_401d8000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_can_401d8000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_can_401d8000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_can_401d8000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_can_401d8000_P_compatible_LEN 1
#define DT_N_S_soc_S_can_401d8000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_can_401d8000_P_interrupt_names {"common"}
#define DT_N_S_soc_S_can_401d8000_P_interrupt_names_IDX_0 "common"
#define DT_N_S_soc_S_can_401d8000_P_interrupt_names_IDX_0_STRING_UNQUOTED common
#define DT_N_S_soc_S_can_401d8000_P_interrupt_names_IDX_0_STRING_TOKEN common
#define DT_N_S_soc_S_can_401d8000_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN COMMON
#define DT_N_S_soc_S_can_401d8000_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_401d8000_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_can_401d8000, interrupt_names, 0)
#define DT_N_S_soc_S_can_401d8000_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_can_401d8000, interrupt_names, 0)
#define DT_N_S_soc_S_can_401d8000_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_can_401d8000, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_can_401d8000_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_can_401d8000, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_can_401d8000_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_can_401d8000_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_can_401d8000_P_wakeup_source 0
#define DT_N_S_soc_S_can_401d8000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/csi@402bc000
 *
 * Node identifier: DT_N_S_soc_S_csi_402bc000
 *
 * Binding (compatible = nxp,imx-csi):
 *   $ZEPHYR_BASE/dts/bindings/video/nxp,imx-csi.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_csi_402bc000_PATH "/soc/csi@402bc000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_csi_402bc000_FULL_NAME "csi@402bc000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_csi_402bc000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_csi_402bc000_CHILD_IDX 48

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_csi_402bc000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_csi_402bc000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_csi_402bc000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_csi_402bc000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_csi_402bc000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_csi_402bc000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_csi_402bc000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_csi_402bc000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_csi_402bc000_ORD 64

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_csi_402bc000_REQUIRES_ORDS \
	11, /* /soc */ \
	12, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_csi_402bc000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_csi_402bc000_EXISTS 1
#define DT_N_INST_0_nxp_imx_csi DT_N_S_soc_S_csi_402bc000
#define DT_N_NODELABEL_csi      DT_N_S_soc_S_csi_402bc000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_csi_402bc000_REG_NUM 1
#define DT_N_S_soc_S_csi_402bc000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_csi_402bc000_REG_IDX_0_VAL_ADDRESS 1076609024 /* 0x402bc000 */
#define DT_N_S_soc_S_csi_402bc000_REG_IDX_0_VAL_SIZE 16384 /* 0x4000 */
#define DT_N_S_soc_S_csi_402bc000_RANGES_NUM 0
#define DT_N_S_soc_S_csi_402bc000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_csi_402bc000_IRQ_NUM 1
#define DT_N_S_soc_S_csi_402bc000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_csi_402bc000_IRQ_IDX_0_VAL_irq 43
#define DT_N_S_soc_S_csi_402bc000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_csi_402bc000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_csi_402bc000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_csi_402bc000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_csi_402bc000_COMPAT_MATCHES_nxp_imx_csi 1
#define DT_N_S_soc_S_csi_402bc000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_csi_402bc000_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_soc_S_csi_402bc000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_csi_402bc000_COMPAT_MODEL_IDX_0 "imx-csi"
#define DT_N_S_soc_S_csi_402bc000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_csi_402bc000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_csi_402bc000_P_interrupts {43 /* 0x2b */, 1 /* 0x1 */}
#define DT_N_S_soc_S_csi_402bc000_P_interrupts_IDX_0 43
#define DT_N_S_soc_S_csi_402bc000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_csi_402bc000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_csi_402bc000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_csi_402bc000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_csi_402bc000, interrupts, 0) \
	fn(DT_N_S_soc_S_csi_402bc000, interrupts, 1)
#define DT_N_S_soc_S_csi_402bc000_P_interrupts_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_csi_402bc000, interrupts, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_csi_402bc000, interrupts, 1)
#define DT_N_S_soc_S_csi_402bc000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_csi_402bc000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_csi_402bc000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_csi_402bc000_P_interrupts_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_csi_402bc000, interrupts, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_csi_402bc000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_csi_402bc000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_csi_402bc000_P_status "disabled"
#define DT_N_S_soc_S_csi_402bc000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_csi_402bc000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_csi_402bc000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_csi_402bc000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_csi_402bc000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_csi_402bc000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_csi_402bc000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_csi_402bc000, status, 0) \
	fn(DT_N_S_soc_S_csi_402bc000, status, 1) \
	fn(DT_N_S_soc_S_csi_402bc000, status, 2) \
	fn(DT_N_S_soc_S_csi_402bc000, status, 3) \
	fn(DT_N_S_soc_S_csi_402bc000, status, 4) \
	fn(DT_N_S_soc_S_csi_402bc000, status, 5) \
	fn(DT_N_S_soc_S_csi_402bc000, status, 6) \
	fn(DT_N_S_soc_S_csi_402bc000, status, 7)
#define DT_N_S_soc_S_csi_402bc000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_csi_402bc000, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_csi_402bc000, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_csi_402bc000, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_csi_402bc000, status, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_csi_402bc000, status, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_csi_402bc000, status, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_csi_402bc000, status, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_csi_402bc000, status, 7)
#define DT_N_S_soc_S_csi_402bc000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_csi_402bc000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_csi_402bc000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_csi_402bc000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_csi_402bc000, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_csi_402bc000, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_csi_402bc000, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_csi_402bc000, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_csi_402bc000, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_csi_402bc000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_csi_402bc000, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_csi_402bc000, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_csi_402bc000, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_csi_402bc000, status, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_csi_402bc000, status, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_csi_402bc000, status, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_csi_402bc000, status, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_csi_402bc000, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_csi_402bc000_P_status_EXISTS 1
#define DT_N_S_soc_S_csi_402bc000_P_compatible {"nxp,imx-csi"}
#define DT_N_S_soc_S_csi_402bc000_P_compatible_IDX_0 "nxp,imx-csi"
#define DT_N_S_soc_S_csi_402bc000_P_compatible_IDX_0_STRING_UNQUOTED nxp,imx-csi
#define DT_N_S_soc_S_csi_402bc000_P_compatible_IDX_0_STRING_TOKEN nxp_imx_csi
#define DT_N_S_soc_S_csi_402bc000_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_IMX_CSI
#define DT_N_S_soc_S_csi_402bc000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_csi_402bc000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_csi_402bc000, compatible, 0)
#define DT_N_S_soc_S_csi_402bc000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_csi_402bc000, compatible, 0)
#define DT_N_S_soc_S_csi_402bc000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_csi_402bc000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_csi_402bc000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_csi_402bc000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_csi_402bc000_P_compatible_LEN 1
#define DT_N_S_soc_S_csi_402bc000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_csi_402bc000_P_reg {1076609024 /* 0x402bc000 */, 16384 /* 0x4000 */}
#define DT_N_S_soc_S_csi_402bc000_P_reg_IDX_0 1076609024
#define DT_N_S_soc_S_csi_402bc000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_csi_402bc000_P_reg_IDX_1 16384
#define DT_N_S_soc_S_csi_402bc000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_csi_402bc000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_csi_402bc000, reg, 0) \
	fn(DT_N_S_soc_S_csi_402bc000, reg, 1)
#define DT_N_S_soc_S_csi_402bc000_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_csi_402bc000, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_csi_402bc000, reg, 1)
#define DT_N_S_soc_S_csi_402bc000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_csi_402bc000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_csi_402bc000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_csi_402bc000_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_csi_402bc000, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_csi_402bc000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_csi_402bc000_P_reg_EXISTS 1
#define DT_N_S_soc_S_csi_402bc000_P_wakeup_source 0
#define DT_N_S_soc_S_csi_402bc000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/display-controller@402b8000
 *
 * Node identifier: DT_N_S_soc_S_display_controller_402b8000
 *
 * Binding (compatible = nxp,imx-elcdif):
 *   $ZEPHYR_BASE/dts/bindings/display/nxp,imx-elcdif.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_display_controller_402b8000_PATH "/soc/display-controller@402b8000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_display_controller_402b8000_FULL_NAME "display-controller@402b8000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_display_controller_402b8000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_display_controller_402b8000_CHILD_IDX 22

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_display_controller_402b8000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_display_controller_402b8000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_display_controller_402b8000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_display_controller_402b8000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_display_controller_402b8000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_display_controller_402b8000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_display_controller_402b8000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_display_controller_402b8000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_display_controller_402b8000_ORD 65

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_display_controller_402b8000_REQUIRES_ORDS \
	11, /* /soc */ \
	12, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_display_controller_402b8000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_display_controller_402b8000_EXISTS 1
#define DT_N_INST_0_nxp_imx_elcdif DT_N_S_soc_S_display_controller_402b8000
#define DT_N_NODELABEL_lcdif       DT_N_S_soc_S_display_controller_402b8000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_display_controller_402b8000_REG_NUM 1
#define DT_N_S_soc_S_display_controller_402b8000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_display_controller_402b8000_REG_IDX_0_VAL_ADDRESS 1076592640 /* 0x402b8000 */
#define DT_N_S_soc_S_display_controller_402b8000_REG_IDX_0_VAL_SIZE 16384 /* 0x4000 */
#define DT_N_S_soc_S_display_controller_402b8000_RANGES_NUM 0
#define DT_N_S_soc_S_display_controller_402b8000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_display_controller_402b8000_IRQ_NUM 1
#define DT_N_S_soc_S_display_controller_402b8000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_display_controller_402b8000_IRQ_IDX_0_VAL_irq 42
#define DT_N_S_soc_S_display_controller_402b8000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_display_controller_402b8000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_display_controller_402b8000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_display_controller_402b8000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_display_controller_402b8000_COMPAT_MATCHES_nxp_imx_elcdif 1
#define DT_N_S_soc_S_display_controller_402b8000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_display_controller_402b8000_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_soc_S_display_controller_402b8000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_display_controller_402b8000_COMPAT_MODEL_IDX_0 "imx-elcdif"
#define DT_N_S_soc_S_display_controller_402b8000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_display_controller_402b8000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_display_controller_402b8000_P_reg {1076592640 /* 0x402b8000 */, 16384 /* 0x4000 */}
#define DT_N_S_soc_S_display_controller_402b8000_P_reg_IDX_0 1076592640
#define DT_N_S_soc_S_display_controller_402b8000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_display_controller_402b8000_P_reg_IDX_1 16384
#define DT_N_S_soc_S_display_controller_402b8000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_display_controller_402b8000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_display_controller_402b8000, reg, 0) \
	fn(DT_N_S_soc_S_display_controller_402b8000, reg, 1)
#define DT_N_S_soc_S_display_controller_402b8000_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_display_controller_402b8000, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_display_controller_402b8000, reg, 1)
#define DT_N_S_soc_S_display_controller_402b8000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_display_controller_402b8000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_display_controller_402b8000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_display_controller_402b8000_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_display_controller_402b8000, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_display_controller_402b8000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_display_controller_402b8000_P_reg_EXISTS 1
#define DT_N_S_soc_S_display_controller_402b8000_P_interrupts {42 /* 0x2a */, 0 /* 0x0 */}
#define DT_N_S_soc_S_display_controller_402b8000_P_interrupts_IDX_0 42
#define DT_N_S_soc_S_display_controller_402b8000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_display_controller_402b8000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_display_controller_402b8000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_display_controller_402b8000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_display_controller_402b8000, interrupts, 0) \
	fn(DT_N_S_soc_S_display_controller_402b8000, interrupts, 1)
#define DT_N_S_soc_S_display_controller_402b8000_P_interrupts_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_display_controller_402b8000, interrupts, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_display_controller_402b8000, interrupts, 1)
#define DT_N_S_soc_S_display_controller_402b8000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_display_controller_402b8000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_display_controller_402b8000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_display_controller_402b8000_P_interrupts_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_display_controller_402b8000, interrupts, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_display_controller_402b8000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_display_controller_402b8000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_display_controller_402b8000_P_data_buswidth "16-bit"
#define DT_N_S_soc_S_display_controller_402b8000_P_data_buswidth_STRING_UNQUOTED 16-bit
#define DT_N_S_soc_S_display_controller_402b8000_P_data_buswidth_STRING_TOKEN 16_bit
#define DT_N_S_soc_S_display_controller_402b8000_P_data_buswidth_STRING_UPPER_TOKEN 16_BIT
#define DT_N_S_soc_S_display_controller_402b8000_P_data_buswidth_ENUM_IDX 0
#define DT_N_S_soc_S_display_controller_402b8000_P_data_buswidth_ENUM_TOKEN 16_bit
#define DT_N_S_soc_S_display_controller_402b8000_P_data_buswidth_ENUM_UPPER_TOKEN 16_BIT
#define DT_N_S_soc_S_display_controller_402b8000_P_data_buswidth_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_display_controller_402b8000, data_buswidth, 0) \
	fn(DT_N_S_soc_S_display_controller_402b8000, data_buswidth, 1) \
	fn(DT_N_S_soc_S_display_controller_402b8000, data_buswidth, 2) \
	fn(DT_N_S_soc_S_display_controller_402b8000, data_buswidth, 3) \
	fn(DT_N_S_soc_S_display_controller_402b8000, data_buswidth, 4) \
	fn(DT_N_S_soc_S_display_controller_402b8000, data_buswidth, 5)
#define DT_N_S_soc_S_display_controller_402b8000_P_data_buswidth_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_display_controller_402b8000, data_buswidth, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_display_controller_402b8000, data_buswidth, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_display_controller_402b8000, data_buswidth, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_display_controller_402b8000, data_buswidth, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_display_controller_402b8000, data_buswidth, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_display_controller_402b8000, data_buswidth, 5)
#define DT_N_S_soc_S_display_controller_402b8000_P_data_buswidth_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_display_controller_402b8000, data_buswidth, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_display_controller_402b8000, data_buswidth, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_display_controller_402b8000, data_buswidth, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_display_controller_402b8000, data_buswidth, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_display_controller_402b8000, data_buswidth, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_display_controller_402b8000, data_buswidth, 5, __VA_ARGS__)
#define DT_N_S_soc_S_display_controller_402b8000_P_data_buswidth_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_display_controller_402b8000, data_buswidth, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_display_controller_402b8000, data_buswidth, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_display_controller_402b8000, data_buswidth, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_display_controller_402b8000, data_buswidth, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_display_controller_402b8000, data_buswidth, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_display_controller_402b8000, data_buswidth, 5, __VA_ARGS__)
#define DT_N_S_soc_S_display_controller_402b8000_P_data_buswidth_EXISTS 1
#define DT_N_S_soc_S_display_controller_402b8000_P_status "disabled"
#define DT_N_S_soc_S_display_controller_402b8000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_display_controller_402b8000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_display_controller_402b8000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_display_controller_402b8000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_display_controller_402b8000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_display_controller_402b8000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_display_controller_402b8000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_display_controller_402b8000, status, 0) \
	fn(DT_N_S_soc_S_display_controller_402b8000, status, 1) \
	fn(DT_N_S_soc_S_display_controller_402b8000, status, 2) \
	fn(DT_N_S_soc_S_display_controller_402b8000, status, 3) \
	fn(DT_N_S_soc_S_display_controller_402b8000, status, 4) \
	fn(DT_N_S_soc_S_display_controller_402b8000, status, 5) \
	fn(DT_N_S_soc_S_display_controller_402b8000, status, 6) \
	fn(DT_N_S_soc_S_display_controller_402b8000, status, 7)
#define DT_N_S_soc_S_display_controller_402b8000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_display_controller_402b8000, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_display_controller_402b8000, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_display_controller_402b8000, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_display_controller_402b8000, status, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_display_controller_402b8000, status, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_display_controller_402b8000, status, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_display_controller_402b8000, status, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_display_controller_402b8000, status, 7)
#define DT_N_S_soc_S_display_controller_402b8000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_display_controller_402b8000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_display_controller_402b8000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_display_controller_402b8000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_display_controller_402b8000, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_display_controller_402b8000, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_display_controller_402b8000, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_display_controller_402b8000, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_display_controller_402b8000, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_display_controller_402b8000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_display_controller_402b8000, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_display_controller_402b8000, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_display_controller_402b8000, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_display_controller_402b8000, status, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_display_controller_402b8000, status, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_display_controller_402b8000, status, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_display_controller_402b8000, status, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_display_controller_402b8000, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_display_controller_402b8000_P_status_EXISTS 1
#define DT_N_S_soc_S_display_controller_402b8000_P_compatible {"nxp,imx-elcdif"}
#define DT_N_S_soc_S_display_controller_402b8000_P_compatible_IDX_0 "nxp,imx-elcdif"
#define DT_N_S_soc_S_display_controller_402b8000_P_compatible_IDX_0_STRING_UNQUOTED nxp,imx-elcdif
#define DT_N_S_soc_S_display_controller_402b8000_P_compatible_IDX_0_STRING_TOKEN nxp_imx_elcdif
#define DT_N_S_soc_S_display_controller_402b8000_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_IMX_ELCDIF
#define DT_N_S_soc_S_display_controller_402b8000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_display_controller_402b8000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_display_controller_402b8000, compatible, 0)
#define DT_N_S_soc_S_display_controller_402b8000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_display_controller_402b8000, compatible, 0)
#define DT_N_S_soc_S_display_controller_402b8000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_display_controller_402b8000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_display_controller_402b8000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_display_controller_402b8000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_display_controller_402b8000_P_compatible_LEN 1
#define DT_N_S_soc_S_display_controller_402b8000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_display_controller_402b8000_P_wakeup_source 0
#define DT_N_S_soc_S_display_controller_402b8000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_00_GPIO2_IO00
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_00_gpio2_io00
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_00_gpio2_io00_PATH "/soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_00_GPIO2_IO00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_00_gpio2_io00_FULL_NAME "IOMUXC_GPIO_EMC_00_GPIO2_IO00"

/* Node parent (/soc/iomuxc@401f8000) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_00_gpio2_io00_PARENT DT_N_S_soc_S_iomuxc_401f8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_00_gpio2_io00_CHILD_IDX 54

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_00_gpio2_io00_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_00_gpio2_io00_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_00_gpio2_io00_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_00_gpio2_io00_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_00_gpio2_io00_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_00_gpio2_io00_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_00_gpio2_io00_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_00_gpio2_io00_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_00_gpio2_io00_ORD 66

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_00_gpio2_io00_REQUIRES_ORDS \
	13, /* /soc/iomuxc@401f8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_00_gpio2_io00_SUPPORTS_ORDS \
	98, /* /soc/gpio@401bc000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_00_gpio2_io00_EXISTS 1
#define DT_N_NODELABEL_iomuxc_gpio_emc_00_gpio2_io00 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_00_gpio2_io00

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_00_gpio2_io00_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_00_gpio2_io00_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_00_gpio2_io00_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_00_gpio2_io00_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_00_gpio2_io00_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_00_gpio2_io00_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_00_gpio2_io00_P_pinmux {1075806228 /* 0x401f8014 */, 5 /* 0x5 */, 0 /* 0x0 */, 0 /* 0x0 */, 1075806600 /* 0x401f8188 */}
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_00_gpio2_io00_P_pinmux_IDX_0 1075806228
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_00_gpio2_io00_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_00_gpio2_io00_P_pinmux_IDX_1 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_00_gpio2_io00_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_00_gpio2_io00_P_pinmux_IDX_2 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_00_gpio2_io00_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_00_gpio2_io00_P_pinmux_IDX_3 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_00_gpio2_io00_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_00_gpio2_io00_P_pinmux_IDX_4 1075806600
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_00_gpio2_io00_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_00_gpio2_io00_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_00_gpio2_io00, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_00_gpio2_io00, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_00_gpio2_io00, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_00_gpio2_io00, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_00_gpio2_io00, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_00_gpio2_io00_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_00_gpio2_io00, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_00_gpio2_io00, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_00_gpio2_io00, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_00_gpio2_io00, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_00_gpio2_io00, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_00_gpio2_io00_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_00_gpio2_io00, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_00_gpio2_io00, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_00_gpio2_io00, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_00_gpio2_io00, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_00_gpio2_io00, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_00_gpio2_io00_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_00_gpio2_io00, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_00_gpio2_io00, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_00_gpio2_io00, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_00_gpio2_io00, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_00_gpio2_io00, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_00_gpio2_io00_P_pinmux_LEN 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_00_gpio2_io00_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_00_gpio2_io00_P_pin_pue 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_00_gpio2_io00_P_pin_pue_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_00_gpio2_io00_P_pin_pdrv 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_00_gpio2_io00_P_pin_pdrv_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_00_gpio2_io00_P_pin_lpsr 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_00_gpio2_io00_P_pin_lpsr_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_00_gpio2_io00_P_pin_snvs 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_00_gpio2_io00_P_pin_snvs_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_01_GPIO2_IO01
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_01_gpio2_io01
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_01_gpio2_io01_PATH "/soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_01_GPIO2_IO01"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_01_gpio2_io01_FULL_NAME "IOMUXC_GPIO_EMC_01_GPIO2_IO01"

/* Node parent (/soc/iomuxc@401f8000) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_01_gpio2_io01_PARENT DT_N_S_soc_S_iomuxc_401f8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_01_gpio2_io01_CHILD_IDX 55

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_01_gpio2_io01_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_01_gpio2_io01_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_01_gpio2_io01_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_01_gpio2_io01_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_01_gpio2_io01_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_01_gpio2_io01_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_01_gpio2_io01_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_01_gpio2_io01_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_01_gpio2_io01_ORD 67

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_01_gpio2_io01_REQUIRES_ORDS \
	13, /* /soc/iomuxc@401f8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_01_gpio2_io01_SUPPORTS_ORDS \
	98, /* /soc/gpio@401bc000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_01_gpio2_io01_EXISTS 1
#define DT_N_NODELABEL_iomuxc_gpio_emc_01_gpio2_io01 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_01_gpio2_io01

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_01_gpio2_io01_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_01_gpio2_io01_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_01_gpio2_io01_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_01_gpio2_io01_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_01_gpio2_io01_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_01_gpio2_io01_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_01_gpio2_io01_P_pinmux {1075806232 /* 0x401f8018 */, 5 /* 0x5 */, 0 /* 0x0 */, 0 /* 0x0 */, 1075806604 /* 0x401f818c */}
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_01_gpio2_io01_P_pinmux_IDX_0 1075806232
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_01_gpio2_io01_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_01_gpio2_io01_P_pinmux_IDX_1 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_01_gpio2_io01_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_01_gpio2_io01_P_pinmux_IDX_2 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_01_gpio2_io01_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_01_gpio2_io01_P_pinmux_IDX_3 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_01_gpio2_io01_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_01_gpio2_io01_P_pinmux_IDX_4 1075806604
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_01_gpio2_io01_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_01_gpio2_io01_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_01_gpio2_io01, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_01_gpio2_io01, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_01_gpio2_io01, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_01_gpio2_io01, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_01_gpio2_io01, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_01_gpio2_io01_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_01_gpio2_io01, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_01_gpio2_io01, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_01_gpio2_io01, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_01_gpio2_io01, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_01_gpio2_io01, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_01_gpio2_io01_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_01_gpio2_io01, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_01_gpio2_io01, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_01_gpio2_io01, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_01_gpio2_io01, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_01_gpio2_io01, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_01_gpio2_io01_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_01_gpio2_io01, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_01_gpio2_io01, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_01_gpio2_io01, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_01_gpio2_io01, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_01_gpio2_io01, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_01_gpio2_io01_P_pinmux_LEN 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_01_gpio2_io01_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_01_gpio2_io01_P_pin_pue 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_01_gpio2_io01_P_pin_pue_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_01_gpio2_io01_P_pin_pdrv 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_01_gpio2_io01_P_pin_pdrv_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_01_gpio2_io01_P_pin_lpsr 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_01_gpio2_io01_P_pin_lpsr_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_01_gpio2_io01_P_pin_snvs 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_01_gpio2_io01_P_pin_snvs_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_02_GPIO2_IO02
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_02_gpio2_io02
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_02_gpio2_io02_PATH "/soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_02_GPIO2_IO02"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_02_gpio2_io02_FULL_NAME "IOMUXC_GPIO_EMC_02_GPIO2_IO02"

/* Node parent (/soc/iomuxc@401f8000) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_02_gpio2_io02_PARENT DT_N_S_soc_S_iomuxc_401f8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_02_gpio2_io02_CHILD_IDX 56

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_02_gpio2_io02_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_02_gpio2_io02_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_02_gpio2_io02_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_02_gpio2_io02_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_02_gpio2_io02_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_02_gpio2_io02_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_02_gpio2_io02_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_02_gpio2_io02_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_02_gpio2_io02_ORD 68

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_02_gpio2_io02_REQUIRES_ORDS \
	13, /* /soc/iomuxc@401f8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_02_gpio2_io02_SUPPORTS_ORDS \
	98, /* /soc/gpio@401bc000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_02_gpio2_io02_EXISTS 1
#define DT_N_NODELABEL_iomuxc_gpio_emc_02_gpio2_io02 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_02_gpio2_io02

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_02_gpio2_io02_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_02_gpio2_io02_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_02_gpio2_io02_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_02_gpio2_io02_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_02_gpio2_io02_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_02_gpio2_io02_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_02_gpio2_io02_P_pinmux {1075806236 /* 0x401f801c */, 5 /* 0x5 */, 0 /* 0x0 */, 0 /* 0x0 */, 1075806608 /* 0x401f8190 */}
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_02_gpio2_io02_P_pinmux_IDX_0 1075806236
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_02_gpio2_io02_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_02_gpio2_io02_P_pinmux_IDX_1 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_02_gpio2_io02_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_02_gpio2_io02_P_pinmux_IDX_2 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_02_gpio2_io02_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_02_gpio2_io02_P_pinmux_IDX_3 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_02_gpio2_io02_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_02_gpio2_io02_P_pinmux_IDX_4 1075806608
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_02_gpio2_io02_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_02_gpio2_io02_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_02_gpio2_io02, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_02_gpio2_io02, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_02_gpio2_io02, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_02_gpio2_io02, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_02_gpio2_io02, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_02_gpio2_io02_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_02_gpio2_io02, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_02_gpio2_io02, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_02_gpio2_io02, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_02_gpio2_io02, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_02_gpio2_io02, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_02_gpio2_io02_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_02_gpio2_io02, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_02_gpio2_io02, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_02_gpio2_io02, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_02_gpio2_io02, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_02_gpio2_io02, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_02_gpio2_io02_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_02_gpio2_io02, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_02_gpio2_io02, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_02_gpio2_io02, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_02_gpio2_io02, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_02_gpio2_io02, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_02_gpio2_io02_P_pinmux_LEN 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_02_gpio2_io02_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_02_gpio2_io02_P_pin_pue 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_02_gpio2_io02_P_pin_pue_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_02_gpio2_io02_P_pin_pdrv 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_02_gpio2_io02_P_pin_pdrv_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_02_gpio2_io02_P_pin_lpsr 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_02_gpio2_io02_P_pin_lpsr_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_02_gpio2_io02_P_pin_snvs 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_02_gpio2_io02_P_pin_snvs_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_03_GPIO2_IO03
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_03_gpio2_io03
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_03_gpio2_io03_PATH "/soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_03_GPIO2_IO03"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_03_gpio2_io03_FULL_NAME "IOMUXC_GPIO_EMC_03_GPIO2_IO03"

/* Node parent (/soc/iomuxc@401f8000) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_03_gpio2_io03_PARENT DT_N_S_soc_S_iomuxc_401f8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_03_gpio2_io03_CHILD_IDX 57

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_03_gpio2_io03_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_03_gpio2_io03_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_03_gpio2_io03_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_03_gpio2_io03_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_03_gpio2_io03_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_03_gpio2_io03_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_03_gpio2_io03_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_03_gpio2_io03_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_03_gpio2_io03_ORD 69

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_03_gpio2_io03_REQUIRES_ORDS \
	13, /* /soc/iomuxc@401f8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_03_gpio2_io03_SUPPORTS_ORDS \
	98, /* /soc/gpio@401bc000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_03_gpio2_io03_EXISTS 1
#define DT_N_NODELABEL_iomuxc_gpio_emc_03_gpio2_io03 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_03_gpio2_io03

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_03_gpio2_io03_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_03_gpio2_io03_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_03_gpio2_io03_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_03_gpio2_io03_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_03_gpio2_io03_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_03_gpio2_io03_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_03_gpio2_io03_P_pinmux {1075806240 /* 0x401f8020 */, 5 /* 0x5 */, 0 /* 0x0 */, 0 /* 0x0 */, 1075806612 /* 0x401f8194 */}
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_03_gpio2_io03_P_pinmux_IDX_0 1075806240
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_03_gpio2_io03_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_03_gpio2_io03_P_pinmux_IDX_1 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_03_gpio2_io03_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_03_gpio2_io03_P_pinmux_IDX_2 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_03_gpio2_io03_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_03_gpio2_io03_P_pinmux_IDX_3 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_03_gpio2_io03_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_03_gpio2_io03_P_pinmux_IDX_4 1075806612
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_03_gpio2_io03_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_03_gpio2_io03_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_03_gpio2_io03, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_03_gpio2_io03, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_03_gpio2_io03, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_03_gpio2_io03, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_03_gpio2_io03, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_03_gpio2_io03_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_03_gpio2_io03, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_03_gpio2_io03, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_03_gpio2_io03, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_03_gpio2_io03, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_03_gpio2_io03, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_03_gpio2_io03_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_03_gpio2_io03, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_03_gpio2_io03, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_03_gpio2_io03, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_03_gpio2_io03, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_03_gpio2_io03, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_03_gpio2_io03_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_03_gpio2_io03, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_03_gpio2_io03, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_03_gpio2_io03, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_03_gpio2_io03, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_03_gpio2_io03, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_03_gpio2_io03_P_pinmux_LEN 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_03_gpio2_io03_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_03_gpio2_io03_P_pin_pue 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_03_gpio2_io03_P_pin_pue_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_03_gpio2_io03_P_pin_pdrv 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_03_gpio2_io03_P_pin_pdrv_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_03_gpio2_io03_P_pin_lpsr 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_03_gpio2_io03_P_pin_lpsr_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_03_gpio2_io03_P_pin_snvs 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_03_gpio2_io03_P_pin_snvs_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_04_GPIO2_IO04
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_04_gpio2_io04
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_04_gpio2_io04_PATH "/soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_04_GPIO2_IO04"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_04_gpio2_io04_FULL_NAME "IOMUXC_GPIO_EMC_04_GPIO2_IO04"

/* Node parent (/soc/iomuxc@401f8000) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_04_gpio2_io04_PARENT DT_N_S_soc_S_iomuxc_401f8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_04_gpio2_io04_CHILD_IDX 58

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_04_gpio2_io04_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_04_gpio2_io04_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_04_gpio2_io04_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_04_gpio2_io04_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_04_gpio2_io04_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_04_gpio2_io04_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_04_gpio2_io04_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_04_gpio2_io04_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_04_gpio2_io04_ORD 70

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_04_gpio2_io04_REQUIRES_ORDS \
	13, /* /soc/iomuxc@401f8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_04_gpio2_io04_SUPPORTS_ORDS \
	98, /* /soc/gpio@401bc000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_04_gpio2_io04_EXISTS 1
#define DT_N_NODELABEL_iomuxc_gpio_emc_04_gpio2_io04 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_04_gpio2_io04

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_04_gpio2_io04_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_04_gpio2_io04_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_04_gpio2_io04_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_04_gpio2_io04_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_04_gpio2_io04_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_04_gpio2_io04_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_04_gpio2_io04_P_pinmux {1075806244 /* 0x401f8024 */, 5 /* 0x5 */, 0 /* 0x0 */, 0 /* 0x0 */, 1075806616 /* 0x401f8198 */}
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_04_gpio2_io04_P_pinmux_IDX_0 1075806244
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_04_gpio2_io04_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_04_gpio2_io04_P_pinmux_IDX_1 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_04_gpio2_io04_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_04_gpio2_io04_P_pinmux_IDX_2 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_04_gpio2_io04_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_04_gpio2_io04_P_pinmux_IDX_3 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_04_gpio2_io04_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_04_gpio2_io04_P_pinmux_IDX_4 1075806616
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_04_gpio2_io04_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_04_gpio2_io04_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_04_gpio2_io04, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_04_gpio2_io04, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_04_gpio2_io04, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_04_gpio2_io04, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_04_gpio2_io04, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_04_gpio2_io04_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_04_gpio2_io04, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_04_gpio2_io04, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_04_gpio2_io04, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_04_gpio2_io04, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_04_gpio2_io04, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_04_gpio2_io04_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_04_gpio2_io04, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_04_gpio2_io04, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_04_gpio2_io04, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_04_gpio2_io04, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_04_gpio2_io04, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_04_gpio2_io04_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_04_gpio2_io04, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_04_gpio2_io04, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_04_gpio2_io04, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_04_gpio2_io04, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_04_gpio2_io04, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_04_gpio2_io04_P_pinmux_LEN 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_04_gpio2_io04_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_04_gpio2_io04_P_pin_pue 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_04_gpio2_io04_P_pin_pue_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_04_gpio2_io04_P_pin_pdrv 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_04_gpio2_io04_P_pin_pdrv_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_04_gpio2_io04_P_pin_lpsr 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_04_gpio2_io04_P_pin_lpsr_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_04_gpio2_io04_P_pin_snvs 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_04_gpio2_io04_P_pin_snvs_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_05_GPIO2_IO05
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_05_gpio2_io05
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_05_gpio2_io05_PATH "/soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_05_GPIO2_IO05"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_05_gpio2_io05_FULL_NAME "IOMUXC_GPIO_EMC_05_GPIO2_IO05"

/* Node parent (/soc/iomuxc@401f8000) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_05_gpio2_io05_PARENT DT_N_S_soc_S_iomuxc_401f8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_05_gpio2_io05_CHILD_IDX 59

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_05_gpio2_io05_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_05_gpio2_io05_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_05_gpio2_io05_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_05_gpio2_io05_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_05_gpio2_io05_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_05_gpio2_io05_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_05_gpio2_io05_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_05_gpio2_io05_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_05_gpio2_io05_ORD 71

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_05_gpio2_io05_REQUIRES_ORDS \
	13, /* /soc/iomuxc@401f8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_05_gpio2_io05_SUPPORTS_ORDS \
	98, /* /soc/gpio@401bc000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_05_gpio2_io05_EXISTS 1
#define DT_N_NODELABEL_iomuxc_gpio_emc_05_gpio2_io05 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_05_gpio2_io05

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_05_gpio2_io05_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_05_gpio2_io05_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_05_gpio2_io05_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_05_gpio2_io05_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_05_gpio2_io05_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_05_gpio2_io05_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_05_gpio2_io05_P_pinmux {1075806248 /* 0x401f8028 */, 5 /* 0x5 */, 0 /* 0x0 */, 0 /* 0x0 */, 1075806620 /* 0x401f819c */}
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_05_gpio2_io05_P_pinmux_IDX_0 1075806248
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_05_gpio2_io05_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_05_gpio2_io05_P_pinmux_IDX_1 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_05_gpio2_io05_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_05_gpio2_io05_P_pinmux_IDX_2 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_05_gpio2_io05_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_05_gpio2_io05_P_pinmux_IDX_3 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_05_gpio2_io05_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_05_gpio2_io05_P_pinmux_IDX_4 1075806620
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_05_gpio2_io05_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_05_gpio2_io05_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_05_gpio2_io05, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_05_gpio2_io05, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_05_gpio2_io05, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_05_gpio2_io05, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_05_gpio2_io05, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_05_gpio2_io05_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_05_gpio2_io05, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_05_gpio2_io05, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_05_gpio2_io05, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_05_gpio2_io05, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_05_gpio2_io05, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_05_gpio2_io05_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_05_gpio2_io05, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_05_gpio2_io05, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_05_gpio2_io05, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_05_gpio2_io05, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_05_gpio2_io05, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_05_gpio2_io05_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_05_gpio2_io05, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_05_gpio2_io05, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_05_gpio2_io05, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_05_gpio2_io05, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_05_gpio2_io05, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_05_gpio2_io05_P_pinmux_LEN 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_05_gpio2_io05_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_05_gpio2_io05_P_pin_pue 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_05_gpio2_io05_P_pin_pue_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_05_gpio2_io05_P_pin_pdrv 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_05_gpio2_io05_P_pin_pdrv_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_05_gpio2_io05_P_pin_lpsr 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_05_gpio2_io05_P_pin_lpsr_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_05_gpio2_io05_P_pin_snvs 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_05_gpio2_io05_P_pin_snvs_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_06_GPIO2_IO06
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_06_gpio2_io06
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_06_gpio2_io06_PATH "/soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_06_GPIO2_IO06"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_06_gpio2_io06_FULL_NAME "IOMUXC_GPIO_EMC_06_GPIO2_IO06"

/* Node parent (/soc/iomuxc@401f8000) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_06_gpio2_io06_PARENT DT_N_S_soc_S_iomuxc_401f8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_06_gpio2_io06_CHILD_IDX 60

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_06_gpio2_io06_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_06_gpio2_io06_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_06_gpio2_io06_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_06_gpio2_io06_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_06_gpio2_io06_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_06_gpio2_io06_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_06_gpio2_io06_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_06_gpio2_io06_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_06_gpio2_io06_ORD 72

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_06_gpio2_io06_REQUIRES_ORDS \
	13, /* /soc/iomuxc@401f8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_06_gpio2_io06_SUPPORTS_ORDS \
	98, /* /soc/gpio@401bc000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_06_gpio2_io06_EXISTS 1
#define DT_N_NODELABEL_iomuxc_gpio_emc_06_gpio2_io06 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_06_gpio2_io06

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_06_gpio2_io06_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_06_gpio2_io06_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_06_gpio2_io06_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_06_gpio2_io06_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_06_gpio2_io06_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_06_gpio2_io06_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_06_gpio2_io06_P_pinmux {1075806252 /* 0x401f802c */, 5 /* 0x5 */, 0 /* 0x0 */, 0 /* 0x0 */, 1075806624 /* 0x401f81a0 */}
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_06_gpio2_io06_P_pinmux_IDX_0 1075806252
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_06_gpio2_io06_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_06_gpio2_io06_P_pinmux_IDX_1 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_06_gpio2_io06_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_06_gpio2_io06_P_pinmux_IDX_2 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_06_gpio2_io06_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_06_gpio2_io06_P_pinmux_IDX_3 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_06_gpio2_io06_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_06_gpio2_io06_P_pinmux_IDX_4 1075806624
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_06_gpio2_io06_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_06_gpio2_io06_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_06_gpio2_io06, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_06_gpio2_io06, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_06_gpio2_io06, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_06_gpio2_io06, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_06_gpio2_io06, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_06_gpio2_io06_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_06_gpio2_io06, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_06_gpio2_io06, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_06_gpio2_io06, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_06_gpio2_io06, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_06_gpio2_io06, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_06_gpio2_io06_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_06_gpio2_io06, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_06_gpio2_io06, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_06_gpio2_io06, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_06_gpio2_io06, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_06_gpio2_io06, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_06_gpio2_io06_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_06_gpio2_io06, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_06_gpio2_io06, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_06_gpio2_io06, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_06_gpio2_io06, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_06_gpio2_io06, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_06_gpio2_io06_P_pinmux_LEN 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_06_gpio2_io06_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_06_gpio2_io06_P_pin_pue 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_06_gpio2_io06_P_pin_pue_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_06_gpio2_io06_P_pin_pdrv 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_06_gpio2_io06_P_pin_pdrv_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_06_gpio2_io06_P_pin_lpsr 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_06_gpio2_io06_P_pin_lpsr_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_06_gpio2_io06_P_pin_snvs 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_06_gpio2_io06_P_pin_snvs_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_07_GPIO2_IO07
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_07_gpio2_io07
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_07_gpio2_io07_PATH "/soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_07_GPIO2_IO07"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_07_gpio2_io07_FULL_NAME "IOMUXC_GPIO_EMC_07_GPIO2_IO07"

/* Node parent (/soc/iomuxc@401f8000) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_07_gpio2_io07_PARENT DT_N_S_soc_S_iomuxc_401f8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_07_gpio2_io07_CHILD_IDX 61

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_07_gpio2_io07_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_07_gpio2_io07_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_07_gpio2_io07_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_07_gpio2_io07_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_07_gpio2_io07_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_07_gpio2_io07_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_07_gpio2_io07_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_07_gpio2_io07_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_07_gpio2_io07_ORD 73

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_07_gpio2_io07_REQUIRES_ORDS \
	13, /* /soc/iomuxc@401f8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_07_gpio2_io07_SUPPORTS_ORDS \
	98, /* /soc/gpio@401bc000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_07_gpio2_io07_EXISTS 1
#define DT_N_NODELABEL_iomuxc_gpio_emc_07_gpio2_io07 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_07_gpio2_io07

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_07_gpio2_io07_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_07_gpio2_io07_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_07_gpio2_io07_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_07_gpio2_io07_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_07_gpio2_io07_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_07_gpio2_io07_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_07_gpio2_io07_P_pinmux {1075806256 /* 0x401f8030 */, 5 /* 0x5 */, 0 /* 0x0 */, 0 /* 0x0 */, 1075806628 /* 0x401f81a4 */}
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_07_gpio2_io07_P_pinmux_IDX_0 1075806256
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_07_gpio2_io07_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_07_gpio2_io07_P_pinmux_IDX_1 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_07_gpio2_io07_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_07_gpio2_io07_P_pinmux_IDX_2 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_07_gpio2_io07_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_07_gpio2_io07_P_pinmux_IDX_3 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_07_gpio2_io07_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_07_gpio2_io07_P_pinmux_IDX_4 1075806628
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_07_gpio2_io07_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_07_gpio2_io07_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_07_gpio2_io07, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_07_gpio2_io07, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_07_gpio2_io07, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_07_gpio2_io07, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_07_gpio2_io07, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_07_gpio2_io07_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_07_gpio2_io07, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_07_gpio2_io07, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_07_gpio2_io07, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_07_gpio2_io07, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_07_gpio2_io07, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_07_gpio2_io07_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_07_gpio2_io07, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_07_gpio2_io07, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_07_gpio2_io07, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_07_gpio2_io07, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_07_gpio2_io07, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_07_gpio2_io07_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_07_gpio2_io07, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_07_gpio2_io07, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_07_gpio2_io07, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_07_gpio2_io07, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_07_gpio2_io07, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_07_gpio2_io07_P_pinmux_LEN 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_07_gpio2_io07_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_07_gpio2_io07_P_pin_pue 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_07_gpio2_io07_P_pin_pue_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_07_gpio2_io07_P_pin_pdrv 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_07_gpio2_io07_P_pin_pdrv_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_07_gpio2_io07_P_pin_lpsr 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_07_gpio2_io07_P_pin_lpsr_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_07_gpio2_io07_P_pin_snvs 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_07_gpio2_io07_P_pin_snvs_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_08_GPIO2_IO08
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_08_gpio2_io08
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_08_gpio2_io08_PATH "/soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_08_GPIO2_IO08"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_08_gpio2_io08_FULL_NAME "IOMUXC_GPIO_EMC_08_GPIO2_IO08"

/* Node parent (/soc/iomuxc@401f8000) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_08_gpio2_io08_PARENT DT_N_S_soc_S_iomuxc_401f8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_08_gpio2_io08_CHILD_IDX 62

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_08_gpio2_io08_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_08_gpio2_io08_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_08_gpio2_io08_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_08_gpio2_io08_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_08_gpio2_io08_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_08_gpio2_io08_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_08_gpio2_io08_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_08_gpio2_io08_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_08_gpio2_io08_ORD 74

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_08_gpio2_io08_REQUIRES_ORDS \
	13, /* /soc/iomuxc@401f8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_08_gpio2_io08_SUPPORTS_ORDS \
	98, /* /soc/gpio@401bc000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_08_gpio2_io08_EXISTS 1
#define DT_N_NODELABEL_iomuxc_gpio_emc_08_gpio2_io08 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_08_gpio2_io08

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_08_gpio2_io08_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_08_gpio2_io08_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_08_gpio2_io08_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_08_gpio2_io08_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_08_gpio2_io08_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_08_gpio2_io08_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_08_gpio2_io08_P_pinmux {1075806260 /* 0x401f8034 */, 5 /* 0x5 */, 0 /* 0x0 */, 0 /* 0x0 */, 1075806632 /* 0x401f81a8 */}
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_08_gpio2_io08_P_pinmux_IDX_0 1075806260
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_08_gpio2_io08_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_08_gpio2_io08_P_pinmux_IDX_1 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_08_gpio2_io08_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_08_gpio2_io08_P_pinmux_IDX_2 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_08_gpio2_io08_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_08_gpio2_io08_P_pinmux_IDX_3 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_08_gpio2_io08_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_08_gpio2_io08_P_pinmux_IDX_4 1075806632
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_08_gpio2_io08_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_08_gpio2_io08_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_08_gpio2_io08, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_08_gpio2_io08, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_08_gpio2_io08, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_08_gpio2_io08, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_08_gpio2_io08, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_08_gpio2_io08_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_08_gpio2_io08, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_08_gpio2_io08, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_08_gpio2_io08, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_08_gpio2_io08, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_08_gpio2_io08, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_08_gpio2_io08_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_08_gpio2_io08, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_08_gpio2_io08, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_08_gpio2_io08, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_08_gpio2_io08, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_08_gpio2_io08, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_08_gpio2_io08_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_08_gpio2_io08, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_08_gpio2_io08, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_08_gpio2_io08, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_08_gpio2_io08, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_08_gpio2_io08, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_08_gpio2_io08_P_pinmux_LEN 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_08_gpio2_io08_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_08_gpio2_io08_P_pin_pue 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_08_gpio2_io08_P_pin_pue_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_08_gpio2_io08_P_pin_pdrv 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_08_gpio2_io08_P_pin_pdrv_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_08_gpio2_io08_P_pin_lpsr 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_08_gpio2_io08_P_pin_lpsr_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_08_gpio2_io08_P_pin_snvs 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_08_gpio2_io08_P_pin_snvs_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_09_GPIO2_IO09
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_09_gpio2_io09
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_09_gpio2_io09_PATH "/soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_09_GPIO2_IO09"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_09_gpio2_io09_FULL_NAME "IOMUXC_GPIO_EMC_09_GPIO2_IO09"

/* Node parent (/soc/iomuxc@401f8000) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_09_gpio2_io09_PARENT DT_N_S_soc_S_iomuxc_401f8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_09_gpio2_io09_CHILD_IDX 63

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_09_gpio2_io09_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_09_gpio2_io09_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_09_gpio2_io09_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_09_gpio2_io09_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_09_gpio2_io09_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_09_gpio2_io09_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_09_gpio2_io09_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_09_gpio2_io09_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_09_gpio2_io09_ORD 75

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_09_gpio2_io09_REQUIRES_ORDS \
	13, /* /soc/iomuxc@401f8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_09_gpio2_io09_SUPPORTS_ORDS \
	98, /* /soc/gpio@401bc000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_09_gpio2_io09_EXISTS 1
#define DT_N_NODELABEL_iomuxc_gpio_emc_09_gpio2_io09 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_09_gpio2_io09

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_09_gpio2_io09_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_09_gpio2_io09_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_09_gpio2_io09_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_09_gpio2_io09_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_09_gpio2_io09_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_09_gpio2_io09_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_09_gpio2_io09_P_pinmux {1075806264 /* 0x401f8038 */, 5 /* 0x5 */, 0 /* 0x0 */, 0 /* 0x0 */, 1075806636 /* 0x401f81ac */}
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_09_gpio2_io09_P_pinmux_IDX_0 1075806264
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_09_gpio2_io09_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_09_gpio2_io09_P_pinmux_IDX_1 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_09_gpio2_io09_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_09_gpio2_io09_P_pinmux_IDX_2 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_09_gpio2_io09_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_09_gpio2_io09_P_pinmux_IDX_3 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_09_gpio2_io09_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_09_gpio2_io09_P_pinmux_IDX_4 1075806636
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_09_gpio2_io09_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_09_gpio2_io09_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_09_gpio2_io09, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_09_gpio2_io09, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_09_gpio2_io09, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_09_gpio2_io09, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_09_gpio2_io09, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_09_gpio2_io09_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_09_gpio2_io09, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_09_gpio2_io09, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_09_gpio2_io09, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_09_gpio2_io09, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_09_gpio2_io09, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_09_gpio2_io09_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_09_gpio2_io09, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_09_gpio2_io09, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_09_gpio2_io09, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_09_gpio2_io09, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_09_gpio2_io09, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_09_gpio2_io09_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_09_gpio2_io09, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_09_gpio2_io09, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_09_gpio2_io09, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_09_gpio2_io09, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_09_gpio2_io09, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_09_gpio2_io09_P_pinmux_LEN 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_09_gpio2_io09_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_09_gpio2_io09_P_pin_pue 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_09_gpio2_io09_P_pin_pue_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_09_gpio2_io09_P_pin_pdrv 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_09_gpio2_io09_P_pin_pdrv_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_09_gpio2_io09_P_pin_lpsr 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_09_gpio2_io09_P_pin_lpsr_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_09_gpio2_io09_P_pin_snvs 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_09_gpio2_io09_P_pin_snvs_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_10_GPIO2_IO10
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_10_gpio2_io10
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_10_gpio2_io10_PATH "/soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_10_GPIO2_IO10"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_10_gpio2_io10_FULL_NAME "IOMUXC_GPIO_EMC_10_GPIO2_IO10"

/* Node parent (/soc/iomuxc@401f8000) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_10_gpio2_io10_PARENT DT_N_S_soc_S_iomuxc_401f8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_10_gpio2_io10_CHILD_IDX 64

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_10_gpio2_io10_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_10_gpio2_io10_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_10_gpio2_io10_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_10_gpio2_io10_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_10_gpio2_io10_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_10_gpio2_io10_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_10_gpio2_io10_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_10_gpio2_io10_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_10_gpio2_io10_ORD 76

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_10_gpio2_io10_REQUIRES_ORDS \
	13, /* /soc/iomuxc@401f8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_10_gpio2_io10_SUPPORTS_ORDS \
	98, /* /soc/gpio@401bc000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_10_gpio2_io10_EXISTS 1
#define DT_N_NODELABEL_iomuxc_gpio_emc_10_gpio2_io10 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_10_gpio2_io10

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_10_gpio2_io10_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_10_gpio2_io10_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_10_gpio2_io10_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_10_gpio2_io10_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_10_gpio2_io10_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_10_gpio2_io10_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_10_gpio2_io10_P_pinmux {1075806268 /* 0x401f803c */, 5 /* 0x5 */, 0 /* 0x0 */, 0 /* 0x0 */, 1075806640 /* 0x401f81b0 */}
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_10_gpio2_io10_P_pinmux_IDX_0 1075806268
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_10_gpio2_io10_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_10_gpio2_io10_P_pinmux_IDX_1 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_10_gpio2_io10_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_10_gpio2_io10_P_pinmux_IDX_2 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_10_gpio2_io10_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_10_gpio2_io10_P_pinmux_IDX_3 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_10_gpio2_io10_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_10_gpio2_io10_P_pinmux_IDX_4 1075806640
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_10_gpio2_io10_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_10_gpio2_io10_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_10_gpio2_io10, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_10_gpio2_io10, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_10_gpio2_io10, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_10_gpio2_io10, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_10_gpio2_io10, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_10_gpio2_io10_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_10_gpio2_io10, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_10_gpio2_io10, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_10_gpio2_io10, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_10_gpio2_io10, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_10_gpio2_io10, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_10_gpio2_io10_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_10_gpio2_io10, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_10_gpio2_io10, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_10_gpio2_io10, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_10_gpio2_io10, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_10_gpio2_io10, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_10_gpio2_io10_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_10_gpio2_io10, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_10_gpio2_io10, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_10_gpio2_io10, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_10_gpio2_io10, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_10_gpio2_io10, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_10_gpio2_io10_P_pinmux_LEN 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_10_gpio2_io10_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_10_gpio2_io10_P_pin_pue 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_10_gpio2_io10_P_pin_pue_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_10_gpio2_io10_P_pin_pdrv 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_10_gpio2_io10_P_pin_pdrv_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_10_gpio2_io10_P_pin_lpsr 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_10_gpio2_io10_P_pin_lpsr_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_10_gpio2_io10_P_pin_snvs 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_10_gpio2_io10_P_pin_snvs_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_11_GPIO2_IO11
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_11_gpio2_io11
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_11_gpio2_io11_PATH "/soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_11_GPIO2_IO11"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_11_gpio2_io11_FULL_NAME "IOMUXC_GPIO_EMC_11_GPIO2_IO11"

/* Node parent (/soc/iomuxc@401f8000) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_11_gpio2_io11_PARENT DT_N_S_soc_S_iomuxc_401f8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_11_gpio2_io11_CHILD_IDX 65

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_11_gpio2_io11_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_11_gpio2_io11_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_11_gpio2_io11_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_11_gpio2_io11_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_11_gpio2_io11_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_11_gpio2_io11_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_11_gpio2_io11_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_11_gpio2_io11_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_11_gpio2_io11_ORD 77

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_11_gpio2_io11_REQUIRES_ORDS \
	13, /* /soc/iomuxc@401f8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_11_gpio2_io11_SUPPORTS_ORDS \
	98, /* /soc/gpio@401bc000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_11_gpio2_io11_EXISTS 1
#define DT_N_NODELABEL_iomuxc_gpio_emc_11_gpio2_io11 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_11_gpio2_io11

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_11_gpio2_io11_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_11_gpio2_io11_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_11_gpio2_io11_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_11_gpio2_io11_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_11_gpio2_io11_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_11_gpio2_io11_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_11_gpio2_io11_P_pinmux {1075806272 /* 0x401f8040 */, 5 /* 0x5 */, 0 /* 0x0 */, 0 /* 0x0 */, 1075806644 /* 0x401f81b4 */}
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_11_gpio2_io11_P_pinmux_IDX_0 1075806272
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_11_gpio2_io11_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_11_gpio2_io11_P_pinmux_IDX_1 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_11_gpio2_io11_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_11_gpio2_io11_P_pinmux_IDX_2 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_11_gpio2_io11_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_11_gpio2_io11_P_pinmux_IDX_3 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_11_gpio2_io11_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_11_gpio2_io11_P_pinmux_IDX_4 1075806644
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_11_gpio2_io11_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_11_gpio2_io11_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_11_gpio2_io11, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_11_gpio2_io11, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_11_gpio2_io11, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_11_gpio2_io11, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_11_gpio2_io11, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_11_gpio2_io11_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_11_gpio2_io11, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_11_gpio2_io11, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_11_gpio2_io11, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_11_gpio2_io11, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_11_gpio2_io11, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_11_gpio2_io11_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_11_gpio2_io11, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_11_gpio2_io11, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_11_gpio2_io11, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_11_gpio2_io11, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_11_gpio2_io11, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_11_gpio2_io11_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_11_gpio2_io11, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_11_gpio2_io11, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_11_gpio2_io11, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_11_gpio2_io11, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_11_gpio2_io11, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_11_gpio2_io11_P_pinmux_LEN 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_11_gpio2_io11_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_11_gpio2_io11_P_pin_pue 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_11_gpio2_io11_P_pin_pue_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_11_gpio2_io11_P_pin_pdrv 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_11_gpio2_io11_P_pin_pdrv_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_11_gpio2_io11_P_pin_lpsr 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_11_gpio2_io11_P_pin_lpsr_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_11_gpio2_io11_P_pin_snvs 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_11_gpio2_io11_P_pin_snvs_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_12_GPIO2_IO12
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_12_gpio2_io12
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_12_gpio2_io12_PATH "/soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_12_GPIO2_IO12"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_12_gpio2_io12_FULL_NAME "IOMUXC_GPIO_EMC_12_GPIO2_IO12"

/* Node parent (/soc/iomuxc@401f8000) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_12_gpio2_io12_PARENT DT_N_S_soc_S_iomuxc_401f8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_12_gpio2_io12_CHILD_IDX 66

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_12_gpio2_io12_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_12_gpio2_io12_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_12_gpio2_io12_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_12_gpio2_io12_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_12_gpio2_io12_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_12_gpio2_io12_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_12_gpio2_io12_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_12_gpio2_io12_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_12_gpio2_io12_ORD 78

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_12_gpio2_io12_REQUIRES_ORDS \
	13, /* /soc/iomuxc@401f8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_12_gpio2_io12_SUPPORTS_ORDS \
	98, /* /soc/gpio@401bc000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_12_gpio2_io12_EXISTS 1
#define DT_N_NODELABEL_iomuxc_gpio_emc_12_gpio2_io12 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_12_gpio2_io12

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_12_gpio2_io12_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_12_gpio2_io12_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_12_gpio2_io12_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_12_gpio2_io12_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_12_gpio2_io12_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_12_gpio2_io12_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_12_gpio2_io12_P_pinmux {1075806276 /* 0x401f8044 */, 5 /* 0x5 */, 0 /* 0x0 */, 0 /* 0x0 */, 1075806648 /* 0x401f81b8 */}
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_12_gpio2_io12_P_pinmux_IDX_0 1075806276
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_12_gpio2_io12_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_12_gpio2_io12_P_pinmux_IDX_1 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_12_gpio2_io12_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_12_gpio2_io12_P_pinmux_IDX_2 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_12_gpio2_io12_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_12_gpio2_io12_P_pinmux_IDX_3 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_12_gpio2_io12_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_12_gpio2_io12_P_pinmux_IDX_4 1075806648
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_12_gpio2_io12_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_12_gpio2_io12_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_12_gpio2_io12, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_12_gpio2_io12, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_12_gpio2_io12, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_12_gpio2_io12, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_12_gpio2_io12, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_12_gpio2_io12_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_12_gpio2_io12, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_12_gpio2_io12, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_12_gpio2_io12, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_12_gpio2_io12, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_12_gpio2_io12, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_12_gpio2_io12_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_12_gpio2_io12, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_12_gpio2_io12, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_12_gpio2_io12, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_12_gpio2_io12, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_12_gpio2_io12, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_12_gpio2_io12_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_12_gpio2_io12, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_12_gpio2_io12, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_12_gpio2_io12, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_12_gpio2_io12, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_12_gpio2_io12, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_12_gpio2_io12_P_pinmux_LEN 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_12_gpio2_io12_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_12_gpio2_io12_P_pin_pue 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_12_gpio2_io12_P_pin_pue_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_12_gpio2_io12_P_pin_pdrv 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_12_gpio2_io12_P_pin_pdrv_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_12_gpio2_io12_P_pin_lpsr 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_12_gpio2_io12_P_pin_lpsr_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_12_gpio2_io12_P_pin_snvs 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_12_gpio2_io12_P_pin_snvs_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_13_GPIO2_IO13
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_13_gpio2_io13
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_13_gpio2_io13_PATH "/soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_13_GPIO2_IO13"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_13_gpio2_io13_FULL_NAME "IOMUXC_GPIO_EMC_13_GPIO2_IO13"

/* Node parent (/soc/iomuxc@401f8000) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_13_gpio2_io13_PARENT DT_N_S_soc_S_iomuxc_401f8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_13_gpio2_io13_CHILD_IDX 67

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_13_gpio2_io13_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_13_gpio2_io13_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_13_gpio2_io13_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_13_gpio2_io13_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_13_gpio2_io13_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_13_gpio2_io13_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_13_gpio2_io13_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_13_gpio2_io13_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_13_gpio2_io13_ORD 79

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_13_gpio2_io13_REQUIRES_ORDS \
	13, /* /soc/iomuxc@401f8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_13_gpio2_io13_SUPPORTS_ORDS \
	98, /* /soc/gpio@401bc000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_13_gpio2_io13_EXISTS 1
#define DT_N_NODELABEL_iomuxc_gpio_emc_13_gpio2_io13 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_13_gpio2_io13

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_13_gpio2_io13_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_13_gpio2_io13_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_13_gpio2_io13_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_13_gpio2_io13_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_13_gpio2_io13_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_13_gpio2_io13_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_13_gpio2_io13_P_pinmux {1075806280 /* 0x401f8048 */, 5 /* 0x5 */, 0 /* 0x0 */, 0 /* 0x0 */, 1075806652 /* 0x401f81bc */}
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_13_gpio2_io13_P_pinmux_IDX_0 1075806280
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_13_gpio2_io13_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_13_gpio2_io13_P_pinmux_IDX_1 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_13_gpio2_io13_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_13_gpio2_io13_P_pinmux_IDX_2 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_13_gpio2_io13_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_13_gpio2_io13_P_pinmux_IDX_3 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_13_gpio2_io13_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_13_gpio2_io13_P_pinmux_IDX_4 1075806652
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_13_gpio2_io13_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_13_gpio2_io13_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_13_gpio2_io13, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_13_gpio2_io13, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_13_gpio2_io13, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_13_gpio2_io13, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_13_gpio2_io13, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_13_gpio2_io13_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_13_gpio2_io13, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_13_gpio2_io13, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_13_gpio2_io13, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_13_gpio2_io13, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_13_gpio2_io13, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_13_gpio2_io13_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_13_gpio2_io13, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_13_gpio2_io13, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_13_gpio2_io13, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_13_gpio2_io13, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_13_gpio2_io13, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_13_gpio2_io13_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_13_gpio2_io13, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_13_gpio2_io13, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_13_gpio2_io13, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_13_gpio2_io13, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_13_gpio2_io13, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_13_gpio2_io13_P_pinmux_LEN 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_13_gpio2_io13_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_13_gpio2_io13_P_pin_pue 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_13_gpio2_io13_P_pin_pue_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_13_gpio2_io13_P_pin_pdrv 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_13_gpio2_io13_P_pin_pdrv_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_13_gpio2_io13_P_pin_lpsr 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_13_gpio2_io13_P_pin_lpsr_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_13_gpio2_io13_P_pin_snvs 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_13_gpio2_io13_P_pin_snvs_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_14_GPIO2_IO14
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_14_gpio2_io14
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_14_gpio2_io14_PATH "/soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_14_GPIO2_IO14"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_14_gpio2_io14_FULL_NAME "IOMUXC_GPIO_EMC_14_GPIO2_IO14"

/* Node parent (/soc/iomuxc@401f8000) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_14_gpio2_io14_PARENT DT_N_S_soc_S_iomuxc_401f8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_14_gpio2_io14_CHILD_IDX 68

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_14_gpio2_io14_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_14_gpio2_io14_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_14_gpio2_io14_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_14_gpio2_io14_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_14_gpio2_io14_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_14_gpio2_io14_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_14_gpio2_io14_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_14_gpio2_io14_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_14_gpio2_io14_ORD 80

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_14_gpio2_io14_REQUIRES_ORDS \
	13, /* /soc/iomuxc@401f8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_14_gpio2_io14_SUPPORTS_ORDS \
	98, /* /soc/gpio@401bc000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_14_gpio2_io14_EXISTS 1
#define DT_N_NODELABEL_iomuxc_gpio_emc_14_gpio2_io14 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_14_gpio2_io14

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_14_gpio2_io14_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_14_gpio2_io14_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_14_gpio2_io14_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_14_gpio2_io14_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_14_gpio2_io14_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_14_gpio2_io14_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_14_gpio2_io14_P_pinmux {1075806284 /* 0x401f804c */, 5 /* 0x5 */, 0 /* 0x0 */, 0 /* 0x0 */, 1075806656 /* 0x401f81c0 */}
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_14_gpio2_io14_P_pinmux_IDX_0 1075806284
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_14_gpio2_io14_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_14_gpio2_io14_P_pinmux_IDX_1 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_14_gpio2_io14_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_14_gpio2_io14_P_pinmux_IDX_2 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_14_gpio2_io14_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_14_gpio2_io14_P_pinmux_IDX_3 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_14_gpio2_io14_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_14_gpio2_io14_P_pinmux_IDX_4 1075806656
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_14_gpio2_io14_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_14_gpio2_io14_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_14_gpio2_io14, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_14_gpio2_io14, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_14_gpio2_io14, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_14_gpio2_io14, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_14_gpio2_io14, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_14_gpio2_io14_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_14_gpio2_io14, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_14_gpio2_io14, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_14_gpio2_io14, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_14_gpio2_io14, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_14_gpio2_io14, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_14_gpio2_io14_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_14_gpio2_io14, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_14_gpio2_io14, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_14_gpio2_io14, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_14_gpio2_io14, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_14_gpio2_io14, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_14_gpio2_io14_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_14_gpio2_io14, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_14_gpio2_io14, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_14_gpio2_io14, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_14_gpio2_io14, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_14_gpio2_io14, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_14_gpio2_io14_P_pinmux_LEN 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_14_gpio2_io14_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_14_gpio2_io14_P_pin_pue 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_14_gpio2_io14_P_pin_pue_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_14_gpio2_io14_P_pin_pdrv 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_14_gpio2_io14_P_pin_pdrv_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_14_gpio2_io14_P_pin_lpsr 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_14_gpio2_io14_P_pin_lpsr_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_14_gpio2_io14_P_pin_snvs 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_14_gpio2_io14_P_pin_snvs_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_15_GPIO2_IO15
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_15_gpio2_io15
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_15_gpio2_io15_PATH "/soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_15_GPIO2_IO15"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_15_gpio2_io15_FULL_NAME "IOMUXC_GPIO_EMC_15_GPIO2_IO15"

/* Node parent (/soc/iomuxc@401f8000) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_15_gpio2_io15_PARENT DT_N_S_soc_S_iomuxc_401f8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_15_gpio2_io15_CHILD_IDX 69

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_15_gpio2_io15_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_15_gpio2_io15_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_15_gpio2_io15_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_15_gpio2_io15_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_15_gpio2_io15_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_15_gpio2_io15_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_15_gpio2_io15_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_15_gpio2_io15_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_15_gpio2_io15_ORD 81

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_15_gpio2_io15_REQUIRES_ORDS \
	13, /* /soc/iomuxc@401f8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_15_gpio2_io15_SUPPORTS_ORDS \
	98, /* /soc/gpio@401bc000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_15_gpio2_io15_EXISTS 1
#define DT_N_NODELABEL_iomuxc_gpio_emc_15_gpio2_io15 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_15_gpio2_io15

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_15_gpio2_io15_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_15_gpio2_io15_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_15_gpio2_io15_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_15_gpio2_io15_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_15_gpio2_io15_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_15_gpio2_io15_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_15_gpio2_io15_P_pinmux {1075806288 /* 0x401f8050 */, 5 /* 0x5 */, 0 /* 0x0 */, 0 /* 0x0 */, 1075806660 /* 0x401f81c4 */}
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_15_gpio2_io15_P_pinmux_IDX_0 1075806288
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_15_gpio2_io15_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_15_gpio2_io15_P_pinmux_IDX_1 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_15_gpio2_io15_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_15_gpio2_io15_P_pinmux_IDX_2 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_15_gpio2_io15_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_15_gpio2_io15_P_pinmux_IDX_3 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_15_gpio2_io15_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_15_gpio2_io15_P_pinmux_IDX_4 1075806660
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_15_gpio2_io15_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_15_gpio2_io15_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_15_gpio2_io15, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_15_gpio2_io15, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_15_gpio2_io15, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_15_gpio2_io15, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_15_gpio2_io15, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_15_gpio2_io15_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_15_gpio2_io15, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_15_gpio2_io15, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_15_gpio2_io15, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_15_gpio2_io15, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_15_gpio2_io15, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_15_gpio2_io15_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_15_gpio2_io15, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_15_gpio2_io15, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_15_gpio2_io15, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_15_gpio2_io15, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_15_gpio2_io15, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_15_gpio2_io15_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_15_gpio2_io15, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_15_gpio2_io15, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_15_gpio2_io15, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_15_gpio2_io15, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_15_gpio2_io15, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_15_gpio2_io15_P_pinmux_LEN 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_15_gpio2_io15_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_15_gpio2_io15_P_pin_pue 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_15_gpio2_io15_P_pin_pue_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_15_gpio2_io15_P_pin_pdrv 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_15_gpio2_io15_P_pin_pdrv_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_15_gpio2_io15_P_pin_lpsr 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_15_gpio2_io15_P_pin_lpsr_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_15_gpio2_io15_P_pin_snvs 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_15_gpio2_io15_P_pin_snvs_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_16_GPIO2_IO16
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_16_gpio2_io16
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_16_gpio2_io16_PATH "/soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_16_GPIO2_IO16"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_16_gpio2_io16_FULL_NAME "IOMUXC_GPIO_EMC_16_GPIO2_IO16"

/* Node parent (/soc/iomuxc@401f8000) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_16_gpio2_io16_PARENT DT_N_S_soc_S_iomuxc_401f8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_16_gpio2_io16_CHILD_IDX 70

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_16_gpio2_io16_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_16_gpio2_io16_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_16_gpio2_io16_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_16_gpio2_io16_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_16_gpio2_io16_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_16_gpio2_io16_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_16_gpio2_io16_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_16_gpio2_io16_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_16_gpio2_io16_ORD 82

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_16_gpio2_io16_REQUIRES_ORDS \
	13, /* /soc/iomuxc@401f8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_16_gpio2_io16_SUPPORTS_ORDS \
	98, /* /soc/gpio@401bc000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_16_gpio2_io16_EXISTS 1
#define DT_N_NODELABEL_iomuxc_gpio_emc_16_gpio2_io16 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_16_gpio2_io16

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_16_gpio2_io16_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_16_gpio2_io16_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_16_gpio2_io16_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_16_gpio2_io16_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_16_gpio2_io16_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_16_gpio2_io16_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_16_gpio2_io16_P_pinmux {1075806292 /* 0x401f8054 */, 5 /* 0x5 */, 0 /* 0x0 */, 0 /* 0x0 */, 1075806664 /* 0x401f81c8 */}
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_16_gpio2_io16_P_pinmux_IDX_0 1075806292
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_16_gpio2_io16_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_16_gpio2_io16_P_pinmux_IDX_1 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_16_gpio2_io16_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_16_gpio2_io16_P_pinmux_IDX_2 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_16_gpio2_io16_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_16_gpio2_io16_P_pinmux_IDX_3 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_16_gpio2_io16_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_16_gpio2_io16_P_pinmux_IDX_4 1075806664
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_16_gpio2_io16_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_16_gpio2_io16_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_16_gpio2_io16, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_16_gpio2_io16, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_16_gpio2_io16, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_16_gpio2_io16, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_16_gpio2_io16, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_16_gpio2_io16_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_16_gpio2_io16, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_16_gpio2_io16, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_16_gpio2_io16, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_16_gpio2_io16, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_16_gpio2_io16, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_16_gpio2_io16_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_16_gpio2_io16, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_16_gpio2_io16, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_16_gpio2_io16, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_16_gpio2_io16, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_16_gpio2_io16, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_16_gpio2_io16_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_16_gpio2_io16, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_16_gpio2_io16, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_16_gpio2_io16, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_16_gpio2_io16, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_16_gpio2_io16, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_16_gpio2_io16_P_pinmux_LEN 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_16_gpio2_io16_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_16_gpio2_io16_P_pin_pue 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_16_gpio2_io16_P_pin_pue_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_16_gpio2_io16_P_pin_pdrv 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_16_gpio2_io16_P_pin_pdrv_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_16_gpio2_io16_P_pin_lpsr 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_16_gpio2_io16_P_pin_lpsr_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_16_gpio2_io16_P_pin_snvs 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_16_gpio2_io16_P_pin_snvs_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_17_GPIO2_IO17
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_17_gpio2_io17
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_17_gpio2_io17_PATH "/soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_17_GPIO2_IO17"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_17_gpio2_io17_FULL_NAME "IOMUXC_GPIO_EMC_17_GPIO2_IO17"

/* Node parent (/soc/iomuxc@401f8000) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_17_gpio2_io17_PARENT DT_N_S_soc_S_iomuxc_401f8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_17_gpio2_io17_CHILD_IDX 71

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_17_gpio2_io17_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_17_gpio2_io17_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_17_gpio2_io17_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_17_gpio2_io17_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_17_gpio2_io17_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_17_gpio2_io17_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_17_gpio2_io17_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_17_gpio2_io17_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_17_gpio2_io17_ORD 83

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_17_gpio2_io17_REQUIRES_ORDS \
	13, /* /soc/iomuxc@401f8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_17_gpio2_io17_SUPPORTS_ORDS \
	98, /* /soc/gpio@401bc000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_17_gpio2_io17_EXISTS 1
#define DT_N_NODELABEL_iomuxc_gpio_emc_17_gpio2_io17 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_17_gpio2_io17

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_17_gpio2_io17_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_17_gpio2_io17_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_17_gpio2_io17_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_17_gpio2_io17_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_17_gpio2_io17_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_17_gpio2_io17_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_17_gpio2_io17_P_pinmux {1075806296 /* 0x401f8058 */, 5 /* 0x5 */, 0 /* 0x0 */, 0 /* 0x0 */, 1075806668 /* 0x401f81cc */}
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_17_gpio2_io17_P_pinmux_IDX_0 1075806296
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_17_gpio2_io17_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_17_gpio2_io17_P_pinmux_IDX_1 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_17_gpio2_io17_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_17_gpio2_io17_P_pinmux_IDX_2 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_17_gpio2_io17_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_17_gpio2_io17_P_pinmux_IDX_3 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_17_gpio2_io17_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_17_gpio2_io17_P_pinmux_IDX_4 1075806668
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_17_gpio2_io17_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_17_gpio2_io17_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_17_gpio2_io17, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_17_gpio2_io17, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_17_gpio2_io17, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_17_gpio2_io17, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_17_gpio2_io17, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_17_gpio2_io17_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_17_gpio2_io17, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_17_gpio2_io17, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_17_gpio2_io17, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_17_gpio2_io17, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_17_gpio2_io17, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_17_gpio2_io17_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_17_gpio2_io17, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_17_gpio2_io17, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_17_gpio2_io17, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_17_gpio2_io17, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_17_gpio2_io17, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_17_gpio2_io17_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_17_gpio2_io17, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_17_gpio2_io17, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_17_gpio2_io17, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_17_gpio2_io17, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_17_gpio2_io17, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_17_gpio2_io17_P_pinmux_LEN 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_17_gpio2_io17_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_17_gpio2_io17_P_pin_pue 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_17_gpio2_io17_P_pin_pue_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_17_gpio2_io17_P_pin_pdrv 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_17_gpio2_io17_P_pin_pdrv_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_17_gpio2_io17_P_pin_lpsr 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_17_gpio2_io17_P_pin_lpsr_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_17_gpio2_io17_P_pin_snvs 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_17_gpio2_io17_P_pin_snvs_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_18_GPIO2_IO18
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_18_gpio2_io18
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_18_gpio2_io18_PATH "/soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_18_GPIO2_IO18"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_18_gpio2_io18_FULL_NAME "IOMUXC_GPIO_EMC_18_GPIO2_IO18"

/* Node parent (/soc/iomuxc@401f8000) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_18_gpio2_io18_PARENT DT_N_S_soc_S_iomuxc_401f8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_18_gpio2_io18_CHILD_IDX 72

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_18_gpio2_io18_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_18_gpio2_io18_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_18_gpio2_io18_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_18_gpio2_io18_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_18_gpio2_io18_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_18_gpio2_io18_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_18_gpio2_io18_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_18_gpio2_io18_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_18_gpio2_io18_ORD 84

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_18_gpio2_io18_REQUIRES_ORDS \
	13, /* /soc/iomuxc@401f8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_18_gpio2_io18_SUPPORTS_ORDS \
	98, /* /soc/gpio@401bc000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_18_gpio2_io18_EXISTS 1
#define DT_N_NODELABEL_iomuxc_gpio_emc_18_gpio2_io18 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_18_gpio2_io18

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_18_gpio2_io18_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_18_gpio2_io18_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_18_gpio2_io18_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_18_gpio2_io18_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_18_gpio2_io18_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_18_gpio2_io18_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_18_gpio2_io18_P_pinmux {1075806300 /* 0x401f805c */, 5 /* 0x5 */, 0 /* 0x0 */, 0 /* 0x0 */, 1075806672 /* 0x401f81d0 */}
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_18_gpio2_io18_P_pinmux_IDX_0 1075806300
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_18_gpio2_io18_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_18_gpio2_io18_P_pinmux_IDX_1 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_18_gpio2_io18_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_18_gpio2_io18_P_pinmux_IDX_2 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_18_gpio2_io18_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_18_gpio2_io18_P_pinmux_IDX_3 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_18_gpio2_io18_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_18_gpio2_io18_P_pinmux_IDX_4 1075806672
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_18_gpio2_io18_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_18_gpio2_io18_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_18_gpio2_io18, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_18_gpio2_io18, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_18_gpio2_io18, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_18_gpio2_io18, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_18_gpio2_io18, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_18_gpio2_io18_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_18_gpio2_io18, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_18_gpio2_io18, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_18_gpio2_io18, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_18_gpio2_io18, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_18_gpio2_io18, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_18_gpio2_io18_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_18_gpio2_io18, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_18_gpio2_io18, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_18_gpio2_io18, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_18_gpio2_io18, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_18_gpio2_io18, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_18_gpio2_io18_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_18_gpio2_io18, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_18_gpio2_io18, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_18_gpio2_io18, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_18_gpio2_io18, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_18_gpio2_io18, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_18_gpio2_io18_P_pinmux_LEN 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_18_gpio2_io18_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_18_gpio2_io18_P_pin_pue 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_18_gpio2_io18_P_pin_pue_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_18_gpio2_io18_P_pin_pdrv 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_18_gpio2_io18_P_pin_pdrv_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_18_gpio2_io18_P_pin_lpsr 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_18_gpio2_io18_P_pin_lpsr_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_18_gpio2_io18_P_pin_snvs 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_18_gpio2_io18_P_pin_snvs_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_19_GPIO2_IO19
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_19_gpio2_io19
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_19_gpio2_io19_PATH "/soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_19_GPIO2_IO19"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_19_gpio2_io19_FULL_NAME "IOMUXC_GPIO_EMC_19_GPIO2_IO19"

/* Node parent (/soc/iomuxc@401f8000) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_19_gpio2_io19_PARENT DT_N_S_soc_S_iomuxc_401f8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_19_gpio2_io19_CHILD_IDX 73

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_19_gpio2_io19_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_19_gpio2_io19_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_19_gpio2_io19_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_19_gpio2_io19_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_19_gpio2_io19_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_19_gpio2_io19_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_19_gpio2_io19_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_19_gpio2_io19_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_19_gpio2_io19_ORD 85

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_19_gpio2_io19_REQUIRES_ORDS \
	13, /* /soc/iomuxc@401f8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_19_gpio2_io19_SUPPORTS_ORDS \
	98, /* /soc/gpio@401bc000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_19_gpio2_io19_EXISTS 1
#define DT_N_NODELABEL_iomuxc_gpio_emc_19_gpio2_io19 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_19_gpio2_io19

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_19_gpio2_io19_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_19_gpio2_io19_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_19_gpio2_io19_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_19_gpio2_io19_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_19_gpio2_io19_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_19_gpio2_io19_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_19_gpio2_io19_P_pinmux {1075806304 /* 0x401f8060 */, 5 /* 0x5 */, 0 /* 0x0 */, 0 /* 0x0 */, 1075806676 /* 0x401f81d4 */}
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_19_gpio2_io19_P_pinmux_IDX_0 1075806304
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_19_gpio2_io19_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_19_gpio2_io19_P_pinmux_IDX_1 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_19_gpio2_io19_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_19_gpio2_io19_P_pinmux_IDX_2 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_19_gpio2_io19_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_19_gpio2_io19_P_pinmux_IDX_3 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_19_gpio2_io19_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_19_gpio2_io19_P_pinmux_IDX_4 1075806676
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_19_gpio2_io19_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_19_gpio2_io19_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_19_gpio2_io19, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_19_gpio2_io19, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_19_gpio2_io19, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_19_gpio2_io19, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_19_gpio2_io19, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_19_gpio2_io19_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_19_gpio2_io19, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_19_gpio2_io19, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_19_gpio2_io19, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_19_gpio2_io19, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_19_gpio2_io19, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_19_gpio2_io19_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_19_gpio2_io19, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_19_gpio2_io19, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_19_gpio2_io19, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_19_gpio2_io19, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_19_gpio2_io19, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_19_gpio2_io19_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_19_gpio2_io19, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_19_gpio2_io19, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_19_gpio2_io19, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_19_gpio2_io19, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_19_gpio2_io19, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_19_gpio2_io19_P_pinmux_LEN 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_19_gpio2_io19_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_19_gpio2_io19_P_pin_pue 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_19_gpio2_io19_P_pin_pue_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_19_gpio2_io19_P_pin_pdrv 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_19_gpio2_io19_P_pin_pdrv_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_19_gpio2_io19_P_pin_lpsr 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_19_gpio2_io19_P_pin_lpsr_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_19_gpio2_io19_P_pin_snvs 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_19_gpio2_io19_P_pin_snvs_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_20_GPIO2_IO20
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_20_gpio2_io20
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_20_gpio2_io20_PATH "/soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_20_GPIO2_IO20"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_20_gpio2_io20_FULL_NAME "IOMUXC_GPIO_EMC_20_GPIO2_IO20"

/* Node parent (/soc/iomuxc@401f8000) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_20_gpio2_io20_PARENT DT_N_S_soc_S_iomuxc_401f8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_20_gpio2_io20_CHILD_IDX 74

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_20_gpio2_io20_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_20_gpio2_io20_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_20_gpio2_io20_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_20_gpio2_io20_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_20_gpio2_io20_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_20_gpio2_io20_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_20_gpio2_io20_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_20_gpio2_io20_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_20_gpio2_io20_ORD 86

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_20_gpio2_io20_REQUIRES_ORDS \
	13, /* /soc/iomuxc@401f8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_20_gpio2_io20_SUPPORTS_ORDS \
	98, /* /soc/gpio@401bc000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_20_gpio2_io20_EXISTS 1
#define DT_N_NODELABEL_iomuxc_gpio_emc_20_gpio2_io20 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_20_gpio2_io20

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_20_gpio2_io20_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_20_gpio2_io20_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_20_gpio2_io20_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_20_gpio2_io20_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_20_gpio2_io20_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_20_gpio2_io20_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_20_gpio2_io20_P_pinmux {1075806308 /* 0x401f8064 */, 5 /* 0x5 */, 0 /* 0x0 */, 0 /* 0x0 */, 1075806680 /* 0x401f81d8 */}
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_20_gpio2_io20_P_pinmux_IDX_0 1075806308
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_20_gpio2_io20_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_20_gpio2_io20_P_pinmux_IDX_1 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_20_gpio2_io20_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_20_gpio2_io20_P_pinmux_IDX_2 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_20_gpio2_io20_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_20_gpio2_io20_P_pinmux_IDX_3 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_20_gpio2_io20_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_20_gpio2_io20_P_pinmux_IDX_4 1075806680
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_20_gpio2_io20_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_20_gpio2_io20_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_20_gpio2_io20, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_20_gpio2_io20, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_20_gpio2_io20, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_20_gpio2_io20, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_20_gpio2_io20, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_20_gpio2_io20_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_20_gpio2_io20, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_20_gpio2_io20, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_20_gpio2_io20, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_20_gpio2_io20, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_20_gpio2_io20, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_20_gpio2_io20_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_20_gpio2_io20, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_20_gpio2_io20, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_20_gpio2_io20, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_20_gpio2_io20, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_20_gpio2_io20, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_20_gpio2_io20_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_20_gpio2_io20, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_20_gpio2_io20, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_20_gpio2_io20, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_20_gpio2_io20, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_20_gpio2_io20, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_20_gpio2_io20_P_pinmux_LEN 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_20_gpio2_io20_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_20_gpio2_io20_P_pin_pue 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_20_gpio2_io20_P_pin_pue_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_20_gpio2_io20_P_pin_pdrv 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_20_gpio2_io20_P_pin_pdrv_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_20_gpio2_io20_P_pin_lpsr 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_20_gpio2_io20_P_pin_lpsr_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_20_gpio2_io20_P_pin_snvs 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_20_gpio2_io20_P_pin_snvs_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_21_GPIO2_IO21
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_21_gpio2_io21
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_21_gpio2_io21_PATH "/soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_21_GPIO2_IO21"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_21_gpio2_io21_FULL_NAME "IOMUXC_GPIO_EMC_21_GPIO2_IO21"

/* Node parent (/soc/iomuxc@401f8000) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_21_gpio2_io21_PARENT DT_N_S_soc_S_iomuxc_401f8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_21_gpio2_io21_CHILD_IDX 75

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_21_gpio2_io21_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_21_gpio2_io21_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_21_gpio2_io21_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_21_gpio2_io21_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_21_gpio2_io21_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_21_gpio2_io21_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_21_gpio2_io21_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_21_gpio2_io21_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_21_gpio2_io21_ORD 87

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_21_gpio2_io21_REQUIRES_ORDS \
	13, /* /soc/iomuxc@401f8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_21_gpio2_io21_SUPPORTS_ORDS \
	98, /* /soc/gpio@401bc000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_21_gpio2_io21_EXISTS 1
#define DT_N_NODELABEL_iomuxc_gpio_emc_21_gpio2_io21 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_21_gpio2_io21

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_21_gpio2_io21_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_21_gpio2_io21_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_21_gpio2_io21_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_21_gpio2_io21_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_21_gpio2_io21_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_21_gpio2_io21_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_21_gpio2_io21_P_pinmux {1075806312 /* 0x401f8068 */, 5 /* 0x5 */, 0 /* 0x0 */, 0 /* 0x0 */, 1075806684 /* 0x401f81dc */}
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_21_gpio2_io21_P_pinmux_IDX_0 1075806312
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_21_gpio2_io21_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_21_gpio2_io21_P_pinmux_IDX_1 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_21_gpio2_io21_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_21_gpio2_io21_P_pinmux_IDX_2 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_21_gpio2_io21_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_21_gpio2_io21_P_pinmux_IDX_3 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_21_gpio2_io21_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_21_gpio2_io21_P_pinmux_IDX_4 1075806684
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_21_gpio2_io21_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_21_gpio2_io21_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_21_gpio2_io21, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_21_gpio2_io21, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_21_gpio2_io21, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_21_gpio2_io21, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_21_gpio2_io21, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_21_gpio2_io21_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_21_gpio2_io21, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_21_gpio2_io21, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_21_gpio2_io21, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_21_gpio2_io21, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_21_gpio2_io21, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_21_gpio2_io21_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_21_gpio2_io21, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_21_gpio2_io21, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_21_gpio2_io21, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_21_gpio2_io21, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_21_gpio2_io21, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_21_gpio2_io21_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_21_gpio2_io21, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_21_gpio2_io21, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_21_gpio2_io21, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_21_gpio2_io21, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_21_gpio2_io21, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_21_gpio2_io21_P_pinmux_LEN 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_21_gpio2_io21_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_21_gpio2_io21_P_pin_pue 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_21_gpio2_io21_P_pin_pue_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_21_gpio2_io21_P_pin_pdrv 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_21_gpio2_io21_P_pin_pdrv_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_21_gpio2_io21_P_pin_lpsr 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_21_gpio2_io21_P_pin_lpsr_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_21_gpio2_io21_P_pin_snvs 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_21_gpio2_io21_P_pin_snvs_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_22_GPIO2_IO22
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_22_gpio2_io22
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_22_gpio2_io22_PATH "/soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_22_GPIO2_IO22"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_22_gpio2_io22_FULL_NAME "IOMUXC_GPIO_EMC_22_GPIO2_IO22"

/* Node parent (/soc/iomuxc@401f8000) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_22_gpio2_io22_PARENT DT_N_S_soc_S_iomuxc_401f8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_22_gpio2_io22_CHILD_IDX 76

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_22_gpio2_io22_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_22_gpio2_io22_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_22_gpio2_io22_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_22_gpio2_io22_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_22_gpio2_io22_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_22_gpio2_io22_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_22_gpio2_io22_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_22_gpio2_io22_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_22_gpio2_io22_ORD 88

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_22_gpio2_io22_REQUIRES_ORDS \
	13, /* /soc/iomuxc@401f8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_22_gpio2_io22_SUPPORTS_ORDS \
	98, /* /soc/gpio@401bc000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_22_gpio2_io22_EXISTS 1
#define DT_N_NODELABEL_iomuxc_gpio_emc_22_gpio2_io22 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_22_gpio2_io22

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_22_gpio2_io22_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_22_gpio2_io22_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_22_gpio2_io22_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_22_gpio2_io22_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_22_gpio2_io22_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_22_gpio2_io22_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_22_gpio2_io22_P_pinmux {1075806316 /* 0x401f806c */, 5 /* 0x5 */, 0 /* 0x0 */, 0 /* 0x0 */, 1075806688 /* 0x401f81e0 */}
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_22_gpio2_io22_P_pinmux_IDX_0 1075806316
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_22_gpio2_io22_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_22_gpio2_io22_P_pinmux_IDX_1 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_22_gpio2_io22_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_22_gpio2_io22_P_pinmux_IDX_2 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_22_gpio2_io22_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_22_gpio2_io22_P_pinmux_IDX_3 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_22_gpio2_io22_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_22_gpio2_io22_P_pinmux_IDX_4 1075806688
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_22_gpio2_io22_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_22_gpio2_io22_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_22_gpio2_io22, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_22_gpio2_io22, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_22_gpio2_io22, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_22_gpio2_io22, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_22_gpio2_io22, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_22_gpio2_io22_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_22_gpio2_io22, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_22_gpio2_io22, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_22_gpio2_io22, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_22_gpio2_io22, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_22_gpio2_io22, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_22_gpio2_io22_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_22_gpio2_io22, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_22_gpio2_io22, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_22_gpio2_io22, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_22_gpio2_io22, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_22_gpio2_io22, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_22_gpio2_io22_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_22_gpio2_io22, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_22_gpio2_io22, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_22_gpio2_io22, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_22_gpio2_io22, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_22_gpio2_io22, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_22_gpio2_io22_P_pinmux_LEN 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_22_gpio2_io22_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_22_gpio2_io22_P_pin_pue 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_22_gpio2_io22_P_pin_pue_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_22_gpio2_io22_P_pin_pdrv 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_22_gpio2_io22_P_pin_pdrv_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_22_gpio2_io22_P_pin_lpsr 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_22_gpio2_io22_P_pin_lpsr_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_22_gpio2_io22_P_pin_snvs 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_22_gpio2_io22_P_pin_snvs_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_23_GPIO2_IO23
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_23_gpio2_io23
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_23_gpio2_io23_PATH "/soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_23_GPIO2_IO23"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_23_gpio2_io23_FULL_NAME "IOMUXC_GPIO_EMC_23_GPIO2_IO23"

/* Node parent (/soc/iomuxc@401f8000) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_23_gpio2_io23_PARENT DT_N_S_soc_S_iomuxc_401f8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_23_gpio2_io23_CHILD_IDX 77

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_23_gpio2_io23_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_23_gpio2_io23_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_23_gpio2_io23_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_23_gpio2_io23_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_23_gpio2_io23_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_23_gpio2_io23_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_23_gpio2_io23_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_23_gpio2_io23_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_23_gpio2_io23_ORD 89

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_23_gpio2_io23_REQUIRES_ORDS \
	13, /* /soc/iomuxc@401f8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_23_gpio2_io23_SUPPORTS_ORDS \
	98, /* /soc/gpio@401bc000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_23_gpio2_io23_EXISTS 1
#define DT_N_NODELABEL_iomuxc_gpio_emc_23_gpio2_io23 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_23_gpio2_io23

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_23_gpio2_io23_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_23_gpio2_io23_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_23_gpio2_io23_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_23_gpio2_io23_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_23_gpio2_io23_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_23_gpio2_io23_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_23_gpio2_io23_P_pinmux {1075806320 /* 0x401f8070 */, 5 /* 0x5 */, 0 /* 0x0 */, 0 /* 0x0 */, 1075806692 /* 0x401f81e4 */}
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_23_gpio2_io23_P_pinmux_IDX_0 1075806320
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_23_gpio2_io23_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_23_gpio2_io23_P_pinmux_IDX_1 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_23_gpio2_io23_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_23_gpio2_io23_P_pinmux_IDX_2 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_23_gpio2_io23_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_23_gpio2_io23_P_pinmux_IDX_3 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_23_gpio2_io23_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_23_gpio2_io23_P_pinmux_IDX_4 1075806692
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_23_gpio2_io23_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_23_gpio2_io23_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_23_gpio2_io23, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_23_gpio2_io23, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_23_gpio2_io23, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_23_gpio2_io23, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_23_gpio2_io23, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_23_gpio2_io23_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_23_gpio2_io23, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_23_gpio2_io23, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_23_gpio2_io23, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_23_gpio2_io23, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_23_gpio2_io23, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_23_gpio2_io23_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_23_gpio2_io23, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_23_gpio2_io23, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_23_gpio2_io23, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_23_gpio2_io23, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_23_gpio2_io23, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_23_gpio2_io23_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_23_gpio2_io23, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_23_gpio2_io23, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_23_gpio2_io23, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_23_gpio2_io23, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_23_gpio2_io23, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_23_gpio2_io23_P_pinmux_LEN 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_23_gpio2_io23_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_23_gpio2_io23_P_pin_pue 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_23_gpio2_io23_P_pin_pue_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_23_gpio2_io23_P_pin_pdrv 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_23_gpio2_io23_P_pin_pdrv_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_23_gpio2_io23_P_pin_lpsr 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_23_gpio2_io23_P_pin_lpsr_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_23_gpio2_io23_P_pin_snvs 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_23_gpio2_io23_P_pin_snvs_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_24_GPIO2_IO24
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_24_gpio2_io24
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_24_gpio2_io24_PATH "/soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_24_GPIO2_IO24"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_24_gpio2_io24_FULL_NAME "IOMUXC_GPIO_EMC_24_GPIO2_IO24"

/* Node parent (/soc/iomuxc@401f8000) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_24_gpio2_io24_PARENT DT_N_S_soc_S_iomuxc_401f8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_24_gpio2_io24_CHILD_IDX 78

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_24_gpio2_io24_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_24_gpio2_io24_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_24_gpio2_io24_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_24_gpio2_io24_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_24_gpio2_io24_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_24_gpio2_io24_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_24_gpio2_io24_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_24_gpio2_io24_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_24_gpio2_io24_ORD 90

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_24_gpio2_io24_REQUIRES_ORDS \
	13, /* /soc/iomuxc@401f8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_24_gpio2_io24_SUPPORTS_ORDS \
	98, /* /soc/gpio@401bc000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_24_gpio2_io24_EXISTS 1
#define DT_N_NODELABEL_iomuxc_gpio_emc_24_gpio2_io24 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_24_gpio2_io24

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_24_gpio2_io24_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_24_gpio2_io24_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_24_gpio2_io24_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_24_gpio2_io24_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_24_gpio2_io24_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_24_gpio2_io24_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_24_gpio2_io24_P_pinmux {1075806324 /* 0x401f8074 */, 5 /* 0x5 */, 0 /* 0x0 */, 0 /* 0x0 */, 1075806696 /* 0x401f81e8 */}
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_24_gpio2_io24_P_pinmux_IDX_0 1075806324
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_24_gpio2_io24_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_24_gpio2_io24_P_pinmux_IDX_1 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_24_gpio2_io24_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_24_gpio2_io24_P_pinmux_IDX_2 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_24_gpio2_io24_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_24_gpio2_io24_P_pinmux_IDX_3 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_24_gpio2_io24_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_24_gpio2_io24_P_pinmux_IDX_4 1075806696
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_24_gpio2_io24_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_24_gpio2_io24_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_24_gpio2_io24, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_24_gpio2_io24, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_24_gpio2_io24, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_24_gpio2_io24, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_24_gpio2_io24, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_24_gpio2_io24_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_24_gpio2_io24, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_24_gpio2_io24, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_24_gpio2_io24, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_24_gpio2_io24, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_24_gpio2_io24, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_24_gpio2_io24_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_24_gpio2_io24, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_24_gpio2_io24, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_24_gpio2_io24, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_24_gpio2_io24, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_24_gpio2_io24, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_24_gpio2_io24_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_24_gpio2_io24, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_24_gpio2_io24, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_24_gpio2_io24, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_24_gpio2_io24, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_24_gpio2_io24, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_24_gpio2_io24_P_pinmux_LEN 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_24_gpio2_io24_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_24_gpio2_io24_P_pin_pue 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_24_gpio2_io24_P_pin_pue_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_24_gpio2_io24_P_pin_pdrv 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_24_gpio2_io24_P_pin_pdrv_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_24_gpio2_io24_P_pin_lpsr 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_24_gpio2_io24_P_pin_lpsr_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_24_gpio2_io24_P_pin_snvs 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_24_gpio2_io24_P_pin_snvs_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_25_GPIO2_IO25
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_25_gpio2_io25
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_25_gpio2_io25_PATH "/soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_25_GPIO2_IO25"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_25_gpio2_io25_FULL_NAME "IOMUXC_GPIO_EMC_25_GPIO2_IO25"

/* Node parent (/soc/iomuxc@401f8000) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_25_gpio2_io25_PARENT DT_N_S_soc_S_iomuxc_401f8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_25_gpio2_io25_CHILD_IDX 79

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_25_gpio2_io25_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_25_gpio2_io25_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_25_gpio2_io25_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_25_gpio2_io25_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_25_gpio2_io25_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_25_gpio2_io25_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_25_gpio2_io25_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_25_gpio2_io25_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_25_gpio2_io25_ORD 91

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_25_gpio2_io25_REQUIRES_ORDS \
	13, /* /soc/iomuxc@401f8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_25_gpio2_io25_SUPPORTS_ORDS \
	98, /* /soc/gpio@401bc000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_25_gpio2_io25_EXISTS 1
#define DT_N_NODELABEL_iomuxc_gpio_emc_25_gpio2_io25 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_25_gpio2_io25

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_25_gpio2_io25_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_25_gpio2_io25_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_25_gpio2_io25_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_25_gpio2_io25_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_25_gpio2_io25_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_25_gpio2_io25_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_25_gpio2_io25_P_pinmux {1075806328 /* 0x401f8078 */, 5 /* 0x5 */, 0 /* 0x0 */, 0 /* 0x0 */, 1075806700 /* 0x401f81ec */}
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_25_gpio2_io25_P_pinmux_IDX_0 1075806328
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_25_gpio2_io25_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_25_gpio2_io25_P_pinmux_IDX_1 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_25_gpio2_io25_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_25_gpio2_io25_P_pinmux_IDX_2 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_25_gpio2_io25_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_25_gpio2_io25_P_pinmux_IDX_3 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_25_gpio2_io25_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_25_gpio2_io25_P_pinmux_IDX_4 1075806700
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_25_gpio2_io25_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_25_gpio2_io25_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_25_gpio2_io25, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_25_gpio2_io25, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_25_gpio2_io25, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_25_gpio2_io25, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_25_gpio2_io25, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_25_gpio2_io25_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_25_gpio2_io25, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_25_gpio2_io25, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_25_gpio2_io25, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_25_gpio2_io25, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_25_gpio2_io25, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_25_gpio2_io25_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_25_gpio2_io25, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_25_gpio2_io25, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_25_gpio2_io25, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_25_gpio2_io25, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_25_gpio2_io25, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_25_gpio2_io25_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_25_gpio2_io25, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_25_gpio2_io25, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_25_gpio2_io25, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_25_gpio2_io25, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_25_gpio2_io25, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_25_gpio2_io25_P_pinmux_LEN 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_25_gpio2_io25_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_25_gpio2_io25_P_pin_pue 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_25_gpio2_io25_P_pin_pue_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_25_gpio2_io25_P_pin_pdrv 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_25_gpio2_io25_P_pin_pdrv_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_25_gpio2_io25_P_pin_lpsr 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_25_gpio2_io25_P_pin_lpsr_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_25_gpio2_io25_P_pin_snvs 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_25_gpio2_io25_P_pin_snvs_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_26_GPIO2_IO26
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_26_gpio2_io26
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_26_gpio2_io26_PATH "/soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_26_GPIO2_IO26"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_26_gpio2_io26_FULL_NAME "IOMUXC_GPIO_EMC_26_GPIO2_IO26"

/* Node parent (/soc/iomuxc@401f8000) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_26_gpio2_io26_PARENT DT_N_S_soc_S_iomuxc_401f8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_26_gpio2_io26_CHILD_IDX 80

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_26_gpio2_io26_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_26_gpio2_io26_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_26_gpio2_io26_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_26_gpio2_io26_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_26_gpio2_io26_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_26_gpio2_io26_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_26_gpio2_io26_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_26_gpio2_io26_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_26_gpio2_io26_ORD 92

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_26_gpio2_io26_REQUIRES_ORDS \
	13, /* /soc/iomuxc@401f8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_26_gpio2_io26_SUPPORTS_ORDS \
	98, /* /soc/gpio@401bc000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_26_gpio2_io26_EXISTS 1
#define DT_N_NODELABEL_iomuxc_gpio_emc_26_gpio2_io26 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_26_gpio2_io26

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_26_gpio2_io26_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_26_gpio2_io26_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_26_gpio2_io26_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_26_gpio2_io26_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_26_gpio2_io26_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_26_gpio2_io26_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_26_gpio2_io26_P_pinmux {1075806332 /* 0x401f807c */, 5 /* 0x5 */, 0 /* 0x0 */, 0 /* 0x0 */, 1075806704 /* 0x401f81f0 */}
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_26_gpio2_io26_P_pinmux_IDX_0 1075806332
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_26_gpio2_io26_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_26_gpio2_io26_P_pinmux_IDX_1 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_26_gpio2_io26_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_26_gpio2_io26_P_pinmux_IDX_2 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_26_gpio2_io26_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_26_gpio2_io26_P_pinmux_IDX_3 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_26_gpio2_io26_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_26_gpio2_io26_P_pinmux_IDX_4 1075806704
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_26_gpio2_io26_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_26_gpio2_io26_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_26_gpio2_io26, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_26_gpio2_io26, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_26_gpio2_io26, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_26_gpio2_io26, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_26_gpio2_io26, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_26_gpio2_io26_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_26_gpio2_io26, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_26_gpio2_io26, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_26_gpio2_io26, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_26_gpio2_io26, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_26_gpio2_io26, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_26_gpio2_io26_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_26_gpio2_io26, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_26_gpio2_io26, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_26_gpio2_io26, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_26_gpio2_io26, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_26_gpio2_io26, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_26_gpio2_io26_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_26_gpio2_io26, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_26_gpio2_io26, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_26_gpio2_io26, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_26_gpio2_io26, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_26_gpio2_io26, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_26_gpio2_io26_P_pinmux_LEN 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_26_gpio2_io26_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_26_gpio2_io26_P_pin_pue 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_26_gpio2_io26_P_pin_pue_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_26_gpio2_io26_P_pin_pdrv 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_26_gpio2_io26_P_pin_pdrv_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_26_gpio2_io26_P_pin_lpsr 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_26_gpio2_io26_P_pin_lpsr_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_26_gpio2_io26_P_pin_snvs 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_26_gpio2_io26_P_pin_snvs_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_27_GPIO2_IO27
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_27_gpio2_io27
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_27_gpio2_io27_PATH "/soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_27_GPIO2_IO27"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_27_gpio2_io27_FULL_NAME "IOMUXC_GPIO_EMC_27_GPIO2_IO27"

/* Node parent (/soc/iomuxc@401f8000) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_27_gpio2_io27_PARENT DT_N_S_soc_S_iomuxc_401f8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_27_gpio2_io27_CHILD_IDX 81

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_27_gpio2_io27_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_27_gpio2_io27_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_27_gpio2_io27_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_27_gpio2_io27_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_27_gpio2_io27_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_27_gpio2_io27_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_27_gpio2_io27_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_27_gpio2_io27_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_27_gpio2_io27_ORD 93

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_27_gpio2_io27_REQUIRES_ORDS \
	13, /* /soc/iomuxc@401f8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_27_gpio2_io27_SUPPORTS_ORDS \
	98, /* /soc/gpio@401bc000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_27_gpio2_io27_EXISTS 1
#define DT_N_NODELABEL_iomuxc_gpio_emc_27_gpio2_io27 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_27_gpio2_io27

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_27_gpio2_io27_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_27_gpio2_io27_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_27_gpio2_io27_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_27_gpio2_io27_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_27_gpio2_io27_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_27_gpio2_io27_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_27_gpio2_io27_P_pinmux {1075806336 /* 0x401f8080 */, 5 /* 0x5 */, 0 /* 0x0 */, 0 /* 0x0 */, 1075806708 /* 0x401f81f4 */}
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_27_gpio2_io27_P_pinmux_IDX_0 1075806336
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_27_gpio2_io27_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_27_gpio2_io27_P_pinmux_IDX_1 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_27_gpio2_io27_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_27_gpio2_io27_P_pinmux_IDX_2 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_27_gpio2_io27_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_27_gpio2_io27_P_pinmux_IDX_3 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_27_gpio2_io27_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_27_gpio2_io27_P_pinmux_IDX_4 1075806708
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_27_gpio2_io27_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_27_gpio2_io27_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_27_gpio2_io27, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_27_gpio2_io27, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_27_gpio2_io27, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_27_gpio2_io27, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_27_gpio2_io27, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_27_gpio2_io27_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_27_gpio2_io27, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_27_gpio2_io27, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_27_gpio2_io27, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_27_gpio2_io27, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_27_gpio2_io27, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_27_gpio2_io27_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_27_gpio2_io27, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_27_gpio2_io27, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_27_gpio2_io27, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_27_gpio2_io27, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_27_gpio2_io27, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_27_gpio2_io27_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_27_gpio2_io27, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_27_gpio2_io27, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_27_gpio2_io27, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_27_gpio2_io27, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_27_gpio2_io27, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_27_gpio2_io27_P_pinmux_LEN 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_27_gpio2_io27_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_27_gpio2_io27_P_pin_pue 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_27_gpio2_io27_P_pin_pue_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_27_gpio2_io27_P_pin_pdrv 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_27_gpio2_io27_P_pin_pdrv_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_27_gpio2_io27_P_pin_lpsr 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_27_gpio2_io27_P_pin_lpsr_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_27_gpio2_io27_P_pin_snvs 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_27_gpio2_io27_P_pin_snvs_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_28_GPIO2_IO28
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_gpio2_io28
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_gpio2_io28_PATH "/soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_28_GPIO2_IO28"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_gpio2_io28_FULL_NAME "IOMUXC_GPIO_EMC_28_GPIO2_IO28"

/* Node parent (/soc/iomuxc@401f8000) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_gpio2_io28_PARENT DT_N_S_soc_S_iomuxc_401f8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_gpio2_io28_CHILD_IDX 82

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_gpio2_io28_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_gpio2_io28_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_gpio2_io28_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_gpio2_io28_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_gpio2_io28_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_gpio2_io28_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_gpio2_io28_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_gpio2_io28_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_gpio2_io28_ORD 94

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_gpio2_io28_REQUIRES_ORDS \
	13, /* /soc/iomuxc@401f8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_gpio2_io28_SUPPORTS_ORDS \
	98, /* /soc/gpio@401bc000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_gpio2_io28_EXISTS 1
#define DT_N_NODELABEL_iomuxc_gpio_emc_28_gpio2_io28 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_gpio2_io28

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_gpio2_io28_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_gpio2_io28_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_gpio2_io28_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_gpio2_io28_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_gpio2_io28_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_gpio2_io28_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_gpio2_io28_P_pinmux {1075806340 /* 0x401f8084 */, 5 /* 0x5 */, 0 /* 0x0 */, 0 /* 0x0 */, 1075806712 /* 0x401f81f8 */}
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_gpio2_io28_P_pinmux_IDX_0 1075806340
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_gpio2_io28_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_gpio2_io28_P_pinmux_IDX_1 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_gpio2_io28_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_gpio2_io28_P_pinmux_IDX_2 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_gpio2_io28_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_gpio2_io28_P_pinmux_IDX_3 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_gpio2_io28_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_gpio2_io28_P_pinmux_IDX_4 1075806712
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_gpio2_io28_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_gpio2_io28_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_gpio2_io28, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_gpio2_io28, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_gpio2_io28, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_gpio2_io28, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_gpio2_io28, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_gpio2_io28_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_gpio2_io28, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_gpio2_io28, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_gpio2_io28, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_gpio2_io28, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_gpio2_io28, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_gpio2_io28_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_gpio2_io28, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_gpio2_io28, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_gpio2_io28, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_gpio2_io28, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_gpio2_io28, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_gpio2_io28_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_gpio2_io28, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_gpio2_io28, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_gpio2_io28, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_gpio2_io28, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_gpio2_io28, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_gpio2_io28_P_pinmux_LEN 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_gpio2_io28_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_gpio2_io28_P_pin_pue 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_gpio2_io28_P_pin_pue_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_gpio2_io28_P_pin_pdrv 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_gpio2_io28_P_pin_pdrv_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_gpio2_io28_P_pin_lpsr 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_gpio2_io28_P_pin_lpsr_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_gpio2_io28_P_pin_snvs 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_gpio2_io28_P_pin_snvs_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_29_GPIO2_IO29
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_29_gpio2_io29
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_29_gpio2_io29_PATH "/soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_29_GPIO2_IO29"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_29_gpio2_io29_FULL_NAME "IOMUXC_GPIO_EMC_29_GPIO2_IO29"

/* Node parent (/soc/iomuxc@401f8000) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_29_gpio2_io29_PARENT DT_N_S_soc_S_iomuxc_401f8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_29_gpio2_io29_CHILD_IDX 84

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_29_gpio2_io29_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_29_gpio2_io29_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_29_gpio2_io29_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_29_gpio2_io29_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_29_gpio2_io29_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_29_gpio2_io29_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_29_gpio2_io29_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_29_gpio2_io29_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_29_gpio2_io29_ORD 95

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_29_gpio2_io29_REQUIRES_ORDS \
	13, /* /soc/iomuxc@401f8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_29_gpio2_io29_SUPPORTS_ORDS \
	98, /* /soc/gpio@401bc000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_29_gpio2_io29_EXISTS 1
#define DT_N_NODELABEL_iomuxc_gpio_emc_29_gpio2_io29 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_29_gpio2_io29

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_29_gpio2_io29_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_29_gpio2_io29_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_29_gpio2_io29_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_29_gpio2_io29_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_29_gpio2_io29_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_29_gpio2_io29_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_29_gpio2_io29_P_pinmux {1075806344 /* 0x401f8088 */, 5 /* 0x5 */, 0 /* 0x0 */, 0 /* 0x0 */, 1075806716 /* 0x401f81fc */}
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_29_gpio2_io29_P_pinmux_IDX_0 1075806344
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_29_gpio2_io29_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_29_gpio2_io29_P_pinmux_IDX_1 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_29_gpio2_io29_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_29_gpio2_io29_P_pinmux_IDX_2 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_29_gpio2_io29_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_29_gpio2_io29_P_pinmux_IDX_3 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_29_gpio2_io29_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_29_gpio2_io29_P_pinmux_IDX_4 1075806716
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_29_gpio2_io29_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_29_gpio2_io29_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_29_gpio2_io29, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_29_gpio2_io29, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_29_gpio2_io29, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_29_gpio2_io29, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_29_gpio2_io29, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_29_gpio2_io29_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_29_gpio2_io29, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_29_gpio2_io29, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_29_gpio2_io29, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_29_gpio2_io29, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_29_gpio2_io29, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_29_gpio2_io29_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_29_gpio2_io29, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_29_gpio2_io29, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_29_gpio2_io29, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_29_gpio2_io29, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_29_gpio2_io29, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_29_gpio2_io29_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_29_gpio2_io29, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_29_gpio2_io29, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_29_gpio2_io29, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_29_gpio2_io29, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_29_gpio2_io29, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_29_gpio2_io29_P_pinmux_LEN 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_29_gpio2_io29_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_29_gpio2_io29_P_pin_pue 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_29_gpio2_io29_P_pin_pue_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_29_gpio2_io29_P_pin_pdrv 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_29_gpio2_io29_P_pin_pdrv_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_29_gpio2_io29_P_pin_lpsr 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_29_gpio2_io29_P_pin_lpsr_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_29_gpio2_io29_P_pin_snvs 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_29_gpio2_io29_P_pin_snvs_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_30_GPIO2_IO30
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_30_gpio2_io30
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_30_gpio2_io30_PATH "/soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_30_GPIO2_IO30"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_30_gpio2_io30_FULL_NAME "IOMUXC_GPIO_EMC_30_GPIO2_IO30"

/* Node parent (/soc/iomuxc@401f8000) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_30_gpio2_io30_PARENT DT_N_S_soc_S_iomuxc_401f8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_30_gpio2_io30_CHILD_IDX 85

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_30_gpio2_io30_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_30_gpio2_io30_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_30_gpio2_io30_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_30_gpio2_io30_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_30_gpio2_io30_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_30_gpio2_io30_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_30_gpio2_io30_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_30_gpio2_io30_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_30_gpio2_io30_ORD 96

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_30_gpio2_io30_REQUIRES_ORDS \
	13, /* /soc/iomuxc@401f8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_30_gpio2_io30_SUPPORTS_ORDS \
	98, /* /soc/gpio@401bc000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_30_gpio2_io30_EXISTS 1
#define DT_N_NODELABEL_iomuxc_gpio_emc_30_gpio2_io30 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_30_gpio2_io30

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_30_gpio2_io30_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_30_gpio2_io30_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_30_gpio2_io30_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_30_gpio2_io30_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_30_gpio2_io30_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_30_gpio2_io30_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_30_gpio2_io30_P_pinmux {1075806348 /* 0x401f808c */, 5 /* 0x5 */, 0 /* 0x0 */, 0 /* 0x0 */, 1075806720 /* 0x401f8200 */}
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_30_gpio2_io30_P_pinmux_IDX_0 1075806348
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_30_gpio2_io30_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_30_gpio2_io30_P_pinmux_IDX_1 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_30_gpio2_io30_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_30_gpio2_io30_P_pinmux_IDX_2 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_30_gpio2_io30_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_30_gpio2_io30_P_pinmux_IDX_3 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_30_gpio2_io30_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_30_gpio2_io30_P_pinmux_IDX_4 1075806720
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_30_gpio2_io30_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_30_gpio2_io30_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_30_gpio2_io30, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_30_gpio2_io30, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_30_gpio2_io30, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_30_gpio2_io30, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_30_gpio2_io30, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_30_gpio2_io30_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_30_gpio2_io30, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_30_gpio2_io30, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_30_gpio2_io30, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_30_gpio2_io30, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_30_gpio2_io30, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_30_gpio2_io30_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_30_gpio2_io30, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_30_gpio2_io30, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_30_gpio2_io30, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_30_gpio2_io30, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_30_gpio2_io30, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_30_gpio2_io30_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_30_gpio2_io30, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_30_gpio2_io30, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_30_gpio2_io30, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_30_gpio2_io30, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_30_gpio2_io30, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_30_gpio2_io30_P_pinmux_LEN 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_30_gpio2_io30_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_30_gpio2_io30_P_pin_pue 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_30_gpio2_io30_P_pin_pue_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_30_gpio2_io30_P_pin_pdrv 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_30_gpio2_io30_P_pin_pdrv_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_30_gpio2_io30_P_pin_lpsr 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_30_gpio2_io30_P_pin_lpsr_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_30_gpio2_io30_P_pin_snvs 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_30_gpio2_io30_P_pin_snvs_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_31_GPIO2_IO31
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_31_gpio2_io31
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_31_gpio2_io31_PATH "/soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_31_GPIO2_IO31"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_31_gpio2_io31_FULL_NAME "IOMUXC_GPIO_EMC_31_GPIO2_IO31"

/* Node parent (/soc/iomuxc@401f8000) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_31_gpio2_io31_PARENT DT_N_S_soc_S_iomuxc_401f8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_31_gpio2_io31_CHILD_IDX 86

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_31_gpio2_io31_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_31_gpio2_io31_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_31_gpio2_io31_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_31_gpio2_io31_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_31_gpio2_io31_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_31_gpio2_io31_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_31_gpio2_io31_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_31_gpio2_io31_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_31_gpio2_io31_ORD 97

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_31_gpio2_io31_REQUIRES_ORDS \
	13, /* /soc/iomuxc@401f8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_31_gpio2_io31_SUPPORTS_ORDS \
	98, /* /soc/gpio@401bc000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_31_gpio2_io31_EXISTS 1
#define DT_N_NODELABEL_iomuxc_gpio_emc_31_gpio2_io31 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_31_gpio2_io31

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_31_gpio2_io31_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_31_gpio2_io31_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_31_gpio2_io31_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_31_gpio2_io31_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_31_gpio2_io31_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_31_gpio2_io31_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_31_gpio2_io31_P_pinmux {1075806352 /* 0x401f8090 */, 5 /* 0x5 */, 0 /* 0x0 */, 0 /* 0x0 */, 1075806724 /* 0x401f8204 */}
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_31_gpio2_io31_P_pinmux_IDX_0 1075806352
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_31_gpio2_io31_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_31_gpio2_io31_P_pinmux_IDX_1 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_31_gpio2_io31_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_31_gpio2_io31_P_pinmux_IDX_2 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_31_gpio2_io31_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_31_gpio2_io31_P_pinmux_IDX_3 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_31_gpio2_io31_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_31_gpio2_io31_P_pinmux_IDX_4 1075806724
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_31_gpio2_io31_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_31_gpio2_io31_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_31_gpio2_io31, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_31_gpio2_io31, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_31_gpio2_io31, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_31_gpio2_io31, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_31_gpio2_io31, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_31_gpio2_io31_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_31_gpio2_io31, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_31_gpio2_io31, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_31_gpio2_io31, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_31_gpio2_io31, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_31_gpio2_io31, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_31_gpio2_io31_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_31_gpio2_io31, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_31_gpio2_io31, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_31_gpio2_io31, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_31_gpio2_io31, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_31_gpio2_io31, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_31_gpio2_io31_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_31_gpio2_io31, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_31_gpio2_io31, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_31_gpio2_io31, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_31_gpio2_io31, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_31_gpio2_io31, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_31_gpio2_io31_P_pinmux_LEN 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_31_gpio2_io31_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_31_gpio2_io31_P_pin_pue 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_31_gpio2_io31_P_pin_pue_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_31_gpio2_io31_P_pin_pdrv 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_31_gpio2_io31_P_pin_pdrv_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_31_gpio2_io31_P_pin_lpsr 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_31_gpio2_io31_P_pin_lpsr_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_31_gpio2_io31_P_pin_snvs 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_31_gpio2_io31_P_pin_snvs_EXISTS 1

/*
 * Devicetree node: /soc/gpio@401bc000
 *
 * Node identifier: DT_N_S_soc_S_gpio_401bc000
 *
 * Binding (compatible = nxp,imx-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/nxp,imx-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_gpio_401bc000_PATH "/soc/gpio@401bc000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_gpio_401bc000_FULL_NAME "gpio@401bc000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_gpio_401bc000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_gpio_401bc000_CHILD_IDX 14

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_gpio_401bc000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_gpio_401bc000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_gpio_401bc000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_gpio_401bc000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_gpio_401bc000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_gpio_401bc000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_gpio_401bc000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_gpio_401bc000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_gpio_401bc000_ORD 98

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_gpio_401bc000_REQUIRES_ORDS \
	11, /* /soc */ \
	12, /* /soc/interrupt-controller@e000e100 */ \
	66, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_00_GPIO2_IO00 */ \
	67, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_01_GPIO2_IO01 */ \
	68, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_02_GPIO2_IO02 */ \
	69, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_03_GPIO2_IO03 */ \
	70, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_04_GPIO2_IO04 */ \
	71, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_05_GPIO2_IO05 */ \
	72, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_06_GPIO2_IO06 */ \
	73, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_07_GPIO2_IO07 */ \
	74, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_08_GPIO2_IO08 */ \
	75, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_09_GPIO2_IO09 */ \
	76, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_10_GPIO2_IO10 */ \
	77, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_11_GPIO2_IO11 */ \
	78, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_12_GPIO2_IO12 */ \
	79, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_13_GPIO2_IO13 */ \
	80, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_14_GPIO2_IO14 */ \
	81, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_15_GPIO2_IO15 */ \
	82, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_16_GPIO2_IO16 */ \
	83, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_17_GPIO2_IO17 */ \
	84, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_18_GPIO2_IO18 */ \
	85, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_19_GPIO2_IO19 */ \
	86, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_20_GPIO2_IO20 */ \
	87, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_21_GPIO2_IO21 */ \
	88, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_22_GPIO2_IO22 */ \
	89, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_23_GPIO2_IO23 */ \
	90, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_24_GPIO2_IO24 */ \
	91, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_25_GPIO2_IO25 */ \
	92, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_26_GPIO2_IO26 */ \
	93, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_27_GPIO2_IO27 */ \
	94, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_28_GPIO2_IO28 */ \
	95, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_29_GPIO2_IO29 */ \
	96, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_30_GPIO2_IO30 */ \
	97, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_31_GPIO2_IO31 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_gpio_401bc000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_gpio_401bc000_EXISTS 1
#define DT_N_INST_1_nxp_imx_gpio DT_N_S_soc_S_gpio_401bc000
#define DT_N_NODELABEL_gpio2     DT_N_S_soc_S_gpio_401bc000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_gpio_401bc000_REG_NUM 1
#define DT_N_S_soc_S_gpio_401bc000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_401bc000_REG_IDX_0_VAL_ADDRESS 1075560448 /* 0x401bc000 */
#define DT_N_S_soc_S_gpio_401bc000_REG_IDX_0_VAL_SIZE 16384 /* 0x4000 */
#define DT_N_S_soc_S_gpio_401bc000_RANGES_NUM 0
#define DT_N_S_soc_S_gpio_401bc000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_gpio_401bc000_IRQ_NUM 2
#define DT_N_S_soc_S_gpio_401bc000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_401bc000_IRQ_IDX_0_VAL_irq 82
#define DT_N_S_soc_S_gpio_401bc000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_gpio_401bc000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_401bc000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_gpio_401bc000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_gpio_401bc000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpio_401bc000_IRQ_IDX_1_VAL_irq 83
#define DT_N_S_soc_S_gpio_401bc000_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_gpio_401bc000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpio_401bc000_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_gpio_401bc000_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_gpio_401bc000_COMPAT_MATCHES_nxp_imx_gpio 1
#define DT_N_S_soc_S_gpio_401bc000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_401bc000_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_soc_S_gpio_401bc000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_401bc000_COMPAT_MODEL_IDX_0 "imx-gpio"
#define DT_N_S_soc_S_gpio_401bc000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_gpio_401bc000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_gpio_401bc000_P_reg {1075560448 /* 0x401bc000 */, 16384 /* 0x4000 */}
#define DT_N_S_soc_S_gpio_401bc000_P_reg_IDX_0 1075560448
#define DT_N_S_soc_S_gpio_401bc000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_401bc000_P_reg_IDX_1 16384
#define DT_N_S_soc_S_gpio_401bc000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpio_401bc000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_401bc000, reg, 0) \
	fn(DT_N_S_soc_S_gpio_401bc000, reg, 1)
#define DT_N_S_soc_S_gpio_401bc000_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_401bc000, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401bc000, reg, 1)
#define DT_N_S_soc_S_gpio_401bc000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_401bc000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_401bc000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_401bc000_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_401bc000, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401bc000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_401bc000_P_reg_EXISTS 1
#define DT_N_S_soc_S_gpio_401bc000_P_pinmux_IDX_0 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_00_gpio2_io00
#define DT_N_S_soc_S_gpio_401bc000_P_pinmux_IDX_0_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_00_gpio2_io00
#define DT_N_S_soc_S_gpio_401bc000_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_401bc000_P_pinmux_IDX_1 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_01_gpio2_io01
#define DT_N_S_soc_S_gpio_401bc000_P_pinmux_IDX_1_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_01_gpio2_io01
#define DT_N_S_soc_S_gpio_401bc000_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpio_401bc000_P_pinmux_IDX_2 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_02_gpio2_io02
#define DT_N_S_soc_S_gpio_401bc000_P_pinmux_IDX_2_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_02_gpio2_io02
#define DT_N_S_soc_S_gpio_401bc000_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_gpio_401bc000_P_pinmux_IDX_3 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_03_gpio2_io03
#define DT_N_S_soc_S_gpio_401bc000_P_pinmux_IDX_3_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_03_gpio2_io03
#define DT_N_S_soc_S_gpio_401bc000_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_gpio_401bc000_P_pinmux_IDX_4 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_04_gpio2_io04
#define DT_N_S_soc_S_gpio_401bc000_P_pinmux_IDX_4_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_04_gpio2_io04
#define DT_N_S_soc_S_gpio_401bc000_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_gpio_401bc000_P_pinmux_IDX_5 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_05_gpio2_io05
#define DT_N_S_soc_S_gpio_401bc000_P_pinmux_IDX_5_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_05_gpio2_io05
#define DT_N_S_soc_S_gpio_401bc000_P_pinmux_IDX_5_EXISTS 1
#define DT_N_S_soc_S_gpio_401bc000_P_pinmux_IDX_6 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_06_gpio2_io06
#define DT_N_S_soc_S_gpio_401bc000_P_pinmux_IDX_6_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_06_gpio2_io06
#define DT_N_S_soc_S_gpio_401bc000_P_pinmux_IDX_6_EXISTS 1
#define DT_N_S_soc_S_gpio_401bc000_P_pinmux_IDX_7 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_07_gpio2_io07
#define DT_N_S_soc_S_gpio_401bc000_P_pinmux_IDX_7_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_07_gpio2_io07
#define DT_N_S_soc_S_gpio_401bc000_P_pinmux_IDX_7_EXISTS 1
#define DT_N_S_soc_S_gpio_401bc000_P_pinmux_IDX_8 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_08_gpio2_io08
#define DT_N_S_soc_S_gpio_401bc000_P_pinmux_IDX_8_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_08_gpio2_io08
#define DT_N_S_soc_S_gpio_401bc000_P_pinmux_IDX_8_EXISTS 1
#define DT_N_S_soc_S_gpio_401bc000_P_pinmux_IDX_9 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_09_gpio2_io09
#define DT_N_S_soc_S_gpio_401bc000_P_pinmux_IDX_9_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_09_gpio2_io09
#define DT_N_S_soc_S_gpio_401bc000_P_pinmux_IDX_9_EXISTS 1
#define DT_N_S_soc_S_gpio_401bc000_P_pinmux_IDX_10 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_10_gpio2_io10
#define DT_N_S_soc_S_gpio_401bc000_P_pinmux_IDX_10_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_10_gpio2_io10
#define DT_N_S_soc_S_gpio_401bc000_P_pinmux_IDX_10_EXISTS 1
#define DT_N_S_soc_S_gpio_401bc000_P_pinmux_IDX_11 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_11_gpio2_io11
#define DT_N_S_soc_S_gpio_401bc000_P_pinmux_IDX_11_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_11_gpio2_io11
#define DT_N_S_soc_S_gpio_401bc000_P_pinmux_IDX_11_EXISTS 1
#define DT_N_S_soc_S_gpio_401bc000_P_pinmux_IDX_12 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_12_gpio2_io12
#define DT_N_S_soc_S_gpio_401bc000_P_pinmux_IDX_12_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_12_gpio2_io12
#define DT_N_S_soc_S_gpio_401bc000_P_pinmux_IDX_12_EXISTS 1
#define DT_N_S_soc_S_gpio_401bc000_P_pinmux_IDX_13 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_13_gpio2_io13
#define DT_N_S_soc_S_gpio_401bc000_P_pinmux_IDX_13_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_13_gpio2_io13
#define DT_N_S_soc_S_gpio_401bc000_P_pinmux_IDX_13_EXISTS 1
#define DT_N_S_soc_S_gpio_401bc000_P_pinmux_IDX_14 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_14_gpio2_io14
#define DT_N_S_soc_S_gpio_401bc000_P_pinmux_IDX_14_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_14_gpio2_io14
#define DT_N_S_soc_S_gpio_401bc000_P_pinmux_IDX_14_EXISTS 1
#define DT_N_S_soc_S_gpio_401bc000_P_pinmux_IDX_15 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_15_gpio2_io15
#define DT_N_S_soc_S_gpio_401bc000_P_pinmux_IDX_15_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_15_gpio2_io15
#define DT_N_S_soc_S_gpio_401bc000_P_pinmux_IDX_15_EXISTS 1
#define DT_N_S_soc_S_gpio_401bc000_P_pinmux_IDX_16 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_16_gpio2_io16
#define DT_N_S_soc_S_gpio_401bc000_P_pinmux_IDX_16_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_16_gpio2_io16
#define DT_N_S_soc_S_gpio_401bc000_P_pinmux_IDX_16_EXISTS 1
#define DT_N_S_soc_S_gpio_401bc000_P_pinmux_IDX_17 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_17_gpio2_io17
#define DT_N_S_soc_S_gpio_401bc000_P_pinmux_IDX_17_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_17_gpio2_io17
#define DT_N_S_soc_S_gpio_401bc000_P_pinmux_IDX_17_EXISTS 1
#define DT_N_S_soc_S_gpio_401bc000_P_pinmux_IDX_18 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_18_gpio2_io18
#define DT_N_S_soc_S_gpio_401bc000_P_pinmux_IDX_18_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_18_gpio2_io18
#define DT_N_S_soc_S_gpio_401bc000_P_pinmux_IDX_18_EXISTS 1
#define DT_N_S_soc_S_gpio_401bc000_P_pinmux_IDX_19 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_19_gpio2_io19
#define DT_N_S_soc_S_gpio_401bc000_P_pinmux_IDX_19_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_19_gpio2_io19
#define DT_N_S_soc_S_gpio_401bc000_P_pinmux_IDX_19_EXISTS 1
#define DT_N_S_soc_S_gpio_401bc000_P_pinmux_IDX_20 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_20_gpio2_io20
#define DT_N_S_soc_S_gpio_401bc000_P_pinmux_IDX_20_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_20_gpio2_io20
#define DT_N_S_soc_S_gpio_401bc000_P_pinmux_IDX_20_EXISTS 1
#define DT_N_S_soc_S_gpio_401bc000_P_pinmux_IDX_21 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_21_gpio2_io21
#define DT_N_S_soc_S_gpio_401bc000_P_pinmux_IDX_21_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_21_gpio2_io21
#define DT_N_S_soc_S_gpio_401bc000_P_pinmux_IDX_21_EXISTS 1
#define DT_N_S_soc_S_gpio_401bc000_P_pinmux_IDX_22 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_22_gpio2_io22
#define DT_N_S_soc_S_gpio_401bc000_P_pinmux_IDX_22_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_22_gpio2_io22
#define DT_N_S_soc_S_gpio_401bc000_P_pinmux_IDX_22_EXISTS 1
#define DT_N_S_soc_S_gpio_401bc000_P_pinmux_IDX_23 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_23_gpio2_io23
#define DT_N_S_soc_S_gpio_401bc000_P_pinmux_IDX_23_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_23_gpio2_io23
#define DT_N_S_soc_S_gpio_401bc000_P_pinmux_IDX_23_EXISTS 1
#define DT_N_S_soc_S_gpio_401bc000_P_pinmux_IDX_24 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_24_gpio2_io24
#define DT_N_S_soc_S_gpio_401bc000_P_pinmux_IDX_24_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_24_gpio2_io24
#define DT_N_S_soc_S_gpio_401bc000_P_pinmux_IDX_24_EXISTS 1
#define DT_N_S_soc_S_gpio_401bc000_P_pinmux_IDX_25 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_25_gpio2_io25
#define DT_N_S_soc_S_gpio_401bc000_P_pinmux_IDX_25_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_25_gpio2_io25
#define DT_N_S_soc_S_gpio_401bc000_P_pinmux_IDX_25_EXISTS 1
#define DT_N_S_soc_S_gpio_401bc000_P_pinmux_IDX_26 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_26_gpio2_io26
#define DT_N_S_soc_S_gpio_401bc000_P_pinmux_IDX_26_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_26_gpio2_io26
#define DT_N_S_soc_S_gpio_401bc000_P_pinmux_IDX_26_EXISTS 1
#define DT_N_S_soc_S_gpio_401bc000_P_pinmux_IDX_27 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_27_gpio2_io27
#define DT_N_S_soc_S_gpio_401bc000_P_pinmux_IDX_27_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_27_gpio2_io27
#define DT_N_S_soc_S_gpio_401bc000_P_pinmux_IDX_27_EXISTS 1
#define DT_N_S_soc_S_gpio_401bc000_P_pinmux_IDX_28 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_gpio2_io28
#define DT_N_S_soc_S_gpio_401bc000_P_pinmux_IDX_28_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_gpio2_io28
#define DT_N_S_soc_S_gpio_401bc000_P_pinmux_IDX_28_EXISTS 1
#define DT_N_S_soc_S_gpio_401bc000_P_pinmux_IDX_29 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_29_gpio2_io29
#define DT_N_S_soc_S_gpio_401bc000_P_pinmux_IDX_29_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_29_gpio2_io29
#define DT_N_S_soc_S_gpio_401bc000_P_pinmux_IDX_29_EXISTS 1
#define DT_N_S_soc_S_gpio_401bc000_P_pinmux_IDX_30 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_30_gpio2_io30
#define DT_N_S_soc_S_gpio_401bc000_P_pinmux_IDX_30_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_30_gpio2_io30
#define DT_N_S_soc_S_gpio_401bc000_P_pinmux_IDX_30_EXISTS 1
#define DT_N_S_soc_S_gpio_401bc000_P_pinmux_IDX_31 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_31_gpio2_io31
#define DT_N_S_soc_S_gpio_401bc000_P_pinmux_IDX_31_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_31_gpio2_io31
#define DT_N_S_soc_S_gpio_401bc000_P_pinmux_IDX_31_EXISTS 1
#define DT_N_S_soc_S_gpio_401bc000_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_401bc000, pinmux, 0) \
	fn(DT_N_S_soc_S_gpio_401bc000, pinmux, 1) \
	fn(DT_N_S_soc_S_gpio_401bc000, pinmux, 2) \
	fn(DT_N_S_soc_S_gpio_401bc000, pinmux, 3) \
	fn(DT_N_S_soc_S_gpio_401bc000, pinmux, 4) \
	fn(DT_N_S_soc_S_gpio_401bc000, pinmux, 5) \
	fn(DT_N_S_soc_S_gpio_401bc000, pinmux, 6) \
	fn(DT_N_S_soc_S_gpio_401bc000, pinmux, 7) \
	fn(DT_N_S_soc_S_gpio_401bc000, pinmux, 8) \
	fn(DT_N_S_soc_S_gpio_401bc000, pinmux, 9) \
	fn(DT_N_S_soc_S_gpio_401bc000, pinmux, 10) \
	fn(DT_N_S_soc_S_gpio_401bc000, pinmux, 11) \
	fn(DT_N_S_soc_S_gpio_401bc000, pinmux, 12) \
	fn(DT_N_S_soc_S_gpio_401bc000, pinmux, 13) \
	fn(DT_N_S_soc_S_gpio_401bc000, pinmux, 14) \
	fn(DT_N_S_soc_S_gpio_401bc000, pinmux, 15) \
	fn(DT_N_S_soc_S_gpio_401bc000, pinmux, 16) \
	fn(DT_N_S_soc_S_gpio_401bc000, pinmux, 17) \
	fn(DT_N_S_soc_S_gpio_401bc000, pinmux, 18) \
	fn(DT_N_S_soc_S_gpio_401bc000, pinmux, 19) \
	fn(DT_N_S_soc_S_gpio_401bc000, pinmux, 20) \
	fn(DT_N_S_soc_S_gpio_401bc000, pinmux, 21) \
	fn(DT_N_S_soc_S_gpio_401bc000, pinmux, 22) \
	fn(DT_N_S_soc_S_gpio_401bc000, pinmux, 23) \
	fn(DT_N_S_soc_S_gpio_401bc000, pinmux, 24) \
	fn(DT_N_S_soc_S_gpio_401bc000, pinmux, 25) \
	fn(DT_N_S_soc_S_gpio_401bc000, pinmux, 26) \
	fn(DT_N_S_soc_S_gpio_401bc000, pinmux, 27) \
	fn(DT_N_S_soc_S_gpio_401bc000, pinmux, 28) \
	fn(DT_N_S_soc_S_gpio_401bc000, pinmux, 29) \
	fn(DT_N_S_soc_S_gpio_401bc000, pinmux, 30) \
	fn(DT_N_S_soc_S_gpio_401bc000, pinmux, 31)
#define DT_N_S_soc_S_gpio_401bc000_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_401bc000, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401bc000, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401bc000, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401bc000, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401bc000, pinmux, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401bc000, pinmux, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401bc000, pinmux, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401bc000, pinmux, 7) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401bc000, pinmux, 8) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401bc000, pinmux, 9) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401bc000, pinmux, 10) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401bc000, pinmux, 11) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401bc000, pinmux, 12) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401bc000, pinmux, 13) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401bc000, pinmux, 14) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401bc000, pinmux, 15) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401bc000, pinmux, 16) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401bc000, pinmux, 17) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401bc000, pinmux, 18) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401bc000, pinmux, 19) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401bc000, pinmux, 20) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401bc000, pinmux, 21) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401bc000, pinmux, 22) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401bc000, pinmux, 23) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401bc000, pinmux, 24) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401bc000, pinmux, 25) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401bc000, pinmux, 26) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401bc000, pinmux, 27) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401bc000, pinmux, 28) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401bc000, pinmux, 29) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401bc000, pinmux, 30) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401bc000, pinmux, 31)
#define DT_N_S_soc_S_gpio_401bc000_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_401bc000, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_401bc000, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_401bc000, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_401bc000, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_401bc000, pinmux, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_401bc000, pinmux, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_401bc000, pinmux, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_401bc000, pinmux, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_401bc000, pinmux, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_401bc000, pinmux, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_401bc000, pinmux, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_401bc000, pinmux, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_401bc000, pinmux, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_401bc000, pinmux, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_401bc000, pinmux, 14, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_401bc000, pinmux, 15, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_401bc000, pinmux, 16, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_401bc000, pinmux, 17, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_401bc000, pinmux, 18, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_401bc000, pinmux, 19, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_401bc000, pinmux, 20, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_401bc000, pinmux, 21, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_401bc000, pinmux, 22, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_401bc000, pinmux, 23, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_401bc000, pinmux, 24, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_401bc000, pinmux, 25, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_401bc000, pinmux, 26, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_401bc000, pinmux, 27, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_401bc000, pinmux, 28, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_401bc000, pinmux, 29, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_401bc000, pinmux, 30, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_401bc000, pinmux, 31, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_401bc000_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_401bc000, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401bc000, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401bc000, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401bc000, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401bc000, pinmux, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401bc000, pinmux, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401bc000, pinmux, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401bc000, pinmux, 7, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401bc000, pinmux, 8, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401bc000, pinmux, 9, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401bc000, pinmux, 10, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401bc000, pinmux, 11, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401bc000, pinmux, 12, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401bc000, pinmux, 13, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401bc000, pinmux, 14, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401bc000, pinmux, 15, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401bc000, pinmux, 16, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401bc000, pinmux, 17, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401bc000, pinmux, 18, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401bc000, pinmux, 19, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401bc000, pinmux, 20, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401bc000, pinmux, 21, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401bc000, pinmux, 22, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401bc000, pinmux, 23, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401bc000, pinmux, 24, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401bc000, pinmux, 25, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401bc000, pinmux, 26, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401bc000, pinmux, 27, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401bc000, pinmux, 28, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401bc000, pinmux, 29, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401bc000, pinmux, 30, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401bc000, pinmux, 31, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_401bc000_P_pinmux_LEN 32
#define DT_N_S_soc_S_gpio_401bc000_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_gpio_401bc000_P_gpio_controller 1
#define DT_N_S_soc_S_gpio_401bc000_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_gpio_401bc000_P_ngpios 32
#define DT_N_S_soc_S_gpio_401bc000_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_gpio_401bc000_P_compatible {"nxp,imx-gpio"}
#define DT_N_S_soc_S_gpio_401bc000_P_compatible_IDX_0 "nxp,imx-gpio"
#define DT_N_S_soc_S_gpio_401bc000_P_compatible_IDX_0_STRING_UNQUOTED nxp,imx-gpio
#define DT_N_S_soc_S_gpio_401bc000_P_compatible_IDX_0_STRING_TOKEN nxp_imx_gpio
#define DT_N_S_soc_S_gpio_401bc000_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_IMX_GPIO
#define DT_N_S_soc_S_gpio_401bc000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_401bc000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_401bc000, compatible, 0)
#define DT_N_S_soc_S_gpio_401bc000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_401bc000, compatible, 0)
#define DT_N_S_soc_S_gpio_401bc000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_401bc000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_401bc000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_401bc000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_401bc000_P_compatible_LEN 1
#define DT_N_S_soc_S_gpio_401bc000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_gpio_401bc000_P_interrupts {82 /* 0x52 */, 0 /* 0x0 */, 83 /* 0x53 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_gpio_401bc000_P_interrupts_IDX_0 82
#define DT_N_S_soc_S_gpio_401bc000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_401bc000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_gpio_401bc000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpio_401bc000_P_interrupts_IDX_2 83
#define DT_N_S_soc_S_gpio_401bc000_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_gpio_401bc000_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_gpio_401bc000_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_gpio_401bc000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_401bc000, interrupts, 0) \
	fn(DT_N_S_soc_S_gpio_401bc000, interrupts, 1) \
	fn(DT_N_S_soc_S_gpio_401bc000, interrupts, 2) \
	fn(DT_N_S_soc_S_gpio_401bc000, interrupts, 3)
#define DT_N_S_soc_S_gpio_401bc000_P_interrupts_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_401bc000, interrupts, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401bc000, interrupts, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401bc000, interrupts, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401bc000, interrupts, 3)
#define DT_N_S_soc_S_gpio_401bc000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_401bc000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_401bc000, interrupts, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_401bc000, interrupts, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_401bc000, interrupts, 3, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_401bc000_P_interrupts_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_401bc000, interrupts, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401bc000, interrupts, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401bc000, interrupts, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401bc000, interrupts, 3, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_401bc000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_gpio_401bc000_P_wakeup_source 0
#define DT_N_S_soc_S_gpio_401bc000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/gpt@401ec000
 *
 * Node identifier: DT_N_S_soc_S_gpt_401ec000
 *
 * Binding (compatible = nxp,gpt-hw-timer):
 *   $ZEPHYR_BASE/dts/bindings/timer/nxp,gpt-hw-timer.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_gpt_401ec000_PATH "/soc/gpt@401ec000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_gpt_401ec000_FULL_NAME "gpt@401ec000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_gpt_401ec000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_gpt_401ec000_CHILD_IDX 5

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_gpt_401ec000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_gpt_401ec000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_gpt_401ec000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_gpt_401ec000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_gpt_401ec000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_gpt_401ec000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_gpt_401ec000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_gpt_401ec000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_gpt_401ec000_ORD 99

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_gpt_401ec000_REQUIRES_ORDS \
	11, /* /soc */ \
	12, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_gpt_401ec000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_gpt_401ec000_EXISTS 1
#define DT_N_INST_0_nxp_gpt_hw_timer DT_N_S_soc_S_gpt_401ec000
#define DT_N_NODELABEL_gpt_hw_timer  DT_N_S_soc_S_gpt_401ec000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_gpt_401ec000_REG_NUM 1
#define DT_N_S_soc_S_gpt_401ec000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpt_401ec000_REG_IDX_0_VAL_ADDRESS 1075757056 /* 0x401ec000 */
#define DT_N_S_soc_S_gpt_401ec000_REG_IDX_0_VAL_SIZE 16384 /* 0x4000 */
#define DT_N_S_soc_S_gpt_401ec000_RANGES_NUM 0
#define DT_N_S_soc_S_gpt_401ec000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_gpt_401ec000_IRQ_NUM 1
#define DT_N_S_soc_S_gpt_401ec000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpt_401ec000_IRQ_IDX_0_VAL_irq 100
#define DT_N_S_soc_S_gpt_401ec000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_gpt_401ec000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpt_401ec000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_gpt_401ec000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_gpt_401ec000_COMPAT_MATCHES_nxp_gpt_hw_timer 1
#define DT_N_S_soc_S_gpt_401ec000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpt_401ec000_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_soc_S_gpt_401ec000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpt_401ec000_COMPAT_MODEL_IDX_0 "gpt-hw-timer"
#define DT_N_S_soc_S_gpt_401ec000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_gpt_401ec000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_gpt_401ec000_P_reg {1075757056 /* 0x401ec000 */, 16384 /* 0x4000 */}
#define DT_N_S_soc_S_gpt_401ec000_P_reg_IDX_0 1075757056
#define DT_N_S_soc_S_gpt_401ec000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpt_401ec000_P_reg_IDX_1 16384
#define DT_N_S_soc_S_gpt_401ec000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpt_401ec000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpt_401ec000, reg, 0) \
	fn(DT_N_S_soc_S_gpt_401ec000, reg, 1)
#define DT_N_S_soc_S_gpt_401ec000_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpt_401ec000, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpt_401ec000, reg, 1)
#define DT_N_S_soc_S_gpt_401ec000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpt_401ec000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpt_401ec000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_gpt_401ec000_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpt_401ec000, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpt_401ec000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_gpt_401ec000_P_reg_EXISTS 1
#define DT_N_S_soc_S_gpt_401ec000_P_interrupts {100 /* 0x64 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_gpt_401ec000_P_interrupts_IDX_0 100
#define DT_N_S_soc_S_gpt_401ec000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpt_401ec000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_gpt_401ec000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpt_401ec000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpt_401ec000, interrupts, 0) \
	fn(DT_N_S_soc_S_gpt_401ec000, interrupts, 1)
#define DT_N_S_soc_S_gpt_401ec000_P_interrupts_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpt_401ec000, interrupts, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpt_401ec000, interrupts, 1)
#define DT_N_S_soc_S_gpt_401ec000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpt_401ec000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpt_401ec000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_gpt_401ec000_P_interrupts_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpt_401ec000, interrupts, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpt_401ec000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_gpt_401ec000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_gpt_401ec000_P_status "okay"
#define DT_N_S_soc_S_gpt_401ec000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_gpt_401ec000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_gpt_401ec000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_gpt_401ec000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_gpt_401ec000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_gpt_401ec000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_gpt_401ec000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpt_401ec000, status, 0) \
	fn(DT_N_S_soc_S_gpt_401ec000, status, 1) \
	fn(DT_N_S_soc_S_gpt_401ec000, status, 2) \
	fn(DT_N_S_soc_S_gpt_401ec000, status, 3)
#define DT_N_S_soc_S_gpt_401ec000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpt_401ec000, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpt_401ec000, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpt_401ec000, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpt_401ec000, status, 3)
#define DT_N_S_soc_S_gpt_401ec000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpt_401ec000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpt_401ec000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpt_401ec000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpt_401ec000, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_gpt_401ec000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpt_401ec000, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpt_401ec000, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpt_401ec000, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpt_401ec000, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_gpt_401ec000_P_status_EXISTS 1
#define DT_N_S_soc_S_gpt_401ec000_P_compatible {"nxp,gpt-hw-timer"}
#define DT_N_S_soc_S_gpt_401ec000_P_compatible_IDX_0 "nxp,gpt-hw-timer"
#define DT_N_S_soc_S_gpt_401ec000_P_compatible_IDX_0_STRING_UNQUOTED nxp,gpt-hw-timer
#define DT_N_S_soc_S_gpt_401ec000_P_compatible_IDX_0_STRING_TOKEN nxp_gpt_hw_timer
#define DT_N_S_soc_S_gpt_401ec000_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_GPT_HW_TIMER
#define DT_N_S_soc_S_gpt_401ec000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpt_401ec000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpt_401ec000, compatible, 0)
#define DT_N_S_soc_S_gpt_401ec000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpt_401ec000, compatible, 0)
#define DT_N_S_soc_S_gpt_401ec000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpt_401ec000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpt_401ec000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpt_401ec000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpt_401ec000_P_compatible_LEN 1
#define DT_N_S_soc_S_gpt_401ec000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_gpt_401ec000_P_wakeup_source 0
#define DT_N_S_soc_S_gpt_401ec000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/gpt@401f0000
 *
 * Node identifier: DT_N_S_soc_S_gpt_401f0000
 *
 * Binding (compatible = nxp,imx-gpt):
 *   $ZEPHYR_BASE/dts/bindings/timer/nxp,imx-gpt.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_gpt_401f0000_PATH "/soc/gpt@401f0000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_gpt_401f0000_FULL_NAME "gpt@401f0000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_gpt_401f0000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_gpt_401f0000_CHILD_IDX 6

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_gpt_401f0000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_gpt_401f0000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_gpt_401f0000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_gpt_401f0000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_gpt_401f0000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_gpt_401f0000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_gpt_401f0000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_gpt_401f0000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_gpt_401f0000_ORD 100

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_gpt_401f0000_REQUIRES_ORDS \
	11, /* /soc */ \
	12, /* /soc/interrupt-controller@e000e100 */ \
	60, /* /soc/ccm@400fc000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_gpt_401f0000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_gpt_401f0000_EXISTS 1
#define DT_N_INST_0_nxp_imx_gpt DT_N_S_soc_S_gpt_401f0000
#define DT_N_NODELABEL_gpt2     DT_N_S_soc_S_gpt_401f0000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_gpt_401f0000_REG_NUM 1
#define DT_N_S_soc_S_gpt_401f0000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpt_401f0000_REG_IDX_0_VAL_ADDRESS 1075773440 /* 0x401f0000 */
#define DT_N_S_soc_S_gpt_401f0000_REG_IDX_0_VAL_SIZE 16384 /* 0x4000 */
#define DT_N_S_soc_S_gpt_401f0000_RANGES_NUM 0
#define DT_N_S_soc_S_gpt_401f0000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_gpt_401f0000_IRQ_NUM 1
#define DT_N_S_soc_S_gpt_401f0000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpt_401f0000_IRQ_IDX_0_VAL_irq 101
#define DT_N_S_soc_S_gpt_401f0000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_gpt_401f0000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpt_401f0000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_gpt_401f0000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_gpt_401f0000_COMPAT_MATCHES_nxp_imx_gpt 1
#define DT_N_S_soc_S_gpt_401f0000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpt_401f0000_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_soc_S_gpt_401f0000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpt_401f0000_COMPAT_MODEL_IDX_0 "imx-gpt"
#define DT_N_S_soc_S_gpt_401f0000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_gpt_401f0000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_gpt_401f0000_P_reg {1075773440 /* 0x401f0000 */, 16384 /* 0x4000 */}
#define DT_N_S_soc_S_gpt_401f0000_P_reg_IDX_0 1075773440
#define DT_N_S_soc_S_gpt_401f0000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpt_401f0000_P_reg_IDX_1 16384
#define DT_N_S_soc_S_gpt_401f0000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpt_401f0000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpt_401f0000, reg, 0) \
	fn(DT_N_S_soc_S_gpt_401f0000, reg, 1)
#define DT_N_S_soc_S_gpt_401f0000_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpt_401f0000, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpt_401f0000, reg, 1)
#define DT_N_S_soc_S_gpt_401f0000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpt_401f0000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpt_401f0000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_gpt_401f0000_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpt_401f0000, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpt_401f0000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_gpt_401f0000_P_reg_EXISTS 1
#define DT_N_S_soc_S_gpt_401f0000_P_interrupts {101 /* 0x65 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_gpt_401f0000_P_interrupts_IDX_0 101
#define DT_N_S_soc_S_gpt_401f0000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpt_401f0000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_gpt_401f0000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpt_401f0000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpt_401f0000, interrupts, 0) \
	fn(DT_N_S_soc_S_gpt_401f0000, interrupts, 1)
#define DT_N_S_soc_S_gpt_401f0000_P_interrupts_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpt_401f0000, interrupts, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpt_401f0000, interrupts, 1)
#define DT_N_S_soc_S_gpt_401f0000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpt_401f0000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpt_401f0000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_gpt_401f0000_P_interrupts_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpt_401f0000, interrupts, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpt_401f0000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_gpt_401f0000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_gpt_401f0000_P_gptfreq 12500000
#define DT_N_S_soc_S_gpt_401f0000_P_gptfreq_EXISTS 1
#define DT_N_S_soc_S_gpt_401f0000_P_compatible {"nxp,imx-gpt"}
#define DT_N_S_soc_S_gpt_401f0000_P_compatible_IDX_0 "nxp,imx-gpt"
#define DT_N_S_soc_S_gpt_401f0000_P_compatible_IDX_0_STRING_UNQUOTED nxp,imx-gpt
#define DT_N_S_soc_S_gpt_401f0000_P_compatible_IDX_0_STRING_TOKEN nxp_imx_gpt
#define DT_N_S_soc_S_gpt_401f0000_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_IMX_GPT
#define DT_N_S_soc_S_gpt_401f0000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpt_401f0000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpt_401f0000, compatible, 0)
#define DT_N_S_soc_S_gpt_401f0000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpt_401f0000, compatible, 0)
#define DT_N_S_soc_S_gpt_401f0000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpt_401f0000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpt_401f0000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpt_401f0000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpt_401f0000_P_compatible_LEN 1
#define DT_N_S_soc_S_gpt_401f0000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_gpt_401f0000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpt_401f0000_P_clocks_IDX_0_PH DT_N_S_soc_S_ccm_400fc000
#define DT_N_S_soc_S_gpt_401f0000_P_clocks_IDX_0_VAL_name 2560
#define DT_N_S_soc_S_gpt_401f0000_P_clocks_IDX_0_VAL_name_EXISTS 1
#define DT_N_S_soc_S_gpt_401f0000_P_clocks_IDX_0_VAL_offset 104
#define DT_N_S_soc_S_gpt_401f0000_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_gpt_401f0000_P_clocks_IDX_0_VAL_bits 24
#define DT_N_S_soc_S_gpt_401f0000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_gpt_401f0000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpt_401f0000, clocks, 0)
#define DT_N_S_soc_S_gpt_401f0000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpt_401f0000, clocks, 0)
#define DT_N_S_soc_S_gpt_401f0000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpt_401f0000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpt_401f0000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpt_401f0000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpt_401f0000_P_clocks_LEN 1
#define DT_N_S_soc_S_gpt_401f0000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_gpt_401f0000_P_wakeup_source 0
#define DT_N_S_soc_S_gpt_401f0000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/pinctrl/pinmux_lpi2c1
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_PATH "/soc/iomuxc@401f8000/pinctrl/pinmux_lpi2c1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_FULL_NAME "pinmux_lpi2c1"

/* Node parent (/soc/iomuxc@401f8000/pinctrl) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_PARENT DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_CHILD_IDX 3

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_ORD 101

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_REQUIRES_ORDS \
	54, /* /soc/iomuxc@401f8000/pinctrl */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_SUPPORTS_ORDS \
	102, /* /soc/i2c@403f0000 */ \
	201, /* /soc/iomuxc@401f8000/pinctrl/pinmux_lpi2c1/group0 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_EXISTS 1
#define DT_N_NODELABEL_pinmux_lpi2c1 DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /soc/i2c@403f0000
 *
 * Node identifier: DT_N_S_soc_S_i2c_403f0000
 *
 * Binding (compatible = nxp,imx-lpi2c):
 *   $ZEPHYR_BASE/dts/bindings/i2c/nxp,imx-lpi2c.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_403f0000_PATH "/soc/i2c@403f0000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c_403f0000_FULL_NAME "i2c@403f0000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_i2c_403f0000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_i2c_403f0000_CHILD_IDX 17

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_i2c_403f0000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2c_403f0000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_403f0000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_403f0000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_i2c_403f0000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_i2c_403f0000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_403f0000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_403f0000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_403f0000_ORD 102

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_403f0000_REQUIRES_ORDS \
	11, /* /soc */ \
	12, /* /soc/interrupt-controller@e000e100 */ \
	60, /* /soc/ccm@400fc000 */ \
	101, /* /soc/iomuxc@401f8000/pinctrl/pinmux_lpi2c1 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_403f0000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_403f0000_EXISTS 1
#define DT_N_INST_0_nxp_imx_lpi2c DT_N_S_soc_S_i2c_403f0000
#define DT_N_NODELABEL_lpi2c1     DT_N_S_soc_S_i2c_403f0000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2c_403f0000_REG_NUM 1
#define DT_N_S_soc_S_i2c_403f0000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_403f0000_REG_IDX_0_VAL_ADDRESS 1077870592 /* 0x403f0000 */
#define DT_N_S_soc_S_i2c_403f0000_REG_IDX_0_VAL_SIZE 16384 /* 0x4000 */
#define DT_N_S_soc_S_i2c_403f0000_RANGES_NUM 0
#define DT_N_S_soc_S_i2c_403f0000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2c_403f0000_IRQ_NUM 1
#define DT_N_S_soc_S_i2c_403f0000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_403f0000_IRQ_IDX_0_VAL_irq 28
#define DT_N_S_soc_S_i2c_403f0000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_403f0000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_403f0000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_i2c_403f0000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_403f0000_COMPAT_MATCHES_nxp_imx_lpi2c 1
#define DT_N_S_soc_S_i2c_403f0000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_403f0000_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_soc_S_i2c_403f0000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_403f0000_COMPAT_MODEL_IDX_0 "imx-lpi2c"
#define DT_N_S_soc_S_i2c_403f0000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2c_403f0000_PINCTRL_NUM 1
#define DT_N_S_soc_S_i2c_403f0000_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_403f0000_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_i2c_403f0000_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_i2c_403f0000_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_i2c_403f0000_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_i2c_403f0000_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_403f0000_P_reg {1077870592 /* 0x403f0000 */, 16384 /* 0x4000 */}
#define DT_N_S_soc_S_i2c_403f0000_P_reg_IDX_0 1077870592
#define DT_N_S_soc_S_i2c_403f0000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_403f0000_P_reg_IDX_1 16384
#define DT_N_S_soc_S_i2c_403f0000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_403f0000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_403f0000, reg, 0) \
	fn(DT_N_S_soc_S_i2c_403f0000, reg, 1)
#define DT_N_S_soc_S_i2c_403f0000_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_403f0000, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_403f0000, reg, 1)
#define DT_N_S_soc_S_i2c_403f0000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_403f0000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_403f0000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_403f0000_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_403f0000, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_403f0000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_403f0000_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2c_403f0000_P_interrupts {28 /* 0x1c */, 0 /* 0x0 */}
#define DT_N_S_soc_S_i2c_403f0000_P_interrupts_IDX_0 28
#define DT_N_S_soc_S_i2c_403f0000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_403f0000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_i2c_403f0000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_403f0000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_403f0000, interrupts, 0) \
	fn(DT_N_S_soc_S_i2c_403f0000, interrupts, 1)
#define DT_N_S_soc_S_i2c_403f0000_P_interrupts_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_403f0000, interrupts, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_403f0000, interrupts, 1)
#define DT_N_S_soc_S_i2c_403f0000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_403f0000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_403f0000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_403f0000_P_interrupts_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_403f0000, interrupts, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_403f0000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_403f0000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_i2c_403f0000_P_clock_frequency 100000
#define DT_N_S_soc_S_i2c_403f0000_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_i2c_403f0000_P_status "okay"
#define DT_N_S_soc_S_i2c_403f0000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_i2c_403f0000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_i2c_403f0000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_i2c_403f0000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_i2c_403f0000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_i2c_403f0000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_i2c_403f0000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_403f0000, status, 0) \
	fn(DT_N_S_soc_S_i2c_403f0000, status, 1) \
	fn(DT_N_S_soc_S_i2c_403f0000, status, 2) \
	fn(DT_N_S_soc_S_i2c_403f0000, status, 3)
#define DT_N_S_soc_S_i2c_403f0000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_403f0000, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_403f0000, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_403f0000, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_403f0000, status, 3)
#define DT_N_S_soc_S_i2c_403f0000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_403f0000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_403f0000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_403f0000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_403f0000, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_403f0000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_403f0000, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_403f0000, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_403f0000, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_403f0000, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_403f0000_P_status_EXISTS 1
#define DT_N_S_soc_S_i2c_403f0000_P_compatible {"nxp,imx-lpi2c"}
#define DT_N_S_soc_S_i2c_403f0000_P_compatible_IDX_0 "nxp,imx-lpi2c"
#define DT_N_S_soc_S_i2c_403f0000_P_compatible_IDX_0_STRING_UNQUOTED nxp,imx-lpi2c
#define DT_N_S_soc_S_i2c_403f0000_P_compatible_IDX_0_STRING_TOKEN nxp_imx_lpi2c
#define DT_N_S_soc_S_i2c_403f0000_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_IMX_LPI2C
#define DT_N_S_soc_S_i2c_403f0000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_403f0000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_403f0000, compatible, 0)
#define DT_N_S_soc_S_i2c_403f0000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_403f0000, compatible, 0)
#define DT_N_S_soc_S_i2c_403f0000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_403f0000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_403f0000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_403f0000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_403f0000_P_compatible_LEN 1
#define DT_N_S_soc_S_i2c_403f0000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2c_403f0000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_403f0000_P_clocks_IDX_0_PH DT_N_S_soc_S_ccm_400fc000
#define DT_N_S_soc_S_i2c_403f0000_P_clocks_IDX_0_VAL_name 1024
#define DT_N_S_soc_S_i2c_403f0000_P_clocks_IDX_0_VAL_name_EXISTS 1
#define DT_N_S_soc_S_i2c_403f0000_P_clocks_IDX_0_VAL_offset 112
#define DT_N_S_soc_S_i2c_403f0000_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_i2c_403f0000_P_clocks_IDX_0_VAL_bits 6
#define DT_N_S_soc_S_i2c_403f0000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_i2c_403f0000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_403f0000, clocks, 0)
#define DT_N_S_soc_S_i2c_403f0000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_403f0000, clocks, 0)
#define DT_N_S_soc_S_i2c_403f0000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_403f0000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_403f0000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_403f0000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_403f0000_P_clocks_LEN 1
#define DT_N_S_soc_S_i2c_403f0000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_i2c_403f0000_P_wakeup_source 0
#define DT_N_S_soc_S_i2c_403f0000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_i2c_403f0000_P_pinctrl_0_IDX_0 DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1
#define DT_N_S_soc_S_i2c_403f0000_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1
#define DT_N_S_soc_S_i2c_403f0000_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_403f0000_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_403f0000, pinctrl_0, 0)
#define DT_N_S_soc_S_i2c_403f0000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_403f0000, pinctrl_0, 0)
#define DT_N_S_soc_S_i2c_403f0000_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_403f0000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_403f0000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_403f0000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_403f0000_P_pinctrl_0_LEN 1
#define DT_N_S_soc_S_i2c_403f0000_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_i2c_403f0000_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_i2c_403f0000_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_i2c_403f0000_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_i2c_403f0000_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_i2c_403f0000_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_i2c_403f0000_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_403f0000_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_403f0000, pinctrl_names, 0)
#define DT_N_S_soc_S_i2c_403f0000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_403f0000, pinctrl_names, 0)
#define DT_N_S_soc_S_i2c_403f0000_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_403f0000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_403f0000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_403f0000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_403f0000_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_i2c_403f0000_P_pinctrl_names_EXISTS 1

/*
 * Devicetree node: /soc/i2c@403f4000
 *
 * Node identifier: DT_N_S_soc_S_i2c_403f4000
 *
 * Binding (compatible = nxp,imx-lpi2c):
 *   $ZEPHYR_BASE/dts/bindings/i2c/nxp,imx-lpi2c.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_403f4000_PATH "/soc/i2c@403f4000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c_403f4000_FULL_NAME "i2c@403f4000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_i2c_403f4000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_i2c_403f4000_CHILD_IDX 18

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_i2c_403f4000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2c_403f4000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_403f4000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_403f4000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_i2c_403f4000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_i2c_403f4000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_403f4000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_403f4000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_403f4000_ORD 103

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_403f4000_REQUIRES_ORDS \
	11, /* /soc */ \
	12, /* /soc/interrupt-controller@e000e100 */ \
	60, /* /soc/ccm@400fc000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_403f4000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_403f4000_EXISTS 1
#define DT_N_INST_2_nxp_imx_lpi2c DT_N_S_soc_S_i2c_403f4000
#define DT_N_NODELABEL_lpi2c2     DT_N_S_soc_S_i2c_403f4000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2c_403f4000_REG_NUM 1
#define DT_N_S_soc_S_i2c_403f4000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_403f4000_REG_IDX_0_VAL_ADDRESS 1077886976 /* 0x403f4000 */
#define DT_N_S_soc_S_i2c_403f4000_REG_IDX_0_VAL_SIZE 16384 /* 0x4000 */
#define DT_N_S_soc_S_i2c_403f4000_RANGES_NUM 0
#define DT_N_S_soc_S_i2c_403f4000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2c_403f4000_IRQ_NUM 1
#define DT_N_S_soc_S_i2c_403f4000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_403f4000_IRQ_IDX_0_VAL_irq 29
#define DT_N_S_soc_S_i2c_403f4000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_403f4000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_403f4000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_i2c_403f4000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_403f4000_COMPAT_MATCHES_nxp_imx_lpi2c 1
#define DT_N_S_soc_S_i2c_403f4000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_403f4000_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_soc_S_i2c_403f4000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_403f4000_COMPAT_MODEL_IDX_0 "imx-lpi2c"
#define DT_N_S_soc_S_i2c_403f4000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2c_403f4000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_403f4000_P_reg {1077886976 /* 0x403f4000 */, 16384 /* 0x4000 */}
#define DT_N_S_soc_S_i2c_403f4000_P_reg_IDX_0 1077886976
#define DT_N_S_soc_S_i2c_403f4000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_403f4000_P_reg_IDX_1 16384
#define DT_N_S_soc_S_i2c_403f4000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_403f4000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_403f4000, reg, 0) \
	fn(DT_N_S_soc_S_i2c_403f4000, reg, 1)
#define DT_N_S_soc_S_i2c_403f4000_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_403f4000, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_403f4000, reg, 1)
#define DT_N_S_soc_S_i2c_403f4000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_403f4000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_403f4000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_403f4000_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_403f4000, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_403f4000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_403f4000_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2c_403f4000_P_interrupts {29 /* 0x1d */, 0 /* 0x0 */}
#define DT_N_S_soc_S_i2c_403f4000_P_interrupts_IDX_0 29
#define DT_N_S_soc_S_i2c_403f4000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_403f4000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_i2c_403f4000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_403f4000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_403f4000, interrupts, 0) \
	fn(DT_N_S_soc_S_i2c_403f4000, interrupts, 1)
#define DT_N_S_soc_S_i2c_403f4000_P_interrupts_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_403f4000, interrupts, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_403f4000, interrupts, 1)
#define DT_N_S_soc_S_i2c_403f4000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_403f4000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_403f4000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_403f4000_P_interrupts_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_403f4000, interrupts, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_403f4000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_403f4000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_i2c_403f4000_P_clock_frequency 100000
#define DT_N_S_soc_S_i2c_403f4000_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_i2c_403f4000_P_status "disabled"
#define DT_N_S_soc_S_i2c_403f4000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_i2c_403f4000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_i2c_403f4000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_i2c_403f4000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_i2c_403f4000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_i2c_403f4000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_i2c_403f4000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_403f4000, status, 0) \
	fn(DT_N_S_soc_S_i2c_403f4000, status, 1) \
	fn(DT_N_S_soc_S_i2c_403f4000, status, 2) \
	fn(DT_N_S_soc_S_i2c_403f4000, status, 3) \
	fn(DT_N_S_soc_S_i2c_403f4000, status, 4) \
	fn(DT_N_S_soc_S_i2c_403f4000, status, 5) \
	fn(DT_N_S_soc_S_i2c_403f4000, status, 6) \
	fn(DT_N_S_soc_S_i2c_403f4000, status, 7)
#define DT_N_S_soc_S_i2c_403f4000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_403f4000, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_403f4000, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_403f4000, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_403f4000, status, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_403f4000, status, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_403f4000, status, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_403f4000, status, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_403f4000, status, 7)
#define DT_N_S_soc_S_i2c_403f4000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_403f4000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_403f4000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_403f4000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_403f4000, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_403f4000, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_403f4000, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_403f4000, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_403f4000, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_403f4000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_403f4000, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_403f4000, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_403f4000, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_403f4000, status, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_403f4000, status, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_403f4000, status, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_403f4000, status, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_403f4000, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_403f4000_P_status_EXISTS 1
#define DT_N_S_soc_S_i2c_403f4000_P_compatible {"nxp,imx-lpi2c"}
#define DT_N_S_soc_S_i2c_403f4000_P_compatible_IDX_0 "nxp,imx-lpi2c"
#define DT_N_S_soc_S_i2c_403f4000_P_compatible_IDX_0_STRING_UNQUOTED nxp,imx-lpi2c
#define DT_N_S_soc_S_i2c_403f4000_P_compatible_IDX_0_STRING_TOKEN nxp_imx_lpi2c
#define DT_N_S_soc_S_i2c_403f4000_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_IMX_LPI2C
#define DT_N_S_soc_S_i2c_403f4000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_403f4000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_403f4000, compatible, 0)
#define DT_N_S_soc_S_i2c_403f4000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_403f4000, compatible, 0)
#define DT_N_S_soc_S_i2c_403f4000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_403f4000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_403f4000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_403f4000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_403f4000_P_compatible_LEN 1
#define DT_N_S_soc_S_i2c_403f4000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2c_403f4000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_403f4000_P_clocks_IDX_0_PH DT_N_S_soc_S_ccm_400fc000
#define DT_N_S_soc_S_i2c_403f4000_P_clocks_IDX_0_VAL_name 1024
#define DT_N_S_soc_S_i2c_403f4000_P_clocks_IDX_0_VAL_name_EXISTS 1
#define DT_N_S_soc_S_i2c_403f4000_P_clocks_IDX_0_VAL_offset 112
#define DT_N_S_soc_S_i2c_403f4000_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_i2c_403f4000_P_clocks_IDX_0_VAL_bits 8
#define DT_N_S_soc_S_i2c_403f4000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_i2c_403f4000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_403f4000, clocks, 0)
#define DT_N_S_soc_S_i2c_403f4000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_403f4000, clocks, 0)
#define DT_N_S_soc_S_i2c_403f4000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_403f4000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_403f4000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_403f4000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_403f4000_P_clocks_LEN 1
#define DT_N_S_soc_S_i2c_403f4000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_i2c_403f4000_P_wakeup_source 0
#define DT_N_S_soc_S_i2c_403f4000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/i2c@403f8000
 *
 * Node identifier: DT_N_S_soc_S_i2c_403f8000
 *
 * Binding (compatible = nxp,imx-lpi2c):
 *   $ZEPHYR_BASE/dts/bindings/i2c/nxp,imx-lpi2c.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_403f8000_PATH "/soc/i2c@403f8000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c_403f8000_FULL_NAME "i2c@403f8000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_i2c_403f8000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_i2c_403f8000_CHILD_IDX 19

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_i2c_403f8000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2c_403f8000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_403f8000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_403f8000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_i2c_403f8000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_i2c_403f8000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_403f8000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_403f8000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_403f8000_ORD 104

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_403f8000_REQUIRES_ORDS \
	11, /* /soc */ \
	12, /* /soc/interrupt-controller@e000e100 */ \
	60, /* /soc/ccm@400fc000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_403f8000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_403f8000_EXISTS 1
#define DT_N_INST_3_nxp_imx_lpi2c DT_N_S_soc_S_i2c_403f8000
#define DT_N_NODELABEL_lpi2c3     DT_N_S_soc_S_i2c_403f8000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2c_403f8000_REG_NUM 1
#define DT_N_S_soc_S_i2c_403f8000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_403f8000_REG_IDX_0_VAL_ADDRESS 1077903360 /* 0x403f8000 */
#define DT_N_S_soc_S_i2c_403f8000_REG_IDX_0_VAL_SIZE 16384 /* 0x4000 */
#define DT_N_S_soc_S_i2c_403f8000_RANGES_NUM 0
#define DT_N_S_soc_S_i2c_403f8000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2c_403f8000_IRQ_NUM 1
#define DT_N_S_soc_S_i2c_403f8000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_403f8000_IRQ_IDX_0_VAL_irq 30
#define DT_N_S_soc_S_i2c_403f8000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_403f8000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_403f8000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_i2c_403f8000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_403f8000_COMPAT_MATCHES_nxp_imx_lpi2c 1
#define DT_N_S_soc_S_i2c_403f8000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_403f8000_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_soc_S_i2c_403f8000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_403f8000_COMPAT_MODEL_IDX_0 "imx-lpi2c"
#define DT_N_S_soc_S_i2c_403f8000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2c_403f8000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_403f8000_P_reg {1077903360 /* 0x403f8000 */, 16384 /* 0x4000 */}
#define DT_N_S_soc_S_i2c_403f8000_P_reg_IDX_0 1077903360
#define DT_N_S_soc_S_i2c_403f8000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_403f8000_P_reg_IDX_1 16384
#define DT_N_S_soc_S_i2c_403f8000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_403f8000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_403f8000, reg, 0) \
	fn(DT_N_S_soc_S_i2c_403f8000, reg, 1)
#define DT_N_S_soc_S_i2c_403f8000_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_403f8000, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_403f8000, reg, 1)
#define DT_N_S_soc_S_i2c_403f8000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_403f8000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_403f8000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_403f8000_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_403f8000, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_403f8000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_403f8000_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2c_403f8000_P_interrupts {30 /* 0x1e */, 0 /* 0x0 */}
#define DT_N_S_soc_S_i2c_403f8000_P_interrupts_IDX_0 30
#define DT_N_S_soc_S_i2c_403f8000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_403f8000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_i2c_403f8000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_403f8000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_403f8000, interrupts, 0) \
	fn(DT_N_S_soc_S_i2c_403f8000, interrupts, 1)
#define DT_N_S_soc_S_i2c_403f8000_P_interrupts_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_403f8000, interrupts, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_403f8000, interrupts, 1)
#define DT_N_S_soc_S_i2c_403f8000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_403f8000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_403f8000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_403f8000_P_interrupts_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_403f8000, interrupts, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_403f8000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_403f8000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_i2c_403f8000_P_clock_frequency 100000
#define DT_N_S_soc_S_i2c_403f8000_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_i2c_403f8000_P_status "disabled"
#define DT_N_S_soc_S_i2c_403f8000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_i2c_403f8000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_i2c_403f8000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_i2c_403f8000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_i2c_403f8000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_i2c_403f8000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_i2c_403f8000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_403f8000, status, 0) \
	fn(DT_N_S_soc_S_i2c_403f8000, status, 1) \
	fn(DT_N_S_soc_S_i2c_403f8000, status, 2) \
	fn(DT_N_S_soc_S_i2c_403f8000, status, 3) \
	fn(DT_N_S_soc_S_i2c_403f8000, status, 4) \
	fn(DT_N_S_soc_S_i2c_403f8000, status, 5) \
	fn(DT_N_S_soc_S_i2c_403f8000, status, 6) \
	fn(DT_N_S_soc_S_i2c_403f8000, status, 7)
#define DT_N_S_soc_S_i2c_403f8000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_403f8000, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_403f8000, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_403f8000, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_403f8000, status, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_403f8000, status, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_403f8000, status, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_403f8000, status, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_403f8000, status, 7)
#define DT_N_S_soc_S_i2c_403f8000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_403f8000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_403f8000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_403f8000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_403f8000, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_403f8000, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_403f8000, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_403f8000, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_403f8000, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_403f8000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_403f8000, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_403f8000, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_403f8000, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_403f8000, status, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_403f8000, status, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_403f8000, status, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_403f8000, status, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_403f8000, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_403f8000_P_status_EXISTS 1
#define DT_N_S_soc_S_i2c_403f8000_P_compatible {"nxp,imx-lpi2c"}
#define DT_N_S_soc_S_i2c_403f8000_P_compatible_IDX_0 "nxp,imx-lpi2c"
#define DT_N_S_soc_S_i2c_403f8000_P_compatible_IDX_0_STRING_UNQUOTED nxp,imx-lpi2c
#define DT_N_S_soc_S_i2c_403f8000_P_compatible_IDX_0_STRING_TOKEN nxp_imx_lpi2c
#define DT_N_S_soc_S_i2c_403f8000_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_IMX_LPI2C
#define DT_N_S_soc_S_i2c_403f8000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_403f8000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_403f8000, compatible, 0)
#define DT_N_S_soc_S_i2c_403f8000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_403f8000, compatible, 0)
#define DT_N_S_soc_S_i2c_403f8000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_403f8000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_403f8000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_403f8000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_403f8000_P_compatible_LEN 1
#define DT_N_S_soc_S_i2c_403f8000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2c_403f8000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_403f8000_P_clocks_IDX_0_PH DT_N_S_soc_S_ccm_400fc000
#define DT_N_S_soc_S_i2c_403f8000_P_clocks_IDX_0_VAL_name 1024
#define DT_N_S_soc_S_i2c_403f8000_P_clocks_IDX_0_VAL_name_EXISTS 1
#define DT_N_S_soc_S_i2c_403f8000_P_clocks_IDX_0_VAL_offset 112
#define DT_N_S_soc_S_i2c_403f8000_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_i2c_403f8000_P_clocks_IDX_0_VAL_bits 10
#define DT_N_S_soc_S_i2c_403f8000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_i2c_403f8000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_403f8000, clocks, 0)
#define DT_N_S_soc_S_i2c_403f8000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_403f8000, clocks, 0)
#define DT_N_S_soc_S_i2c_403f8000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_403f8000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_403f8000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_403f8000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_403f8000_P_clocks_LEN 1
#define DT_N_S_soc_S_i2c_403f8000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_i2c_403f8000_P_wakeup_source 0
#define DT_N_S_soc_S_i2c_403f8000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/pinctrl/pinmux_lpi2c4
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_PATH "/soc/iomuxc@401f8000/pinctrl/pinmux_lpi2c4"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_FULL_NAME "pinmux_lpi2c4"

/* Node parent (/soc/iomuxc@401f8000/pinctrl) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_PARENT DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_CHILD_IDX 4

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_ORD 105

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_REQUIRES_ORDS \
	54, /* /soc/iomuxc@401f8000/pinctrl */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_SUPPORTS_ORDS \
	106, /* /soc/i2c@403fc000 */ \
	204, /* /soc/iomuxc@401f8000/pinctrl/pinmux_lpi2c4/group0 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_EXISTS 1
#define DT_N_NODELABEL_pinmux_lpi2c4 DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /soc/i2c@403fc000
 *
 * Node identifier: DT_N_S_soc_S_i2c_403fc000
 *
 * Binding (compatible = nxp,imx-lpi2c):
 *   $ZEPHYR_BASE/dts/bindings/i2c/nxp,imx-lpi2c.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_403fc000_PATH "/soc/i2c@403fc000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c_403fc000_FULL_NAME "i2c@403fc000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_i2c_403fc000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_i2c_403fc000_CHILD_IDX 20

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_i2c_403fc000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2c_403fc000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_403fc000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_403fc000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_i2c_403fc000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_i2c_403fc000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_403fc000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_403fc000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_403fc000_ORD 106

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_403fc000_REQUIRES_ORDS \
	11, /* /soc */ \
	12, /* /soc/interrupt-controller@e000e100 */ \
	60, /* /soc/ccm@400fc000 */ \
	105, /* /soc/iomuxc@401f8000/pinctrl/pinmux_lpi2c4 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_403fc000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_403fc000_EXISTS 1
#define DT_N_INST_1_nxp_imx_lpi2c DT_N_S_soc_S_i2c_403fc000
#define DT_N_NODELABEL_lpi2c4     DT_N_S_soc_S_i2c_403fc000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2c_403fc000_REG_NUM 1
#define DT_N_S_soc_S_i2c_403fc000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_403fc000_REG_IDX_0_VAL_ADDRESS 1077919744 /* 0x403fc000 */
#define DT_N_S_soc_S_i2c_403fc000_REG_IDX_0_VAL_SIZE 16384 /* 0x4000 */
#define DT_N_S_soc_S_i2c_403fc000_RANGES_NUM 0
#define DT_N_S_soc_S_i2c_403fc000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2c_403fc000_IRQ_NUM 1
#define DT_N_S_soc_S_i2c_403fc000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_403fc000_IRQ_IDX_0_VAL_irq 31
#define DT_N_S_soc_S_i2c_403fc000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_403fc000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_403fc000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_i2c_403fc000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_403fc000_COMPAT_MATCHES_nxp_imx_lpi2c 1
#define DT_N_S_soc_S_i2c_403fc000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_403fc000_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_soc_S_i2c_403fc000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_403fc000_COMPAT_MODEL_IDX_0 "imx-lpi2c"
#define DT_N_S_soc_S_i2c_403fc000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2c_403fc000_PINCTRL_NUM 1
#define DT_N_S_soc_S_i2c_403fc000_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_403fc000_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_i2c_403fc000_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_i2c_403fc000_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_i2c_403fc000_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_i2c_403fc000_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_403fc000_P_reg {1077919744 /* 0x403fc000 */, 16384 /* 0x4000 */}
#define DT_N_S_soc_S_i2c_403fc000_P_reg_IDX_0 1077919744
#define DT_N_S_soc_S_i2c_403fc000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_403fc000_P_reg_IDX_1 16384
#define DT_N_S_soc_S_i2c_403fc000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_403fc000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_403fc000, reg, 0) \
	fn(DT_N_S_soc_S_i2c_403fc000, reg, 1)
#define DT_N_S_soc_S_i2c_403fc000_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_403fc000, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_403fc000, reg, 1)
#define DT_N_S_soc_S_i2c_403fc000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_403fc000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_403fc000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_403fc000_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_403fc000, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_403fc000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_403fc000_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2c_403fc000_P_interrupts {31 /* 0x1f */, 0 /* 0x0 */}
#define DT_N_S_soc_S_i2c_403fc000_P_interrupts_IDX_0 31
#define DT_N_S_soc_S_i2c_403fc000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_403fc000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_i2c_403fc000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_403fc000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_403fc000, interrupts, 0) \
	fn(DT_N_S_soc_S_i2c_403fc000, interrupts, 1)
#define DT_N_S_soc_S_i2c_403fc000_P_interrupts_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_403fc000, interrupts, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_403fc000, interrupts, 1)
#define DT_N_S_soc_S_i2c_403fc000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_403fc000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_403fc000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_403fc000_P_interrupts_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_403fc000, interrupts, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_403fc000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_403fc000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_i2c_403fc000_P_clock_frequency 100000
#define DT_N_S_soc_S_i2c_403fc000_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_i2c_403fc000_P_status "okay"
#define DT_N_S_soc_S_i2c_403fc000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_i2c_403fc000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_i2c_403fc000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_i2c_403fc000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_i2c_403fc000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_i2c_403fc000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_i2c_403fc000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_403fc000, status, 0) \
	fn(DT_N_S_soc_S_i2c_403fc000, status, 1) \
	fn(DT_N_S_soc_S_i2c_403fc000, status, 2) \
	fn(DT_N_S_soc_S_i2c_403fc000, status, 3)
#define DT_N_S_soc_S_i2c_403fc000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_403fc000, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_403fc000, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_403fc000, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_403fc000, status, 3)
#define DT_N_S_soc_S_i2c_403fc000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_403fc000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_403fc000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_403fc000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_403fc000, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_403fc000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_403fc000, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_403fc000, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_403fc000, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_403fc000, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_403fc000_P_status_EXISTS 1
#define DT_N_S_soc_S_i2c_403fc000_P_compatible {"nxp,imx-lpi2c"}
#define DT_N_S_soc_S_i2c_403fc000_P_compatible_IDX_0 "nxp,imx-lpi2c"
#define DT_N_S_soc_S_i2c_403fc000_P_compatible_IDX_0_STRING_UNQUOTED nxp,imx-lpi2c
#define DT_N_S_soc_S_i2c_403fc000_P_compatible_IDX_0_STRING_TOKEN nxp_imx_lpi2c
#define DT_N_S_soc_S_i2c_403fc000_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_IMX_LPI2C
#define DT_N_S_soc_S_i2c_403fc000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_403fc000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_403fc000, compatible, 0)
#define DT_N_S_soc_S_i2c_403fc000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_403fc000, compatible, 0)
#define DT_N_S_soc_S_i2c_403fc000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_403fc000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_403fc000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_403fc000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_403fc000_P_compatible_LEN 1
#define DT_N_S_soc_S_i2c_403fc000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2c_403fc000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_403fc000_P_clocks_IDX_0_PH DT_N_S_soc_S_ccm_400fc000
#define DT_N_S_soc_S_i2c_403fc000_P_clocks_IDX_0_VAL_name 1024
#define DT_N_S_soc_S_i2c_403fc000_P_clocks_IDX_0_VAL_name_EXISTS 1
#define DT_N_S_soc_S_i2c_403fc000_P_clocks_IDX_0_VAL_offset 128
#define DT_N_S_soc_S_i2c_403fc000_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_i2c_403fc000_P_clocks_IDX_0_VAL_bits 24
#define DT_N_S_soc_S_i2c_403fc000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_i2c_403fc000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_403fc000, clocks, 0)
#define DT_N_S_soc_S_i2c_403fc000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_403fc000, clocks, 0)
#define DT_N_S_soc_S_i2c_403fc000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_403fc000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_403fc000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_403fc000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_403fc000_P_clocks_LEN 1
#define DT_N_S_soc_S_i2c_403fc000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_i2c_403fc000_P_wakeup_source 0
#define DT_N_S_soc_S_i2c_403fc000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_i2c_403fc000_P_pinctrl_0_IDX_0 DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4
#define DT_N_S_soc_S_i2c_403fc000_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4
#define DT_N_S_soc_S_i2c_403fc000_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_403fc000_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_403fc000, pinctrl_0, 0)
#define DT_N_S_soc_S_i2c_403fc000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_403fc000, pinctrl_0, 0)
#define DT_N_S_soc_S_i2c_403fc000_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_403fc000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_403fc000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_403fc000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_403fc000_P_pinctrl_0_LEN 1
#define DT_N_S_soc_S_i2c_403fc000_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_i2c_403fc000_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_i2c_403fc000_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_i2c_403fc000_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_i2c_403fc000_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_i2c_403fc000_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_i2c_403fc000_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_403fc000_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_403fc000, pinctrl_names, 0)
#define DT_N_S_soc_S_i2c_403fc000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_403fc000, pinctrl_names, 0)
#define DT_N_S_soc_S_i2c_403fc000_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_403fc000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_403fc000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_403fc000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_403fc000_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_i2c_403fc000_P_pinctrl_names_EXISTS 1

/*
 * Devicetree node: /soc/qdec@403c8000
 *
 * Node identifier: DT_N_S_soc_S_qdec_403c8000
 *
 * Binding (compatible = nxp,mcux-qdec):
 *   $ZEPHYR_BASE/dts/bindings/sensor/nxp,mcux-qdec.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_qdec_403c8000_PATH "/soc/qdec@403c8000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_qdec_403c8000_FULL_NAME "qdec@403c8000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_qdec_403c8000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_qdec_403c8000_CHILD_IDX 60

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_qdec_403c8000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_qdec_403c8000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_qdec_403c8000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_qdec_403c8000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_qdec_403c8000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_qdec_403c8000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_qdec_403c8000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_qdec_403c8000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_qdec_403c8000_ORD 107

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_qdec_403c8000_REQUIRES_ORDS \
	11, /* /soc */ \
	12, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_qdec_403c8000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_qdec_403c8000_EXISTS 1
#define DT_N_INST_0_nxp_mcux_qdec DT_N_S_soc_S_qdec_403c8000
#define DT_N_NODELABEL_qdec1      DT_N_S_soc_S_qdec_403c8000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_qdec_403c8000_REG_NUM 1
#define DT_N_S_soc_S_qdec_403c8000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qdec_403c8000_REG_IDX_0_VAL_ADDRESS 1077706752 /* 0x403c8000 */
#define DT_N_S_soc_S_qdec_403c8000_REG_IDX_0_VAL_SIZE 16384 /* 0x4000 */
#define DT_N_S_soc_S_qdec_403c8000_RANGES_NUM 0
#define DT_N_S_soc_S_qdec_403c8000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_qdec_403c8000_IRQ_NUM 1
#define DT_N_S_soc_S_qdec_403c8000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qdec_403c8000_IRQ_IDX_0_VAL_irq 129
#define DT_N_S_soc_S_qdec_403c8000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_qdec_403c8000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qdec_403c8000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_qdec_403c8000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_qdec_403c8000_COMPAT_MATCHES_nxp_mcux_qdec 1
#define DT_N_S_soc_S_qdec_403c8000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qdec_403c8000_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_soc_S_qdec_403c8000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qdec_403c8000_COMPAT_MODEL_IDX_0 "mcux-qdec"
#define DT_N_S_soc_S_qdec_403c8000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_qdec_403c8000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_qdec_403c8000_P_reg {1077706752 /* 0x403c8000 */, 16384 /* 0x4000 */}
#define DT_N_S_soc_S_qdec_403c8000_P_reg_IDX_0 1077706752
#define DT_N_S_soc_S_qdec_403c8000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qdec_403c8000_P_reg_IDX_1 16384
#define DT_N_S_soc_S_qdec_403c8000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_qdec_403c8000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_qdec_403c8000, reg, 0) \
	fn(DT_N_S_soc_S_qdec_403c8000, reg, 1)
#define DT_N_S_soc_S_qdec_403c8000_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_qdec_403c8000, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qdec_403c8000, reg, 1)
#define DT_N_S_soc_S_qdec_403c8000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_qdec_403c8000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qdec_403c8000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_qdec_403c8000_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_qdec_403c8000, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qdec_403c8000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_qdec_403c8000_P_reg_EXISTS 1
#define DT_N_S_soc_S_qdec_403c8000_P_interrupts {129 /* 0x81 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_qdec_403c8000_P_interrupts_IDX_0 129
#define DT_N_S_soc_S_qdec_403c8000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qdec_403c8000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_qdec_403c8000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_qdec_403c8000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_qdec_403c8000, interrupts, 0) \
	fn(DT_N_S_soc_S_qdec_403c8000, interrupts, 1)
#define DT_N_S_soc_S_qdec_403c8000_P_interrupts_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_qdec_403c8000, interrupts, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qdec_403c8000, interrupts, 1)
#define DT_N_S_soc_S_qdec_403c8000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_qdec_403c8000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qdec_403c8000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_qdec_403c8000_P_interrupts_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_qdec_403c8000, interrupts, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qdec_403c8000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_qdec_403c8000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_qdec_403c8000_P_status "disabled"
#define DT_N_S_soc_S_qdec_403c8000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_qdec_403c8000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_qdec_403c8000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_qdec_403c8000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_qdec_403c8000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_qdec_403c8000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_qdec_403c8000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_qdec_403c8000, status, 0) \
	fn(DT_N_S_soc_S_qdec_403c8000, status, 1) \
	fn(DT_N_S_soc_S_qdec_403c8000, status, 2) \
	fn(DT_N_S_soc_S_qdec_403c8000, status, 3) \
	fn(DT_N_S_soc_S_qdec_403c8000, status, 4) \
	fn(DT_N_S_soc_S_qdec_403c8000, status, 5) \
	fn(DT_N_S_soc_S_qdec_403c8000, status, 6) \
	fn(DT_N_S_soc_S_qdec_403c8000, status, 7)
#define DT_N_S_soc_S_qdec_403c8000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_qdec_403c8000, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qdec_403c8000, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qdec_403c8000, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qdec_403c8000, status, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qdec_403c8000, status, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qdec_403c8000, status, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qdec_403c8000, status, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qdec_403c8000, status, 7)
#define DT_N_S_soc_S_qdec_403c8000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_qdec_403c8000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qdec_403c8000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qdec_403c8000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qdec_403c8000, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qdec_403c8000, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qdec_403c8000, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qdec_403c8000, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qdec_403c8000, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_qdec_403c8000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_qdec_403c8000, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qdec_403c8000, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qdec_403c8000, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qdec_403c8000, status, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qdec_403c8000, status, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qdec_403c8000, status, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qdec_403c8000, status, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qdec_403c8000, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_qdec_403c8000_P_status_EXISTS 1
#define DT_N_S_soc_S_qdec_403c8000_P_compatible {"nxp,mcux-qdec"}
#define DT_N_S_soc_S_qdec_403c8000_P_compatible_IDX_0 "nxp,mcux-qdec"
#define DT_N_S_soc_S_qdec_403c8000_P_compatible_IDX_0_STRING_UNQUOTED nxp,mcux-qdec
#define DT_N_S_soc_S_qdec_403c8000_P_compatible_IDX_0_STRING_TOKEN nxp_mcux_qdec
#define DT_N_S_soc_S_qdec_403c8000_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_MCUX_QDEC
#define DT_N_S_soc_S_qdec_403c8000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qdec_403c8000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_qdec_403c8000, compatible, 0)
#define DT_N_S_soc_S_qdec_403c8000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_qdec_403c8000, compatible, 0)
#define DT_N_S_soc_S_qdec_403c8000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_qdec_403c8000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_qdec_403c8000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_qdec_403c8000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_qdec_403c8000_P_compatible_LEN 1
#define DT_N_S_soc_S_qdec_403c8000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_qdec_403c8000_P_wakeup_source 0
#define DT_N_S_soc_S_qdec_403c8000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/qdec@403cc000
 *
 * Node identifier: DT_N_S_soc_S_qdec_403cc000
 *
 * Binding (compatible = nxp,mcux-qdec):
 *   $ZEPHYR_BASE/dts/bindings/sensor/nxp,mcux-qdec.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_qdec_403cc000_PATH "/soc/qdec@403cc000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_qdec_403cc000_FULL_NAME "qdec@403cc000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_qdec_403cc000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_qdec_403cc000_CHILD_IDX 61

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_qdec_403cc000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_qdec_403cc000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_qdec_403cc000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_qdec_403cc000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_qdec_403cc000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_qdec_403cc000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_qdec_403cc000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_qdec_403cc000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_qdec_403cc000_ORD 108

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_qdec_403cc000_REQUIRES_ORDS \
	11, /* /soc */ \
	12, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_qdec_403cc000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_qdec_403cc000_EXISTS 1
#define DT_N_INST_1_nxp_mcux_qdec DT_N_S_soc_S_qdec_403cc000
#define DT_N_NODELABEL_qdec2      DT_N_S_soc_S_qdec_403cc000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_qdec_403cc000_REG_NUM 1
#define DT_N_S_soc_S_qdec_403cc000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qdec_403cc000_REG_IDX_0_VAL_ADDRESS 1077723136 /* 0x403cc000 */
#define DT_N_S_soc_S_qdec_403cc000_REG_IDX_0_VAL_SIZE 16384 /* 0x4000 */
#define DT_N_S_soc_S_qdec_403cc000_RANGES_NUM 0
#define DT_N_S_soc_S_qdec_403cc000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_qdec_403cc000_IRQ_NUM 1
#define DT_N_S_soc_S_qdec_403cc000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qdec_403cc000_IRQ_IDX_0_VAL_irq 130
#define DT_N_S_soc_S_qdec_403cc000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_qdec_403cc000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qdec_403cc000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_qdec_403cc000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_qdec_403cc000_COMPAT_MATCHES_nxp_mcux_qdec 1
#define DT_N_S_soc_S_qdec_403cc000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qdec_403cc000_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_soc_S_qdec_403cc000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qdec_403cc000_COMPAT_MODEL_IDX_0 "mcux-qdec"
#define DT_N_S_soc_S_qdec_403cc000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_qdec_403cc000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_qdec_403cc000_P_reg {1077723136 /* 0x403cc000 */, 16384 /* 0x4000 */}
#define DT_N_S_soc_S_qdec_403cc000_P_reg_IDX_0 1077723136
#define DT_N_S_soc_S_qdec_403cc000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qdec_403cc000_P_reg_IDX_1 16384
#define DT_N_S_soc_S_qdec_403cc000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_qdec_403cc000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_qdec_403cc000, reg, 0) \
	fn(DT_N_S_soc_S_qdec_403cc000, reg, 1)
#define DT_N_S_soc_S_qdec_403cc000_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_qdec_403cc000, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qdec_403cc000, reg, 1)
#define DT_N_S_soc_S_qdec_403cc000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_qdec_403cc000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qdec_403cc000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_qdec_403cc000_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_qdec_403cc000, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qdec_403cc000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_qdec_403cc000_P_reg_EXISTS 1
#define DT_N_S_soc_S_qdec_403cc000_P_interrupts {130 /* 0x82 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_qdec_403cc000_P_interrupts_IDX_0 130
#define DT_N_S_soc_S_qdec_403cc000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qdec_403cc000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_qdec_403cc000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_qdec_403cc000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_qdec_403cc000, interrupts, 0) \
	fn(DT_N_S_soc_S_qdec_403cc000, interrupts, 1)
#define DT_N_S_soc_S_qdec_403cc000_P_interrupts_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_qdec_403cc000, interrupts, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qdec_403cc000, interrupts, 1)
#define DT_N_S_soc_S_qdec_403cc000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_qdec_403cc000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qdec_403cc000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_qdec_403cc000_P_interrupts_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_qdec_403cc000, interrupts, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qdec_403cc000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_qdec_403cc000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_qdec_403cc000_P_status "disabled"
#define DT_N_S_soc_S_qdec_403cc000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_qdec_403cc000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_qdec_403cc000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_qdec_403cc000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_qdec_403cc000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_qdec_403cc000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_qdec_403cc000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_qdec_403cc000, status, 0) \
	fn(DT_N_S_soc_S_qdec_403cc000, status, 1) \
	fn(DT_N_S_soc_S_qdec_403cc000, status, 2) \
	fn(DT_N_S_soc_S_qdec_403cc000, status, 3) \
	fn(DT_N_S_soc_S_qdec_403cc000, status, 4) \
	fn(DT_N_S_soc_S_qdec_403cc000, status, 5) \
	fn(DT_N_S_soc_S_qdec_403cc000, status, 6) \
	fn(DT_N_S_soc_S_qdec_403cc000, status, 7)
#define DT_N_S_soc_S_qdec_403cc000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_qdec_403cc000, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qdec_403cc000, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qdec_403cc000, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qdec_403cc000, status, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qdec_403cc000, status, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qdec_403cc000, status, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qdec_403cc000, status, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qdec_403cc000, status, 7)
#define DT_N_S_soc_S_qdec_403cc000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_qdec_403cc000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qdec_403cc000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qdec_403cc000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qdec_403cc000, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qdec_403cc000, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qdec_403cc000, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qdec_403cc000, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qdec_403cc000, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_qdec_403cc000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_qdec_403cc000, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qdec_403cc000, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qdec_403cc000, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qdec_403cc000, status, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qdec_403cc000, status, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qdec_403cc000, status, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qdec_403cc000, status, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qdec_403cc000, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_qdec_403cc000_P_status_EXISTS 1
#define DT_N_S_soc_S_qdec_403cc000_P_compatible {"nxp,mcux-qdec"}
#define DT_N_S_soc_S_qdec_403cc000_P_compatible_IDX_0 "nxp,mcux-qdec"
#define DT_N_S_soc_S_qdec_403cc000_P_compatible_IDX_0_STRING_UNQUOTED nxp,mcux-qdec
#define DT_N_S_soc_S_qdec_403cc000_P_compatible_IDX_0_STRING_TOKEN nxp_mcux_qdec
#define DT_N_S_soc_S_qdec_403cc000_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_MCUX_QDEC
#define DT_N_S_soc_S_qdec_403cc000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qdec_403cc000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_qdec_403cc000, compatible, 0)
#define DT_N_S_soc_S_qdec_403cc000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_qdec_403cc000, compatible, 0)
#define DT_N_S_soc_S_qdec_403cc000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_qdec_403cc000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_qdec_403cc000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_qdec_403cc000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_qdec_403cc000_P_compatible_LEN 1
#define DT_N_S_soc_S_qdec_403cc000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_qdec_403cc000_P_wakeup_source 0
#define DT_N_S_soc_S_qdec_403cc000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/qdec@403d0000
 *
 * Node identifier: DT_N_S_soc_S_qdec_403d0000
 *
 * Binding (compatible = nxp,mcux-qdec):
 *   $ZEPHYR_BASE/dts/bindings/sensor/nxp,mcux-qdec.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_qdec_403d0000_PATH "/soc/qdec@403d0000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_qdec_403d0000_FULL_NAME "qdec@403d0000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_qdec_403d0000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_qdec_403d0000_CHILD_IDX 62

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_qdec_403d0000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_qdec_403d0000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_qdec_403d0000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_qdec_403d0000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_qdec_403d0000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_qdec_403d0000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_qdec_403d0000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_qdec_403d0000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_qdec_403d0000_ORD 109

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_qdec_403d0000_REQUIRES_ORDS \
	11, /* /soc */ \
	12, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_qdec_403d0000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_qdec_403d0000_EXISTS 1
#define DT_N_INST_2_nxp_mcux_qdec DT_N_S_soc_S_qdec_403d0000
#define DT_N_NODELABEL_qdec3      DT_N_S_soc_S_qdec_403d0000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_qdec_403d0000_REG_NUM 1
#define DT_N_S_soc_S_qdec_403d0000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qdec_403d0000_REG_IDX_0_VAL_ADDRESS 1077739520 /* 0x403d0000 */
#define DT_N_S_soc_S_qdec_403d0000_REG_IDX_0_VAL_SIZE 16384 /* 0x4000 */
#define DT_N_S_soc_S_qdec_403d0000_RANGES_NUM 0
#define DT_N_S_soc_S_qdec_403d0000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_qdec_403d0000_IRQ_NUM 1
#define DT_N_S_soc_S_qdec_403d0000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qdec_403d0000_IRQ_IDX_0_VAL_irq 131
#define DT_N_S_soc_S_qdec_403d0000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_qdec_403d0000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qdec_403d0000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_qdec_403d0000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_qdec_403d0000_COMPAT_MATCHES_nxp_mcux_qdec 1
#define DT_N_S_soc_S_qdec_403d0000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qdec_403d0000_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_soc_S_qdec_403d0000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qdec_403d0000_COMPAT_MODEL_IDX_0 "mcux-qdec"
#define DT_N_S_soc_S_qdec_403d0000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_qdec_403d0000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_qdec_403d0000_P_reg {1077739520 /* 0x403d0000 */, 16384 /* 0x4000 */}
#define DT_N_S_soc_S_qdec_403d0000_P_reg_IDX_0 1077739520
#define DT_N_S_soc_S_qdec_403d0000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qdec_403d0000_P_reg_IDX_1 16384
#define DT_N_S_soc_S_qdec_403d0000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_qdec_403d0000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_qdec_403d0000, reg, 0) \
	fn(DT_N_S_soc_S_qdec_403d0000, reg, 1)
#define DT_N_S_soc_S_qdec_403d0000_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_qdec_403d0000, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qdec_403d0000, reg, 1)
#define DT_N_S_soc_S_qdec_403d0000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_qdec_403d0000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qdec_403d0000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_qdec_403d0000_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_qdec_403d0000, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qdec_403d0000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_qdec_403d0000_P_reg_EXISTS 1
#define DT_N_S_soc_S_qdec_403d0000_P_interrupts {131 /* 0x83 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_qdec_403d0000_P_interrupts_IDX_0 131
#define DT_N_S_soc_S_qdec_403d0000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qdec_403d0000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_qdec_403d0000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_qdec_403d0000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_qdec_403d0000, interrupts, 0) \
	fn(DT_N_S_soc_S_qdec_403d0000, interrupts, 1)
#define DT_N_S_soc_S_qdec_403d0000_P_interrupts_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_qdec_403d0000, interrupts, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qdec_403d0000, interrupts, 1)
#define DT_N_S_soc_S_qdec_403d0000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_qdec_403d0000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qdec_403d0000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_qdec_403d0000_P_interrupts_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_qdec_403d0000, interrupts, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qdec_403d0000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_qdec_403d0000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_qdec_403d0000_P_status "disabled"
#define DT_N_S_soc_S_qdec_403d0000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_qdec_403d0000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_qdec_403d0000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_qdec_403d0000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_qdec_403d0000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_qdec_403d0000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_qdec_403d0000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_qdec_403d0000, status, 0) \
	fn(DT_N_S_soc_S_qdec_403d0000, status, 1) \
	fn(DT_N_S_soc_S_qdec_403d0000, status, 2) \
	fn(DT_N_S_soc_S_qdec_403d0000, status, 3) \
	fn(DT_N_S_soc_S_qdec_403d0000, status, 4) \
	fn(DT_N_S_soc_S_qdec_403d0000, status, 5) \
	fn(DT_N_S_soc_S_qdec_403d0000, status, 6) \
	fn(DT_N_S_soc_S_qdec_403d0000, status, 7)
#define DT_N_S_soc_S_qdec_403d0000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_qdec_403d0000, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qdec_403d0000, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qdec_403d0000, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qdec_403d0000, status, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qdec_403d0000, status, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qdec_403d0000, status, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qdec_403d0000, status, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qdec_403d0000, status, 7)
#define DT_N_S_soc_S_qdec_403d0000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_qdec_403d0000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qdec_403d0000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qdec_403d0000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qdec_403d0000, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qdec_403d0000, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qdec_403d0000, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qdec_403d0000, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qdec_403d0000, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_qdec_403d0000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_qdec_403d0000, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qdec_403d0000, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qdec_403d0000, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qdec_403d0000, status, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qdec_403d0000, status, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qdec_403d0000, status, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qdec_403d0000, status, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qdec_403d0000, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_qdec_403d0000_P_status_EXISTS 1
#define DT_N_S_soc_S_qdec_403d0000_P_compatible {"nxp,mcux-qdec"}
#define DT_N_S_soc_S_qdec_403d0000_P_compatible_IDX_0 "nxp,mcux-qdec"
#define DT_N_S_soc_S_qdec_403d0000_P_compatible_IDX_0_STRING_UNQUOTED nxp,mcux-qdec
#define DT_N_S_soc_S_qdec_403d0000_P_compatible_IDX_0_STRING_TOKEN nxp_mcux_qdec
#define DT_N_S_soc_S_qdec_403d0000_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_MCUX_QDEC
#define DT_N_S_soc_S_qdec_403d0000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qdec_403d0000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_qdec_403d0000, compatible, 0)
#define DT_N_S_soc_S_qdec_403d0000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_qdec_403d0000, compatible, 0)
#define DT_N_S_soc_S_qdec_403d0000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_qdec_403d0000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_qdec_403d0000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_qdec_403d0000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_qdec_403d0000_P_compatible_LEN 1
#define DT_N_S_soc_S_qdec_403d0000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_qdec_403d0000_P_wakeup_source 0
#define DT_N_S_soc_S_qdec_403d0000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/qdec@403d4000
 *
 * Node identifier: DT_N_S_soc_S_qdec_403d4000
 *
 * Binding (compatible = nxp,mcux-qdec):
 *   $ZEPHYR_BASE/dts/bindings/sensor/nxp,mcux-qdec.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_qdec_403d4000_PATH "/soc/qdec@403d4000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_qdec_403d4000_FULL_NAME "qdec@403d4000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_qdec_403d4000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_qdec_403d4000_CHILD_IDX 63

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_qdec_403d4000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_qdec_403d4000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_qdec_403d4000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_qdec_403d4000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_qdec_403d4000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_qdec_403d4000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_qdec_403d4000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_qdec_403d4000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_qdec_403d4000_ORD 110

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_qdec_403d4000_REQUIRES_ORDS \
	11, /* /soc */ \
	12, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_qdec_403d4000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_qdec_403d4000_EXISTS 1
#define DT_N_INST_3_nxp_mcux_qdec DT_N_S_soc_S_qdec_403d4000
#define DT_N_NODELABEL_qdec4      DT_N_S_soc_S_qdec_403d4000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_qdec_403d4000_REG_NUM 1
#define DT_N_S_soc_S_qdec_403d4000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qdec_403d4000_REG_IDX_0_VAL_ADDRESS 1077755904 /* 0x403d4000 */
#define DT_N_S_soc_S_qdec_403d4000_REG_IDX_0_VAL_SIZE 16384 /* 0x4000 */
#define DT_N_S_soc_S_qdec_403d4000_RANGES_NUM 0
#define DT_N_S_soc_S_qdec_403d4000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_qdec_403d4000_IRQ_NUM 1
#define DT_N_S_soc_S_qdec_403d4000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qdec_403d4000_IRQ_IDX_0_VAL_irq 132
#define DT_N_S_soc_S_qdec_403d4000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_qdec_403d4000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qdec_403d4000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_qdec_403d4000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_qdec_403d4000_COMPAT_MATCHES_nxp_mcux_qdec 1
#define DT_N_S_soc_S_qdec_403d4000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qdec_403d4000_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_soc_S_qdec_403d4000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qdec_403d4000_COMPAT_MODEL_IDX_0 "mcux-qdec"
#define DT_N_S_soc_S_qdec_403d4000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_qdec_403d4000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_qdec_403d4000_P_reg {1077755904 /* 0x403d4000 */, 16384 /* 0x4000 */}
#define DT_N_S_soc_S_qdec_403d4000_P_reg_IDX_0 1077755904
#define DT_N_S_soc_S_qdec_403d4000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qdec_403d4000_P_reg_IDX_1 16384
#define DT_N_S_soc_S_qdec_403d4000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_qdec_403d4000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_qdec_403d4000, reg, 0) \
	fn(DT_N_S_soc_S_qdec_403d4000, reg, 1)
#define DT_N_S_soc_S_qdec_403d4000_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_qdec_403d4000, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qdec_403d4000, reg, 1)
#define DT_N_S_soc_S_qdec_403d4000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_qdec_403d4000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qdec_403d4000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_qdec_403d4000_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_qdec_403d4000, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qdec_403d4000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_qdec_403d4000_P_reg_EXISTS 1
#define DT_N_S_soc_S_qdec_403d4000_P_interrupts {132 /* 0x84 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_qdec_403d4000_P_interrupts_IDX_0 132
#define DT_N_S_soc_S_qdec_403d4000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qdec_403d4000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_qdec_403d4000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_qdec_403d4000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_qdec_403d4000, interrupts, 0) \
	fn(DT_N_S_soc_S_qdec_403d4000, interrupts, 1)
#define DT_N_S_soc_S_qdec_403d4000_P_interrupts_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_qdec_403d4000, interrupts, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qdec_403d4000, interrupts, 1)
#define DT_N_S_soc_S_qdec_403d4000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_qdec_403d4000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qdec_403d4000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_qdec_403d4000_P_interrupts_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_qdec_403d4000, interrupts, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qdec_403d4000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_qdec_403d4000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_qdec_403d4000_P_status "disabled"
#define DT_N_S_soc_S_qdec_403d4000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_qdec_403d4000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_qdec_403d4000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_qdec_403d4000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_qdec_403d4000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_qdec_403d4000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_qdec_403d4000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_qdec_403d4000, status, 0) \
	fn(DT_N_S_soc_S_qdec_403d4000, status, 1) \
	fn(DT_N_S_soc_S_qdec_403d4000, status, 2) \
	fn(DT_N_S_soc_S_qdec_403d4000, status, 3) \
	fn(DT_N_S_soc_S_qdec_403d4000, status, 4) \
	fn(DT_N_S_soc_S_qdec_403d4000, status, 5) \
	fn(DT_N_S_soc_S_qdec_403d4000, status, 6) \
	fn(DT_N_S_soc_S_qdec_403d4000, status, 7)
#define DT_N_S_soc_S_qdec_403d4000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_qdec_403d4000, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qdec_403d4000, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qdec_403d4000, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qdec_403d4000, status, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qdec_403d4000, status, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qdec_403d4000, status, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qdec_403d4000, status, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qdec_403d4000, status, 7)
#define DT_N_S_soc_S_qdec_403d4000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_qdec_403d4000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qdec_403d4000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qdec_403d4000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qdec_403d4000, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qdec_403d4000, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qdec_403d4000, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qdec_403d4000, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qdec_403d4000, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_qdec_403d4000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_qdec_403d4000, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qdec_403d4000, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qdec_403d4000, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qdec_403d4000, status, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qdec_403d4000, status, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qdec_403d4000, status, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qdec_403d4000, status, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qdec_403d4000, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_qdec_403d4000_P_status_EXISTS 1
#define DT_N_S_soc_S_qdec_403d4000_P_compatible {"nxp,mcux-qdec"}
#define DT_N_S_soc_S_qdec_403d4000_P_compatible_IDX_0 "nxp,mcux-qdec"
#define DT_N_S_soc_S_qdec_403d4000_P_compatible_IDX_0_STRING_UNQUOTED nxp,mcux-qdec
#define DT_N_S_soc_S_qdec_403d4000_P_compatible_IDX_0_STRING_TOKEN nxp_mcux_qdec
#define DT_N_S_soc_S_qdec_403d4000_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_MCUX_QDEC
#define DT_N_S_soc_S_qdec_403d4000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qdec_403d4000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_qdec_403d4000, compatible, 0)
#define DT_N_S_soc_S_qdec_403d4000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_qdec_403d4000, compatible, 0)
#define DT_N_S_soc_S_qdec_403d4000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_qdec_403d4000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_qdec_403d4000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_qdec_403d4000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_qdec_403d4000_P_compatible_LEN 1
#define DT_N_S_soc_S_qdec_403d4000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_qdec_403d4000_P_wakeup_source 0
#define DT_N_S_soc_S_qdec_403d4000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/random@400cc000
 *
 * Node identifier: DT_N_S_soc_S_random_400cc000
 *
 * Binding (compatible = nxp,kinetis-trng):
 *   $ZEPHYR_BASE/dts/bindings/rng/nxp,kinetis-trng.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_random_400cc000_PATH "/soc/random@400cc000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_random_400cc000_FULL_NAME "random@400cc000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_random_400cc000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_random_400cc000_CHILD_IDX 43

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_random_400cc000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_random_400cc000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_random_400cc000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_random_400cc000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_random_400cc000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_random_400cc000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_random_400cc000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_random_400cc000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_random_400cc000_ORD 111

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_random_400cc000_REQUIRES_ORDS \
	11, /* /soc */ \
	12, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_random_400cc000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_random_400cc000_EXISTS 1
#define DT_N_INST_0_nxp_kinetis_trng DT_N_S_soc_S_random_400cc000
#define DT_N_NODELABEL_trng          DT_N_S_soc_S_random_400cc000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_random_400cc000_REG_NUM 1
#define DT_N_S_soc_S_random_400cc000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_random_400cc000_REG_IDX_0_VAL_ADDRESS 1074577408 /* 0x400cc000 */
#define DT_N_S_soc_S_random_400cc000_REG_IDX_0_VAL_SIZE 16384 /* 0x4000 */
#define DT_N_S_soc_S_random_400cc000_RANGES_NUM 0
#define DT_N_S_soc_S_random_400cc000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_random_400cc000_IRQ_NUM 1
#define DT_N_S_soc_S_random_400cc000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_random_400cc000_IRQ_IDX_0_VAL_irq 53
#define DT_N_S_soc_S_random_400cc000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_random_400cc000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_random_400cc000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_random_400cc000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_random_400cc000_COMPAT_MATCHES_nxp_kinetis_trng 1
#define DT_N_S_soc_S_random_400cc000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_random_400cc000_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_soc_S_random_400cc000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_random_400cc000_COMPAT_MODEL_IDX_0 "kinetis-trng"
#define DT_N_S_soc_S_random_400cc000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_random_400cc000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_random_400cc000_P_reg {1074577408 /* 0x400cc000 */, 16384 /* 0x4000 */}
#define DT_N_S_soc_S_random_400cc000_P_reg_IDX_0 1074577408
#define DT_N_S_soc_S_random_400cc000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_random_400cc000_P_reg_IDX_1 16384
#define DT_N_S_soc_S_random_400cc000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_random_400cc000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_random_400cc000, reg, 0) \
	fn(DT_N_S_soc_S_random_400cc000, reg, 1)
#define DT_N_S_soc_S_random_400cc000_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_random_400cc000, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_random_400cc000, reg, 1)
#define DT_N_S_soc_S_random_400cc000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_random_400cc000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_random_400cc000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_random_400cc000_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_random_400cc000, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_random_400cc000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_random_400cc000_P_reg_EXISTS 1
#define DT_N_S_soc_S_random_400cc000_P_interrupts {53 /* 0x35 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_random_400cc000_P_interrupts_IDX_0 53
#define DT_N_S_soc_S_random_400cc000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_random_400cc000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_random_400cc000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_random_400cc000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_random_400cc000, interrupts, 0) \
	fn(DT_N_S_soc_S_random_400cc000, interrupts, 1)
#define DT_N_S_soc_S_random_400cc000_P_interrupts_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_random_400cc000, interrupts, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_random_400cc000, interrupts, 1)
#define DT_N_S_soc_S_random_400cc000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_random_400cc000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_random_400cc000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_random_400cc000_P_interrupts_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_random_400cc000, interrupts, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_random_400cc000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_random_400cc000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_random_400cc000_P_status "okay"
#define DT_N_S_soc_S_random_400cc000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_random_400cc000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_random_400cc000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_random_400cc000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_random_400cc000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_random_400cc000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_random_400cc000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_random_400cc000, status, 0) \
	fn(DT_N_S_soc_S_random_400cc000, status, 1) \
	fn(DT_N_S_soc_S_random_400cc000, status, 2) \
	fn(DT_N_S_soc_S_random_400cc000, status, 3)
#define DT_N_S_soc_S_random_400cc000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_random_400cc000, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_random_400cc000, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_random_400cc000, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_random_400cc000, status, 3)
#define DT_N_S_soc_S_random_400cc000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_random_400cc000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_random_400cc000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_random_400cc000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_random_400cc000, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_random_400cc000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_random_400cc000, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_random_400cc000, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_random_400cc000, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_random_400cc000, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_random_400cc000_P_status_EXISTS 1
#define DT_N_S_soc_S_random_400cc000_P_compatible {"nxp,kinetis-trng"}
#define DT_N_S_soc_S_random_400cc000_P_compatible_IDX_0 "nxp,kinetis-trng"
#define DT_N_S_soc_S_random_400cc000_P_compatible_IDX_0_STRING_UNQUOTED nxp,kinetis-trng
#define DT_N_S_soc_S_random_400cc000_P_compatible_IDX_0_STRING_TOKEN nxp_kinetis_trng
#define DT_N_S_soc_S_random_400cc000_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_KINETIS_TRNG
#define DT_N_S_soc_S_random_400cc000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_random_400cc000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_random_400cc000, compatible, 0)
#define DT_N_S_soc_S_random_400cc000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_random_400cc000, compatible, 0)
#define DT_N_S_soc_S_random_400cc000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_random_400cc000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_random_400cc000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_random_400cc000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_random_400cc000_P_compatible_LEN 1
#define DT_N_S_soc_S_random_400cc000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_random_400cc000_P_wakeup_source 0
#define DT_N_S_soc_S_random_400cc000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/reset-controller@400f8000
 *
 * Node identifier: DT_N_S_soc_S_reset_controller_400f8000
 */

/* Node's full path: */
#define DT_N_S_soc_S_reset_controller_400f8000_PATH "/soc/reset-controller@400f8000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_reset_controller_400f8000_FULL_NAME "reset-controller@400f8000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_reset_controller_400f8000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_reset_controller_400f8000_CHILD_IDX 42

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_reset_controller_400f8000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_reset_controller_400f8000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_reset_controller_400f8000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_reset_controller_400f8000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_reset_controller_400f8000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_reset_controller_400f8000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_reset_controller_400f8000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_reset_controller_400f8000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_reset_controller_400f8000_ORD 112

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_reset_controller_400f8000_REQUIRES_ORDS \
	11, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_reset_controller_400f8000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_reset_controller_400f8000_EXISTS 1
#define DT_N_INST_0_nxp_imx_src DT_N_S_soc_S_reset_controller_400f8000
#define DT_N_NODELABEL_src      DT_N_S_soc_S_reset_controller_400f8000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_reset_controller_400f8000_REG_NUM 1
#define DT_N_S_soc_S_reset_controller_400f8000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_reset_controller_400f8000_REG_IDX_0_VAL_ADDRESS 1074757632 /* 0x400f8000 */
#define DT_N_S_soc_S_reset_controller_400f8000_REG_IDX_0_VAL_SIZE 16384 /* 0x4000 */
#define DT_N_S_soc_S_reset_controller_400f8000_RANGES_NUM 0
#define DT_N_S_soc_S_reset_controller_400f8000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_reset_controller_400f8000_IRQ_NUM 0
#define DT_N_S_soc_S_reset_controller_400f8000_COMPAT_MATCHES_nxp_imx_src 1
#define DT_N_S_soc_S_reset_controller_400f8000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_reset_controller_400f8000_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_soc_S_reset_controller_400f8000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_reset_controller_400f8000_COMPAT_MODEL_IDX_0 "imx-src"
#define DT_N_S_soc_S_reset_controller_400f8000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_reset_controller_400f8000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_reset_controller_400f8000_P_compatible {"nxp,imx-src"}
#define DT_N_S_soc_S_reset_controller_400f8000_P_compatible_IDX_0 "nxp,imx-src"
#define DT_N_S_soc_S_reset_controller_400f8000_P_compatible_IDX_0_STRING_UNQUOTED nxp,imx-src
#define DT_N_S_soc_S_reset_controller_400f8000_P_compatible_IDX_0_STRING_TOKEN nxp_imx_src
#define DT_N_S_soc_S_reset_controller_400f8000_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_IMX_SRC
#define DT_N_S_soc_S_reset_controller_400f8000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_reset_controller_400f8000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_reset_controller_400f8000, compatible, 0)
#define DT_N_S_soc_S_reset_controller_400f8000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_reset_controller_400f8000, compatible, 0)
#define DT_N_S_soc_S_reset_controller_400f8000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_reset_controller_400f8000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_reset_controller_400f8000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_reset_controller_400f8000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_reset_controller_400f8000_P_compatible_LEN 1
#define DT_N_S_soc_S_reset_controller_400f8000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_reset_controller_400f8000_P_reg {1074757632 /* 0x400f8000 */, 16384 /* 0x4000 */}
#define DT_N_S_soc_S_reset_controller_400f8000_P_reg_IDX_0 1074757632
#define DT_N_S_soc_S_reset_controller_400f8000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_reset_controller_400f8000_P_reg_IDX_1 16384
#define DT_N_S_soc_S_reset_controller_400f8000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_reset_controller_400f8000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_reset_controller_400f8000, reg, 0) \
	fn(DT_N_S_soc_S_reset_controller_400f8000, reg, 1)
#define DT_N_S_soc_S_reset_controller_400f8000_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_reset_controller_400f8000, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_reset_controller_400f8000, reg, 1)
#define DT_N_S_soc_S_reset_controller_400f8000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_reset_controller_400f8000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_reset_controller_400f8000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_reset_controller_400f8000_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_reset_controller_400f8000, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_reset_controller_400f8000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_reset_controller_400f8000_P_reg_EXISTS 1
#define DT_N_S_soc_S_reset_controller_400f8000_P_status "okay"
#define DT_N_S_soc_S_reset_controller_400f8000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_reset_controller_400f8000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_reset_controller_400f8000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_reset_controller_400f8000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_reset_controller_400f8000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_reset_controller_400f8000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_reset_controller_400f8000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_reset_controller_400f8000, status, 0) \
	fn(DT_N_S_soc_S_reset_controller_400f8000, status, 1) \
	fn(DT_N_S_soc_S_reset_controller_400f8000, status, 2) \
	fn(DT_N_S_soc_S_reset_controller_400f8000, status, 3)
#define DT_N_S_soc_S_reset_controller_400f8000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_reset_controller_400f8000, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_reset_controller_400f8000, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_reset_controller_400f8000, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_reset_controller_400f8000, status, 3)
#define DT_N_S_soc_S_reset_controller_400f8000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_reset_controller_400f8000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_reset_controller_400f8000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_reset_controller_400f8000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_reset_controller_400f8000, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_reset_controller_400f8000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_reset_controller_400f8000, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_reset_controller_400f8000, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_reset_controller_400f8000, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_reset_controller_400f8000, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_reset_controller_400f8000_P_status_EXISTS 1

/*
 * Devicetree node: /soc/anatop@400d8000
 *
 * Node identifier: DT_N_S_soc_S_anatop_400d8000
 *
 * Binding (compatible = nxp,imx-anatop):
 *   $ZEPHYR_BASE/dts/bindings/clock/nxp,imx-anatop.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_anatop_400d8000_PATH "/soc/anatop@400d8000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_anatop_400d8000_FULL_NAME "anatop@400d8000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_anatop_400d8000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_anatop_400d8000_CHILD_IDX 55

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_anatop_400d8000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_anatop_400d8000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_anatop_400d8000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_anatop_400d8000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_anatop_400d8000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_anatop_400d8000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_anatop_400d8000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_anatop_400d8000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_anatop_400d8000_ORD 113

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_anatop_400d8000_REQUIRES_ORDS \
	11, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_anatop_400d8000_SUPPORTS_ORDS \
	116, /* /soc/sai@40384000 */ \
	117, /* /soc/sai@40388000 */ \
	119, /* /soc/sai@4038c000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_anatop_400d8000_EXISTS 1
#define DT_N_INST_0_nxp_imx_anatop DT_N_S_soc_S_anatop_400d8000
#define DT_N_NODELABEL_anatop      DT_N_S_soc_S_anatop_400d8000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_anatop_400d8000_REG_NUM 1
#define DT_N_S_soc_S_anatop_400d8000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_anatop_400d8000_REG_IDX_0_VAL_ADDRESS 1074626560 /* 0x400d8000 */
#define DT_N_S_soc_S_anatop_400d8000_REG_IDX_0_VAL_SIZE 16384 /* 0x4000 */
#define DT_N_S_soc_S_anatop_400d8000_RANGES_NUM 0
#define DT_N_S_soc_S_anatop_400d8000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_anatop_400d8000_IRQ_NUM 0
#define DT_N_S_soc_S_anatop_400d8000_COMPAT_MATCHES_nxp_imx_anatop 1
#define DT_N_S_soc_S_anatop_400d8000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_anatop_400d8000_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_soc_S_anatop_400d8000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_anatop_400d8000_COMPAT_MODEL_IDX_0 "imx-anatop"
#define DT_N_S_soc_S_anatop_400d8000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_anatop_400d8000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_anatop_400d8000_P_reg {1074626560 /* 0x400d8000 */, 16384 /* 0x4000 */}
#define DT_N_S_soc_S_anatop_400d8000_P_reg_IDX_0 1074626560
#define DT_N_S_soc_S_anatop_400d8000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_anatop_400d8000_P_reg_IDX_1 16384
#define DT_N_S_soc_S_anatop_400d8000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_anatop_400d8000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_anatop_400d8000, reg, 0) \
	fn(DT_N_S_soc_S_anatop_400d8000, reg, 1)
#define DT_N_S_soc_S_anatop_400d8000_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_anatop_400d8000, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_anatop_400d8000, reg, 1)
#define DT_N_S_soc_S_anatop_400d8000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_anatop_400d8000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_anatop_400d8000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_anatop_400d8000_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_anatop_400d8000, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_anatop_400d8000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_anatop_400d8000_P_reg_EXISTS 1
#define DT_N_S_soc_S_anatop_400d8000_P_compatible {"nxp,imx-anatop"}
#define DT_N_S_soc_S_anatop_400d8000_P_compatible_IDX_0 "nxp,imx-anatop"
#define DT_N_S_soc_S_anatop_400d8000_P_compatible_IDX_0_STRING_UNQUOTED nxp,imx-anatop
#define DT_N_S_soc_S_anatop_400d8000_P_compatible_IDX_0_STRING_TOKEN nxp_imx_anatop
#define DT_N_S_soc_S_anatop_400d8000_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_IMX_ANATOP
#define DT_N_S_soc_S_anatop_400d8000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_anatop_400d8000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_anatop_400d8000, compatible, 0)
#define DT_N_S_soc_S_anatop_400d8000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_anatop_400d8000, compatible, 0)
#define DT_N_S_soc_S_anatop_400d8000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_anatop_400d8000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_anatop_400d8000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_anatop_400d8000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_anatop_400d8000_P_compatible_LEN 1
#define DT_N_S_soc_S_anatop_400d8000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_anatop_400d8000_P_wakeup_source 0
#define DT_N_S_soc_S_anatop_400d8000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/dma-controller@400e8000
 *
 * Node identifier: DT_N_S_soc_S_dma_controller_400e8000
 *
 * Binding (compatible = nxp,mcux-edma):
 *   $ZEPHYR_BASE/dts/bindings/dma/nxp,mcux-edma.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_dma_controller_400e8000_PATH "/soc/dma-controller@400e8000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_dma_controller_400e8000_FULL_NAME "dma-controller@400e8000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_dma_controller_400e8000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_dma_controller_400e8000_CHILD_IDX 49

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_dma_controller_400e8000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_dma_controller_400e8000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_dma_controller_400e8000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_dma_controller_400e8000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_dma_controller_400e8000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_dma_controller_400e8000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_dma_controller_400e8000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_dma_controller_400e8000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_dma_controller_400e8000_ORD 114

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_dma_controller_400e8000_REQUIRES_ORDS \
	11, /* /soc */ \
	12, /* /soc/interrupt-controller@e000e100 */ \
	60, /* /soc/ccm@400fc000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_dma_controller_400e8000_SUPPORTS_ORDS \
	116, /* /soc/sai@40384000 */ \
	117, /* /soc/sai@40388000 */ \
	119, /* /soc/sai@4038c000 */ \
	127, /* /soc/uart@40184000 */ \
	130, /* /soc/uart@40188000 */ \
	131, /* /soc/uart@4018c000 */ \
	132, /* /soc/uart@40190000 */ \
	133, /* /soc/uart@40194000 */ \
	134, /* /soc/uart@40198000 */ \
	135, /* /soc/uart@4019c000 */ \
	136, /* /soc/uart@401a0000 */ \
	283, /* /soc/spi@40394000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_dma_controller_400e8000_EXISTS 1
#define DT_N_INST_0_nxp_mcux_edma DT_N_S_soc_S_dma_controller_400e8000
#define DT_N_NODELABEL_edma0      DT_N_S_soc_S_dma_controller_400e8000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_dma_controller_400e8000_REG_NUM 2
#define DT_N_S_soc_S_dma_controller_400e8000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_controller_400e8000_REG_IDX_0_VAL_ADDRESS 1074692096 /* 0x400e8000 */
#define DT_N_S_soc_S_dma_controller_400e8000_REG_IDX_0_VAL_SIZE 16384 /* 0x4000 */
#define DT_N_S_soc_S_dma_controller_400e8000_REG_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dma_controller_400e8000_REG_IDX_1_VAL_ADDRESS 1074708480 /* 0x400ec000 */
#define DT_N_S_soc_S_dma_controller_400e8000_REG_IDX_1_VAL_SIZE 16384 /* 0x4000 */
#define DT_N_S_soc_S_dma_controller_400e8000_RANGES_NUM 0
#define DT_N_S_soc_S_dma_controller_400e8000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_dma_controller_400e8000_IRQ_NUM 17
#define DT_N_S_soc_S_dma_controller_400e8000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_controller_400e8000_IRQ_IDX_0_VAL_irq 0
#define DT_N_S_soc_S_dma_controller_400e8000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_controller_400e8000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_controller_400e8000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_dma_controller_400e8000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_controller_400e8000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dma_controller_400e8000_IRQ_IDX_1_VAL_irq 1
#define DT_N_S_soc_S_dma_controller_400e8000_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_controller_400e8000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dma_controller_400e8000_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_dma_controller_400e8000_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_controller_400e8000_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_dma_controller_400e8000_IRQ_IDX_2_VAL_irq 2
#define DT_N_S_soc_S_dma_controller_400e8000_IRQ_IDX_2_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_controller_400e8000_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_dma_controller_400e8000_IRQ_IDX_2_VAL_priority 0
#define DT_N_S_soc_S_dma_controller_400e8000_IRQ_IDX_2_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_controller_400e8000_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_dma_controller_400e8000_IRQ_IDX_3_VAL_irq 3
#define DT_N_S_soc_S_dma_controller_400e8000_IRQ_IDX_3_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_controller_400e8000_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_dma_controller_400e8000_IRQ_IDX_3_VAL_priority 0
#define DT_N_S_soc_S_dma_controller_400e8000_IRQ_IDX_3_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_controller_400e8000_IRQ_IDX_4_EXISTS 1
#define DT_N_S_soc_S_dma_controller_400e8000_IRQ_IDX_4_VAL_irq 4
#define DT_N_S_soc_S_dma_controller_400e8000_IRQ_IDX_4_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_controller_400e8000_IRQ_IDX_4_EXISTS 1
#define DT_N_S_soc_S_dma_controller_400e8000_IRQ_IDX_4_VAL_priority 0
#define DT_N_S_soc_S_dma_controller_400e8000_IRQ_IDX_4_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_controller_400e8000_IRQ_IDX_5_EXISTS 1
#define DT_N_S_soc_S_dma_controller_400e8000_IRQ_IDX_5_VAL_irq 5
#define DT_N_S_soc_S_dma_controller_400e8000_IRQ_IDX_5_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_controller_400e8000_IRQ_IDX_5_EXISTS 1
#define DT_N_S_soc_S_dma_controller_400e8000_IRQ_IDX_5_VAL_priority 0
#define DT_N_S_soc_S_dma_controller_400e8000_IRQ_IDX_5_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_controller_400e8000_IRQ_IDX_6_EXISTS 1
#define DT_N_S_soc_S_dma_controller_400e8000_IRQ_IDX_6_VAL_irq 6
#define DT_N_S_soc_S_dma_controller_400e8000_IRQ_IDX_6_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_controller_400e8000_IRQ_IDX_6_EXISTS 1
#define DT_N_S_soc_S_dma_controller_400e8000_IRQ_IDX_6_VAL_priority 0
#define DT_N_S_soc_S_dma_controller_400e8000_IRQ_IDX_6_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_controller_400e8000_IRQ_IDX_7_EXISTS 1
#define DT_N_S_soc_S_dma_controller_400e8000_IRQ_IDX_7_VAL_irq 7
#define DT_N_S_soc_S_dma_controller_400e8000_IRQ_IDX_7_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_controller_400e8000_IRQ_IDX_7_EXISTS 1
#define DT_N_S_soc_S_dma_controller_400e8000_IRQ_IDX_7_VAL_priority 0
#define DT_N_S_soc_S_dma_controller_400e8000_IRQ_IDX_7_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_controller_400e8000_IRQ_IDX_8_EXISTS 1
#define DT_N_S_soc_S_dma_controller_400e8000_IRQ_IDX_8_VAL_irq 8
#define DT_N_S_soc_S_dma_controller_400e8000_IRQ_IDX_8_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_controller_400e8000_IRQ_IDX_8_EXISTS 1
#define DT_N_S_soc_S_dma_controller_400e8000_IRQ_IDX_8_VAL_priority 0
#define DT_N_S_soc_S_dma_controller_400e8000_IRQ_IDX_8_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_controller_400e8000_IRQ_IDX_9_EXISTS 1
#define DT_N_S_soc_S_dma_controller_400e8000_IRQ_IDX_9_VAL_irq 9
#define DT_N_S_soc_S_dma_controller_400e8000_IRQ_IDX_9_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_controller_400e8000_IRQ_IDX_9_EXISTS 1
#define DT_N_S_soc_S_dma_controller_400e8000_IRQ_IDX_9_VAL_priority 0
#define DT_N_S_soc_S_dma_controller_400e8000_IRQ_IDX_9_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_controller_400e8000_IRQ_IDX_10_EXISTS 1
#define DT_N_S_soc_S_dma_controller_400e8000_IRQ_IDX_10_VAL_irq 10
#define DT_N_S_soc_S_dma_controller_400e8000_IRQ_IDX_10_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_controller_400e8000_IRQ_IDX_10_EXISTS 1
#define DT_N_S_soc_S_dma_controller_400e8000_IRQ_IDX_10_VAL_priority 0
#define DT_N_S_soc_S_dma_controller_400e8000_IRQ_IDX_10_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_controller_400e8000_IRQ_IDX_11_EXISTS 1
#define DT_N_S_soc_S_dma_controller_400e8000_IRQ_IDX_11_VAL_irq 11
#define DT_N_S_soc_S_dma_controller_400e8000_IRQ_IDX_11_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_controller_400e8000_IRQ_IDX_11_EXISTS 1
#define DT_N_S_soc_S_dma_controller_400e8000_IRQ_IDX_11_VAL_priority 0
#define DT_N_S_soc_S_dma_controller_400e8000_IRQ_IDX_11_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_controller_400e8000_IRQ_IDX_12_EXISTS 1
#define DT_N_S_soc_S_dma_controller_400e8000_IRQ_IDX_12_VAL_irq 12
#define DT_N_S_soc_S_dma_controller_400e8000_IRQ_IDX_12_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_controller_400e8000_IRQ_IDX_12_EXISTS 1
#define DT_N_S_soc_S_dma_controller_400e8000_IRQ_IDX_12_VAL_priority 0
#define DT_N_S_soc_S_dma_controller_400e8000_IRQ_IDX_12_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_controller_400e8000_IRQ_IDX_13_EXISTS 1
#define DT_N_S_soc_S_dma_controller_400e8000_IRQ_IDX_13_VAL_irq 13
#define DT_N_S_soc_S_dma_controller_400e8000_IRQ_IDX_13_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_controller_400e8000_IRQ_IDX_13_EXISTS 1
#define DT_N_S_soc_S_dma_controller_400e8000_IRQ_IDX_13_VAL_priority 0
#define DT_N_S_soc_S_dma_controller_400e8000_IRQ_IDX_13_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_controller_400e8000_IRQ_IDX_14_EXISTS 1
#define DT_N_S_soc_S_dma_controller_400e8000_IRQ_IDX_14_VAL_irq 14
#define DT_N_S_soc_S_dma_controller_400e8000_IRQ_IDX_14_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_controller_400e8000_IRQ_IDX_14_EXISTS 1
#define DT_N_S_soc_S_dma_controller_400e8000_IRQ_IDX_14_VAL_priority 0
#define DT_N_S_soc_S_dma_controller_400e8000_IRQ_IDX_14_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_controller_400e8000_IRQ_IDX_15_EXISTS 1
#define DT_N_S_soc_S_dma_controller_400e8000_IRQ_IDX_15_VAL_irq 15
#define DT_N_S_soc_S_dma_controller_400e8000_IRQ_IDX_15_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_controller_400e8000_IRQ_IDX_15_EXISTS 1
#define DT_N_S_soc_S_dma_controller_400e8000_IRQ_IDX_15_VAL_priority 0
#define DT_N_S_soc_S_dma_controller_400e8000_IRQ_IDX_15_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_controller_400e8000_IRQ_IDX_16_EXISTS 1
#define DT_N_S_soc_S_dma_controller_400e8000_IRQ_IDX_16_VAL_irq 16
#define DT_N_S_soc_S_dma_controller_400e8000_IRQ_IDX_16_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_controller_400e8000_IRQ_IDX_16_EXISTS 1
#define DT_N_S_soc_S_dma_controller_400e8000_IRQ_IDX_16_VAL_priority 0
#define DT_N_S_soc_S_dma_controller_400e8000_IRQ_IDX_16_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_controller_400e8000_COMPAT_MATCHES_nxp_mcux_edma 1
#define DT_N_S_soc_S_dma_controller_400e8000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_controller_400e8000_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_soc_S_dma_controller_400e8000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_controller_400e8000_COMPAT_MODEL_IDX_0 "mcux-edma"
#define DT_N_S_soc_S_dma_controller_400e8000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_dma_controller_400e8000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_dma_controller_400e8000_P_reg {1074692096 /* 0x400e8000 */, 16384 /* 0x4000 */, 1074708480 /* 0x400ec000 */, 16384 /* 0x4000 */}
#define DT_N_S_soc_S_dma_controller_400e8000_P_reg_IDX_0 1074692096
#define DT_N_S_soc_S_dma_controller_400e8000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_controller_400e8000_P_reg_IDX_1 16384
#define DT_N_S_soc_S_dma_controller_400e8000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dma_controller_400e8000_P_reg_IDX_2 1074708480
#define DT_N_S_soc_S_dma_controller_400e8000_P_reg_IDX_2_EXISTS 1
#define DT_N_S_soc_S_dma_controller_400e8000_P_reg_IDX_3 16384
#define DT_N_S_soc_S_dma_controller_400e8000_P_reg_IDX_3_EXISTS 1
#define DT_N_S_soc_S_dma_controller_400e8000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dma_controller_400e8000, reg, 0) \
	fn(DT_N_S_soc_S_dma_controller_400e8000, reg, 1) \
	fn(DT_N_S_soc_S_dma_controller_400e8000, reg, 2) \
	fn(DT_N_S_soc_S_dma_controller_400e8000, reg, 3)
#define DT_N_S_soc_S_dma_controller_400e8000_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_dma_controller_400e8000, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_controller_400e8000, reg, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_controller_400e8000, reg, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_controller_400e8000, reg, 3)
#define DT_N_S_soc_S_dma_controller_400e8000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dma_controller_400e8000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_controller_400e8000, reg, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_controller_400e8000, reg, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_controller_400e8000, reg, 3, __VA_ARGS__)
#define DT_N_S_soc_S_dma_controller_400e8000_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dma_controller_400e8000, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_controller_400e8000, reg, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_controller_400e8000, reg, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_controller_400e8000, reg, 3, __VA_ARGS__)
#define DT_N_S_soc_S_dma_controller_400e8000_P_reg_EXISTS 1
#define DT_N_S_soc_S_dma_controller_400e8000_P_interrupts {0 /* 0x0 */, 0 /* 0x0 */, 1 /* 0x1 */, 0 /* 0x0 */, 2 /* 0x2 */, 0 /* 0x0 */, 3 /* 0x3 */, 0 /* 0x0 */, 4 /* 0x4 */, 0 /* 0x0 */, 5 /* 0x5 */, 0 /* 0x0 */, 6 /* 0x6 */, 0 /* 0x0 */, 7 /* 0x7 */, 0 /* 0x0 */, 8 /* 0x8 */, 0 /* 0x0 */, 9 /* 0x9 */, 0 /* 0x0 */, 10 /* 0xa */, 0 /* 0x0 */, 11 /* 0xb */, 0 /* 0x0 */, 12 /* 0xc */, 0 /* 0x0 */, 13 /* 0xd */, 0 /* 0x0 */, 14 /* 0xe */, 0 /* 0x0 */, 15 /* 0xf */, 0 /* 0x0 */, 16 /* 0x10 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_dma_controller_400e8000_P_interrupts_IDX_0 0
#define DT_N_S_soc_S_dma_controller_400e8000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_controller_400e8000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_dma_controller_400e8000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dma_controller_400e8000_P_interrupts_IDX_2 1
#define DT_N_S_soc_S_dma_controller_400e8000_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_dma_controller_400e8000_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_dma_controller_400e8000_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_dma_controller_400e8000_P_interrupts_IDX_4 2
#define DT_N_S_soc_S_dma_controller_400e8000_P_interrupts_IDX_4_EXISTS 1
#define DT_N_S_soc_S_dma_controller_400e8000_P_interrupts_IDX_5 0
#define DT_N_S_soc_S_dma_controller_400e8000_P_interrupts_IDX_5_EXISTS 1
#define DT_N_S_soc_S_dma_controller_400e8000_P_interrupts_IDX_6 3
#define DT_N_S_soc_S_dma_controller_400e8000_P_interrupts_IDX_6_EXISTS 1
#define DT_N_S_soc_S_dma_controller_400e8000_P_interrupts_IDX_7 0
#define DT_N_S_soc_S_dma_controller_400e8000_P_interrupts_IDX_7_EXISTS 1
#define DT_N_S_soc_S_dma_controller_400e8000_P_interrupts_IDX_8 4
#define DT_N_S_soc_S_dma_controller_400e8000_P_interrupts_IDX_8_EXISTS 1
#define DT_N_S_soc_S_dma_controller_400e8000_P_interrupts_IDX_9 0
#define DT_N_S_soc_S_dma_controller_400e8000_P_interrupts_IDX_9_EXISTS 1
#define DT_N_S_soc_S_dma_controller_400e8000_P_interrupts_IDX_10 5
#define DT_N_S_soc_S_dma_controller_400e8000_P_interrupts_IDX_10_EXISTS 1
#define DT_N_S_soc_S_dma_controller_400e8000_P_interrupts_IDX_11 0
#define DT_N_S_soc_S_dma_controller_400e8000_P_interrupts_IDX_11_EXISTS 1
#define DT_N_S_soc_S_dma_controller_400e8000_P_interrupts_IDX_12 6
#define DT_N_S_soc_S_dma_controller_400e8000_P_interrupts_IDX_12_EXISTS 1
#define DT_N_S_soc_S_dma_controller_400e8000_P_interrupts_IDX_13 0
#define DT_N_S_soc_S_dma_controller_400e8000_P_interrupts_IDX_13_EXISTS 1
#define DT_N_S_soc_S_dma_controller_400e8000_P_interrupts_IDX_14 7
#define DT_N_S_soc_S_dma_controller_400e8000_P_interrupts_IDX_14_EXISTS 1
#define DT_N_S_soc_S_dma_controller_400e8000_P_interrupts_IDX_15 0
#define DT_N_S_soc_S_dma_controller_400e8000_P_interrupts_IDX_15_EXISTS 1
#define DT_N_S_soc_S_dma_controller_400e8000_P_interrupts_IDX_16 8
#define DT_N_S_soc_S_dma_controller_400e8000_P_interrupts_IDX_16_EXISTS 1
#define DT_N_S_soc_S_dma_controller_400e8000_P_interrupts_IDX_17 0
#define DT_N_S_soc_S_dma_controller_400e8000_P_interrupts_IDX_17_EXISTS 1
#define DT_N_S_soc_S_dma_controller_400e8000_P_interrupts_IDX_18 9
#define DT_N_S_soc_S_dma_controller_400e8000_P_interrupts_IDX_18_EXISTS 1
#define DT_N_S_soc_S_dma_controller_400e8000_P_interrupts_IDX_19 0
#define DT_N_S_soc_S_dma_controller_400e8000_P_interrupts_IDX_19_EXISTS 1
#define DT_N_S_soc_S_dma_controller_400e8000_P_interrupts_IDX_20 10
#define DT_N_S_soc_S_dma_controller_400e8000_P_interrupts_IDX_20_EXISTS 1
#define DT_N_S_soc_S_dma_controller_400e8000_P_interrupts_IDX_21 0
#define DT_N_S_soc_S_dma_controller_400e8000_P_interrupts_IDX_21_EXISTS 1
#define DT_N_S_soc_S_dma_controller_400e8000_P_interrupts_IDX_22 11
#define DT_N_S_soc_S_dma_controller_400e8000_P_interrupts_IDX_22_EXISTS 1
#define DT_N_S_soc_S_dma_controller_400e8000_P_interrupts_IDX_23 0
#define DT_N_S_soc_S_dma_controller_400e8000_P_interrupts_IDX_23_EXISTS 1
#define DT_N_S_soc_S_dma_controller_400e8000_P_interrupts_IDX_24 12
#define DT_N_S_soc_S_dma_controller_400e8000_P_interrupts_IDX_24_EXISTS 1
#define DT_N_S_soc_S_dma_controller_400e8000_P_interrupts_IDX_25 0
#define DT_N_S_soc_S_dma_controller_400e8000_P_interrupts_IDX_25_EXISTS 1
#define DT_N_S_soc_S_dma_controller_400e8000_P_interrupts_IDX_26 13
#define DT_N_S_soc_S_dma_controller_400e8000_P_interrupts_IDX_26_EXISTS 1
#define DT_N_S_soc_S_dma_controller_400e8000_P_interrupts_IDX_27 0
#define DT_N_S_soc_S_dma_controller_400e8000_P_interrupts_IDX_27_EXISTS 1
#define DT_N_S_soc_S_dma_controller_400e8000_P_interrupts_IDX_28 14
#define DT_N_S_soc_S_dma_controller_400e8000_P_interrupts_IDX_28_EXISTS 1
#define DT_N_S_soc_S_dma_controller_400e8000_P_interrupts_IDX_29 0
#define DT_N_S_soc_S_dma_controller_400e8000_P_interrupts_IDX_29_EXISTS 1
#define DT_N_S_soc_S_dma_controller_400e8000_P_interrupts_IDX_30 15
#define DT_N_S_soc_S_dma_controller_400e8000_P_interrupts_IDX_30_EXISTS 1
#define DT_N_S_soc_S_dma_controller_400e8000_P_interrupts_IDX_31 0
#define DT_N_S_soc_S_dma_controller_400e8000_P_interrupts_IDX_31_EXISTS 1
#define DT_N_S_soc_S_dma_controller_400e8000_P_interrupts_IDX_32 16
#define DT_N_S_soc_S_dma_controller_400e8000_P_interrupts_IDX_32_EXISTS 1
#define DT_N_S_soc_S_dma_controller_400e8000_P_interrupts_IDX_33 0
#define DT_N_S_soc_S_dma_controller_400e8000_P_interrupts_IDX_33_EXISTS 1
#define DT_N_S_soc_S_dma_controller_400e8000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dma_controller_400e8000, interrupts, 0) \
	fn(DT_N_S_soc_S_dma_controller_400e8000, interrupts, 1) \
	fn(DT_N_S_soc_S_dma_controller_400e8000, interrupts, 2) \
	fn(DT_N_S_soc_S_dma_controller_400e8000, interrupts, 3) \
	fn(DT_N_S_soc_S_dma_controller_400e8000, interrupts, 4) \
	fn(DT_N_S_soc_S_dma_controller_400e8000, interrupts, 5) \
	fn(DT_N_S_soc_S_dma_controller_400e8000, interrupts, 6) \
	fn(DT_N_S_soc_S_dma_controller_400e8000, interrupts, 7) \
	fn(DT_N_S_soc_S_dma_controller_400e8000, interrupts, 8) \
	fn(DT_N_S_soc_S_dma_controller_400e8000, interrupts, 9) \
	fn(DT_N_S_soc_S_dma_controller_400e8000, interrupts, 10) \
	fn(DT_N_S_soc_S_dma_controller_400e8000, interrupts, 11) \
	fn(DT_N_S_soc_S_dma_controller_400e8000, interrupts, 12) \
	fn(DT_N_S_soc_S_dma_controller_400e8000, interrupts, 13) \
	fn(DT_N_S_soc_S_dma_controller_400e8000, interrupts, 14) \
	fn(DT_N_S_soc_S_dma_controller_400e8000, interrupts, 15) \
	fn(DT_N_S_soc_S_dma_controller_400e8000, interrupts, 16) \
	fn(DT_N_S_soc_S_dma_controller_400e8000, interrupts, 17) \
	fn(DT_N_S_soc_S_dma_controller_400e8000, interrupts, 18) \
	fn(DT_N_S_soc_S_dma_controller_400e8000, interrupts, 19) \
	fn(DT_N_S_soc_S_dma_controller_400e8000, interrupts, 20) \
	fn(DT_N_S_soc_S_dma_controller_400e8000, interrupts, 21) \
	fn(DT_N_S_soc_S_dma_controller_400e8000, interrupts, 22) \
	fn(DT_N_S_soc_S_dma_controller_400e8000, interrupts, 23) \
	fn(DT_N_S_soc_S_dma_controller_400e8000, interrupts, 24) \
	fn(DT_N_S_soc_S_dma_controller_400e8000, interrupts, 25) \
	fn(DT_N_S_soc_S_dma_controller_400e8000, interrupts, 26) \
	fn(DT_N_S_soc_S_dma_controller_400e8000, interrupts, 27) \
	fn(DT_N_S_soc_S_dma_controller_400e8000, interrupts, 28) \
	fn(DT_N_S_soc_S_dma_controller_400e8000, interrupts, 29) \
	fn(DT_N_S_soc_S_dma_controller_400e8000, interrupts, 30) \
	fn(DT_N_S_soc_S_dma_controller_400e8000, interrupts, 31) \
	fn(DT_N_S_soc_S_dma_controller_400e8000, interrupts, 32) \
	fn(DT_N_S_soc_S_dma_controller_400e8000, interrupts, 33)
#define DT_N_S_soc_S_dma_controller_400e8000_P_interrupts_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_dma_controller_400e8000, interrupts, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_controller_400e8000, interrupts, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_controller_400e8000, interrupts, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_controller_400e8000, interrupts, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_controller_400e8000, interrupts, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_controller_400e8000, interrupts, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_controller_400e8000, interrupts, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_controller_400e8000, interrupts, 7) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_controller_400e8000, interrupts, 8) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_controller_400e8000, interrupts, 9) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_controller_400e8000, interrupts, 10) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_controller_400e8000, interrupts, 11) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_controller_400e8000, interrupts, 12) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_controller_400e8000, interrupts, 13) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_controller_400e8000, interrupts, 14) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_controller_400e8000, interrupts, 15) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_controller_400e8000, interrupts, 16) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_controller_400e8000, interrupts, 17) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_controller_400e8000, interrupts, 18) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_controller_400e8000, interrupts, 19) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_controller_400e8000, interrupts, 20) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_controller_400e8000, interrupts, 21) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_controller_400e8000, interrupts, 22) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_controller_400e8000, interrupts, 23) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_controller_400e8000, interrupts, 24) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_controller_400e8000, interrupts, 25) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_controller_400e8000, interrupts, 26) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_controller_400e8000, interrupts, 27) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_controller_400e8000, interrupts, 28) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_controller_400e8000, interrupts, 29) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_controller_400e8000, interrupts, 30) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_controller_400e8000, interrupts, 31) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_controller_400e8000, interrupts, 32) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_controller_400e8000, interrupts, 33)
#define DT_N_S_soc_S_dma_controller_400e8000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dma_controller_400e8000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_controller_400e8000, interrupts, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_controller_400e8000, interrupts, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_controller_400e8000, interrupts, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_controller_400e8000, interrupts, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_controller_400e8000, interrupts, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_controller_400e8000, interrupts, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_controller_400e8000, interrupts, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_controller_400e8000, interrupts, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_controller_400e8000, interrupts, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_controller_400e8000, interrupts, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_controller_400e8000, interrupts, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_controller_400e8000, interrupts, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_controller_400e8000, interrupts, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_controller_400e8000, interrupts, 14, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_controller_400e8000, interrupts, 15, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_controller_400e8000, interrupts, 16, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_controller_400e8000, interrupts, 17, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_controller_400e8000, interrupts, 18, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_controller_400e8000, interrupts, 19, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_controller_400e8000, interrupts, 20, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_controller_400e8000, interrupts, 21, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_controller_400e8000, interrupts, 22, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_controller_400e8000, interrupts, 23, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_controller_400e8000, interrupts, 24, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_controller_400e8000, interrupts, 25, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_controller_400e8000, interrupts, 26, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_controller_400e8000, interrupts, 27, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_controller_400e8000, interrupts, 28, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_controller_400e8000, interrupts, 29, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_controller_400e8000, interrupts, 30, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_controller_400e8000, interrupts, 31, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_controller_400e8000, interrupts, 32, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_controller_400e8000, interrupts, 33, __VA_ARGS__)
#define DT_N_S_soc_S_dma_controller_400e8000_P_interrupts_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dma_controller_400e8000, interrupts, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_controller_400e8000, interrupts, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_controller_400e8000, interrupts, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_controller_400e8000, interrupts, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_controller_400e8000, interrupts, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_controller_400e8000, interrupts, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_controller_400e8000, interrupts, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_controller_400e8000, interrupts, 7, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_controller_400e8000, interrupts, 8, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_controller_400e8000, interrupts, 9, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_controller_400e8000, interrupts, 10, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_controller_400e8000, interrupts, 11, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_controller_400e8000, interrupts, 12, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_controller_400e8000, interrupts, 13, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_controller_400e8000, interrupts, 14, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_controller_400e8000, interrupts, 15, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_controller_400e8000, interrupts, 16, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_controller_400e8000, interrupts, 17, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_controller_400e8000, interrupts, 18, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_controller_400e8000, interrupts, 19, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_controller_400e8000, interrupts, 20, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_controller_400e8000, interrupts, 21, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_controller_400e8000, interrupts, 22, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_controller_400e8000, interrupts, 23, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_controller_400e8000, interrupts, 24, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_controller_400e8000, interrupts, 25, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_controller_400e8000, interrupts, 26, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_controller_400e8000, interrupts, 27, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_controller_400e8000, interrupts, 28, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_controller_400e8000, interrupts, 29, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_controller_400e8000, interrupts, 30, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_controller_400e8000, interrupts, 31, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_controller_400e8000, interrupts, 32, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_controller_400e8000, interrupts, 33, __VA_ARGS__)
#define DT_N_S_soc_S_dma_controller_400e8000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_dma_controller_400e8000_P_dma_channels 32
#define DT_N_S_soc_S_dma_controller_400e8000_P_dma_channels_EXISTS 1
#define DT_N_S_soc_S_dma_controller_400e8000_P_dma_requests 128
#define DT_N_S_soc_S_dma_controller_400e8000_P_dma_requests_EXISTS 1
#define DT_N_S_soc_S_dma_controller_400e8000_P_nxp_mem2mem 1
#define DT_N_S_soc_S_dma_controller_400e8000_P_nxp_mem2mem_EXISTS 1
#define DT_N_S_soc_S_dma_controller_400e8000_P_nxp_a_on 1
#define DT_N_S_soc_S_dma_controller_400e8000_P_nxp_a_on_EXISTS 1
#define DT_N_S_soc_S_dma_controller_400e8000_P_status "okay"
#define DT_N_S_soc_S_dma_controller_400e8000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_dma_controller_400e8000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_dma_controller_400e8000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_dma_controller_400e8000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_dma_controller_400e8000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_dma_controller_400e8000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_dma_controller_400e8000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dma_controller_400e8000, status, 0) \
	fn(DT_N_S_soc_S_dma_controller_400e8000, status, 1) \
	fn(DT_N_S_soc_S_dma_controller_400e8000, status, 2) \
	fn(DT_N_S_soc_S_dma_controller_400e8000, status, 3)
#define DT_N_S_soc_S_dma_controller_400e8000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_dma_controller_400e8000, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_controller_400e8000, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_controller_400e8000, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_controller_400e8000, status, 3)
#define DT_N_S_soc_S_dma_controller_400e8000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dma_controller_400e8000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_controller_400e8000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_controller_400e8000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_controller_400e8000, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_dma_controller_400e8000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dma_controller_400e8000, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_controller_400e8000, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_controller_400e8000, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_controller_400e8000, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_dma_controller_400e8000_P_status_EXISTS 1
#define DT_N_S_soc_S_dma_controller_400e8000_P_compatible {"nxp,mcux-edma"}
#define DT_N_S_soc_S_dma_controller_400e8000_P_compatible_IDX_0 "nxp,mcux-edma"
#define DT_N_S_soc_S_dma_controller_400e8000_P_compatible_IDX_0_STRING_UNQUOTED nxp,mcux-edma
#define DT_N_S_soc_S_dma_controller_400e8000_P_compatible_IDX_0_STRING_TOKEN nxp_mcux_edma
#define DT_N_S_soc_S_dma_controller_400e8000_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_MCUX_EDMA
#define DT_N_S_soc_S_dma_controller_400e8000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_controller_400e8000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dma_controller_400e8000, compatible, 0)
#define DT_N_S_soc_S_dma_controller_400e8000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_dma_controller_400e8000, compatible, 0)
#define DT_N_S_soc_S_dma_controller_400e8000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dma_controller_400e8000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dma_controller_400e8000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dma_controller_400e8000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dma_controller_400e8000_P_compatible_LEN 1
#define DT_N_S_soc_S_dma_controller_400e8000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_dma_controller_400e8000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_controller_400e8000_P_clocks_IDX_0_PH DT_N_S_soc_S_ccm_400fc000
#define DT_N_S_soc_S_dma_controller_400e8000_P_clocks_IDX_0_VAL_name 1792
#define DT_N_S_soc_S_dma_controller_400e8000_P_clocks_IDX_0_VAL_name_EXISTS 1
#define DT_N_S_soc_S_dma_controller_400e8000_P_clocks_IDX_0_VAL_offset 124
#define DT_N_S_soc_S_dma_controller_400e8000_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_dma_controller_400e8000_P_clocks_IDX_0_VAL_bits 192
#define DT_N_S_soc_S_dma_controller_400e8000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_dma_controller_400e8000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dma_controller_400e8000, clocks, 0)
#define DT_N_S_soc_S_dma_controller_400e8000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_dma_controller_400e8000, clocks, 0)
#define DT_N_S_soc_S_dma_controller_400e8000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dma_controller_400e8000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dma_controller_400e8000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dma_controller_400e8000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dma_controller_400e8000_P_clocks_LEN 1
#define DT_N_S_soc_S_dma_controller_400e8000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_dma_controller_400e8000_P_wakeup_source 0
#define DT_N_S_soc_S_dma_controller_400e8000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/iomuxcgpr@400ac000
 *
 * Node identifier: DT_N_S_soc_S_iomuxcgpr_400ac000
 *
 * Binding (compatible = nxp,imx-gpr):
 *   $ZEPHYR_BASE/dts/bindings/pinctrl/nxp,imx-gpr.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxcgpr_400ac000_PATH "/soc/iomuxcgpr@400ac000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxcgpr_400ac000_FULL_NAME "iomuxcgpr@400ac000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_iomuxcgpr_400ac000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxcgpr_400ac000_CHILD_IDX 56

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxcgpr_400ac000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxcgpr_400ac000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxcgpr_400ac000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxcgpr_400ac000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxcgpr_400ac000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxcgpr_400ac000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxcgpr_400ac000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxcgpr_400ac000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxcgpr_400ac000_ORD 115

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxcgpr_400ac000_REQUIRES_ORDS \
	11, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxcgpr_400ac000_SUPPORTS_ORDS \
	116, /* /soc/sai@40384000 */ \
	117, /* /soc/sai@40388000 */ \
	119, /* /soc/sai@4038c000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxcgpr_400ac000_EXISTS 1
#define DT_N_INST_0_nxp_imx_gpr  DT_N_S_soc_S_iomuxcgpr_400ac000
#define DT_N_NODELABEL_iomuxcgpr DT_N_S_soc_S_iomuxcgpr_400ac000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxcgpr_400ac000_REG_NUM 1
#define DT_N_S_soc_S_iomuxcgpr_400ac000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxcgpr_400ac000_REG_IDX_0_VAL_ADDRESS 1074446336 /* 0x400ac000 */
#define DT_N_S_soc_S_iomuxcgpr_400ac000_REG_IDX_0_VAL_SIZE 16384 /* 0x4000 */
#define DT_N_S_soc_S_iomuxcgpr_400ac000_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxcgpr_400ac000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxcgpr_400ac000_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxcgpr_400ac000_COMPAT_MATCHES_nxp_imx_gpr 1
#define DT_N_S_soc_S_iomuxcgpr_400ac000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxcgpr_400ac000_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_soc_S_iomuxcgpr_400ac000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxcgpr_400ac000_COMPAT_MODEL_IDX_0 "imx-gpr"
#define DT_N_S_soc_S_iomuxcgpr_400ac000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxcgpr_400ac000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxcgpr_400ac000_P_reg {1074446336 /* 0x400ac000 */, 16384 /* 0x4000 */}
#define DT_N_S_soc_S_iomuxcgpr_400ac000_P_reg_IDX_0 1074446336
#define DT_N_S_soc_S_iomuxcgpr_400ac000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxcgpr_400ac000_P_reg_IDX_1 16384
#define DT_N_S_soc_S_iomuxcgpr_400ac000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxcgpr_400ac000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxcgpr_400ac000, reg, 0) \
	fn(DT_N_S_soc_S_iomuxcgpr_400ac000, reg, 1)
#define DT_N_S_soc_S_iomuxcgpr_400ac000_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxcgpr_400ac000, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxcgpr_400ac000, reg, 1)
#define DT_N_S_soc_S_iomuxcgpr_400ac000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxcgpr_400ac000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxcgpr_400ac000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxcgpr_400ac000_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxcgpr_400ac000, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxcgpr_400ac000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxcgpr_400ac000_P_reg_EXISTS 1
#define DT_N_S_soc_S_iomuxcgpr_400ac000_P_compatible {"nxp,imx-gpr"}
#define DT_N_S_soc_S_iomuxcgpr_400ac000_P_compatible_IDX_0 "nxp,imx-gpr"
#define DT_N_S_soc_S_iomuxcgpr_400ac000_P_compatible_IDX_0_STRING_UNQUOTED nxp,imx-gpr
#define DT_N_S_soc_S_iomuxcgpr_400ac000_P_compatible_IDX_0_STRING_TOKEN nxp_imx_gpr
#define DT_N_S_soc_S_iomuxcgpr_400ac000_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_IMX_GPR
#define DT_N_S_soc_S_iomuxcgpr_400ac000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxcgpr_400ac000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxcgpr_400ac000, compatible, 0)
#define DT_N_S_soc_S_iomuxcgpr_400ac000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxcgpr_400ac000, compatible, 0)
#define DT_N_S_soc_S_iomuxcgpr_400ac000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxcgpr_400ac000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxcgpr_400ac000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxcgpr_400ac000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxcgpr_400ac000_P_compatible_LEN 1
#define DT_N_S_soc_S_iomuxcgpr_400ac000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_iomuxcgpr_400ac000_P_wakeup_source 0
#define DT_N_S_soc_S_iomuxcgpr_400ac000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/sai@40384000
 *
 * Node identifier: DT_N_S_soc_S_sai_40384000
 *
 * Binding (compatible = nxp,mcux-i2s):
 *   $ZEPHYR_BASE/dts/bindings/i2s/nxp,mcux-i2s.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_sai_40384000_PATH "/soc/sai@40384000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_sai_40384000_FULL_NAME "sai@40384000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_sai_40384000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_sai_40384000_CHILD_IDX 57

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_sai_40384000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_sai_40384000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_sai_40384000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_sai_40384000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_sai_40384000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_sai_40384000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_sai_40384000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_sai_40384000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_sai_40384000_ORD 116

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_sai_40384000_REQUIRES_ORDS \
	11, /* /soc */ \
	12, /* /soc/interrupt-controller@e000e100 */ \
	60, /* /soc/ccm@400fc000 */ \
	113, /* /soc/anatop@400d8000 */ \
	114, /* /soc/dma-controller@400e8000 */ \
	115, /* /soc/iomuxcgpr@400ac000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_sai_40384000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_sai_40384000_EXISTS 1
#define DT_N_INST_0_nxp_mcux_i2s DT_N_S_soc_S_sai_40384000
#define DT_N_NODELABEL_sai1      DT_N_S_soc_S_sai_40384000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_sai_40384000_REG_NUM 1
#define DT_N_S_soc_S_sai_40384000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sai_40384000_REG_IDX_0_VAL_ADDRESS 1077428224 /* 0x40384000 */
#define DT_N_S_soc_S_sai_40384000_REG_IDX_0_VAL_SIZE 16384 /* 0x4000 */
#define DT_N_S_soc_S_sai_40384000_RANGES_NUM 0
#define DT_N_S_soc_S_sai_40384000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_sai_40384000_IRQ_NUM 1
#define DT_N_S_soc_S_sai_40384000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sai_40384000_IRQ_IDX_0_VAL_irq 56
#define DT_N_S_soc_S_sai_40384000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_sai_40384000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sai_40384000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_sai_40384000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_sai_40384000_COMPAT_MATCHES_nxp_mcux_i2s 1
#define DT_N_S_soc_S_sai_40384000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sai_40384000_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_soc_S_sai_40384000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sai_40384000_COMPAT_MODEL_IDX_0 "mcux-i2s"
#define DT_N_S_soc_S_sai_40384000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_sai_40384000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_sai_40384000_P_reg {1077428224 /* 0x40384000 */, 16384 /* 0x4000 */}
#define DT_N_S_soc_S_sai_40384000_P_reg_IDX_0 1077428224
#define DT_N_S_soc_S_sai_40384000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sai_40384000_P_reg_IDX_1 16384
#define DT_N_S_soc_S_sai_40384000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sai_40384000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sai_40384000, reg, 0) \
	fn(DT_N_S_soc_S_sai_40384000, reg, 1)
#define DT_N_S_soc_S_sai_40384000_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sai_40384000, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sai_40384000, reg, 1)
#define DT_N_S_soc_S_sai_40384000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sai_40384000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sai_40384000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_sai_40384000_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sai_40384000, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sai_40384000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_sai_40384000_P_reg_EXISTS 1
#define DT_N_S_soc_S_sai_40384000_P_interrupts {56 /* 0x38 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_sai_40384000_P_interrupts_IDX_0 56
#define DT_N_S_soc_S_sai_40384000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sai_40384000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_sai_40384000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sai_40384000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sai_40384000, interrupts, 0) \
	fn(DT_N_S_soc_S_sai_40384000, interrupts, 1)
#define DT_N_S_soc_S_sai_40384000_P_interrupts_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sai_40384000, interrupts, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sai_40384000, interrupts, 1)
#define DT_N_S_soc_S_sai_40384000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sai_40384000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sai_40384000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_sai_40384000_P_interrupts_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sai_40384000, interrupts, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sai_40384000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_sai_40384000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_sai_40384000_P_dma_names {"rx", "tx"}
#define DT_N_S_soc_S_sai_40384000_P_dma_names_IDX_0 "rx"
#define DT_N_S_soc_S_sai_40384000_P_dma_names_IDX_0_STRING_UNQUOTED rx
#define DT_N_S_soc_S_sai_40384000_P_dma_names_IDX_0_STRING_TOKEN rx
#define DT_N_S_soc_S_sai_40384000_P_dma_names_IDX_0_STRING_UPPER_TOKEN RX
#define DT_N_S_soc_S_sai_40384000_P_dma_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sai_40384000_P_dma_names_IDX_1 "tx"
#define DT_N_S_soc_S_sai_40384000_P_dma_names_IDX_1_STRING_UNQUOTED tx
#define DT_N_S_soc_S_sai_40384000_P_dma_names_IDX_1_STRING_TOKEN tx
#define DT_N_S_soc_S_sai_40384000_P_dma_names_IDX_1_STRING_UPPER_TOKEN TX
#define DT_N_S_soc_S_sai_40384000_P_dma_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sai_40384000_P_dma_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sai_40384000, dma_names, 0) \
	fn(DT_N_S_soc_S_sai_40384000, dma_names, 1)
#define DT_N_S_soc_S_sai_40384000_P_dma_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sai_40384000, dma_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sai_40384000, dma_names, 1)
#define DT_N_S_soc_S_sai_40384000_P_dma_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sai_40384000, dma_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sai_40384000, dma_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_sai_40384000_P_dma_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sai_40384000, dma_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sai_40384000, dma_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_sai_40384000_P_dma_names_LEN 2
#define DT_N_S_soc_S_sai_40384000_P_dma_names_EXISTS 1
#define DT_N_S_soc_S_sai_40384000_P_nxp_tx_dma_channel 0
#define DT_N_S_soc_S_sai_40384000_P_nxp_tx_dma_channel_EXISTS 1
#define DT_N_S_soc_S_sai_40384000_P_nxp_rx_dma_channel 1
#define DT_N_S_soc_S_sai_40384000_P_nxp_rx_dma_channel_EXISTS 1
#define DT_N_S_soc_S_sai_40384000_P_nxp_tx_sync_mode 0
#define DT_N_S_soc_S_sai_40384000_P_nxp_tx_sync_mode_EXISTS 1
#define DT_N_S_soc_S_sai_40384000_P_nxp_rx_sync_mode 0
#define DT_N_S_soc_S_sai_40384000_P_nxp_rx_sync_mode_EXISTS 1
#define DT_N_S_soc_S_sai_40384000_P_pre_div 3
#define DT_N_S_soc_S_sai_40384000_P_pre_div_EXISTS 1
#define DT_N_S_soc_S_sai_40384000_P_podf 15
#define DT_N_S_soc_S_sai_40384000_P_podf_EXISTS 1
#define DT_N_S_soc_S_sai_40384000_P_pll_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sai_40384000_P_pll_clocks_IDX_0_PH DT_N_S_soc_S_anatop_400d8000
#define DT_N_S_soc_S_sai_40384000_P_pll_clocks_IDX_0_VAL_offset 112
#define DT_N_S_soc_S_sai_40384000_P_pll_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_sai_40384000_P_pll_clocks_IDX_0_VAL_bits 49152
#define DT_N_S_soc_S_sai_40384000_P_pll_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_sai_40384000_P_pll_clocks_IDX_0_VAL_value 0
#define DT_N_S_soc_S_sai_40384000_P_pll_clocks_IDX_0_VAL_value_EXISTS 1
#define DT_N_S_soc_S_sai_40384000_P_pll_clocks_IDX_0_NAME "src"
#define DT_N_S_soc_S_sai_40384000_P_pll_clocks_NAME_src_PH DT_N_S_soc_S_anatop_400d8000
#define DT_N_S_soc_S_sai_40384000_P_pll_clocks_NAME_src_EXISTS 1
#define DT_N_S_soc_S_sai_40384000_P_pll_clocks_NAME_src_VAL_offset DT_N_S_soc_S_sai_40384000_P_pll_clocks_IDX_0_VAL_offset
#define DT_N_S_soc_S_sai_40384000_P_pll_clocks_NAME_src_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_sai_40384000_P_pll_clocks_NAME_src_VAL_bits DT_N_S_soc_S_sai_40384000_P_pll_clocks_IDX_0_VAL_bits
#define DT_N_S_soc_S_sai_40384000_P_pll_clocks_NAME_src_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_sai_40384000_P_pll_clocks_NAME_src_VAL_value DT_N_S_soc_S_sai_40384000_P_pll_clocks_IDX_0_VAL_value
#define DT_N_S_soc_S_sai_40384000_P_pll_clocks_NAME_src_VAL_value_EXISTS 1
#define DT_N_S_soc_S_sai_40384000_P_pll_clocks_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sai_40384000_P_pll_clocks_IDX_1_PH DT_N_S_soc_S_anatop_400d8000
#define DT_N_S_soc_S_sai_40384000_P_pll_clocks_IDX_1_VAL_offset 112
#define DT_N_S_soc_S_sai_40384000_P_pll_clocks_IDX_1_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_sai_40384000_P_pll_clocks_IDX_1_VAL_bits 127
#define DT_N_S_soc_S_sai_40384000_P_pll_clocks_IDX_1_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_sai_40384000_P_pll_clocks_IDX_1_VAL_value 32
#define DT_N_S_soc_S_sai_40384000_P_pll_clocks_IDX_1_VAL_value_EXISTS 1
#define DT_N_S_soc_S_sai_40384000_P_pll_clocks_IDX_1_NAME "lp"
#define DT_N_S_soc_S_sai_40384000_P_pll_clocks_NAME_lp_PH DT_N_S_soc_S_anatop_400d8000
#define DT_N_S_soc_S_sai_40384000_P_pll_clocks_NAME_lp_EXISTS 1
#define DT_N_S_soc_S_sai_40384000_P_pll_clocks_NAME_lp_VAL_offset DT_N_S_soc_S_sai_40384000_P_pll_clocks_IDX_1_VAL_offset
#define DT_N_S_soc_S_sai_40384000_P_pll_clocks_NAME_lp_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_sai_40384000_P_pll_clocks_NAME_lp_VAL_bits DT_N_S_soc_S_sai_40384000_P_pll_clocks_IDX_1_VAL_bits
#define DT_N_S_soc_S_sai_40384000_P_pll_clocks_NAME_lp_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_sai_40384000_P_pll_clocks_NAME_lp_VAL_value DT_N_S_soc_S_sai_40384000_P_pll_clocks_IDX_1_VAL_value
#define DT_N_S_soc_S_sai_40384000_P_pll_clocks_NAME_lp_VAL_value_EXISTS 1
#define DT_N_S_soc_S_sai_40384000_P_pll_clocks_IDX_2_EXISTS 1
#define DT_N_S_soc_S_sai_40384000_P_pll_clocks_IDX_2_PH DT_N_S_soc_S_anatop_400d8000
#define DT_N_S_soc_S_sai_40384000_P_pll_clocks_IDX_2_VAL_offset 112
#define DT_N_S_soc_S_sai_40384000_P_pll_clocks_IDX_2_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_sai_40384000_P_pll_clocks_IDX_2_VAL_bits 1572864
#define DT_N_S_soc_S_sai_40384000_P_pll_clocks_IDX_2_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_sai_40384000_P_pll_clocks_IDX_2_VAL_value 1
#define DT_N_S_soc_S_sai_40384000_P_pll_clocks_IDX_2_VAL_value_EXISTS 1
#define DT_N_S_soc_S_sai_40384000_P_pll_clocks_IDX_2_NAME "pd"
#define DT_N_S_soc_S_sai_40384000_P_pll_clocks_NAME_pd_PH DT_N_S_soc_S_anatop_400d8000
#define DT_N_S_soc_S_sai_40384000_P_pll_clocks_NAME_pd_EXISTS 1
#define DT_N_S_soc_S_sai_40384000_P_pll_clocks_NAME_pd_VAL_offset DT_N_S_soc_S_sai_40384000_P_pll_clocks_IDX_2_VAL_offset
#define DT_N_S_soc_S_sai_40384000_P_pll_clocks_NAME_pd_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_sai_40384000_P_pll_clocks_NAME_pd_VAL_bits DT_N_S_soc_S_sai_40384000_P_pll_clocks_IDX_2_VAL_bits
#define DT_N_S_soc_S_sai_40384000_P_pll_clocks_NAME_pd_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_sai_40384000_P_pll_clocks_NAME_pd_VAL_value DT_N_S_soc_S_sai_40384000_P_pll_clocks_IDX_2_VAL_value
#define DT_N_S_soc_S_sai_40384000_P_pll_clocks_NAME_pd_VAL_value_EXISTS 1
#define DT_N_S_soc_S_sai_40384000_P_pll_clocks_IDX_3_EXISTS 1
#define DT_N_S_soc_S_sai_40384000_P_pll_clocks_IDX_3_PH DT_N_S_soc_S_anatop_400d8000
#define DT_N_S_soc_S_sai_40384000_P_pll_clocks_IDX_3_VAL_offset 128
#define DT_N_S_soc_S_sai_40384000_P_pll_clocks_IDX_3_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_sai_40384000_P_pll_clocks_IDX_3_VAL_bits 1073741823
#define DT_N_S_soc_S_sai_40384000_P_pll_clocks_IDX_3_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_sai_40384000_P_pll_clocks_IDX_3_VAL_value 77
#define DT_N_S_soc_S_sai_40384000_P_pll_clocks_IDX_3_VAL_value_EXISTS 1
#define DT_N_S_soc_S_sai_40384000_P_pll_clocks_IDX_3_NAME "num"
#define DT_N_S_soc_S_sai_40384000_P_pll_clocks_NAME_num_PH DT_N_S_soc_S_anatop_400d8000
#define DT_N_S_soc_S_sai_40384000_P_pll_clocks_NAME_num_EXISTS 1
#define DT_N_S_soc_S_sai_40384000_P_pll_clocks_NAME_num_VAL_offset DT_N_S_soc_S_sai_40384000_P_pll_clocks_IDX_3_VAL_offset
#define DT_N_S_soc_S_sai_40384000_P_pll_clocks_NAME_num_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_sai_40384000_P_pll_clocks_NAME_num_VAL_bits DT_N_S_soc_S_sai_40384000_P_pll_clocks_IDX_3_VAL_bits
#define DT_N_S_soc_S_sai_40384000_P_pll_clocks_NAME_num_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_sai_40384000_P_pll_clocks_NAME_num_VAL_value DT_N_S_soc_S_sai_40384000_P_pll_clocks_IDX_3_VAL_value
#define DT_N_S_soc_S_sai_40384000_P_pll_clocks_NAME_num_VAL_value_EXISTS 1
#define DT_N_S_soc_S_sai_40384000_P_pll_clocks_IDX_4_EXISTS 1
#define DT_N_S_soc_S_sai_40384000_P_pll_clocks_IDX_4_PH DT_N_S_soc_S_anatop_400d8000
#define DT_N_S_soc_S_sai_40384000_P_pll_clocks_IDX_4_VAL_offset 144
#define DT_N_S_soc_S_sai_40384000_P_pll_clocks_IDX_4_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_sai_40384000_P_pll_clocks_IDX_4_VAL_bits 1073741823
#define DT_N_S_soc_S_sai_40384000_P_pll_clocks_IDX_4_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_sai_40384000_P_pll_clocks_IDX_4_VAL_value 100
#define DT_N_S_soc_S_sai_40384000_P_pll_clocks_IDX_4_VAL_value_EXISTS 1
#define DT_N_S_soc_S_sai_40384000_P_pll_clocks_IDX_4_NAME "den"
#define DT_N_S_soc_S_sai_40384000_P_pll_clocks_NAME_den_PH DT_N_S_soc_S_anatop_400d8000
#define DT_N_S_soc_S_sai_40384000_P_pll_clocks_NAME_den_EXISTS 1
#define DT_N_S_soc_S_sai_40384000_P_pll_clocks_NAME_den_VAL_offset DT_N_S_soc_S_sai_40384000_P_pll_clocks_IDX_4_VAL_offset
#define DT_N_S_soc_S_sai_40384000_P_pll_clocks_NAME_den_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_sai_40384000_P_pll_clocks_NAME_den_VAL_bits DT_N_S_soc_S_sai_40384000_P_pll_clocks_IDX_4_VAL_bits
#define DT_N_S_soc_S_sai_40384000_P_pll_clocks_NAME_den_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_sai_40384000_P_pll_clocks_NAME_den_VAL_value DT_N_S_soc_S_sai_40384000_P_pll_clocks_IDX_4_VAL_value
#define DT_N_S_soc_S_sai_40384000_P_pll_clocks_NAME_den_VAL_value_EXISTS 1
#define DT_N_S_soc_S_sai_40384000_P_pll_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sai_40384000, pll_clocks, 0) \
	fn(DT_N_S_soc_S_sai_40384000, pll_clocks, 1) \
	fn(DT_N_S_soc_S_sai_40384000, pll_clocks, 2) \
	fn(DT_N_S_soc_S_sai_40384000, pll_clocks, 3) \
	fn(DT_N_S_soc_S_sai_40384000, pll_clocks, 4)
#define DT_N_S_soc_S_sai_40384000_P_pll_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sai_40384000, pll_clocks, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sai_40384000, pll_clocks, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sai_40384000, pll_clocks, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sai_40384000, pll_clocks, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sai_40384000, pll_clocks, 4)
#define DT_N_S_soc_S_sai_40384000_P_pll_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sai_40384000, pll_clocks, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sai_40384000, pll_clocks, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sai_40384000, pll_clocks, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sai_40384000, pll_clocks, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sai_40384000, pll_clocks, 4, __VA_ARGS__)
#define DT_N_S_soc_S_sai_40384000_P_pll_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sai_40384000, pll_clocks, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sai_40384000, pll_clocks, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sai_40384000, pll_clocks, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sai_40384000, pll_clocks, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sai_40384000, pll_clocks, 4, __VA_ARGS__)
#define DT_N_S_soc_S_sai_40384000_P_pll_clocks_LEN 5
#define DT_N_S_soc_S_sai_40384000_P_pll_clocks_EXISTS 1
#define DT_N_S_soc_S_sai_40384000_P_pll_clock_names {"src", "lp", "pd", "num", "den"}
#define DT_N_S_soc_S_sai_40384000_P_pll_clock_names_IDX_0 "src"
#define DT_N_S_soc_S_sai_40384000_P_pll_clock_names_IDX_0_STRING_UNQUOTED src
#define DT_N_S_soc_S_sai_40384000_P_pll_clock_names_IDX_0_STRING_TOKEN src
#define DT_N_S_soc_S_sai_40384000_P_pll_clock_names_IDX_0_STRING_UPPER_TOKEN SRC
#define DT_N_S_soc_S_sai_40384000_P_pll_clock_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sai_40384000_P_pll_clock_names_IDX_1 "lp"
#define DT_N_S_soc_S_sai_40384000_P_pll_clock_names_IDX_1_STRING_UNQUOTED lp
#define DT_N_S_soc_S_sai_40384000_P_pll_clock_names_IDX_1_STRING_TOKEN lp
#define DT_N_S_soc_S_sai_40384000_P_pll_clock_names_IDX_1_STRING_UPPER_TOKEN LP
#define DT_N_S_soc_S_sai_40384000_P_pll_clock_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sai_40384000_P_pll_clock_names_IDX_2 "pd"
#define DT_N_S_soc_S_sai_40384000_P_pll_clock_names_IDX_2_STRING_UNQUOTED pd
#define DT_N_S_soc_S_sai_40384000_P_pll_clock_names_IDX_2_STRING_TOKEN pd
#define DT_N_S_soc_S_sai_40384000_P_pll_clock_names_IDX_2_STRING_UPPER_TOKEN PD
#define DT_N_S_soc_S_sai_40384000_P_pll_clock_names_IDX_2_EXISTS 1
#define DT_N_S_soc_S_sai_40384000_P_pll_clock_names_IDX_3 "num"
#define DT_N_S_soc_S_sai_40384000_P_pll_clock_names_IDX_3_STRING_UNQUOTED num
#define DT_N_S_soc_S_sai_40384000_P_pll_clock_names_IDX_3_STRING_TOKEN num
#define DT_N_S_soc_S_sai_40384000_P_pll_clock_names_IDX_3_STRING_UPPER_TOKEN NUM
#define DT_N_S_soc_S_sai_40384000_P_pll_clock_names_IDX_3_EXISTS 1
#define DT_N_S_soc_S_sai_40384000_P_pll_clock_names_IDX_4 "den"
#define DT_N_S_soc_S_sai_40384000_P_pll_clock_names_IDX_4_STRING_UNQUOTED den
#define DT_N_S_soc_S_sai_40384000_P_pll_clock_names_IDX_4_STRING_TOKEN den
#define DT_N_S_soc_S_sai_40384000_P_pll_clock_names_IDX_4_STRING_UPPER_TOKEN DEN
#define DT_N_S_soc_S_sai_40384000_P_pll_clock_names_IDX_4_EXISTS 1
#define DT_N_S_soc_S_sai_40384000_P_pll_clock_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sai_40384000, pll_clock_names, 0) \
	fn(DT_N_S_soc_S_sai_40384000, pll_clock_names, 1) \
	fn(DT_N_S_soc_S_sai_40384000, pll_clock_names, 2) \
	fn(DT_N_S_soc_S_sai_40384000, pll_clock_names, 3) \
	fn(DT_N_S_soc_S_sai_40384000, pll_clock_names, 4)
#define DT_N_S_soc_S_sai_40384000_P_pll_clock_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sai_40384000, pll_clock_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sai_40384000, pll_clock_names, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sai_40384000, pll_clock_names, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sai_40384000, pll_clock_names, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sai_40384000, pll_clock_names, 4)
#define DT_N_S_soc_S_sai_40384000_P_pll_clock_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sai_40384000, pll_clock_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sai_40384000, pll_clock_names, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sai_40384000, pll_clock_names, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sai_40384000, pll_clock_names, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sai_40384000, pll_clock_names, 4, __VA_ARGS__)
#define DT_N_S_soc_S_sai_40384000_P_pll_clock_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sai_40384000, pll_clock_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sai_40384000, pll_clock_names, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sai_40384000, pll_clock_names, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sai_40384000, pll_clock_names, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sai_40384000, pll_clock_names, 4, __VA_ARGS__)
#define DT_N_S_soc_S_sai_40384000_P_pll_clock_names_LEN 5
#define DT_N_S_soc_S_sai_40384000_P_pll_clock_names_EXISTS 1
#define DT_N_S_soc_S_sai_40384000_P_pinmuxes_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sai_40384000_P_pinmuxes_IDX_0_PH DT_N_S_soc_S_iomuxcgpr_400ac000
#define DT_N_S_soc_S_sai_40384000_P_pinmuxes_IDX_0_VAL_pin 4
#define DT_N_S_soc_S_sai_40384000_P_pinmuxes_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_soc_S_sai_40384000_P_pinmuxes_IDX_0_VAL_function 524288
#define DT_N_S_soc_S_sai_40384000_P_pinmuxes_IDX_0_VAL_function_EXISTS 1
#define DT_N_S_soc_S_sai_40384000_P_pinmuxes_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sai_40384000, pinmuxes, 0)
#define DT_N_S_soc_S_sai_40384000_P_pinmuxes_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sai_40384000, pinmuxes, 0)
#define DT_N_S_soc_S_sai_40384000_P_pinmuxes_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sai_40384000, pinmuxes, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sai_40384000_P_pinmuxes_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sai_40384000, pinmuxes, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sai_40384000_P_pinmuxes_LEN 1
#define DT_N_S_soc_S_sai_40384000_P_pinmuxes_EXISTS 1
#define DT_N_S_soc_S_sai_40384000_P_nxp_tx_channel 1
#define DT_N_S_soc_S_sai_40384000_P_nxp_tx_channel_EXISTS 1
#define DT_N_S_soc_S_sai_40384000_P_status "disabled"
#define DT_N_S_soc_S_sai_40384000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_sai_40384000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_sai_40384000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_sai_40384000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_sai_40384000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_sai_40384000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_sai_40384000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sai_40384000, status, 0) \
	fn(DT_N_S_soc_S_sai_40384000, status, 1) \
	fn(DT_N_S_soc_S_sai_40384000, status, 2) \
	fn(DT_N_S_soc_S_sai_40384000, status, 3) \
	fn(DT_N_S_soc_S_sai_40384000, status, 4) \
	fn(DT_N_S_soc_S_sai_40384000, status, 5) \
	fn(DT_N_S_soc_S_sai_40384000, status, 6) \
	fn(DT_N_S_soc_S_sai_40384000, status, 7)
#define DT_N_S_soc_S_sai_40384000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sai_40384000, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sai_40384000, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sai_40384000, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sai_40384000, status, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sai_40384000, status, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sai_40384000, status, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sai_40384000, status, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sai_40384000, status, 7)
#define DT_N_S_soc_S_sai_40384000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sai_40384000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sai_40384000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sai_40384000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sai_40384000, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sai_40384000, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sai_40384000, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sai_40384000, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sai_40384000, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_sai_40384000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sai_40384000, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sai_40384000, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sai_40384000, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sai_40384000, status, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sai_40384000, status, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sai_40384000, status, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sai_40384000, status, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sai_40384000, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_sai_40384000_P_status_EXISTS 1
#define DT_N_S_soc_S_sai_40384000_P_compatible {"nxp,mcux-i2s"}
#define DT_N_S_soc_S_sai_40384000_P_compatible_IDX_0 "nxp,mcux-i2s"
#define DT_N_S_soc_S_sai_40384000_P_compatible_IDX_0_STRING_UNQUOTED nxp,mcux-i2s
#define DT_N_S_soc_S_sai_40384000_P_compatible_IDX_0_STRING_TOKEN nxp_mcux_i2s
#define DT_N_S_soc_S_sai_40384000_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_MCUX_I2S
#define DT_N_S_soc_S_sai_40384000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sai_40384000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sai_40384000, compatible, 0)
#define DT_N_S_soc_S_sai_40384000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sai_40384000, compatible, 0)
#define DT_N_S_soc_S_sai_40384000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sai_40384000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sai_40384000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sai_40384000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sai_40384000_P_compatible_LEN 1
#define DT_N_S_soc_S_sai_40384000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_sai_40384000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sai_40384000_P_clocks_IDX_0_PH DT_N_S_soc_S_ccm_400fc000
#define DT_N_S_soc_S_sai_40384000_P_clocks_IDX_0_VAL_name 2816
#define DT_N_S_soc_S_sai_40384000_P_clocks_IDX_0_VAL_name_EXISTS 1
#define DT_N_S_soc_S_sai_40384000_P_clocks_IDX_0_VAL_offset 124
#define DT_N_S_soc_S_sai_40384000_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_sai_40384000_P_clocks_IDX_0_VAL_bits 18
#define DT_N_S_soc_S_sai_40384000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_sai_40384000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sai_40384000, clocks, 0)
#define DT_N_S_soc_S_sai_40384000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sai_40384000, clocks, 0)
#define DT_N_S_soc_S_sai_40384000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sai_40384000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sai_40384000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sai_40384000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sai_40384000_P_clocks_LEN 1
#define DT_N_S_soc_S_sai_40384000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_sai_40384000_P_dmas_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sai_40384000_P_dmas_IDX_0_PH DT_N_S_soc_S_dma_controller_400e8000
#define DT_N_S_soc_S_sai_40384000_P_dmas_IDX_0_VAL_mux 0
#define DT_N_S_soc_S_sai_40384000_P_dmas_IDX_0_VAL_mux_EXISTS 1
#define DT_N_S_soc_S_sai_40384000_P_dmas_IDX_0_VAL_source 19
#define DT_N_S_soc_S_sai_40384000_P_dmas_IDX_0_VAL_source_EXISTS 1
#define DT_N_S_soc_S_sai_40384000_P_dmas_IDX_0_NAME "rx"
#define DT_N_S_soc_S_sai_40384000_P_dmas_NAME_rx_PH DT_N_S_soc_S_dma_controller_400e8000
#define DT_N_S_soc_S_sai_40384000_P_dmas_NAME_rx_EXISTS 1
#define DT_N_S_soc_S_sai_40384000_P_dmas_NAME_rx_VAL_mux DT_N_S_soc_S_sai_40384000_P_dmas_IDX_0_VAL_mux
#define DT_N_S_soc_S_sai_40384000_P_dmas_NAME_rx_VAL_mux_EXISTS 1
#define DT_N_S_soc_S_sai_40384000_P_dmas_NAME_rx_VAL_source DT_N_S_soc_S_sai_40384000_P_dmas_IDX_0_VAL_source
#define DT_N_S_soc_S_sai_40384000_P_dmas_NAME_rx_VAL_source_EXISTS 1
#define DT_N_S_soc_S_sai_40384000_P_dmas_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sai_40384000_P_dmas_IDX_1_PH DT_N_S_soc_S_dma_controller_400e8000
#define DT_N_S_soc_S_sai_40384000_P_dmas_IDX_1_VAL_mux 0
#define DT_N_S_soc_S_sai_40384000_P_dmas_IDX_1_VAL_mux_EXISTS 1
#define DT_N_S_soc_S_sai_40384000_P_dmas_IDX_1_VAL_source 20
#define DT_N_S_soc_S_sai_40384000_P_dmas_IDX_1_VAL_source_EXISTS 1
#define DT_N_S_soc_S_sai_40384000_P_dmas_IDX_1_NAME "tx"
#define DT_N_S_soc_S_sai_40384000_P_dmas_NAME_tx_PH DT_N_S_soc_S_dma_controller_400e8000
#define DT_N_S_soc_S_sai_40384000_P_dmas_NAME_tx_EXISTS 1
#define DT_N_S_soc_S_sai_40384000_P_dmas_NAME_tx_VAL_mux DT_N_S_soc_S_sai_40384000_P_dmas_IDX_1_VAL_mux
#define DT_N_S_soc_S_sai_40384000_P_dmas_NAME_tx_VAL_mux_EXISTS 1
#define DT_N_S_soc_S_sai_40384000_P_dmas_NAME_tx_VAL_source DT_N_S_soc_S_sai_40384000_P_dmas_IDX_1_VAL_source
#define DT_N_S_soc_S_sai_40384000_P_dmas_NAME_tx_VAL_source_EXISTS 1
#define DT_N_S_soc_S_sai_40384000_P_dmas_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sai_40384000, dmas, 0) \
	fn(DT_N_S_soc_S_sai_40384000, dmas, 1)
#define DT_N_S_soc_S_sai_40384000_P_dmas_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sai_40384000, dmas, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sai_40384000, dmas, 1)
#define DT_N_S_soc_S_sai_40384000_P_dmas_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sai_40384000, dmas, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sai_40384000, dmas, 1, __VA_ARGS__)
#define DT_N_S_soc_S_sai_40384000_P_dmas_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sai_40384000, dmas, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sai_40384000, dmas, 1, __VA_ARGS__)
#define DT_N_S_soc_S_sai_40384000_P_dmas_LEN 2
#define DT_N_S_soc_S_sai_40384000_P_dmas_EXISTS 1
#define DT_N_S_soc_S_sai_40384000_P_wakeup_source 0
#define DT_N_S_soc_S_sai_40384000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/sai@40388000
 *
 * Node identifier: DT_N_S_soc_S_sai_40388000
 *
 * Binding (compatible = nxp,mcux-i2s):
 *   $ZEPHYR_BASE/dts/bindings/i2s/nxp,mcux-i2s.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_sai_40388000_PATH "/soc/sai@40388000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_sai_40388000_FULL_NAME "sai@40388000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_sai_40388000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_sai_40388000_CHILD_IDX 58

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_sai_40388000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_sai_40388000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_sai_40388000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_sai_40388000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_sai_40388000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_sai_40388000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_sai_40388000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_sai_40388000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_sai_40388000_ORD 117

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_sai_40388000_REQUIRES_ORDS \
	11, /* /soc */ \
	12, /* /soc/interrupt-controller@e000e100 */ \
	60, /* /soc/ccm@400fc000 */ \
	113, /* /soc/anatop@400d8000 */ \
	114, /* /soc/dma-controller@400e8000 */ \
	115, /* /soc/iomuxcgpr@400ac000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_sai_40388000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_sai_40388000_EXISTS 1
#define DT_N_INST_1_nxp_mcux_i2s DT_N_S_soc_S_sai_40388000
#define DT_N_NODELABEL_sai2      DT_N_S_soc_S_sai_40388000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_sai_40388000_REG_NUM 1
#define DT_N_S_soc_S_sai_40388000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sai_40388000_REG_IDX_0_VAL_ADDRESS 1077444608 /* 0x40388000 */
#define DT_N_S_soc_S_sai_40388000_REG_IDX_0_VAL_SIZE 16384 /* 0x4000 */
#define DT_N_S_soc_S_sai_40388000_RANGES_NUM 0
#define DT_N_S_soc_S_sai_40388000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_sai_40388000_IRQ_NUM 1
#define DT_N_S_soc_S_sai_40388000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sai_40388000_IRQ_IDX_0_VAL_irq 57
#define DT_N_S_soc_S_sai_40388000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_sai_40388000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sai_40388000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_sai_40388000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_sai_40388000_COMPAT_MATCHES_nxp_mcux_i2s 1
#define DT_N_S_soc_S_sai_40388000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sai_40388000_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_soc_S_sai_40388000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sai_40388000_COMPAT_MODEL_IDX_0 "mcux-i2s"
#define DT_N_S_soc_S_sai_40388000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_sai_40388000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_sai_40388000_P_reg {1077444608 /* 0x40388000 */, 16384 /* 0x4000 */}
#define DT_N_S_soc_S_sai_40388000_P_reg_IDX_0 1077444608
#define DT_N_S_soc_S_sai_40388000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sai_40388000_P_reg_IDX_1 16384
#define DT_N_S_soc_S_sai_40388000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sai_40388000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sai_40388000, reg, 0) \
	fn(DT_N_S_soc_S_sai_40388000, reg, 1)
#define DT_N_S_soc_S_sai_40388000_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sai_40388000, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sai_40388000, reg, 1)
#define DT_N_S_soc_S_sai_40388000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sai_40388000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sai_40388000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_sai_40388000_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sai_40388000, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sai_40388000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_sai_40388000_P_reg_EXISTS 1
#define DT_N_S_soc_S_sai_40388000_P_interrupts {57 /* 0x39 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_sai_40388000_P_interrupts_IDX_0 57
#define DT_N_S_soc_S_sai_40388000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sai_40388000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_sai_40388000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sai_40388000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sai_40388000, interrupts, 0) \
	fn(DT_N_S_soc_S_sai_40388000, interrupts, 1)
#define DT_N_S_soc_S_sai_40388000_P_interrupts_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sai_40388000, interrupts, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sai_40388000, interrupts, 1)
#define DT_N_S_soc_S_sai_40388000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sai_40388000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sai_40388000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_sai_40388000_P_interrupts_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sai_40388000, interrupts, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sai_40388000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_sai_40388000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_sai_40388000_P_dma_names {"rx", "tx"}
#define DT_N_S_soc_S_sai_40388000_P_dma_names_IDX_0 "rx"
#define DT_N_S_soc_S_sai_40388000_P_dma_names_IDX_0_STRING_UNQUOTED rx
#define DT_N_S_soc_S_sai_40388000_P_dma_names_IDX_0_STRING_TOKEN rx
#define DT_N_S_soc_S_sai_40388000_P_dma_names_IDX_0_STRING_UPPER_TOKEN RX
#define DT_N_S_soc_S_sai_40388000_P_dma_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sai_40388000_P_dma_names_IDX_1 "tx"
#define DT_N_S_soc_S_sai_40388000_P_dma_names_IDX_1_STRING_UNQUOTED tx
#define DT_N_S_soc_S_sai_40388000_P_dma_names_IDX_1_STRING_TOKEN tx
#define DT_N_S_soc_S_sai_40388000_P_dma_names_IDX_1_STRING_UPPER_TOKEN TX
#define DT_N_S_soc_S_sai_40388000_P_dma_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sai_40388000_P_dma_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sai_40388000, dma_names, 0) \
	fn(DT_N_S_soc_S_sai_40388000, dma_names, 1)
#define DT_N_S_soc_S_sai_40388000_P_dma_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sai_40388000, dma_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sai_40388000, dma_names, 1)
#define DT_N_S_soc_S_sai_40388000_P_dma_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sai_40388000, dma_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sai_40388000, dma_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_sai_40388000_P_dma_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sai_40388000, dma_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sai_40388000, dma_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_sai_40388000_P_dma_names_LEN 2
#define DT_N_S_soc_S_sai_40388000_P_dma_names_EXISTS 1
#define DT_N_S_soc_S_sai_40388000_P_nxp_tx_dma_channel 3
#define DT_N_S_soc_S_sai_40388000_P_nxp_tx_dma_channel_EXISTS 1
#define DT_N_S_soc_S_sai_40388000_P_nxp_rx_dma_channel 4
#define DT_N_S_soc_S_sai_40388000_P_nxp_rx_dma_channel_EXISTS 1
#define DT_N_S_soc_S_sai_40388000_P_nxp_tx_sync_mode 0
#define DT_N_S_soc_S_sai_40388000_P_nxp_tx_sync_mode_EXISTS 1
#define DT_N_S_soc_S_sai_40388000_P_nxp_rx_sync_mode 0
#define DT_N_S_soc_S_sai_40388000_P_nxp_rx_sync_mode_EXISTS 1
#define DT_N_S_soc_S_sai_40388000_P_pre_div 0
#define DT_N_S_soc_S_sai_40388000_P_pre_div_EXISTS 1
#define DT_N_S_soc_S_sai_40388000_P_podf 63
#define DT_N_S_soc_S_sai_40388000_P_podf_EXISTS 1
#define DT_N_S_soc_S_sai_40388000_P_pll_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sai_40388000_P_pll_clocks_IDX_0_PH DT_N_S_soc_S_anatop_400d8000
#define DT_N_S_soc_S_sai_40388000_P_pll_clocks_IDX_0_VAL_offset 112
#define DT_N_S_soc_S_sai_40388000_P_pll_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_sai_40388000_P_pll_clocks_IDX_0_VAL_bits 49152
#define DT_N_S_soc_S_sai_40388000_P_pll_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_sai_40388000_P_pll_clocks_IDX_0_VAL_value 0
#define DT_N_S_soc_S_sai_40388000_P_pll_clocks_IDX_0_VAL_value_EXISTS 1
#define DT_N_S_soc_S_sai_40388000_P_pll_clocks_IDX_0_NAME "src"
#define DT_N_S_soc_S_sai_40388000_P_pll_clocks_NAME_src_PH DT_N_S_soc_S_anatop_400d8000
#define DT_N_S_soc_S_sai_40388000_P_pll_clocks_NAME_src_EXISTS 1
#define DT_N_S_soc_S_sai_40388000_P_pll_clocks_NAME_src_VAL_offset DT_N_S_soc_S_sai_40388000_P_pll_clocks_IDX_0_VAL_offset
#define DT_N_S_soc_S_sai_40388000_P_pll_clocks_NAME_src_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_sai_40388000_P_pll_clocks_NAME_src_VAL_bits DT_N_S_soc_S_sai_40388000_P_pll_clocks_IDX_0_VAL_bits
#define DT_N_S_soc_S_sai_40388000_P_pll_clocks_NAME_src_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_sai_40388000_P_pll_clocks_NAME_src_VAL_value DT_N_S_soc_S_sai_40388000_P_pll_clocks_IDX_0_VAL_value
#define DT_N_S_soc_S_sai_40388000_P_pll_clocks_NAME_src_VAL_value_EXISTS 1
#define DT_N_S_soc_S_sai_40388000_P_pll_clocks_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sai_40388000_P_pll_clocks_IDX_1_PH DT_N_S_soc_S_anatop_400d8000
#define DT_N_S_soc_S_sai_40388000_P_pll_clocks_IDX_1_VAL_offset 112
#define DT_N_S_soc_S_sai_40388000_P_pll_clocks_IDX_1_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_sai_40388000_P_pll_clocks_IDX_1_VAL_bits 127
#define DT_N_S_soc_S_sai_40388000_P_pll_clocks_IDX_1_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_sai_40388000_P_pll_clocks_IDX_1_VAL_value 32
#define DT_N_S_soc_S_sai_40388000_P_pll_clocks_IDX_1_VAL_value_EXISTS 1
#define DT_N_S_soc_S_sai_40388000_P_pll_clocks_IDX_1_NAME "lp"
#define DT_N_S_soc_S_sai_40388000_P_pll_clocks_NAME_lp_PH DT_N_S_soc_S_anatop_400d8000
#define DT_N_S_soc_S_sai_40388000_P_pll_clocks_NAME_lp_EXISTS 1
#define DT_N_S_soc_S_sai_40388000_P_pll_clocks_NAME_lp_VAL_offset DT_N_S_soc_S_sai_40388000_P_pll_clocks_IDX_1_VAL_offset
#define DT_N_S_soc_S_sai_40388000_P_pll_clocks_NAME_lp_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_sai_40388000_P_pll_clocks_NAME_lp_VAL_bits DT_N_S_soc_S_sai_40388000_P_pll_clocks_IDX_1_VAL_bits
#define DT_N_S_soc_S_sai_40388000_P_pll_clocks_NAME_lp_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_sai_40388000_P_pll_clocks_NAME_lp_VAL_value DT_N_S_soc_S_sai_40388000_P_pll_clocks_IDX_1_VAL_value
#define DT_N_S_soc_S_sai_40388000_P_pll_clocks_NAME_lp_VAL_value_EXISTS 1
#define DT_N_S_soc_S_sai_40388000_P_pll_clocks_IDX_2_EXISTS 1
#define DT_N_S_soc_S_sai_40388000_P_pll_clocks_IDX_2_PH DT_N_S_soc_S_anatop_400d8000
#define DT_N_S_soc_S_sai_40388000_P_pll_clocks_IDX_2_VAL_offset 112
#define DT_N_S_soc_S_sai_40388000_P_pll_clocks_IDX_2_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_sai_40388000_P_pll_clocks_IDX_2_VAL_bits 1572864
#define DT_N_S_soc_S_sai_40388000_P_pll_clocks_IDX_2_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_sai_40388000_P_pll_clocks_IDX_2_VAL_value 1
#define DT_N_S_soc_S_sai_40388000_P_pll_clocks_IDX_2_VAL_value_EXISTS 1
#define DT_N_S_soc_S_sai_40388000_P_pll_clocks_IDX_2_NAME "pd"
#define DT_N_S_soc_S_sai_40388000_P_pll_clocks_NAME_pd_PH DT_N_S_soc_S_anatop_400d8000
#define DT_N_S_soc_S_sai_40388000_P_pll_clocks_NAME_pd_EXISTS 1
#define DT_N_S_soc_S_sai_40388000_P_pll_clocks_NAME_pd_VAL_offset DT_N_S_soc_S_sai_40388000_P_pll_clocks_IDX_2_VAL_offset
#define DT_N_S_soc_S_sai_40388000_P_pll_clocks_NAME_pd_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_sai_40388000_P_pll_clocks_NAME_pd_VAL_bits DT_N_S_soc_S_sai_40388000_P_pll_clocks_IDX_2_VAL_bits
#define DT_N_S_soc_S_sai_40388000_P_pll_clocks_NAME_pd_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_sai_40388000_P_pll_clocks_NAME_pd_VAL_value DT_N_S_soc_S_sai_40388000_P_pll_clocks_IDX_2_VAL_value
#define DT_N_S_soc_S_sai_40388000_P_pll_clocks_NAME_pd_VAL_value_EXISTS 1
#define DT_N_S_soc_S_sai_40388000_P_pll_clocks_IDX_3_EXISTS 1
#define DT_N_S_soc_S_sai_40388000_P_pll_clocks_IDX_3_PH DT_N_S_soc_S_anatop_400d8000
#define DT_N_S_soc_S_sai_40388000_P_pll_clocks_IDX_3_VAL_offset 128
#define DT_N_S_soc_S_sai_40388000_P_pll_clocks_IDX_3_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_sai_40388000_P_pll_clocks_IDX_3_VAL_bits 1073741823
#define DT_N_S_soc_S_sai_40388000_P_pll_clocks_IDX_3_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_sai_40388000_P_pll_clocks_IDX_3_VAL_value 77
#define DT_N_S_soc_S_sai_40388000_P_pll_clocks_IDX_3_VAL_value_EXISTS 1
#define DT_N_S_soc_S_sai_40388000_P_pll_clocks_IDX_3_NAME "num"
#define DT_N_S_soc_S_sai_40388000_P_pll_clocks_NAME_num_PH DT_N_S_soc_S_anatop_400d8000
#define DT_N_S_soc_S_sai_40388000_P_pll_clocks_NAME_num_EXISTS 1
#define DT_N_S_soc_S_sai_40388000_P_pll_clocks_NAME_num_VAL_offset DT_N_S_soc_S_sai_40388000_P_pll_clocks_IDX_3_VAL_offset
#define DT_N_S_soc_S_sai_40388000_P_pll_clocks_NAME_num_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_sai_40388000_P_pll_clocks_NAME_num_VAL_bits DT_N_S_soc_S_sai_40388000_P_pll_clocks_IDX_3_VAL_bits
#define DT_N_S_soc_S_sai_40388000_P_pll_clocks_NAME_num_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_sai_40388000_P_pll_clocks_NAME_num_VAL_value DT_N_S_soc_S_sai_40388000_P_pll_clocks_IDX_3_VAL_value
#define DT_N_S_soc_S_sai_40388000_P_pll_clocks_NAME_num_VAL_value_EXISTS 1
#define DT_N_S_soc_S_sai_40388000_P_pll_clocks_IDX_4_EXISTS 1
#define DT_N_S_soc_S_sai_40388000_P_pll_clocks_IDX_4_PH DT_N_S_soc_S_anatop_400d8000
#define DT_N_S_soc_S_sai_40388000_P_pll_clocks_IDX_4_VAL_offset 144
#define DT_N_S_soc_S_sai_40388000_P_pll_clocks_IDX_4_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_sai_40388000_P_pll_clocks_IDX_4_VAL_bits 1073741823
#define DT_N_S_soc_S_sai_40388000_P_pll_clocks_IDX_4_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_sai_40388000_P_pll_clocks_IDX_4_VAL_value 100
#define DT_N_S_soc_S_sai_40388000_P_pll_clocks_IDX_4_VAL_value_EXISTS 1
#define DT_N_S_soc_S_sai_40388000_P_pll_clocks_IDX_4_NAME "den"
#define DT_N_S_soc_S_sai_40388000_P_pll_clocks_NAME_den_PH DT_N_S_soc_S_anatop_400d8000
#define DT_N_S_soc_S_sai_40388000_P_pll_clocks_NAME_den_EXISTS 1
#define DT_N_S_soc_S_sai_40388000_P_pll_clocks_NAME_den_VAL_offset DT_N_S_soc_S_sai_40388000_P_pll_clocks_IDX_4_VAL_offset
#define DT_N_S_soc_S_sai_40388000_P_pll_clocks_NAME_den_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_sai_40388000_P_pll_clocks_NAME_den_VAL_bits DT_N_S_soc_S_sai_40388000_P_pll_clocks_IDX_4_VAL_bits
#define DT_N_S_soc_S_sai_40388000_P_pll_clocks_NAME_den_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_sai_40388000_P_pll_clocks_NAME_den_VAL_value DT_N_S_soc_S_sai_40388000_P_pll_clocks_IDX_4_VAL_value
#define DT_N_S_soc_S_sai_40388000_P_pll_clocks_NAME_den_VAL_value_EXISTS 1
#define DT_N_S_soc_S_sai_40388000_P_pll_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sai_40388000, pll_clocks, 0) \
	fn(DT_N_S_soc_S_sai_40388000, pll_clocks, 1) \
	fn(DT_N_S_soc_S_sai_40388000, pll_clocks, 2) \
	fn(DT_N_S_soc_S_sai_40388000, pll_clocks, 3) \
	fn(DT_N_S_soc_S_sai_40388000, pll_clocks, 4)
#define DT_N_S_soc_S_sai_40388000_P_pll_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sai_40388000, pll_clocks, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sai_40388000, pll_clocks, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sai_40388000, pll_clocks, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sai_40388000, pll_clocks, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sai_40388000, pll_clocks, 4)
#define DT_N_S_soc_S_sai_40388000_P_pll_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sai_40388000, pll_clocks, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sai_40388000, pll_clocks, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sai_40388000, pll_clocks, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sai_40388000, pll_clocks, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sai_40388000, pll_clocks, 4, __VA_ARGS__)
#define DT_N_S_soc_S_sai_40388000_P_pll_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sai_40388000, pll_clocks, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sai_40388000, pll_clocks, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sai_40388000, pll_clocks, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sai_40388000, pll_clocks, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sai_40388000, pll_clocks, 4, __VA_ARGS__)
#define DT_N_S_soc_S_sai_40388000_P_pll_clocks_LEN 5
#define DT_N_S_soc_S_sai_40388000_P_pll_clocks_EXISTS 1
#define DT_N_S_soc_S_sai_40388000_P_pll_clock_names {"src", "lp", "pd", "num", "den"}
#define DT_N_S_soc_S_sai_40388000_P_pll_clock_names_IDX_0 "src"
#define DT_N_S_soc_S_sai_40388000_P_pll_clock_names_IDX_0_STRING_UNQUOTED src
#define DT_N_S_soc_S_sai_40388000_P_pll_clock_names_IDX_0_STRING_TOKEN src
#define DT_N_S_soc_S_sai_40388000_P_pll_clock_names_IDX_0_STRING_UPPER_TOKEN SRC
#define DT_N_S_soc_S_sai_40388000_P_pll_clock_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sai_40388000_P_pll_clock_names_IDX_1 "lp"
#define DT_N_S_soc_S_sai_40388000_P_pll_clock_names_IDX_1_STRING_UNQUOTED lp
#define DT_N_S_soc_S_sai_40388000_P_pll_clock_names_IDX_1_STRING_TOKEN lp
#define DT_N_S_soc_S_sai_40388000_P_pll_clock_names_IDX_1_STRING_UPPER_TOKEN LP
#define DT_N_S_soc_S_sai_40388000_P_pll_clock_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sai_40388000_P_pll_clock_names_IDX_2 "pd"
#define DT_N_S_soc_S_sai_40388000_P_pll_clock_names_IDX_2_STRING_UNQUOTED pd
#define DT_N_S_soc_S_sai_40388000_P_pll_clock_names_IDX_2_STRING_TOKEN pd
#define DT_N_S_soc_S_sai_40388000_P_pll_clock_names_IDX_2_STRING_UPPER_TOKEN PD
#define DT_N_S_soc_S_sai_40388000_P_pll_clock_names_IDX_2_EXISTS 1
#define DT_N_S_soc_S_sai_40388000_P_pll_clock_names_IDX_3 "num"
#define DT_N_S_soc_S_sai_40388000_P_pll_clock_names_IDX_3_STRING_UNQUOTED num
#define DT_N_S_soc_S_sai_40388000_P_pll_clock_names_IDX_3_STRING_TOKEN num
#define DT_N_S_soc_S_sai_40388000_P_pll_clock_names_IDX_3_STRING_UPPER_TOKEN NUM
#define DT_N_S_soc_S_sai_40388000_P_pll_clock_names_IDX_3_EXISTS 1
#define DT_N_S_soc_S_sai_40388000_P_pll_clock_names_IDX_4 "den"
#define DT_N_S_soc_S_sai_40388000_P_pll_clock_names_IDX_4_STRING_UNQUOTED den
#define DT_N_S_soc_S_sai_40388000_P_pll_clock_names_IDX_4_STRING_TOKEN den
#define DT_N_S_soc_S_sai_40388000_P_pll_clock_names_IDX_4_STRING_UPPER_TOKEN DEN
#define DT_N_S_soc_S_sai_40388000_P_pll_clock_names_IDX_4_EXISTS 1
#define DT_N_S_soc_S_sai_40388000_P_pll_clock_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sai_40388000, pll_clock_names, 0) \
	fn(DT_N_S_soc_S_sai_40388000, pll_clock_names, 1) \
	fn(DT_N_S_soc_S_sai_40388000, pll_clock_names, 2) \
	fn(DT_N_S_soc_S_sai_40388000, pll_clock_names, 3) \
	fn(DT_N_S_soc_S_sai_40388000, pll_clock_names, 4)
#define DT_N_S_soc_S_sai_40388000_P_pll_clock_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sai_40388000, pll_clock_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sai_40388000, pll_clock_names, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sai_40388000, pll_clock_names, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sai_40388000, pll_clock_names, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sai_40388000, pll_clock_names, 4)
#define DT_N_S_soc_S_sai_40388000_P_pll_clock_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sai_40388000, pll_clock_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sai_40388000, pll_clock_names, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sai_40388000, pll_clock_names, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sai_40388000, pll_clock_names, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sai_40388000, pll_clock_names, 4, __VA_ARGS__)
#define DT_N_S_soc_S_sai_40388000_P_pll_clock_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sai_40388000, pll_clock_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sai_40388000, pll_clock_names, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sai_40388000, pll_clock_names, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sai_40388000, pll_clock_names, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sai_40388000, pll_clock_names, 4, __VA_ARGS__)
#define DT_N_S_soc_S_sai_40388000_P_pll_clock_names_LEN 5
#define DT_N_S_soc_S_sai_40388000_P_pll_clock_names_EXISTS 1
#define DT_N_S_soc_S_sai_40388000_P_pinmuxes_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sai_40388000_P_pinmuxes_IDX_0_PH DT_N_S_soc_S_iomuxcgpr_400ac000
#define DT_N_S_soc_S_sai_40388000_P_pinmuxes_IDX_0_VAL_pin 4
#define DT_N_S_soc_S_sai_40388000_P_pinmuxes_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_soc_S_sai_40388000_P_pinmuxes_IDX_0_VAL_function 1048576
#define DT_N_S_soc_S_sai_40388000_P_pinmuxes_IDX_0_VAL_function_EXISTS 1
#define DT_N_S_soc_S_sai_40388000_P_pinmuxes_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sai_40388000, pinmuxes, 0)
#define DT_N_S_soc_S_sai_40388000_P_pinmuxes_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sai_40388000, pinmuxes, 0)
#define DT_N_S_soc_S_sai_40388000_P_pinmuxes_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sai_40388000, pinmuxes, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sai_40388000_P_pinmuxes_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sai_40388000, pinmuxes, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sai_40388000_P_pinmuxes_LEN 1
#define DT_N_S_soc_S_sai_40388000_P_pinmuxes_EXISTS 1
#define DT_N_S_soc_S_sai_40388000_P_nxp_tx_channel 0
#define DT_N_S_soc_S_sai_40388000_P_nxp_tx_channel_EXISTS 1
#define DT_N_S_soc_S_sai_40388000_P_status "disabled"
#define DT_N_S_soc_S_sai_40388000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_sai_40388000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_sai_40388000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_sai_40388000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_sai_40388000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_sai_40388000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_sai_40388000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sai_40388000, status, 0) \
	fn(DT_N_S_soc_S_sai_40388000, status, 1) \
	fn(DT_N_S_soc_S_sai_40388000, status, 2) \
	fn(DT_N_S_soc_S_sai_40388000, status, 3) \
	fn(DT_N_S_soc_S_sai_40388000, status, 4) \
	fn(DT_N_S_soc_S_sai_40388000, status, 5) \
	fn(DT_N_S_soc_S_sai_40388000, status, 6) \
	fn(DT_N_S_soc_S_sai_40388000, status, 7)
#define DT_N_S_soc_S_sai_40388000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sai_40388000, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sai_40388000, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sai_40388000, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sai_40388000, status, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sai_40388000, status, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sai_40388000, status, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sai_40388000, status, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sai_40388000, status, 7)
#define DT_N_S_soc_S_sai_40388000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sai_40388000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sai_40388000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sai_40388000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sai_40388000, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sai_40388000, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sai_40388000, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sai_40388000, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sai_40388000, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_sai_40388000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sai_40388000, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sai_40388000, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sai_40388000, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sai_40388000, status, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sai_40388000, status, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sai_40388000, status, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sai_40388000, status, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sai_40388000, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_sai_40388000_P_status_EXISTS 1
#define DT_N_S_soc_S_sai_40388000_P_compatible {"nxp,mcux-i2s"}
#define DT_N_S_soc_S_sai_40388000_P_compatible_IDX_0 "nxp,mcux-i2s"
#define DT_N_S_soc_S_sai_40388000_P_compatible_IDX_0_STRING_UNQUOTED nxp,mcux-i2s
#define DT_N_S_soc_S_sai_40388000_P_compatible_IDX_0_STRING_TOKEN nxp_mcux_i2s
#define DT_N_S_soc_S_sai_40388000_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_MCUX_I2S
#define DT_N_S_soc_S_sai_40388000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sai_40388000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sai_40388000, compatible, 0)
#define DT_N_S_soc_S_sai_40388000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sai_40388000, compatible, 0)
#define DT_N_S_soc_S_sai_40388000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sai_40388000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sai_40388000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sai_40388000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sai_40388000_P_compatible_LEN 1
#define DT_N_S_soc_S_sai_40388000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_sai_40388000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sai_40388000_P_clocks_IDX_0_PH DT_N_S_soc_S_ccm_400fc000
#define DT_N_S_soc_S_sai_40388000_P_clocks_IDX_0_VAL_name 2817
#define DT_N_S_soc_S_sai_40388000_P_clocks_IDX_0_VAL_name_EXISTS 1
#define DT_N_S_soc_S_sai_40388000_P_clocks_IDX_0_VAL_offset 124
#define DT_N_S_soc_S_sai_40388000_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_sai_40388000_P_clocks_IDX_0_VAL_bits 20
#define DT_N_S_soc_S_sai_40388000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_sai_40388000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sai_40388000, clocks, 0)
#define DT_N_S_soc_S_sai_40388000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sai_40388000, clocks, 0)
#define DT_N_S_soc_S_sai_40388000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sai_40388000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sai_40388000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sai_40388000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sai_40388000_P_clocks_LEN 1
#define DT_N_S_soc_S_sai_40388000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_sai_40388000_P_dmas_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sai_40388000_P_dmas_IDX_0_PH DT_N_S_soc_S_dma_controller_400e8000
#define DT_N_S_soc_S_sai_40388000_P_dmas_IDX_0_VAL_mux 0
#define DT_N_S_soc_S_sai_40388000_P_dmas_IDX_0_VAL_mux_EXISTS 1
#define DT_N_S_soc_S_sai_40388000_P_dmas_IDX_0_VAL_source 21
#define DT_N_S_soc_S_sai_40388000_P_dmas_IDX_0_VAL_source_EXISTS 1
#define DT_N_S_soc_S_sai_40388000_P_dmas_IDX_0_NAME "rx"
#define DT_N_S_soc_S_sai_40388000_P_dmas_NAME_rx_PH DT_N_S_soc_S_dma_controller_400e8000
#define DT_N_S_soc_S_sai_40388000_P_dmas_NAME_rx_EXISTS 1
#define DT_N_S_soc_S_sai_40388000_P_dmas_NAME_rx_VAL_mux DT_N_S_soc_S_sai_40388000_P_dmas_IDX_0_VAL_mux
#define DT_N_S_soc_S_sai_40388000_P_dmas_NAME_rx_VAL_mux_EXISTS 1
#define DT_N_S_soc_S_sai_40388000_P_dmas_NAME_rx_VAL_source DT_N_S_soc_S_sai_40388000_P_dmas_IDX_0_VAL_source
#define DT_N_S_soc_S_sai_40388000_P_dmas_NAME_rx_VAL_source_EXISTS 1
#define DT_N_S_soc_S_sai_40388000_P_dmas_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sai_40388000_P_dmas_IDX_1_PH DT_N_S_soc_S_dma_controller_400e8000
#define DT_N_S_soc_S_sai_40388000_P_dmas_IDX_1_VAL_mux 0
#define DT_N_S_soc_S_sai_40388000_P_dmas_IDX_1_VAL_mux_EXISTS 1
#define DT_N_S_soc_S_sai_40388000_P_dmas_IDX_1_VAL_source 22
#define DT_N_S_soc_S_sai_40388000_P_dmas_IDX_1_VAL_source_EXISTS 1
#define DT_N_S_soc_S_sai_40388000_P_dmas_IDX_1_NAME "tx"
#define DT_N_S_soc_S_sai_40388000_P_dmas_NAME_tx_PH DT_N_S_soc_S_dma_controller_400e8000
#define DT_N_S_soc_S_sai_40388000_P_dmas_NAME_tx_EXISTS 1
#define DT_N_S_soc_S_sai_40388000_P_dmas_NAME_tx_VAL_mux DT_N_S_soc_S_sai_40388000_P_dmas_IDX_1_VAL_mux
#define DT_N_S_soc_S_sai_40388000_P_dmas_NAME_tx_VAL_mux_EXISTS 1
#define DT_N_S_soc_S_sai_40388000_P_dmas_NAME_tx_VAL_source DT_N_S_soc_S_sai_40388000_P_dmas_IDX_1_VAL_source
#define DT_N_S_soc_S_sai_40388000_P_dmas_NAME_tx_VAL_source_EXISTS 1
#define DT_N_S_soc_S_sai_40388000_P_dmas_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sai_40388000, dmas, 0) \
	fn(DT_N_S_soc_S_sai_40388000, dmas, 1)
#define DT_N_S_soc_S_sai_40388000_P_dmas_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sai_40388000, dmas, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sai_40388000, dmas, 1)
#define DT_N_S_soc_S_sai_40388000_P_dmas_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sai_40388000, dmas, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sai_40388000, dmas, 1, __VA_ARGS__)
#define DT_N_S_soc_S_sai_40388000_P_dmas_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sai_40388000, dmas, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sai_40388000, dmas, 1, __VA_ARGS__)
#define DT_N_S_soc_S_sai_40388000_P_dmas_LEN 2
#define DT_N_S_soc_S_sai_40388000_P_dmas_EXISTS 1
#define DT_N_S_soc_S_sai_40388000_P_wakeup_source 0
#define DT_N_S_soc_S_sai_40388000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/pinctrl/pinmux_sai3
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_PATH "/soc/iomuxc@401f8000/pinctrl/pinmux_sai3"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_FULL_NAME "pinmux_sai3"

/* Node parent (/soc/iomuxc@401f8000/pinctrl) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_PARENT DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_CHILD_IDX 11

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_ORD 118

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_REQUIRES_ORDS \
	54, /* /soc/iomuxc@401f8000/pinctrl */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_SUPPORTS_ORDS \
	119, /* /soc/sai@4038c000 */ \
	226, /* /soc/iomuxc@401f8000/pinctrl/pinmux_sai3/group0 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_EXISTS 1
#define DT_N_NODELABEL_pinmux_sai3 DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /soc/sai@4038c000
 *
 * Node identifier: DT_N_S_soc_S_sai_4038c000
 *
 * Binding (compatible = nxp,mcux-i2s):
 *   $ZEPHYR_BASE/dts/bindings/i2s/nxp,mcux-i2s.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_sai_4038c000_PATH "/soc/sai@4038c000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_sai_4038c000_FULL_NAME "sai@4038c000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_sai_4038c000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_sai_4038c000_CHILD_IDX 59

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_sai_4038c000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_sai_4038c000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_sai_4038c000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_sai_4038c000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_sai_4038c000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_sai_4038c000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_sai_4038c000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_sai_4038c000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_sai_4038c000_ORD 119

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_sai_4038c000_REQUIRES_ORDS \
	11, /* /soc */ \
	12, /* /soc/interrupt-controller@e000e100 */ \
	60, /* /soc/ccm@400fc000 */ \
	113, /* /soc/anatop@400d8000 */ \
	114, /* /soc/dma-controller@400e8000 */ \
	115, /* /soc/iomuxcgpr@400ac000 */ \
	118, /* /soc/iomuxc@401f8000/pinctrl/pinmux_sai3 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_sai_4038c000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_sai_4038c000_EXISTS 1
#define DT_N_INST_2_nxp_mcux_i2s DT_N_S_soc_S_sai_4038c000
#define DT_N_NODELABEL_sai3      DT_N_S_soc_S_sai_4038c000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_sai_4038c000_REG_NUM 1
#define DT_N_S_soc_S_sai_4038c000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sai_4038c000_REG_IDX_0_VAL_ADDRESS 1077460992 /* 0x4038c000 */
#define DT_N_S_soc_S_sai_4038c000_REG_IDX_0_VAL_SIZE 16384 /* 0x4000 */
#define DT_N_S_soc_S_sai_4038c000_RANGES_NUM 0
#define DT_N_S_soc_S_sai_4038c000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_sai_4038c000_IRQ_NUM 2
#define DT_N_S_soc_S_sai_4038c000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sai_4038c000_IRQ_IDX_0_VAL_irq 58
#define DT_N_S_soc_S_sai_4038c000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_sai_4038c000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sai_4038c000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_sai_4038c000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_sai_4038c000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sai_4038c000_IRQ_IDX_1_VAL_irq 59
#define DT_N_S_soc_S_sai_4038c000_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_sai_4038c000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sai_4038c000_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_sai_4038c000_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_sai_4038c000_COMPAT_MATCHES_nxp_mcux_i2s 1
#define DT_N_S_soc_S_sai_4038c000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sai_4038c000_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_soc_S_sai_4038c000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sai_4038c000_COMPAT_MODEL_IDX_0 "mcux-i2s"
#define DT_N_S_soc_S_sai_4038c000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_sai_4038c000_PINCTRL_NUM 1
#define DT_N_S_soc_S_sai_4038c000_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sai_4038c000_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_sai_4038c000_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_sai_4038c000_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_sai_4038c000_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_sai_4038c000_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3

/* Generic property macros: */
#define DT_N_S_soc_S_sai_4038c000_P_reg {1077460992 /* 0x4038c000 */, 16384 /* 0x4000 */}
#define DT_N_S_soc_S_sai_4038c000_P_reg_IDX_0 1077460992
#define DT_N_S_soc_S_sai_4038c000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sai_4038c000_P_reg_IDX_1 16384
#define DT_N_S_soc_S_sai_4038c000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sai_4038c000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sai_4038c000, reg, 0) \
	fn(DT_N_S_soc_S_sai_4038c000, reg, 1)
#define DT_N_S_soc_S_sai_4038c000_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sai_4038c000, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sai_4038c000, reg, 1)
#define DT_N_S_soc_S_sai_4038c000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sai_4038c000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sai_4038c000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_sai_4038c000_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sai_4038c000, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sai_4038c000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_sai_4038c000_P_reg_EXISTS 1
#define DT_N_S_soc_S_sai_4038c000_P_interrupts {58 /* 0x3a */, 0 /* 0x0 */, 59 /* 0x3b */, 0 /* 0x0 */}
#define DT_N_S_soc_S_sai_4038c000_P_interrupts_IDX_0 58
#define DT_N_S_soc_S_sai_4038c000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sai_4038c000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_sai_4038c000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sai_4038c000_P_interrupts_IDX_2 59
#define DT_N_S_soc_S_sai_4038c000_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_sai_4038c000_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_sai_4038c000_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_sai_4038c000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sai_4038c000, interrupts, 0) \
	fn(DT_N_S_soc_S_sai_4038c000, interrupts, 1) \
	fn(DT_N_S_soc_S_sai_4038c000, interrupts, 2) \
	fn(DT_N_S_soc_S_sai_4038c000, interrupts, 3)
#define DT_N_S_soc_S_sai_4038c000_P_interrupts_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sai_4038c000, interrupts, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sai_4038c000, interrupts, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sai_4038c000, interrupts, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sai_4038c000, interrupts, 3)
#define DT_N_S_soc_S_sai_4038c000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sai_4038c000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sai_4038c000, interrupts, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sai_4038c000, interrupts, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sai_4038c000, interrupts, 3, __VA_ARGS__)
#define DT_N_S_soc_S_sai_4038c000_P_interrupts_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sai_4038c000, interrupts, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sai_4038c000, interrupts, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sai_4038c000, interrupts, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sai_4038c000, interrupts, 3, __VA_ARGS__)
#define DT_N_S_soc_S_sai_4038c000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_sai_4038c000_P_dma_names {"rx", "tx"}
#define DT_N_S_soc_S_sai_4038c000_P_dma_names_IDX_0 "rx"
#define DT_N_S_soc_S_sai_4038c000_P_dma_names_IDX_0_STRING_UNQUOTED rx
#define DT_N_S_soc_S_sai_4038c000_P_dma_names_IDX_0_STRING_TOKEN rx
#define DT_N_S_soc_S_sai_4038c000_P_dma_names_IDX_0_STRING_UPPER_TOKEN RX
#define DT_N_S_soc_S_sai_4038c000_P_dma_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sai_4038c000_P_dma_names_IDX_1 "tx"
#define DT_N_S_soc_S_sai_4038c000_P_dma_names_IDX_1_STRING_UNQUOTED tx
#define DT_N_S_soc_S_sai_4038c000_P_dma_names_IDX_1_STRING_TOKEN tx
#define DT_N_S_soc_S_sai_4038c000_P_dma_names_IDX_1_STRING_UPPER_TOKEN TX
#define DT_N_S_soc_S_sai_4038c000_P_dma_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sai_4038c000_P_dma_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sai_4038c000, dma_names, 0) \
	fn(DT_N_S_soc_S_sai_4038c000, dma_names, 1)
#define DT_N_S_soc_S_sai_4038c000_P_dma_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sai_4038c000, dma_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sai_4038c000, dma_names, 1)
#define DT_N_S_soc_S_sai_4038c000_P_dma_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sai_4038c000, dma_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sai_4038c000, dma_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_sai_4038c000_P_dma_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sai_4038c000, dma_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sai_4038c000, dma_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_sai_4038c000_P_dma_names_LEN 2
#define DT_N_S_soc_S_sai_4038c000_P_dma_names_EXISTS 1
#define DT_N_S_soc_S_sai_4038c000_P_nxp_tx_dma_channel 5
#define DT_N_S_soc_S_sai_4038c000_P_nxp_tx_dma_channel_EXISTS 1
#define DT_N_S_soc_S_sai_4038c000_P_nxp_rx_dma_channel 6
#define DT_N_S_soc_S_sai_4038c000_P_nxp_rx_dma_channel_EXISTS 1
#define DT_N_S_soc_S_sai_4038c000_P_nxp_tx_sync_mode 0
#define DT_N_S_soc_S_sai_4038c000_P_nxp_tx_sync_mode_EXISTS 1
#define DT_N_S_soc_S_sai_4038c000_P_nxp_rx_sync_mode 0
#define DT_N_S_soc_S_sai_4038c000_P_nxp_rx_sync_mode_EXISTS 1
#define DT_N_S_soc_S_sai_4038c000_P_pre_div 0
#define DT_N_S_soc_S_sai_4038c000_P_pre_div_EXISTS 1
#define DT_N_S_soc_S_sai_4038c000_P_podf 63
#define DT_N_S_soc_S_sai_4038c000_P_podf_EXISTS 1
#define DT_N_S_soc_S_sai_4038c000_P_pll_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sai_4038c000_P_pll_clocks_IDX_0_PH DT_N_S_soc_S_anatop_400d8000
#define DT_N_S_soc_S_sai_4038c000_P_pll_clocks_IDX_0_VAL_offset 112
#define DT_N_S_soc_S_sai_4038c000_P_pll_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_sai_4038c000_P_pll_clocks_IDX_0_VAL_bits 49152
#define DT_N_S_soc_S_sai_4038c000_P_pll_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_sai_4038c000_P_pll_clocks_IDX_0_VAL_value 0
#define DT_N_S_soc_S_sai_4038c000_P_pll_clocks_IDX_0_VAL_value_EXISTS 1
#define DT_N_S_soc_S_sai_4038c000_P_pll_clocks_IDX_0_NAME "src"
#define DT_N_S_soc_S_sai_4038c000_P_pll_clocks_NAME_src_PH DT_N_S_soc_S_anatop_400d8000
#define DT_N_S_soc_S_sai_4038c000_P_pll_clocks_NAME_src_EXISTS 1
#define DT_N_S_soc_S_sai_4038c000_P_pll_clocks_NAME_src_VAL_offset DT_N_S_soc_S_sai_4038c000_P_pll_clocks_IDX_0_VAL_offset
#define DT_N_S_soc_S_sai_4038c000_P_pll_clocks_NAME_src_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_sai_4038c000_P_pll_clocks_NAME_src_VAL_bits DT_N_S_soc_S_sai_4038c000_P_pll_clocks_IDX_0_VAL_bits
#define DT_N_S_soc_S_sai_4038c000_P_pll_clocks_NAME_src_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_sai_4038c000_P_pll_clocks_NAME_src_VAL_value DT_N_S_soc_S_sai_4038c000_P_pll_clocks_IDX_0_VAL_value
#define DT_N_S_soc_S_sai_4038c000_P_pll_clocks_NAME_src_VAL_value_EXISTS 1
#define DT_N_S_soc_S_sai_4038c000_P_pll_clocks_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sai_4038c000_P_pll_clocks_IDX_1_PH DT_N_S_soc_S_anatop_400d8000
#define DT_N_S_soc_S_sai_4038c000_P_pll_clocks_IDX_1_VAL_offset 112
#define DT_N_S_soc_S_sai_4038c000_P_pll_clocks_IDX_1_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_sai_4038c000_P_pll_clocks_IDX_1_VAL_bits 127
#define DT_N_S_soc_S_sai_4038c000_P_pll_clocks_IDX_1_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_sai_4038c000_P_pll_clocks_IDX_1_VAL_value 32
#define DT_N_S_soc_S_sai_4038c000_P_pll_clocks_IDX_1_VAL_value_EXISTS 1
#define DT_N_S_soc_S_sai_4038c000_P_pll_clocks_IDX_1_NAME "lp"
#define DT_N_S_soc_S_sai_4038c000_P_pll_clocks_NAME_lp_PH DT_N_S_soc_S_anatop_400d8000
#define DT_N_S_soc_S_sai_4038c000_P_pll_clocks_NAME_lp_EXISTS 1
#define DT_N_S_soc_S_sai_4038c000_P_pll_clocks_NAME_lp_VAL_offset DT_N_S_soc_S_sai_4038c000_P_pll_clocks_IDX_1_VAL_offset
#define DT_N_S_soc_S_sai_4038c000_P_pll_clocks_NAME_lp_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_sai_4038c000_P_pll_clocks_NAME_lp_VAL_bits DT_N_S_soc_S_sai_4038c000_P_pll_clocks_IDX_1_VAL_bits
#define DT_N_S_soc_S_sai_4038c000_P_pll_clocks_NAME_lp_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_sai_4038c000_P_pll_clocks_NAME_lp_VAL_value DT_N_S_soc_S_sai_4038c000_P_pll_clocks_IDX_1_VAL_value
#define DT_N_S_soc_S_sai_4038c000_P_pll_clocks_NAME_lp_VAL_value_EXISTS 1
#define DT_N_S_soc_S_sai_4038c000_P_pll_clocks_IDX_2_EXISTS 1
#define DT_N_S_soc_S_sai_4038c000_P_pll_clocks_IDX_2_PH DT_N_S_soc_S_anatop_400d8000
#define DT_N_S_soc_S_sai_4038c000_P_pll_clocks_IDX_2_VAL_offset 112
#define DT_N_S_soc_S_sai_4038c000_P_pll_clocks_IDX_2_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_sai_4038c000_P_pll_clocks_IDX_2_VAL_bits 1572864
#define DT_N_S_soc_S_sai_4038c000_P_pll_clocks_IDX_2_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_sai_4038c000_P_pll_clocks_IDX_2_VAL_value 1
#define DT_N_S_soc_S_sai_4038c000_P_pll_clocks_IDX_2_VAL_value_EXISTS 1
#define DT_N_S_soc_S_sai_4038c000_P_pll_clocks_IDX_2_NAME "pd"
#define DT_N_S_soc_S_sai_4038c000_P_pll_clocks_NAME_pd_PH DT_N_S_soc_S_anatop_400d8000
#define DT_N_S_soc_S_sai_4038c000_P_pll_clocks_NAME_pd_EXISTS 1
#define DT_N_S_soc_S_sai_4038c000_P_pll_clocks_NAME_pd_VAL_offset DT_N_S_soc_S_sai_4038c000_P_pll_clocks_IDX_2_VAL_offset
#define DT_N_S_soc_S_sai_4038c000_P_pll_clocks_NAME_pd_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_sai_4038c000_P_pll_clocks_NAME_pd_VAL_bits DT_N_S_soc_S_sai_4038c000_P_pll_clocks_IDX_2_VAL_bits
#define DT_N_S_soc_S_sai_4038c000_P_pll_clocks_NAME_pd_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_sai_4038c000_P_pll_clocks_NAME_pd_VAL_value DT_N_S_soc_S_sai_4038c000_P_pll_clocks_IDX_2_VAL_value
#define DT_N_S_soc_S_sai_4038c000_P_pll_clocks_NAME_pd_VAL_value_EXISTS 1
#define DT_N_S_soc_S_sai_4038c000_P_pll_clocks_IDX_3_EXISTS 1
#define DT_N_S_soc_S_sai_4038c000_P_pll_clocks_IDX_3_PH DT_N_S_soc_S_anatop_400d8000
#define DT_N_S_soc_S_sai_4038c000_P_pll_clocks_IDX_3_VAL_offset 128
#define DT_N_S_soc_S_sai_4038c000_P_pll_clocks_IDX_3_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_sai_4038c000_P_pll_clocks_IDX_3_VAL_bits 1073741823
#define DT_N_S_soc_S_sai_4038c000_P_pll_clocks_IDX_3_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_sai_4038c000_P_pll_clocks_IDX_3_VAL_value 77
#define DT_N_S_soc_S_sai_4038c000_P_pll_clocks_IDX_3_VAL_value_EXISTS 1
#define DT_N_S_soc_S_sai_4038c000_P_pll_clocks_IDX_3_NAME "num"
#define DT_N_S_soc_S_sai_4038c000_P_pll_clocks_NAME_num_PH DT_N_S_soc_S_anatop_400d8000
#define DT_N_S_soc_S_sai_4038c000_P_pll_clocks_NAME_num_EXISTS 1
#define DT_N_S_soc_S_sai_4038c000_P_pll_clocks_NAME_num_VAL_offset DT_N_S_soc_S_sai_4038c000_P_pll_clocks_IDX_3_VAL_offset
#define DT_N_S_soc_S_sai_4038c000_P_pll_clocks_NAME_num_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_sai_4038c000_P_pll_clocks_NAME_num_VAL_bits DT_N_S_soc_S_sai_4038c000_P_pll_clocks_IDX_3_VAL_bits
#define DT_N_S_soc_S_sai_4038c000_P_pll_clocks_NAME_num_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_sai_4038c000_P_pll_clocks_NAME_num_VAL_value DT_N_S_soc_S_sai_4038c000_P_pll_clocks_IDX_3_VAL_value
#define DT_N_S_soc_S_sai_4038c000_P_pll_clocks_NAME_num_VAL_value_EXISTS 1
#define DT_N_S_soc_S_sai_4038c000_P_pll_clocks_IDX_4_EXISTS 1
#define DT_N_S_soc_S_sai_4038c000_P_pll_clocks_IDX_4_PH DT_N_S_soc_S_anatop_400d8000
#define DT_N_S_soc_S_sai_4038c000_P_pll_clocks_IDX_4_VAL_offset 144
#define DT_N_S_soc_S_sai_4038c000_P_pll_clocks_IDX_4_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_sai_4038c000_P_pll_clocks_IDX_4_VAL_bits 1073741823
#define DT_N_S_soc_S_sai_4038c000_P_pll_clocks_IDX_4_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_sai_4038c000_P_pll_clocks_IDX_4_VAL_value 100
#define DT_N_S_soc_S_sai_4038c000_P_pll_clocks_IDX_4_VAL_value_EXISTS 1
#define DT_N_S_soc_S_sai_4038c000_P_pll_clocks_IDX_4_NAME "den"
#define DT_N_S_soc_S_sai_4038c000_P_pll_clocks_NAME_den_PH DT_N_S_soc_S_anatop_400d8000
#define DT_N_S_soc_S_sai_4038c000_P_pll_clocks_NAME_den_EXISTS 1
#define DT_N_S_soc_S_sai_4038c000_P_pll_clocks_NAME_den_VAL_offset DT_N_S_soc_S_sai_4038c000_P_pll_clocks_IDX_4_VAL_offset
#define DT_N_S_soc_S_sai_4038c000_P_pll_clocks_NAME_den_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_sai_4038c000_P_pll_clocks_NAME_den_VAL_bits DT_N_S_soc_S_sai_4038c000_P_pll_clocks_IDX_4_VAL_bits
#define DT_N_S_soc_S_sai_4038c000_P_pll_clocks_NAME_den_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_sai_4038c000_P_pll_clocks_NAME_den_VAL_value DT_N_S_soc_S_sai_4038c000_P_pll_clocks_IDX_4_VAL_value
#define DT_N_S_soc_S_sai_4038c000_P_pll_clocks_NAME_den_VAL_value_EXISTS 1
#define DT_N_S_soc_S_sai_4038c000_P_pll_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sai_4038c000, pll_clocks, 0) \
	fn(DT_N_S_soc_S_sai_4038c000, pll_clocks, 1) \
	fn(DT_N_S_soc_S_sai_4038c000, pll_clocks, 2) \
	fn(DT_N_S_soc_S_sai_4038c000, pll_clocks, 3) \
	fn(DT_N_S_soc_S_sai_4038c000, pll_clocks, 4)
#define DT_N_S_soc_S_sai_4038c000_P_pll_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sai_4038c000, pll_clocks, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sai_4038c000, pll_clocks, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sai_4038c000, pll_clocks, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sai_4038c000, pll_clocks, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sai_4038c000, pll_clocks, 4)
#define DT_N_S_soc_S_sai_4038c000_P_pll_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sai_4038c000, pll_clocks, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sai_4038c000, pll_clocks, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sai_4038c000, pll_clocks, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sai_4038c000, pll_clocks, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sai_4038c000, pll_clocks, 4, __VA_ARGS__)
#define DT_N_S_soc_S_sai_4038c000_P_pll_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sai_4038c000, pll_clocks, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sai_4038c000, pll_clocks, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sai_4038c000, pll_clocks, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sai_4038c000, pll_clocks, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sai_4038c000, pll_clocks, 4, __VA_ARGS__)
#define DT_N_S_soc_S_sai_4038c000_P_pll_clocks_LEN 5
#define DT_N_S_soc_S_sai_4038c000_P_pll_clocks_EXISTS 1
#define DT_N_S_soc_S_sai_4038c000_P_pll_clock_names {"src", "lp", "pd", "num", "den"}
#define DT_N_S_soc_S_sai_4038c000_P_pll_clock_names_IDX_0 "src"
#define DT_N_S_soc_S_sai_4038c000_P_pll_clock_names_IDX_0_STRING_UNQUOTED src
#define DT_N_S_soc_S_sai_4038c000_P_pll_clock_names_IDX_0_STRING_TOKEN src
#define DT_N_S_soc_S_sai_4038c000_P_pll_clock_names_IDX_0_STRING_UPPER_TOKEN SRC
#define DT_N_S_soc_S_sai_4038c000_P_pll_clock_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sai_4038c000_P_pll_clock_names_IDX_1 "lp"
#define DT_N_S_soc_S_sai_4038c000_P_pll_clock_names_IDX_1_STRING_UNQUOTED lp
#define DT_N_S_soc_S_sai_4038c000_P_pll_clock_names_IDX_1_STRING_TOKEN lp
#define DT_N_S_soc_S_sai_4038c000_P_pll_clock_names_IDX_1_STRING_UPPER_TOKEN LP
#define DT_N_S_soc_S_sai_4038c000_P_pll_clock_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sai_4038c000_P_pll_clock_names_IDX_2 "pd"
#define DT_N_S_soc_S_sai_4038c000_P_pll_clock_names_IDX_2_STRING_UNQUOTED pd
#define DT_N_S_soc_S_sai_4038c000_P_pll_clock_names_IDX_2_STRING_TOKEN pd
#define DT_N_S_soc_S_sai_4038c000_P_pll_clock_names_IDX_2_STRING_UPPER_TOKEN PD
#define DT_N_S_soc_S_sai_4038c000_P_pll_clock_names_IDX_2_EXISTS 1
#define DT_N_S_soc_S_sai_4038c000_P_pll_clock_names_IDX_3 "num"
#define DT_N_S_soc_S_sai_4038c000_P_pll_clock_names_IDX_3_STRING_UNQUOTED num
#define DT_N_S_soc_S_sai_4038c000_P_pll_clock_names_IDX_3_STRING_TOKEN num
#define DT_N_S_soc_S_sai_4038c000_P_pll_clock_names_IDX_3_STRING_UPPER_TOKEN NUM
#define DT_N_S_soc_S_sai_4038c000_P_pll_clock_names_IDX_3_EXISTS 1
#define DT_N_S_soc_S_sai_4038c000_P_pll_clock_names_IDX_4 "den"
#define DT_N_S_soc_S_sai_4038c000_P_pll_clock_names_IDX_4_STRING_UNQUOTED den
#define DT_N_S_soc_S_sai_4038c000_P_pll_clock_names_IDX_4_STRING_TOKEN den
#define DT_N_S_soc_S_sai_4038c000_P_pll_clock_names_IDX_4_STRING_UPPER_TOKEN DEN
#define DT_N_S_soc_S_sai_4038c000_P_pll_clock_names_IDX_4_EXISTS 1
#define DT_N_S_soc_S_sai_4038c000_P_pll_clock_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sai_4038c000, pll_clock_names, 0) \
	fn(DT_N_S_soc_S_sai_4038c000, pll_clock_names, 1) \
	fn(DT_N_S_soc_S_sai_4038c000, pll_clock_names, 2) \
	fn(DT_N_S_soc_S_sai_4038c000, pll_clock_names, 3) \
	fn(DT_N_S_soc_S_sai_4038c000, pll_clock_names, 4)
#define DT_N_S_soc_S_sai_4038c000_P_pll_clock_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sai_4038c000, pll_clock_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sai_4038c000, pll_clock_names, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sai_4038c000, pll_clock_names, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sai_4038c000, pll_clock_names, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sai_4038c000, pll_clock_names, 4)
#define DT_N_S_soc_S_sai_4038c000_P_pll_clock_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sai_4038c000, pll_clock_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sai_4038c000, pll_clock_names, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sai_4038c000, pll_clock_names, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sai_4038c000, pll_clock_names, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sai_4038c000, pll_clock_names, 4, __VA_ARGS__)
#define DT_N_S_soc_S_sai_4038c000_P_pll_clock_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sai_4038c000, pll_clock_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sai_4038c000, pll_clock_names, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sai_4038c000, pll_clock_names, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sai_4038c000, pll_clock_names, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sai_4038c000, pll_clock_names, 4, __VA_ARGS__)
#define DT_N_S_soc_S_sai_4038c000_P_pll_clock_names_LEN 5
#define DT_N_S_soc_S_sai_4038c000_P_pll_clock_names_EXISTS 1
#define DT_N_S_soc_S_sai_4038c000_P_pinmuxes_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sai_4038c000_P_pinmuxes_IDX_0_PH DT_N_S_soc_S_iomuxcgpr_400ac000
#define DT_N_S_soc_S_sai_4038c000_P_pinmuxes_IDX_0_VAL_pin 4
#define DT_N_S_soc_S_sai_4038c000_P_pinmuxes_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_soc_S_sai_4038c000_P_pinmuxes_IDX_0_VAL_function 2097152
#define DT_N_S_soc_S_sai_4038c000_P_pinmuxes_IDX_0_VAL_function_EXISTS 1
#define DT_N_S_soc_S_sai_4038c000_P_pinmuxes_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sai_4038c000, pinmuxes, 0)
#define DT_N_S_soc_S_sai_4038c000_P_pinmuxes_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sai_4038c000, pinmuxes, 0)
#define DT_N_S_soc_S_sai_4038c000_P_pinmuxes_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sai_4038c000, pinmuxes, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sai_4038c000_P_pinmuxes_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sai_4038c000, pinmuxes, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sai_4038c000_P_pinmuxes_LEN 1
#define DT_N_S_soc_S_sai_4038c000_P_pinmuxes_EXISTS 1
#define DT_N_S_soc_S_sai_4038c000_P_nxp_tx_channel 0
#define DT_N_S_soc_S_sai_4038c000_P_nxp_tx_channel_EXISTS 1
#define DT_N_S_soc_S_sai_4038c000_P_status "disabled"
#define DT_N_S_soc_S_sai_4038c000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_sai_4038c000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_sai_4038c000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_sai_4038c000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_sai_4038c000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_sai_4038c000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_sai_4038c000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sai_4038c000, status, 0) \
	fn(DT_N_S_soc_S_sai_4038c000, status, 1) \
	fn(DT_N_S_soc_S_sai_4038c000, status, 2) \
	fn(DT_N_S_soc_S_sai_4038c000, status, 3) \
	fn(DT_N_S_soc_S_sai_4038c000, status, 4) \
	fn(DT_N_S_soc_S_sai_4038c000, status, 5) \
	fn(DT_N_S_soc_S_sai_4038c000, status, 6) \
	fn(DT_N_S_soc_S_sai_4038c000, status, 7)
#define DT_N_S_soc_S_sai_4038c000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sai_4038c000, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sai_4038c000, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sai_4038c000, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sai_4038c000, status, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sai_4038c000, status, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sai_4038c000, status, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sai_4038c000, status, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sai_4038c000, status, 7)
#define DT_N_S_soc_S_sai_4038c000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sai_4038c000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sai_4038c000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sai_4038c000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sai_4038c000, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sai_4038c000, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sai_4038c000, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sai_4038c000, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sai_4038c000, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_sai_4038c000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sai_4038c000, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sai_4038c000, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sai_4038c000, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sai_4038c000, status, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sai_4038c000, status, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sai_4038c000, status, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sai_4038c000, status, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sai_4038c000, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_sai_4038c000_P_status_EXISTS 1
#define DT_N_S_soc_S_sai_4038c000_P_compatible {"nxp,mcux-i2s"}
#define DT_N_S_soc_S_sai_4038c000_P_compatible_IDX_0 "nxp,mcux-i2s"
#define DT_N_S_soc_S_sai_4038c000_P_compatible_IDX_0_STRING_UNQUOTED nxp,mcux-i2s
#define DT_N_S_soc_S_sai_4038c000_P_compatible_IDX_0_STRING_TOKEN nxp_mcux_i2s
#define DT_N_S_soc_S_sai_4038c000_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_MCUX_I2S
#define DT_N_S_soc_S_sai_4038c000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sai_4038c000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sai_4038c000, compatible, 0)
#define DT_N_S_soc_S_sai_4038c000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sai_4038c000, compatible, 0)
#define DT_N_S_soc_S_sai_4038c000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sai_4038c000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sai_4038c000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sai_4038c000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sai_4038c000_P_compatible_LEN 1
#define DT_N_S_soc_S_sai_4038c000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_sai_4038c000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sai_4038c000_P_clocks_IDX_0_PH DT_N_S_soc_S_ccm_400fc000
#define DT_N_S_soc_S_sai_4038c000_P_clocks_IDX_0_VAL_name 2818
#define DT_N_S_soc_S_sai_4038c000_P_clocks_IDX_0_VAL_name_EXISTS 1
#define DT_N_S_soc_S_sai_4038c000_P_clocks_IDX_0_VAL_offset 124
#define DT_N_S_soc_S_sai_4038c000_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_sai_4038c000_P_clocks_IDX_0_VAL_bits 22
#define DT_N_S_soc_S_sai_4038c000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_sai_4038c000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sai_4038c000, clocks, 0)
#define DT_N_S_soc_S_sai_4038c000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sai_4038c000, clocks, 0)
#define DT_N_S_soc_S_sai_4038c000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sai_4038c000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sai_4038c000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sai_4038c000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sai_4038c000_P_clocks_LEN 1
#define DT_N_S_soc_S_sai_4038c000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_sai_4038c000_P_dmas_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sai_4038c000_P_dmas_IDX_0_PH DT_N_S_soc_S_dma_controller_400e8000
#define DT_N_S_soc_S_sai_4038c000_P_dmas_IDX_0_VAL_mux 0
#define DT_N_S_soc_S_sai_4038c000_P_dmas_IDX_0_VAL_mux_EXISTS 1
#define DT_N_S_soc_S_sai_4038c000_P_dmas_IDX_0_VAL_source 83
#define DT_N_S_soc_S_sai_4038c000_P_dmas_IDX_0_VAL_source_EXISTS 1
#define DT_N_S_soc_S_sai_4038c000_P_dmas_IDX_0_NAME "rx"
#define DT_N_S_soc_S_sai_4038c000_P_dmas_NAME_rx_PH DT_N_S_soc_S_dma_controller_400e8000
#define DT_N_S_soc_S_sai_4038c000_P_dmas_NAME_rx_EXISTS 1
#define DT_N_S_soc_S_sai_4038c000_P_dmas_NAME_rx_VAL_mux DT_N_S_soc_S_sai_4038c000_P_dmas_IDX_0_VAL_mux
#define DT_N_S_soc_S_sai_4038c000_P_dmas_NAME_rx_VAL_mux_EXISTS 1
#define DT_N_S_soc_S_sai_4038c000_P_dmas_NAME_rx_VAL_source DT_N_S_soc_S_sai_4038c000_P_dmas_IDX_0_VAL_source
#define DT_N_S_soc_S_sai_4038c000_P_dmas_NAME_rx_VAL_source_EXISTS 1
#define DT_N_S_soc_S_sai_4038c000_P_dmas_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sai_4038c000_P_dmas_IDX_1_PH DT_N_S_soc_S_dma_controller_400e8000
#define DT_N_S_soc_S_sai_4038c000_P_dmas_IDX_1_VAL_mux 0
#define DT_N_S_soc_S_sai_4038c000_P_dmas_IDX_1_VAL_mux_EXISTS 1
#define DT_N_S_soc_S_sai_4038c000_P_dmas_IDX_1_VAL_source 84
#define DT_N_S_soc_S_sai_4038c000_P_dmas_IDX_1_VAL_source_EXISTS 1
#define DT_N_S_soc_S_sai_4038c000_P_dmas_IDX_1_NAME "tx"
#define DT_N_S_soc_S_sai_4038c000_P_dmas_NAME_tx_PH DT_N_S_soc_S_dma_controller_400e8000
#define DT_N_S_soc_S_sai_4038c000_P_dmas_NAME_tx_EXISTS 1
#define DT_N_S_soc_S_sai_4038c000_P_dmas_NAME_tx_VAL_mux DT_N_S_soc_S_sai_4038c000_P_dmas_IDX_1_VAL_mux
#define DT_N_S_soc_S_sai_4038c000_P_dmas_NAME_tx_VAL_mux_EXISTS 1
#define DT_N_S_soc_S_sai_4038c000_P_dmas_NAME_tx_VAL_source DT_N_S_soc_S_sai_4038c000_P_dmas_IDX_1_VAL_source
#define DT_N_S_soc_S_sai_4038c000_P_dmas_NAME_tx_VAL_source_EXISTS 1
#define DT_N_S_soc_S_sai_4038c000_P_dmas_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sai_4038c000, dmas, 0) \
	fn(DT_N_S_soc_S_sai_4038c000, dmas, 1)
#define DT_N_S_soc_S_sai_4038c000_P_dmas_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sai_4038c000, dmas, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sai_4038c000, dmas, 1)
#define DT_N_S_soc_S_sai_4038c000_P_dmas_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sai_4038c000, dmas, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sai_4038c000, dmas, 1, __VA_ARGS__)
#define DT_N_S_soc_S_sai_4038c000_P_dmas_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sai_4038c000, dmas, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sai_4038c000, dmas, 1, __VA_ARGS__)
#define DT_N_S_soc_S_sai_4038c000_P_dmas_LEN 2
#define DT_N_S_soc_S_sai_4038c000_P_dmas_EXISTS 1
#define DT_N_S_soc_S_sai_4038c000_P_wakeup_source 0
#define DT_N_S_soc_S_sai_4038c000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_sai_4038c000_P_pinctrl_0_IDX_0 DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3
#define DT_N_S_soc_S_sai_4038c000_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3
#define DT_N_S_soc_S_sai_4038c000_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sai_4038c000_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sai_4038c000, pinctrl_0, 0)
#define DT_N_S_soc_S_sai_4038c000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sai_4038c000, pinctrl_0, 0)
#define DT_N_S_soc_S_sai_4038c000_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sai_4038c000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sai_4038c000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sai_4038c000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sai_4038c000_P_pinctrl_0_LEN 1
#define DT_N_S_soc_S_sai_4038c000_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_sai_4038c000_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_sai_4038c000_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_sai_4038c000_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_sai_4038c000_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_sai_4038c000_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_sai_4038c000_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sai_4038c000_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sai_4038c000, pinctrl_names, 0)
#define DT_N_S_soc_S_sai_4038c000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sai_4038c000, pinctrl_names, 0)
#define DT_N_S_soc_S_sai_4038c000_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sai_4038c000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sai_4038c000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sai_4038c000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sai_4038c000_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_sai_4038c000_P_pinctrl_names_EXISTS 1

/*
 * Devicetree node: /soc/semc0@402f0000
 *
 * Node identifier: DT_N_S_soc_S_semc0_402f0000
 *
 * Binding (compatible = nxp,imx-semc):
 *   $ZEPHYR_BASE/dts/bindings/memory-controllers/nxp,imx-semc.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_semc0_402f0000_PATH "/soc/semc0@402f0000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_semc0_402f0000_FULL_NAME "semc0@402f0000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_semc0_402f0000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_semc0_402f0000_CHILD_IDX 4

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_semc0_402f0000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_semc0_402f0000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_semc0_402f0000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_semc0_402f0000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_semc0_402f0000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_semc0_402f0000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_semc0_402f0000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_semc0_402f0000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_semc0_402f0000_ORD 120

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_semc0_402f0000_REQUIRES_ORDS \
	11, /* /soc */ \
	12, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_semc0_402f0000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_semc0_402f0000_EXISTS 1
#define DT_N_INST_0_nxp_imx_semc DT_N_S_soc_S_semc0_402f0000
#define DT_N_NODELABEL_semc      DT_N_S_soc_S_semc0_402f0000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_semc0_402f0000_REG_NUM 1
#define DT_N_S_soc_S_semc0_402f0000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_semc0_402f0000_REG_IDX_0_VAL_ADDRESS 1076822016 /* 0x402f0000 */
#define DT_N_S_soc_S_semc0_402f0000_REG_IDX_0_VAL_SIZE 16384 /* 0x4000 */
#define DT_N_S_soc_S_semc0_402f0000_RANGES_NUM 0
#define DT_N_S_soc_S_semc0_402f0000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_semc0_402f0000_IRQ_NUM 1
#define DT_N_S_soc_S_semc0_402f0000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_semc0_402f0000_IRQ_IDX_0_VAL_irq 109
#define DT_N_S_soc_S_semc0_402f0000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_semc0_402f0000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_semc0_402f0000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_semc0_402f0000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_semc0_402f0000_COMPAT_MATCHES_nxp_imx_semc 1
#define DT_N_S_soc_S_semc0_402f0000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_semc0_402f0000_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_soc_S_semc0_402f0000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_semc0_402f0000_COMPAT_MODEL_IDX_0 "imx-semc"
#define DT_N_S_soc_S_semc0_402f0000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_semc0_402f0000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_semc0_402f0000_P_reg {1076822016 /* 0x402f0000 */, 16384 /* 0x4000 */}
#define DT_N_S_soc_S_semc0_402f0000_P_reg_IDX_0 1076822016
#define DT_N_S_soc_S_semc0_402f0000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_semc0_402f0000_P_reg_IDX_1 16384
#define DT_N_S_soc_S_semc0_402f0000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_semc0_402f0000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_semc0_402f0000, reg, 0) \
	fn(DT_N_S_soc_S_semc0_402f0000, reg, 1)
#define DT_N_S_soc_S_semc0_402f0000_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_semc0_402f0000, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_semc0_402f0000, reg, 1)
#define DT_N_S_soc_S_semc0_402f0000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_semc0_402f0000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_semc0_402f0000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_semc0_402f0000_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_semc0_402f0000, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_semc0_402f0000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_semc0_402f0000_P_reg_EXISTS 1
#define DT_N_S_soc_S_semc0_402f0000_P_interrupts {109 /* 0x6d */, 0 /* 0x0 */}
#define DT_N_S_soc_S_semc0_402f0000_P_interrupts_IDX_0 109
#define DT_N_S_soc_S_semc0_402f0000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_semc0_402f0000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_semc0_402f0000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_semc0_402f0000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_semc0_402f0000, interrupts, 0) \
	fn(DT_N_S_soc_S_semc0_402f0000, interrupts, 1)
#define DT_N_S_soc_S_semc0_402f0000_P_interrupts_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_semc0_402f0000, interrupts, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_semc0_402f0000, interrupts, 1)
#define DT_N_S_soc_S_semc0_402f0000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_semc0_402f0000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_semc0_402f0000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_semc0_402f0000_P_interrupts_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_semc0_402f0000, interrupts, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_semc0_402f0000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_semc0_402f0000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_semc0_402f0000_P_compatible {"nxp,imx-semc"}
#define DT_N_S_soc_S_semc0_402f0000_P_compatible_IDX_0 "nxp,imx-semc"
#define DT_N_S_soc_S_semc0_402f0000_P_compatible_IDX_0_STRING_UNQUOTED nxp,imx-semc
#define DT_N_S_soc_S_semc0_402f0000_P_compatible_IDX_0_STRING_TOKEN nxp_imx_semc
#define DT_N_S_soc_S_semc0_402f0000_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_IMX_SEMC
#define DT_N_S_soc_S_semc0_402f0000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_semc0_402f0000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_semc0_402f0000, compatible, 0)
#define DT_N_S_soc_S_semc0_402f0000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_semc0_402f0000, compatible, 0)
#define DT_N_S_soc_S_semc0_402f0000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_semc0_402f0000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_semc0_402f0000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_semc0_402f0000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_semc0_402f0000_P_compatible_LEN 1
#define DT_N_S_soc_S_semc0_402f0000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_semc0_402f0000_P_wakeup_source 0
#define DT_N_S_soc_S_semc0_402f0000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/spi@40398000
 *
 * Node identifier: DT_N_S_soc_S_spi_40398000
 *
 * Binding (compatible = nxp,imx-lpspi):
 *   $ZEPHYR_BASE/dts/bindings/spi/nxp,imx-lpspi.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_40398000_PATH "/soc/spi@40398000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_40398000_FULL_NAME "spi@40398000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_spi_40398000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_spi_40398000_CHILD_IDX 24

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_spi_40398000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_spi_40398000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_40398000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_40398000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_spi_40398000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_spi_40398000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_40398000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_40398000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_40398000_ORD 121

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_40398000_REQUIRES_ORDS \
	11, /* /soc */ \
	12, /* /soc/interrupt-controller@e000e100 */ \
	60, /* /soc/ccm@400fc000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_40398000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_40398000_EXISTS 1
#define DT_N_INST_1_nxp_imx_lpspi DT_N_S_soc_S_spi_40398000
#define DT_N_NODELABEL_lpspi2     DT_N_S_soc_S_spi_40398000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_spi_40398000_REG_NUM 1
#define DT_N_S_soc_S_spi_40398000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40398000_REG_IDX_0_VAL_ADDRESS 1077510144 /* 0x40398000 */
#define DT_N_S_soc_S_spi_40398000_REG_IDX_0_VAL_SIZE 16384 /* 0x4000 */
#define DT_N_S_soc_S_spi_40398000_RANGES_NUM 0
#define DT_N_S_soc_S_spi_40398000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_spi_40398000_IRQ_NUM 1
#define DT_N_S_soc_S_spi_40398000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40398000_IRQ_IDX_0_VAL_irq 33
#define DT_N_S_soc_S_spi_40398000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_spi_40398000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40398000_IRQ_IDX_0_VAL_priority 3
#define DT_N_S_soc_S_spi_40398000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_spi_40398000_COMPAT_MATCHES_nxp_imx_lpspi 1
#define DT_N_S_soc_S_spi_40398000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40398000_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_soc_S_spi_40398000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40398000_COMPAT_MODEL_IDX_0 "imx-lpspi"
#define DT_N_S_soc_S_spi_40398000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_spi_40398000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_spi_40398000_P_reg {1077510144 /* 0x40398000 */, 16384 /* 0x4000 */}
#define DT_N_S_soc_S_spi_40398000_P_reg_IDX_0 1077510144
#define DT_N_S_soc_S_spi_40398000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40398000_P_reg_IDX_1 16384
#define DT_N_S_soc_S_spi_40398000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40398000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40398000, reg, 0) \
	fn(DT_N_S_soc_S_spi_40398000, reg, 1)
#define DT_N_S_soc_S_spi_40398000_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40398000, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40398000, reg, 1)
#define DT_N_S_soc_S_spi_40398000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40398000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40398000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40398000_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40398000, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40398000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40398000_P_reg_EXISTS 1
#define DT_N_S_soc_S_spi_40398000_P_interrupts {33 /* 0x21 */, 3 /* 0x3 */}
#define DT_N_S_soc_S_spi_40398000_P_interrupts_IDX_0 33
#define DT_N_S_soc_S_spi_40398000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40398000_P_interrupts_IDX_1 3
#define DT_N_S_soc_S_spi_40398000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40398000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40398000, interrupts, 0) \
	fn(DT_N_S_soc_S_spi_40398000, interrupts, 1)
#define DT_N_S_soc_S_spi_40398000_P_interrupts_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40398000, interrupts, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40398000, interrupts, 1)
#define DT_N_S_soc_S_spi_40398000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40398000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40398000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40398000_P_interrupts_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40398000, interrupts, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40398000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40398000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_spi_40398000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40398000_P_clocks_IDX_0_PH DT_N_S_soc_S_ccm_400fc000
#define DT_N_S_soc_S_spi_40398000_P_clocks_IDX_0_VAL_name 1280
#define DT_N_S_soc_S_spi_40398000_P_clocks_IDX_0_VAL_name_EXISTS 1
#define DT_N_S_soc_S_spi_40398000_P_clocks_IDX_0_VAL_offset 108
#define DT_N_S_soc_S_spi_40398000_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_spi_40398000_P_clocks_IDX_0_VAL_bits 2
#define DT_N_S_soc_S_spi_40398000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_spi_40398000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40398000, clocks, 0)
#define DT_N_S_soc_S_spi_40398000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40398000, clocks, 0)
#define DT_N_S_soc_S_spi_40398000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40398000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40398000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40398000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40398000_P_clocks_LEN 1
#define DT_N_S_soc_S_spi_40398000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_spi_40398000_P_status "disabled"
#define DT_N_S_soc_S_spi_40398000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_spi_40398000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_spi_40398000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_spi_40398000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_spi_40398000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_spi_40398000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_spi_40398000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40398000, status, 0) \
	fn(DT_N_S_soc_S_spi_40398000, status, 1) \
	fn(DT_N_S_soc_S_spi_40398000, status, 2) \
	fn(DT_N_S_soc_S_spi_40398000, status, 3) \
	fn(DT_N_S_soc_S_spi_40398000, status, 4) \
	fn(DT_N_S_soc_S_spi_40398000, status, 5) \
	fn(DT_N_S_soc_S_spi_40398000, status, 6) \
	fn(DT_N_S_soc_S_spi_40398000, status, 7)
#define DT_N_S_soc_S_spi_40398000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40398000, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40398000, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40398000, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40398000, status, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40398000, status, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40398000, status, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40398000, status, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40398000, status, 7)
#define DT_N_S_soc_S_spi_40398000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40398000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40398000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40398000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40398000, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40398000, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40398000, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40398000, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40398000, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40398000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40398000, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40398000, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40398000, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40398000, status, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40398000, status, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40398000, status, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40398000, status, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40398000, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40398000_P_status_EXISTS 1
#define DT_N_S_soc_S_spi_40398000_P_compatible {"nxp,imx-lpspi"}
#define DT_N_S_soc_S_spi_40398000_P_compatible_IDX_0 "nxp,imx-lpspi"
#define DT_N_S_soc_S_spi_40398000_P_compatible_IDX_0_STRING_UNQUOTED nxp,imx-lpspi
#define DT_N_S_soc_S_spi_40398000_P_compatible_IDX_0_STRING_TOKEN nxp_imx_lpspi
#define DT_N_S_soc_S_spi_40398000_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_IMX_LPSPI
#define DT_N_S_soc_S_spi_40398000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40398000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40398000, compatible, 0)
#define DT_N_S_soc_S_spi_40398000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40398000, compatible, 0)
#define DT_N_S_soc_S_spi_40398000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40398000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40398000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40398000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40398000_P_compatible_LEN 1
#define DT_N_S_soc_S_spi_40398000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_spi_40398000_P_wakeup_source 0
#define DT_N_S_soc_S_spi_40398000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/spi@4039c000
 *
 * Node identifier: DT_N_S_soc_S_spi_4039c000
 *
 * Binding (compatible = nxp,imx-lpspi):
 *   $ZEPHYR_BASE/dts/bindings/spi/nxp,imx-lpspi.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_4039c000_PATH "/soc/spi@4039c000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_4039c000_FULL_NAME "spi@4039c000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_spi_4039c000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_spi_4039c000_CHILD_IDX 25

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_spi_4039c000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_spi_4039c000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_4039c000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_4039c000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_spi_4039c000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_spi_4039c000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_4039c000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_4039c000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_4039c000_ORD 122

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_4039c000_REQUIRES_ORDS \
	11, /* /soc */ \
	12, /* /soc/interrupt-controller@e000e100 */ \
	60, /* /soc/ccm@400fc000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_4039c000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_4039c000_EXISTS 1
#define DT_N_INST_2_nxp_imx_lpspi DT_N_S_soc_S_spi_4039c000
#define DT_N_NODELABEL_lpspi3     DT_N_S_soc_S_spi_4039c000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_spi_4039c000_REG_NUM 1
#define DT_N_S_soc_S_spi_4039c000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_4039c000_REG_IDX_0_VAL_ADDRESS 1077526528 /* 0x4039c000 */
#define DT_N_S_soc_S_spi_4039c000_REG_IDX_0_VAL_SIZE 16384 /* 0x4000 */
#define DT_N_S_soc_S_spi_4039c000_RANGES_NUM 0
#define DT_N_S_soc_S_spi_4039c000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_spi_4039c000_IRQ_NUM 1
#define DT_N_S_soc_S_spi_4039c000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_4039c000_IRQ_IDX_0_VAL_irq 34
#define DT_N_S_soc_S_spi_4039c000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_spi_4039c000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_4039c000_IRQ_IDX_0_VAL_priority 3
#define DT_N_S_soc_S_spi_4039c000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_spi_4039c000_COMPAT_MATCHES_nxp_imx_lpspi 1
#define DT_N_S_soc_S_spi_4039c000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_4039c000_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_soc_S_spi_4039c000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_4039c000_COMPAT_MODEL_IDX_0 "imx-lpspi"
#define DT_N_S_soc_S_spi_4039c000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_spi_4039c000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_spi_4039c000_P_reg {1077526528 /* 0x4039c000 */, 16384 /* 0x4000 */}
#define DT_N_S_soc_S_spi_4039c000_P_reg_IDX_0 1077526528
#define DT_N_S_soc_S_spi_4039c000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_4039c000_P_reg_IDX_1 16384
#define DT_N_S_soc_S_spi_4039c000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_4039c000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_4039c000, reg, 0) \
	fn(DT_N_S_soc_S_spi_4039c000, reg, 1)
#define DT_N_S_soc_S_spi_4039c000_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_4039c000, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_4039c000, reg, 1)
#define DT_N_S_soc_S_spi_4039c000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_4039c000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_4039c000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_4039c000_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_4039c000, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_4039c000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_4039c000_P_reg_EXISTS 1
#define DT_N_S_soc_S_spi_4039c000_P_interrupts {34 /* 0x22 */, 3 /* 0x3 */}
#define DT_N_S_soc_S_spi_4039c000_P_interrupts_IDX_0 34
#define DT_N_S_soc_S_spi_4039c000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_4039c000_P_interrupts_IDX_1 3
#define DT_N_S_soc_S_spi_4039c000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_4039c000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_4039c000, interrupts, 0) \
	fn(DT_N_S_soc_S_spi_4039c000, interrupts, 1)
#define DT_N_S_soc_S_spi_4039c000_P_interrupts_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_4039c000, interrupts, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_4039c000, interrupts, 1)
#define DT_N_S_soc_S_spi_4039c000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_4039c000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_4039c000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_4039c000_P_interrupts_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_4039c000, interrupts, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_4039c000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_4039c000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_spi_4039c000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_4039c000_P_clocks_IDX_0_PH DT_N_S_soc_S_ccm_400fc000
#define DT_N_S_soc_S_spi_4039c000_P_clocks_IDX_0_VAL_name 1280
#define DT_N_S_soc_S_spi_4039c000_P_clocks_IDX_0_VAL_name_EXISTS 1
#define DT_N_S_soc_S_spi_4039c000_P_clocks_IDX_0_VAL_offset 108
#define DT_N_S_soc_S_spi_4039c000_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_spi_4039c000_P_clocks_IDX_0_VAL_bits 4
#define DT_N_S_soc_S_spi_4039c000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_spi_4039c000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_4039c000, clocks, 0)
#define DT_N_S_soc_S_spi_4039c000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_4039c000, clocks, 0)
#define DT_N_S_soc_S_spi_4039c000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_4039c000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_4039c000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_4039c000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_4039c000_P_clocks_LEN 1
#define DT_N_S_soc_S_spi_4039c000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_spi_4039c000_P_status "disabled"
#define DT_N_S_soc_S_spi_4039c000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_spi_4039c000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_spi_4039c000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_spi_4039c000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_spi_4039c000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_spi_4039c000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_spi_4039c000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_4039c000, status, 0) \
	fn(DT_N_S_soc_S_spi_4039c000, status, 1) \
	fn(DT_N_S_soc_S_spi_4039c000, status, 2) \
	fn(DT_N_S_soc_S_spi_4039c000, status, 3) \
	fn(DT_N_S_soc_S_spi_4039c000, status, 4) \
	fn(DT_N_S_soc_S_spi_4039c000, status, 5) \
	fn(DT_N_S_soc_S_spi_4039c000, status, 6) \
	fn(DT_N_S_soc_S_spi_4039c000, status, 7)
#define DT_N_S_soc_S_spi_4039c000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_4039c000, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_4039c000, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_4039c000, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_4039c000, status, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_4039c000, status, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_4039c000, status, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_4039c000, status, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_4039c000, status, 7)
#define DT_N_S_soc_S_spi_4039c000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_4039c000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_4039c000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_4039c000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_4039c000, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_4039c000, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_4039c000, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_4039c000, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_4039c000, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_spi_4039c000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_4039c000, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_4039c000, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_4039c000, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_4039c000, status, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_4039c000, status, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_4039c000, status, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_4039c000, status, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_4039c000, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_spi_4039c000_P_status_EXISTS 1
#define DT_N_S_soc_S_spi_4039c000_P_compatible {"nxp,imx-lpspi"}
#define DT_N_S_soc_S_spi_4039c000_P_compatible_IDX_0 "nxp,imx-lpspi"
#define DT_N_S_soc_S_spi_4039c000_P_compatible_IDX_0_STRING_UNQUOTED nxp,imx-lpspi
#define DT_N_S_soc_S_spi_4039c000_P_compatible_IDX_0_STRING_TOKEN nxp_imx_lpspi
#define DT_N_S_soc_S_spi_4039c000_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_IMX_LPSPI
#define DT_N_S_soc_S_spi_4039c000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_4039c000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_4039c000, compatible, 0)
#define DT_N_S_soc_S_spi_4039c000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_4039c000, compatible, 0)
#define DT_N_S_soc_S_spi_4039c000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_4039c000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_4039c000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_4039c000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_4039c000_P_compatible_LEN 1
#define DT_N_S_soc_S_spi_4039c000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_spi_4039c000_P_wakeup_source 0
#define DT_N_S_soc_S_spi_4039c000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/spi@403a0000
 *
 * Node identifier: DT_N_S_soc_S_spi_403a0000
 *
 * Binding (compatible = nxp,imx-lpspi):
 *   $ZEPHYR_BASE/dts/bindings/spi/nxp,imx-lpspi.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_403a0000_PATH "/soc/spi@403a0000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_403a0000_FULL_NAME "spi@403a0000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_spi_403a0000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_spi_403a0000_CHILD_IDX 26

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_spi_403a0000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_spi_403a0000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_403a0000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_403a0000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_spi_403a0000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_spi_403a0000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_403a0000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_403a0000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_403a0000_ORD 123

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_403a0000_REQUIRES_ORDS \
	11, /* /soc */ \
	12, /* /soc/interrupt-controller@e000e100 */ \
	60, /* /soc/ccm@400fc000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_403a0000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_403a0000_EXISTS 1
#define DT_N_INST_3_nxp_imx_lpspi DT_N_S_soc_S_spi_403a0000
#define DT_N_NODELABEL_lpspi4     DT_N_S_soc_S_spi_403a0000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_spi_403a0000_REG_NUM 1
#define DT_N_S_soc_S_spi_403a0000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_403a0000_REG_IDX_0_VAL_ADDRESS 1077542912 /* 0x403a0000 */
#define DT_N_S_soc_S_spi_403a0000_REG_IDX_0_VAL_SIZE 16384 /* 0x4000 */
#define DT_N_S_soc_S_spi_403a0000_RANGES_NUM 0
#define DT_N_S_soc_S_spi_403a0000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_spi_403a0000_IRQ_NUM 1
#define DT_N_S_soc_S_spi_403a0000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_403a0000_IRQ_IDX_0_VAL_irq 35
#define DT_N_S_soc_S_spi_403a0000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_spi_403a0000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_403a0000_IRQ_IDX_0_VAL_priority 3
#define DT_N_S_soc_S_spi_403a0000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_spi_403a0000_COMPAT_MATCHES_nxp_imx_lpspi 1
#define DT_N_S_soc_S_spi_403a0000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_403a0000_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_soc_S_spi_403a0000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_403a0000_COMPAT_MODEL_IDX_0 "imx-lpspi"
#define DT_N_S_soc_S_spi_403a0000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_spi_403a0000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_spi_403a0000_P_reg {1077542912 /* 0x403a0000 */, 16384 /* 0x4000 */}
#define DT_N_S_soc_S_spi_403a0000_P_reg_IDX_0 1077542912
#define DT_N_S_soc_S_spi_403a0000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_403a0000_P_reg_IDX_1 16384
#define DT_N_S_soc_S_spi_403a0000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_403a0000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_403a0000, reg, 0) \
	fn(DT_N_S_soc_S_spi_403a0000, reg, 1)
#define DT_N_S_soc_S_spi_403a0000_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_403a0000, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_403a0000, reg, 1)
#define DT_N_S_soc_S_spi_403a0000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_403a0000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_403a0000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_403a0000_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_403a0000, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_403a0000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_403a0000_P_reg_EXISTS 1
#define DT_N_S_soc_S_spi_403a0000_P_interrupts {35 /* 0x23 */, 3 /* 0x3 */}
#define DT_N_S_soc_S_spi_403a0000_P_interrupts_IDX_0 35
#define DT_N_S_soc_S_spi_403a0000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_403a0000_P_interrupts_IDX_1 3
#define DT_N_S_soc_S_spi_403a0000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_403a0000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_403a0000, interrupts, 0) \
	fn(DT_N_S_soc_S_spi_403a0000, interrupts, 1)
#define DT_N_S_soc_S_spi_403a0000_P_interrupts_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_403a0000, interrupts, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_403a0000, interrupts, 1)
#define DT_N_S_soc_S_spi_403a0000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_403a0000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_403a0000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_403a0000_P_interrupts_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_403a0000, interrupts, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_403a0000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_403a0000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_spi_403a0000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_403a0000_P_clocks_IDX_0_PH DT_N_S_soc_S_ccm_400fc000
#define DT_N_S_soc_S_spi_403a0000_P_clocks_IDX_0_VAL_name 1280
#define DT_N_S_soc_S_spi_403a0000_P_clocks_IDX_0_VAL_name_EXISTS 1
#define DT_N_S_soc_S_spi_403a0000_P_clocks_IDX_0_VAL_offset 108
#define DT_N_S_soc_S_spi_403a0000_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_spi_403a0000_P_clocks_IDX_0_VAL_bits 6
#define DT_N_S_soc_S_spi_403a0000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_spi_403a0000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_403a0000, clocks, 0)
#define DT_N_S_soc_S_spi_403a0000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_403a0000, clocks, 0)
#define DT_N_S_soc_S_spi_403a0000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_403a0000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_403a0000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_403a0000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_403a0000_P_clocks_LEN 1
#define DT_N_S_soc_S_spi_403a0000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_spi_403a0000_P_status "disabled"
#define DT_N_S_soc_S_spi_403a0000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_spi_403a0000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_spi_403a0000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_spi_403a0000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_spi_403a0000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_spi_403a0000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_spi_403a0000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_403a0000, status, 0) \
	fn(DT_N_S_soc_S_spi_403a0000, status, 1) \
	fn(DT_N_S_soc_S_spi_403a0000, status, 2) \
	fn(DT_N_S_soc_S_spi_403a0000, status, 3) \
	fn(DT_N_S_soc_S_spi_403a0000, status, 4) \
	fn(DT_N_S_soc_S_spi_403a0000, status, 5) \
	fn(DT_N_S_soc_S_spi_403a0000, status, 6) \
	fn(DT_N_S_soc_S_spi_403a0000, status, 7)
#define DT_N_S_soc_S_spi_403a0000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_403a0000, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_403a0000, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_403a0000, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_403a0000, status, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_403a0000, status, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_403a0000, status, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_403a0000, status, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_403a0000, status, 7)
#define DT_N_S_soc_S_spi_403a0000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_403a0000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_403a0000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_403a0000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_403a0000, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_403a0000, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_403a0000, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_403a0000, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_403a0000, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_spi_403a0000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_403a0000, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_403a0000, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_403a0000, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_403a0000, status, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_403a0000, status, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_403a0000, status, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_403a0000, status, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_403a0000, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_spi_403a0000_P_status_EXISTS 1
#define DT_N_S_soc_S_spi_403a0000_P_compatible {"nxp,imx-lpspi"}
#define DT_N_S_soc_S_spi_403a0000_P_compatible_IDX_0 "nxp,imx-lpspi"
#define DT_N_S_soc_S_spi_403a0000_P_compatible_IDX_0_STRING_UNQUOTED nxp,imx-lpspi
#define DT_N_S_soc_S_spi_403a0000_P_compatible_IDX_0_STRING_TOKEN nxp_imx_lpspi
#define DT_N_S_soc_S_spi_403a0000_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_IMX_LPSPI
#define DT_N_S_soc_S_spi_403a0000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_403a0000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_403a0000, compatible, 0)
#define DT_N_S_soc_S_spi_403a0000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_403a0000, compatible, 0)
#define DT_N_S_soc_S_spi_403a0000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_403a0000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_403a0000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_403a0000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_403a0000_P_compatible_LEN 1
#define DT_N_S_soc_S_spi_403a0000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_spi_403a0000_P_wakeup_source 0
#define DT_N_S_soc_S_spi_403a0000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/timer@e000e010
 *
 * Node identifier: DT_N_S_soc_S_timer_e000e010
 *
 * Binding (compatible = arm,armv7m-systick):
 *   $ZEPHYR_BASE/dts/bindings/timer/arm,armv7m-systick.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timer_e000e010_PATH "/soc/timer@e000e010"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timer_e000e010_FULL_NAME "timer@e000e010"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timer_e000e010_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timer_e000e010_CHILD_IDX 1

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timer_e000e010_ORD 124

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timer_e000e010_REQUIRES_ORDS \
	11, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timer_e000e010_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timer_e000e010_EXISTS 1
#define DT_N_INST_0_arm_armv7m_systick DT_N_S_soc_S_timer_e000e010
#define DT_N_NODELABEL_systick         DT_N_S_soc_S_timer_e000e010

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timer_e000e010_REG_NUM 1
#define DT_N_S_soc_S_timer_e000e010_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_REG_IDX_0_VAL_ADDRESS 3758153744 /* 0xe000e010 */
#define DT_N_S_soc_S_timer_e000e010_REG_IDX_0_VAL_SIZE 16 /* 0x10 */
#define DT_N_S_soc_S_timer_e000e010_RANGES_NUM 0
#define DT_N_S_soc_S_timer_e000e010_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timer_e000e010_IRQ_NUM 0
#define DT_N_S_soc_S_timer_e000e010_COMPAT_MATCHES_arm_armv7m_systick 1
#define DT_N_S_soc_S_timer_e000e010_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_COMPAT_VENDOR_IDX_0 "ARM Ltd."
#define DT_N_S_soc_S_timer_e000e010_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_COMPAT_MODEL_IDX_0 "armv7m-systick"
#define DT_N_S_soc_S_timer_e000e010_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timer_e000e010_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timer_e000e010_P_reg {3758153744 /* 0xe000e010 */, 16 /* 0x10 */}
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_0 3758153744
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_1 16
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_e000e010, reg, 0) \
	fn(DT_N_S_soc_S_timer_e000e010, reg, 1)
#define DT_N_S_soc_S_timer_e000e010_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_e000e010, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timer_e000e010, reg, 1)
#define DT_N_S_soc_S_timer_e000e010_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_e000e010, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timer_e000e010, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timer_e000e010_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_e000e010, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timer_e000e010, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timer_e000e010_P_reg_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_status "okay"
#define DT_N_S_soc_S_timer_e000e010_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_timer_e000e010_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_timer_e000e010_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_timer_e000e010_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_timer_e000e010_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_timer_e000e010_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_timer_e000e010_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_e000e010, status, 0) \
	fn(DT_N_S_soc_S_timer_e000e010, status, 1) \
	fn(DT_N_S_soc_S_timer_e000e010, status, 2) \
	fn(DT_N_S_soc_S_timer_e000e010, status, 3)
#define DT_N_S_soc_S_timer_e000e010_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_e000e010, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timer_e000e010, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timer_e000e010, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timer_e000e010, status, 3)
#define DT_N_S_soc_S_timer_e000e010_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_e000e010, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timer_e000e010, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timer_e000e010, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timer_e000e010, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_timer_e000e010_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_e000e010, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timer_e000e010, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timer_e000e010, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timer_e000e010, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_timer_e000e010_P_status_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_compatible {"arm,armv7m-systick"}
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0 "arm,armv7m-systick"
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0_STRING_UNQUOTED arm,armv7m-systick
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0_STRING_TOKEN arm_armv7m_systick
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0_STRING_UPPER_TOKEN ARM_ARMV7M_SYSTICK
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_e000e010, compatible, 0)
#define DT_N_S_soc_S_timer_e000e010_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_e000e010, compatible, 0)
#define DT_N_S_soc_S_timer_e000e010_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_e000e010, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_e000e010_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_e000e010, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_e000e010_P_compatible_LEN 1
#define DT_N_S_soc_S_timer_e000e010_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_wakeup_source 0
#define DT_N_S_soc_S_timer_e000e010_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/pinctrl/pinmux_lpuart1
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_PATH "/soc/iomuxc@401f8000/pinctrl/pinmux_lpuart1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_FULL_NAME "pinmux_lpuart1"

/* Node parent (/soc/iomuxc@401f8000/pinctrl) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_PARENT DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_CHILD_IDX 6

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_ORD 125

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_REQUIRES_ORDS \
	54, /* /soc/iomuxc@401f8000/pinctrl */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_SUPPORTS_ORDS \
	127, /* /soc/uart@40184000 */ \
	213, /* /soc/iomuxc@401f8000/pinctrl/pinmux_lpuart1/group0 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_EXISTS 1
#define DT_N_NODELABEL_pinmux_lpuart1 DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /soc/iomuxc@401f8000/pinctrl/pinmux_lpuart1_sleep
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_PATH "/soc/iomuxc@401f8000/pinctrl/pinmux_lpuart1_sleep"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_FULL_NAME "pinmux_lpuart1_sleep"

/* Node parent (/soc/iomuxc@401f8000/pinctrl) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_PARENT DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_CHILD_IDX 7

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_ORD 126

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_REQUIRES_ORDS \
	54, /* /soc/iomuxc@401f8000/pinctrl */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_SUPPORTS_ORDS \
	127, /* /soc/uart@40184000 */ \
	214, /* /soc/iomuxc@401f8000/pinctrl/pinmux_lpuart1_sleep/group0 */ \
	215, /* /soc/iomuxc@401f8000/pinctrl/pinmux_lpuart1_sleep/group1 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_EXISTS 1
#define DT_N_NODELABEL_pinmux_lpuart1_sleep DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /soc/uart@40184000
 *
 * Node identifier: DT_N_S_soc_S_uart_40184000
 *
 * Binding (compatible = nxp,kinetis-lpuart):
 *   $ZEPHYR_BASE/dts/bindings/serial/nxp,kinetis-lpuart.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_uart_40184000_PATH "/soc/uart@40184000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_uart_40184000_FULL_NAME "uart@40184000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_uart_40184000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_uart_40184000_CHILD_IDX 27

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_uart_40184000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_uart_40184000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_uart_40184000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_uart_40184000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_uart_40184000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_uart_40184000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_uart_40184000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_uart_40184000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_uart_40184000_ORD 127

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_uart_40184000_REQUIRES_ORDS \
	11, /* /soc */ \
	12, /* /soc/interrupt-controller@e000e100 */ \
	60, /* /soc/ccm@400fc000 */ \
	114, /* /soc/dma-controller@400e8000 */ \
	125, /* /soc/iomuxc@401f8000/pinctrl/pinmux_lpuart1 */ \
	126, /* /soc/iomuxc@401f8000/pinctrl/pinmux_lpuart1_sleep */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_uart_40184000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_uart_40184000_EXISTS 1
#define DT_N_INST_0_nxp_kinetis_lpuart DT_N_S_soc_S_uart_40184000
#define DT_N_NODELABEL_lpuart1         DT_N_S_soc_S_uart_40184000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_uart_40184000_REG_NUM 1
#define DT_N_S_soc_S_uart_40184000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40184000_REG_IDX_0_VAL_ADDRESS 1075331072 /* 0x40184000 */
#define DT_N_S_soc_S_uart_40184000_REG_IDX_0_VAL_SIZE 16384 /* 0x4000 */
#define DT_N_S_soc_S_uart_40184000_RANGES_NUM 0
#define DT_N_S_soc_S_uart_40184000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_uart_40184000_IRQ_NUM 1
#define DT_N_S_soc_S_uart_40184000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40184000_IRQ_IDX_0_VAL_irq 20
#define DT_N_S_soc_S_uart_40184000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_uart_40184000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40184000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_uart_40184000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_uart_40184000_COMPAT_MATCHES_nxp_kinetis_lpuart 1
#define DT_N_S_soc_S_uart_40184000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40184000_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_soc_S_uart_40184000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40184000_COMPAT_MODEL_IDX_0 "kinetis-lpuart"
#define DT_N_S_soc_S_uart_40184000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_uart_40184000_PINCTRL_NUM 2
#define DT_N_S_soc_S_uart_40184000_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40184000_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_uart_40184000_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_uart_40184000_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_uart_40184000_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_uart_40184000_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1
#define DT_N_S_soc_S_uart_40184000_PINCTRL_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uart_40184000_PINCTRL_IDX_1_TOKEN sleep
#define DT_N_S_soc_S_uart_40184000_PINCTRL_IDX_1_UPPER_TOKEN SLEEP
#define DT_N_S_soc_S_uart_40184000_PINCTRL_NAME_sleep_EXISTS 1
#define DT_N_S_soc_S_uart_40184000_PINCTRL_NAME_sleep_IDX 1
#define DT_N_S_soc_S_uart_40184000_PINCTRL_NAME_sleep_IDX_0_PH DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep

/* Generic property macros: */
#define DT_N_S_soc_S_uart_40184000_P_reg {1075331072 /* 0x40184000 */, 16384 /* 0x4000 */}
#define DT_N_S_soc_S_uart_40184000_P_reg_IDX_0 1075331072
#define DT_N_S_soc_S_uart_40184000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40184000_P_reg_IDX_1 16384
#define DT_N_S_soc_S_uart_40184000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uart_40184000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_40184000, reg, 0) \
	fn(DT_N_S_soc_S_uart_40184000, reg, 1)
#define DT_N_S_soc_S_uart_40184000_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_40184000, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_40184000, reg, 1)
#define DT_N_S_soc_S_uart_40184000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_40184000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uart_40184000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40184000_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_40184000, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_40184000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40184000_P_reg_EXISTS 1
#define DT_N_S_soc_S_uart_40184000_P_interrupts {20 /* 0x14 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_uart_40184000_P_interrupts_IDX_0 20
#define DT_N_S_soc_S_uart_40184000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40184000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_uart_40184000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uart_40184000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_40184000, interrupts, 0) \
	fn(DT_N_S_soc_S_uart_40184000, interrupts, 1)
#define DT_N_S_soc_S_uart_40184000_P_interrupts_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_40184000, interrupts, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_40184000, interrupts, 1)
#define DT_N_S_soc_S_uart_40184000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_40184000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uart_40184000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40184000_P_interrupts_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_40184000, interrupts, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_40184000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40184000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_uart_40184000_P_nxp_loopback 0
#define DT_N_S_soc_S_uart_40184000_P_nxp_loopback_EXISTS 1
#define DT_N_S_soc_S_uart_40184000_P_nxp_rs485_mode 0
#define DT_N_S_soc_S_uart_40184000_P_nxp_rs485_mode_EXISTS 1
#define DT_N_S_soc_S_uart_40184000_P_nxp_rs485_de_active_low 0
#define DT_N_S_soc_S_uart_40184000_P_nxp_rs485_de_active_low_EXISTS 1
#define DT_N_S_soc_S_uart_40184000_P_current_speed 115200
#define DT_N_S_soc_S_uart_40184000_P_current_speed_EXISTS 1
#define DT_N_S_soc_S_uart_40184000_P_hw_flow_control 0
#define DT_N_S_soc_S_uart_40184000_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_uart_40184000_P_status "okay"
#define DT_N_S_soc_S_uart_40184000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_uart_40184000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_uart_40184000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_uart_40184000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_uart_40184000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_uart_40184000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_uart_40184000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_40184000, status, 0) \
	fn(DT_N_S_soc_S_uart_40184000, status, 1) \
	fn(DT_N_S_soc_S_uart_40184000, status, 2) \
	fn(DT_N_S_soc_S_uart_40184000, status, 3)
#define DT_N_S_soc_S_uart_40184000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_40184000, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_40184000, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_40184000, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_40184000, status, 3)
#define DT_N_S_soc_S_uart_40184000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_40184000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uart_40184000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uart_40184000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uart_40184000, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40184000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_40184000, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_40184000, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_40184000, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_40184000, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40184000_P_status_EXISTS 1
#define DT_N_S_soc_S_uart_40184000_P_compatible {"nxp,kinetis-lpuart"}
#define DT_N_S_soc_S_uart_40184000_P_compatible_IDX_0 "nxp,kinetis-lpuart"
#define DT_N_S_soc_S_uart_40184000_P_compatible_IDX_0_STRING_UNQUOTED nxp,kinetis-lpuart
#define DT_N_S_soc_S_uart_40184000_P_compatible_IDX_0_STRING_TOKEN nxp_kinetis_lpuart
#define DT_N_S_soc_S_uart_40184000_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_KINETIS_LPUART
#define DT_N_S_soc_S_uart_40184000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40184000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_40184000, compatible, 0)
#define DT_N_S_soc_S_uart_40184000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_40184000, compatible, 0)
#define DT_N_S_soc_S_uart_40184000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_40184000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40184000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_40184000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40184000_P_compatible_LEN 1
#define DT_N_S_soc_S_uart_40184000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_uart_40184000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40184000_P_clocks_IDX_0_PH DT_N_S_soc_S_ccm_400fc000
#define DT_N_S_soc_S_uart_40184000_P_clocks_IDX_0_VAL_name 768
#define DT_N_S_soc_S_uart_40184000_P_clocks_IDX_0_VAL_name_EXISTS 1
#define DT_N_S_soc_S_uart_40184000_P_clocks_IDX_0_VAL_offset 124
#define DT_N_S_soc_S_uart_40184000_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_uart_40184000_P_clocks_IDX_0_VAL_bits 24
#define DT_N_S_soc_S_uart_40184000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_uart_40184000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_40184000, clocks, 0)
#define DT_N_S_soc_S_uart_40184000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_40184000, clocks, 0)
#define DT_N_S_soc_S_uart_40184000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_40184000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40184000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_40184000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40184000_P_clocks_LEN 1
#define DT_N_S_soc_S_uart_40184000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_uart_40184000_P_dmas_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40184000_P_dmas_IDX_0_PH DT_N_S_soc_S_dma_controller_400e8000
#define DT_N_S_soc_S_uart_40184000_P_dmas_IDX_0_VAL_mux 1
#define DT_N_S_soc_S_uart_40184000_P_dmas_IDX_0_VAL_mux_EXISTS 1
#define DT_N_S_soc_S_uart_40184000_P_dmas_IDX_0_VAL_source 2
#define DT_N_S_soc_S_uart_40184000_P_dmas_IDX_0_VAL_source_EXISTS 1
#define DT_N_S_soc_S_uart_40184000_P_dmas_IDX_0_NAME "tx"
#define DT_N_S_soc_S_uart_40184000_P_dmas_NAME_tx_PH DT_N_S_soc_S_dma_controller_400e8000
#define DT_N_S_soc_S_uart_40184000_P_dmas_NAME_tx_EXISTS 1
#define DT_N_S_soc_S_uart_40184000_P_dmas_NAME_tx_VAL_mux DT_N_S_soc_S_uart_40184000_P_dmas_IDX_0_VAL_mux
#define DT_N_S_soc_S_uart_40184000_P_dmas_NAME_tx_VAL_mux_EXISTS 1
#define DT_N_S_soc_S_uart_40184000_P_dmas_NAME_tx_VAL_source DT_N_S_soc_S_uart_40184000_P_dmas_IDX_0_VAL_source
#define DT_N_S_soc_S_uart_40184000_P_dmas_NAME_tx_VAL_source_EXISTS 1
#define DT_N_S_soc_S_uart_40184000_P_dmas_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uart_40184000_P_dmas_IDX_1_PH DT_N_S_soc_S_dma_controller_400e8000
#define DT_N_S_soc_S_uart_40184000_P_dmas_IDX_1_VAL_mux 2
#define DT_N_S_soc_S_uart_40184000_P_dmas_IDX_1_VAL_mux_EXISTS 1
#define DT_N_S_soc_S_uart_40184000_P_dmas_IDX_1_VAL_source 3
#define DT_N_S_soc_S_uart_40184000_P_dmas_IDX_1_VAL_source_EXISTS 1
#define DT_N_S_soc_S_uart_40184000_P_dmas_IDX_1_NAME "rx"
#define DT_N_S_soc_S_uart_40184000_P_dmas_NAME_rx_PH DT_N_S_soc_S_dma_controller_400e8000
#define DT_N_S_soc_S_uart_40184000_P_dmas_NAME_rx_EXISTS 1
#define DT_N_S_soc_S_uart_40184000_P_dmas_NAME_rx_VAL_mux DT_N_S_soc_S_uart_40184000_P_dmas_IDX_1_VAL_mux
#define DT_N_S_soc_S_uart_40184000_P_dmas_NAME_rx_VAL_mux_EXISTS 1
#define DT_N_S_soc_S_uart_40184000_P_dmas_NAME_rx_VAL_source DT_N_S_soc_S_uart_40184000_P_dmas_IDX_1_VAL_source
#define DT_N_S_soc_S_uart_40184000_P_dmas_NAME_rx_VAL_source_EXISTS 1
#define DT_N_S_soc_S_uart_40184000_P_dmas_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_40184000, dmas, 0) \
	fn(DT_N_S_soc_S_uart_40184000, dmas, 1)
#define DT_N_S_soc_S_uart_40184000_P_dmas_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_40184000, dmas, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_40184000, dmas, 1)
#define DT_N_S_soc_S_uart_40184000_P_dmas_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_40184000, dmas, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uart_40184000, dmas, 1, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40184000_P_dmas_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_40184000, dmas, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_40184000, dmas, 1, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40184000_P_dmas_LEN 2
#define DT_N_S_soc_S_uart_40184000_P_dmas_EXISTS 1
#define DT_N_S_soc_S_uart_40184000_P_dma_names {"tx", "rx"}
#define DT_N_S_soc_S_uart_40184000_P_dma_names_IDX_0 "tx"
#define DT_N_S_soc_S_uart_40184000_P_dma_names_IDX_0_STRING_UNQUOTED tx
#define DT_N_S_soc_S_uart_40184000_P_dma_names_IDX_0_STRING_TOKEN tx
#define DT_N_S_soc_S_uart_40184000_P_dma_names_IDX_0_STRING_UPPER_TOKEN TX
#define DT_N_S_soc_S_uart_40184000_P_dma_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40184000_P_dma_names_IDX_1 "rx"
#define DT_N_S_soc_S_uart_40184000_P_dma_names_IDX_1_STRING_UNQUOTED rx
#define DT_N_S_soc_S_uart_40184000_P_dma_names_IDX_1_STRING_TOKEN rx
#define DT_N_S_soc_S_uart_40184000_P_dma_names_IDX_1_STRING_UPPER_TOKEN RX
#define DT_N_S_soc_S_uart_40184000_P_dma_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uart_40184000_P_dma_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_40184000, dma_names, 0) \
	fn(DT_N_S_soc_S_uart_40184000, dma_names, 1)
#define DT_N_S_soc_S_uart_40184000_P_dma_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_40184000, dma_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_40184000, dma_names, 1)
#define DT_N_S_soc_S_uart_40184000_P_dma_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_40184000, dma_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uart_40184000, dma_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40184000_P_dma_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_40184000, dma_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_40184000, dma_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40184000_P_dma_names_LEN 2
#define DT_N_S_soc_S_uart_40184000_P_dma_names_EXISTS 1
#define DT_N_S_soc_S_uart_40184000_P_wakeup_source 0
#define DT_N_S_soc_S_uart_40184000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_uart_40184000_P_pinctrl_0_IDX_0 DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1
#define DT_N_S_soc_S_uart_40184000_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1
#define DT_N_S_soc_S_uart_40184000_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40184000_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_40184000, pinctrl_0, 0)
#define DT_N_S_soc_S_uart_40184000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_40184000, pinctrl_0, 0)
#define DT_N_S_soc_S_uart_40184000_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_40184000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40184000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_40184000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40184000_P_pinctrl_0_LEN 1
#define DT_N_S_soc_S_uart_40184000_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_uart_40184000_P_pinctrl_1_IDX_0 DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep
#define DT_N_S_soc_S_uart_40184000_P_pinctrl_1_IDX_0_PH DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep
#define DT_N_S_soc_S_uart_40184000_P_pinctrl_1_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40184000_P_pinctrl_1_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_40184000, pinctrl_1, 0)
#define DT_N_S_soc_S_uart_40184000_P_pinctrl_1_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_40184000, pinctrl_1, 0)
#define DT_N_S_soc_S_uart_40184000_P_pinctrl_1_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_40184000, pinctrl_1, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40184000_P_pinctrl_1_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_40184000, pinctrl_1, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40184000_P_pinctrl_1_LEN 1
#define DT_N_S_soc_S_uart_40184000_P_pinctrl_1_EXISTS 1
#define DT_N_S_soc_S_uart_40184000_P_pinctrl_names {"default", "sleep"}
#define DT_N_S_soc_S_uart_40184000_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_uart_40184000_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_uart_40184000_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_uart_40184000_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_uart_40184000_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40184000_P_pinctrl_names_IDX_1 "sleep"
#define DT_N_S_soc_S_uart_40184000_P_pinctrl_names_IDX_1_STRING_UNQUOTED sleep
#define DT_N_S_soc_S_uart_40184000_P_pinctrl_names_IDX_1_STRING_TOKEN sleep
#define DT_N_S_soc_S_uart_40184000_P_pinctrl_names_IDX_1_STRING_UPPER_TOKEN SLEEP
#define DT_N_S_soc_S_uart_40184000_P_pinctrl_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uart_40184000_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_40184000, pinctrl_names, 0) \
	fn(DT_N_S_soc_S_uart_40184000, pinctrl_names, 1)
#define DT_N_S_soc_S_uart_40184000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_40184000, pinctrl_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_40184000, pinctrl_names, 1)
#define DT_N_S_soc_S_uart_40184000_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_40184000, pinctrl_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uart_40184000, pinctrl_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40184000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_40184000, pinctrl_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_40184000, pinctrl_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40184000_P_pinctrl_names_LEN 2
#define DT_N_S_soc_S_uart_40184000_P_pinctrl_names_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/pinctrl/pinmux_lpuart2
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_PATH "/soc/iomuxc@401f8000/pinctrl/pinmux_lpuart2"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_FULL_NAME "pinmux_lpuart2"

/* Node parent (/soc/iomuxc@401f8000/pinctrl) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_PARENT DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_CHILD_IDX 8

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_ORD 128

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_REQUIRES_ORDS \
	54, /* /soc/iomuxc@401f8000/pinctrl */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_SUPPORTS_ORDS \
	130, /* /soc/uart@40188000 */ \
	218, /* /soc/iomuxc@401f8000/pinctrl/pinmux_lpuart2/group0 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_EXISTS 1
#define DT_N_NODELABEL_pinmux_lpuart2 DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /soc/iomuxc@401f8000/pinctrl/pinmux_lpuart2_sleep
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_PATH "/soc/iomuxc@401f8000/pinctrl/pinmux_lpuart2_sleep"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_FULL_NAME "pinmux_lpuart2_sleep"

/* Node parent (/soc/iomuxc@401f8000/pinctrl) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_PARENT DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_CHILD_IDX 9

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_ORD 129

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_REQUIRES_ORDS \
	54, /* /soc/iomuxc@401f8000/pinctrl */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_SUPPORTS_ORDS \
	130, /* /soc/uart@40188000 */ \
	219, /* /soc/iomuxc@401f8000/pinctrl/pinmux_lpuart2_sleep/group0 */ \
	220, /* /soc/iomuxc@401f8000/pinctrl/pinmux_lpuart2_sleep/group1 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_EXISTS 1
#define DT_N_NODELABEL_pinmux_lpuart2_sleep DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /soc/uart@40188000
 *
 * Node identifier: DT_N_S_soc_S_uart_40188000
 *
 * Binding (compatible = nxp,kinetis-lpuart):
 *   $ZEPHYR_BASE/dts/bindings/serial/nxp,kinetis-lpuart.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_uart_40188000_PATH "/soc/uart@40188000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_uart_40188000_FULL_NAME "uart@40188000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_uart_40188000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_uart_40188000_CHILD_IDX 28

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_uart_40188000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_uart_40188000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_uart_40188000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_uart_40188000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_uart_40188000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_uart_40188000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_uart_40188000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_uart_40188000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_uart_40188000_ORD 130

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_uart_40188000_REQUIRES_ORDS \
	11, /* /soc */ \
	12, /* /soc/interrupt-controller@e000e100 */ \
	60, /* /soc/ccm@400fc000 */ \
	114, /* /soc/dma-controller@400e8000 */ \
	128, /* /soc/iomuxc@401f8000/pinctrl/pinmux_lpuart2 */ \
	129, /* /soc/iomuxc@401f8000/pinctrl/pinmux_lpuart2_sleep */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_uart_40188000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_uart_40188000_EXISTS 1
#define DT_N_INST_1_nxp_kinetis_lpuart DT_N_S_soc_S_uart_40188000
#define DT_N_NODELABEL_lpuart2         DT_N_S_soc_S_uart_40188000
#define DT_N_NODELABEL_arduino_serial  DT_N_S_soc_S_uart_40188000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_uart_40188000_REG_NUM 1
#define DT_N_S_soc_S_uart_40188000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40188000_REG_IDX_0_VAL_ADDRESS 1075347456 /* 0x40188000 */
#define DT_N_S_soc_S_uart_40188000_REG_IDX_0_VAL_SIZE 16384 /* 0x4000 */
#define DT_N_S_soc_S_uart_40188000_RANGES_NUM 0
#define DT_N_S_soc_S_uart_40188000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_uart_40188000_IRQ_NUM 1
#define DT_N_S_soc_S_uart_40188000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40188000_IRQ_IDX_0_VAL_irq 21
#define DT_N_S_soc_S_uart_40188000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_uart_40188000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40188000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_uart_40188000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_uart_40188000_COMPAT_MATCHES_nxp_kinetis_lpuart 1
#define DT_N_S_soc_S_uart_40188000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40188000_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_soc_S_uart_40188000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40188000_COMPAT_MODEL_IDX_0 "kinetis-lpuart"
#define DT_N_S_soc_S_uart_40188000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_uart_40188000_PINCTRL_NUM 2
#define DT_N_S_soc_S_uart_40188000_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40188000_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_uart_40188000_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_uart_40188000_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_uart_40188000_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_uart_40188000_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2
#define DT_N_S_soc_S_uart_40188000_PINCTRL_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uart_40188000_PINCTRL_IDX_1_TOKEN sleep
#define DT_N_S_soc_S_uart_40188000_PINCTRL_IDX_1_UPPER_TOKEN SLEEP
#define DT_N_S_soc_S_uart_40188000_PINCTRL_NAME_sleep_EXISTS 1
#define DT_N_S_soc_S_uart_40188000_PINCTRL_NAME_sleep_IDX 1
#define DT_N_S_soc_S_uart_40188000_PINCTRL_NAME_sleep_IDX_0_PH DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep

/* Generic property macros: */
#define DT_N_S_soc_S_uart_40188000_P_reg {1075347456 /* 0x40188000 */, 16384 /* 0x4000 */}
#define DT_N_S_soc_S_uart_40188000_P_reg_IDX_0 1075347456
#define DT_N_S_soc_S_uart_40188000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40188000_P_reg_IDX_1 16384
#define DT_N_S_soc_S_uart_40188000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uart_40188000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_40188000, reg, 0) \
	fn(DT_N_S_soc_S_uart_40188000, reg, 1)
#define DT_N_S_soc_S_uart_40188000_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_40188000, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_40188000, reg, 1)
#define DT_N_S_soc_S_uart_40188000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_40188000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uart_40188000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40188000_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_40188000, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_40188000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40188000_P_reg_EXISTS 1
#define DT_N_S_soc_S_uart_40188000_P_interrupts {21 /* 0x15 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_uart_40188000_P_interrupts_IDX_0 21
#define DT_N_S_soc_S_uart_40188000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40188000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_uart_40188000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uart_40188000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_40188000, interrupts, 0) \
	fn(DT_N_S_soc_S_uart_40188000, interrupts, 1)
#define DT_N_S_soc_S_uart_40188000_P_interrupts_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_40188000, interrupts, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_40188000, interrupts, 1)
#define DT_N_S_soc_S_uart_40188000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_40188000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uart_40188000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40188000_P_interrupts_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_40188000, interrupts, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_40188000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40188000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_uart_40188000_P_nxp_loopback 0
#define DT_N_S_soc_S_uart_40188000_P_nxp_loopback_EXISTS 1
#define DT_N_S_soc_S_uart_40188000_P_nxp_rs485_mode 0
#define DT_N_S_soc_S_uart_40188000_P_nxp_rs485_mode_EXISTS 1
#define DT_N_S_soc_S_uart_40188000_P_nxp_rs485_de_active_low 0
#define DT_N_S_soc_S_uart_40188000_P_nxp_rs485_de_active_low_EXISTS 1
#define DT_N_S_soc_S_uart_40188000_P_hw_flow_control 0
#define DT_N_S_soc_S_uart_40188000_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_uart_40188000_P_status "disabled"
#define DT_N_S_soc_S_uart_40188000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_uart_40188000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_uart_40188000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_uart_40188000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_uart_40188000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_uart_40188000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_uart_40188000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_40188000, status, 0) \
	fn(DT_N_S_soc_S_uart_40188000, status, 1) \
	fn(DT_N_S_soc_S_uart_40188000, status, 2) \
	fn(DT_N_S_soc_S_uart_40188000, status, 3) \
	fn(DT_N_S_soc_S_uart_40188000, status, 4) \
	fn(DT_N_S_soc_S_uart_40188000, status, 5) \
	fn(DT_N_S_soc_S_uart_40188000, status, 6) \
	fn(DT_N_S_soc_S_uart_40188000, status, 7)
#define DT_N_S_soc_S_uart_40188000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_40188000, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_40188000, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_40188000, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_40188000, status, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_40188000, status, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_40188000, status, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_40188000, status, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_40188000, status, 7)
#define DT_N_S_soc_S_uart_40188000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_40188000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uart_40188000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uart_40188000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uart_40188000, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uart_40188000, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uart_40188000, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uart_40188000, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uart_40188000, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40188000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_40188000, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_40188000, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_40188000, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_40188000, status, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_40188000, status, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_40188000, status, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_40188000, status, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_40188000, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40188000_P_status_EXISTS 1
#define DT_N_S_soc_S_uart_40188000_P_compatible {"nxp,kinetis-lpuart"}
#define DT_N_S_soc_S_uart_40188000_P_compatible_IDX_0 "nxp,kinetis-lpuart"
#define DT_N_S_soc_S_uart_40188000_P_compatible_IDX_0_STRING_UNQUOTED nxp,kinetis-lpuart
#define DT_N_S_soc_S_uart_40188000_P_compatible_IDX_0_STRING_TOKEN nxp_kinetis_lpuart
#define DT_N_S_soc_S_uart_40188000_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_KINETIS_LPUART
#define DT_N_S_soc_S_uart_40188000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40188000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_40188000, compatible, 0)
#define DT_N_S_soc_S_uart_40188000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_40188000, compatible, 0)
#define DT_N_S_soc_S_uart_40188000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_40188000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40188000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_40188000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40188000_P_compatible_LEN 1
#define DT_N_S_soc_S_uart_40188000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_uart_40188000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40188000_P_clocks_IDX_0_PH DT_N_S_soc_S_ccm_400fc000
#define DT_N_S_soc_S_uart_40188000_P_clocks_IDX_0_VAL_name 768
#define DT_N_S_soc_S_uart_40188000_P_clocks_IDX_0_VAL_name_EXISTS 1
#define DT_N_S_soc_S_uart_40188000_P_clocks_IDX_0_VAL_offset 104
#define DT_N_S_soc_S_uart_40188000_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_uart_40188000_P_clocks_IDX_0_VAL_bits 28
#define DT_N_S_soc_S_uart_40188000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_uart_40188000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_40188000, clocks, 0)
#define DT_N_S_soc_S_uart_40188000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_40188000, clocks, 0)
#define DT_N_S_soc_S_uart_40188000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_40188000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40188000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_40188000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40188000_P_clocks_LEN 1
#define DT_N_S_soc_S_uart_40188000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_uart_40188000_P_dmas_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40188000_P_dmas_IDX_0_PH DT_N_S_soc_S_dma_controller_400e8000
#define DT_N_S_soc_S_uart_40188000_P_dmas_IDX_0_VAL_mux 3
#define DT_N_S_soc_S_uart_40188000_P_dmas_IDX_0_VAL_mux_EXISTS 1
#define DT_N_S_soc_S_uart_40188000_P_dmas_IDX_0_VAL_source 66
#define DT_N_S_soc_S_uart_40188000_P_dmas_IDX_0_VAL_source_EXISTS 1
#define DT_N_S_soc_S_uart_40188000_P_dmas_IDX_0_NAME "tx"
#define DT_N_S_soc_S_uart_40188000_P_dmas_NAME_tx_PH DT_N_S_soc_S_dma_controller_400e8000
#define DT_N_S_soc_S_uart_40188000_P_dmas_NAME_tx_EXISTS 1
#define DT_N_S_soc_S_uart_40188000_P_dmas_NAME_tx_VAL_mux DT_N_S_soc_S_uart_40188000_P_dmas_IDX_0_VAL_mux
#define DT_N_S_soc_S_uart_40188000_P_dmas_NAME_tx_VAL_mux_EXISTS 1
#define DT_N_S_soc_S_uart_40188000_P_dmas_NAME_tx_VAL_source DT_N_S_soc_S_uart_40188000_P_dmas_IDX_0_VAL_source
#define DT_N_S_soc_S_uart_40188000_P_dmas_NAME_tx_VAL_source_EXISTS 1
#define DT_N_S_soc_S_uart_40188000_P_dmas_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uart_40188000_P_dmas_IDX_1_PH DT_N_S_soc_S_dma_controller_400e8000
#define DT_N_S_soc_S_uart_40188000_P_dmas_IDX_1_VAL_mux 4
#define DT_N_S_soc_S_uart_40188000_P_dmas_IDX_1_VAL_mux_EXISTS 1
#define DT_N_S_soc_S_uart_40188000_P_dmas_IDX_1_VAL_source 67
#define DT_N_S_soc_S_uart_40188000_P_dmas_IDX_1_VAL_source_EXISTS 1
#define DT_N_S_soc_S_uart_40188000_P_dmas_IDX_1_NAME "rx"
#define DT_N_S_soc_S_uart_40188000_P_dmas_NAME_rx_PH DT_N_S_soc_S_dma_controller_400e8000
#define DT_N_S_soc_S_uart_40188000_P_dmas_NAME_rx_EXISTS 1
#define DT_N_S_soc_S_uart_40188000_P_dmas_NAME_rx_VAL_mux DT_N_S_soc_S_uart_40188000_P_dmas_IDX_1_VAL_mux
#define DT_N_S_soc_S_uart_40188000_P_dmas_NAME_rx_VAL_mux_EXISTS 1
#define DT_N_S_soc_S_uart_40188000_P_dmas_NAME_rx_VAL_source DT_N_S_soc_S_uart_40188000_P_dmas_IDX_1_VAL_source
#define DT_N_S_soc_S_uart_40188000_P_dmas_NAME_rx_VAL_source_EXISTS 1
#define DT_N_S_soc_S_uart_40188000_P_dmas_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_40188000, dmas, 0) \
	fn(DT_N_S_soc_S_uart_40188000, dmas, 1)
#define DT_N_S_soc_S_uart_40188000_P_dmas_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_40188000, dmas, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_40188000, dmas, 1)
#define DT_N_S_soc_S_uart_40188000_P_dmas_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_40188000, dmas, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uart_40188000, dmas, 1, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40188000_P_dmas_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_40188000, dmas, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_40188000, dmas, 1, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40188000_P_dmas_LEN 2
#define DT_N_S_soc_S_uart_40188000_P_dmas_EXISTS 1
#define DT_N_S_soc_S_uart_40188000_P_dma_names {"tx", "rx"}
#define DT_N_S_soc_S_uart_40188000_P_dma_names_IDX_0 "tx"
#define DT_N_S_soc_S_uart_40188000_P_dma_names_IDX_0_STRING_UNQUOTED tx
#define DT_N_S_soc_S_uart_40188000_P_dma_names_IDX_0_STRING_TOKEN tx
#define DT_N_S_soc_S_uart_40188000_P_dma_names_IDX_0_STRING_UPPER_TOKEN TX
#define DT_N_S_soc_S_uart_40188000_P_dma_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40188000_P_dma_names_IDX_1 "rx"
#define DT_N_S_soc_S_uart_40188000_P_dma_names_IDX_1_STRING_UNQUOTED rx
#define DT_N_S_soc_S_uart_40188000_P_dma_names_IDX_1_STRING_TOKEN rx
#define DT_N_S_soc_S_uart_40188000_P_dma_names_IDX_1_STRING_UPPER_TOKEN RX
#define DT_N_S_soc_S_uart_40188000_P_dma_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uart_40188000_P_dma_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_40188000, dma_names, 0) \
	fn(DT_N_S_soc_S_uart_40188000, dma_names, 1)
#define DT_N_S_soc_S_uart_40188000_P_dma_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_40188000, dma_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_40188000, dma_names, 1)
#define DT_N_S_soc_S_uart_40188000_P_dma_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_40188000, dma_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uart_40188000, dma_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40188000_P_dma_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_40188000, dma_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_40188000, dma_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40188000_P_dma_names_LEN 2
#define DT_N_S_soc_S_uart_40188000_P_dma_names_EXISTS 1
#define DT_N_S_soc_S_uart_40188000_P_wakeup_source 0
#define DT_N_S_soc_S_uart_40188000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_uart_40188000_P_pinctrl_0_IDX_0 DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2
#define DT_N_S_soc_S_uart_40188000_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2
#define DT_N_S_soc_S_uart_40188000_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40188000_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_40188000, pinctrl_0, 0)
#define DT_N_S_soc_S_uart_40188000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_40188000, pinctrl_0, 0)
#define DT_N_S_soc_S_uart_40188000_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_40188000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40188000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_40188000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40188000_P_pinctrl_0_LEN 1
#define DT_N_S_soc_S_uart_40188000_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_uart_40188000_P_pinctrl_1_IDX_0 DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep
#define DT_N_S_soc_S_uart_40188000_P_pinctrl_1_IDX_0_PH DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep
#define DT_N_S_soc_S_uart_40188000_P_pinctrl_1_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40188000_P_pinctrl_1_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_40188000, pinctrl_1, 0)
#define DT_N_S_soc_S_uart_40188000_P_pinctrl_1_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_40188000, pinctrl_1, 0)
#define DT_N_S_soc_S_uart_40188000_P_pinctrl_1_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_40188000, pinctrl_1, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40188000_P_pinctrl_1_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_40188000, pinctrl_1, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40188000_P_pinctrl_1_LEN 1
#define DT_N_S_soc_S_uart_40188000_P_pinctrl_1_EXISTS 1
#define DT_N_S_soc_S_uart_40188000_P_pinctrl_names {"default", "sleep"}
#define DT_N_S_soc_S_uart_40188000_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_uart_40188000_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_uart_40188000_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_uart_40188000_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_uart_40188000_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40188000_P_pinctrl_names_IDX_1 "sleep"
#define DT_N_S_soc_S_uart_40188000_P_pinctrl_names_IDX_1_STRING_UNQUOTED sleep
#define DT_N_S_soc_S_uart_40188000_P_pinctrl_names_IDX_1_STRING_TOKEN sleep
#define DT_N_S_soc_S_uart_40188000_P_pinctrl_names_IDX_1_STRING_UPPER_TOKEN SLEEP
#define DT_N_S_soc_S_uart_40188000_P_pinctrl_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uart_40188000_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_40188000, pinctrl_names, 0) \
	fn(DT_N_S_soc_S_uart_40188000, pinctrl_names, 1)
#define DT_N_S_soc_S_uart_40188000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_40188000, pinctrl_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_40188000, pinctrl_names, 1)
#define DT_N_S_soc_S_uart_40188000_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_40188000, pinctrl_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uart_40188000, pinctrl_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40188000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_40188000, pinctrl_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_40188000, pinctrl_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40188000_P_pinctrl_names_LEN 2
#define DT_N_S_soc_S_uart_40188000_P_pinctrl_names_EXISTS 1

/*
 * Devicetree node: /soc/uart@4018c000
 *
 * Node identifier: DT_N_S_soc_S_uart_4018c000
 *
 * Binding (compatible = nxp,kinetis-lpuart):
 *   $ZEPHYR_BASE/dts/bindings/serial/nxp,kinetis-lpuart.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_uart_4018c000_PATH "/soc/uart@4018c000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_uart_4018c000_FULL_NAME "uart@4018c000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_uart_4018c000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_uart_4018c000_CHILD_IDX 29

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_uart_4018c000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_uart_4018c000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_uart_4018c000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_uart_4018c000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_uart_4018c000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_uart_4018c000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_uart_4018c000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_uart_4018c000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_uart_4018c000_ORD 131

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_uart_4018c000_REQUIRES_ORDS \
	11, /* /soc */ \
	12, /* /soc/interrupt-controller@e000e100 */ \
	60, /* /soc/ccm@400fc000 */ \
	114, /* /soc/dma-controller@400e8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_uart_4018c000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_uart_4018c000_EXISTS 1
#define DT_N_INST_2_nxp_kinetis_lpuart DT_N_S_soc_S_uart_4018c000
#define DT_N_NODELABEL_lpuart3         DT_N_S_soc_S_uart_4018c000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_uart_4018c000_REG_NUM 1
#define DT_N_S_soc_S_uart_4018c000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_4018c000_REG_IDX_0_VAL_ADDRESS 1075363840 /* 0x4018c000 */
#define DT_N_S_soc_S_uart_4018c000_REG_IDX_0_VAL_SIZE 16384 /* 0x4000 */
#define DT_N_S_soc_S_uart_4018c000_RANGES_NUM 0
#define DT_N_S_soc_S_uart_4018c000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_uart_4018c000_IRQ_NUM 1
#define DT_N_S_soc_S_uart_4018c000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_4018c000_IRQ_IDX_0_VAL_irq 22
#define DT_N_S_soc_S_uart_4018c000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_uart_4018c000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_4018c000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_uart_4018c000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_uart_4018c000_COMPAT_MATCHES_nxp_kinetis_lpuart 1
#define DT_N_S_soc_S_uart_4018c000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_4018c000_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_soc_S_uart_4018c000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_4018c000_COMPAT_MODEL_IDX_0 "kinetis-lpuart"
#define DT_N_S_soc_S_uart_4018c000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_uart_4018c000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_uart_4018c000_P_reg {1075363840 /* 0x4018c000 */, 16384 /* 0x4000 */}
#define DT_N_S_soc_S_uart_4018c000_P_reg_IDX_0 1075363840
#define DT_N_S_soc_S_uart_4018c000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_4018c000_P_reg_IDX_1 16384
#define DT_N_S_soc_S_uart_4018c000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uart_4018c000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_4018c000, reg, 0) \
	fn(DT_N_S_soc_S_uart_4018c000, reg, 1)
#define DT_N_S_soc_S_uart_4018c000_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_4018c000, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_4018c000, reg, 1)
#define DT_N_S_soc_S_uart_4018c000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_4018c000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uart_4018c000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_uart_4018c000_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_4018c000, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_4018c000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_uart_4018c000_P_reg_EXISTS 1
#define DT_N_S_soc_S_uart_4018c000_P_interrupts {22 /* 0x16 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_uart_4018c000_P_interrupts_IDX_0 22
#define DT_N_S_soc_S_uart_4018c000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_4018c000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_uart_4018c000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uart_4018c000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_4018c000, interrupts, 0) \
	fn(DT_N_S_soc_S_uart_4018c000, interrupts, 1)
#define DT_N_S_soc_S_uart_4018c000_P_interrupts_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_4018c000, interrupts, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_4018c000, interrupts, 1)
#define DT_N_S_soc_S_uart_4018c000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_4018c000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uart_4018c000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_uart_4018c000_P_interrupts_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_4018c000, interrupts, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_4018c000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_uart_4018c000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_uart_4018c000_P_nxp_loopback 0
#define DT_N_S_soc_S_uart_4018c000_P_nxp_loopback_EXISTS 1
#define DT_N_S_soc_S_uart_4018c000_P_nxp_rs485_mode 0
#define DT_N_S_soc_S_uart_4018c000_P_nxp_rs485_mode_EXISTS 1
#define DT_N_S_soc_S_uart_4018c000_P_nxp_rs485_de_active_low 0
#define DT_N_S_soc_S_uart_4018c000_P_nxp_rs485_de_active_low_EXISTS 1
#define DT_N_S_soc_S_uart_4018c000_P_hw_flow_control 0
#define DT_N_S_soc_S_uart_4018c000_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_uart_4018c000_P_status "disabled"
#define DT_N_S_soc_S_uart_4018c000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_uart_4018c000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_uart_4018c000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_uart_4018c000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_uart_4018c000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_uart_4018c000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_uart_4018c000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_4018c000, status, 0) \
	fn(DT_N_S_soc_S_uart_4018c000, status, 1) \
	fn(DT_N_S_soc_S_uart_4018c000, status, 2) \
	fn(DT_N_S_soc_S_uart_4018c000, status, 3) \
	fn(DT_N_S_soc_S_uart_4018c000, status, 4) \
	fn(DT_N_S_soc_S_uart_4018c000, status, 5) \
	fn(DT_N_S_soc_S_uart_4018c000, status, 6) \
	fn(DT_N_S_soc_S_uart_4018c000, status, 7)
#define DT_N_S_soc_S_uart_4018c000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_4018c000, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_4018c000, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_4018c000, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_4018c000, status, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_4018c000, status, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_4018c000, status, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_4018c000, status, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_4018c000, status, 7)
#define DT_N_S_soc_S_uart_4018c000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_4018c000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uart_4018c000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uart_4018c000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uart_4018c000, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uart_4018c000, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uart_4018c000, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uart_4018c000, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uart_4018c000, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_uart_4018c000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_4018c000, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_4018c000, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_4018c000, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_4018c000, status, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_4018c000, status, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_4018c000, status, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_4018c000, status, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_4018c000, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_uart_4018c000_P_status_EXISTS 1
#define DT_N_S_soc_S_uart_4018c000_P_compatible {"nxp,kinetis-lpuart"}
#define DT_N_S_soc_S_uart_4018c000_P_compatible_IDX_0 "nxp,kinetis-lpuart"
#define DT_N_S_soc_S_uart_4018c000_P_compatible_IDX_0_STRING_UNQUOTED nxp,kinetis-lpuart
#define DT_N_S_soc_S_uart_4018c000_P_compatible_IDX_0_STRING_TOKEN nxp_kinetis_lpuart
#define DT_N_S_soc_S_uart_4018c000_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_KINETIS_LPUART
#define DT_N_S_soc_S_uart_4018c000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_4018c000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_4018c000, compatible, 0)
#define DT_N_S_soc_S_uart_4018c000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_4018c000, compatible, 0)
#define DT_N_S_soc_S_uart_4018c000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_4018c000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_4018c000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_4018c000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_4018c000_P_compatible_LEN 1
#define DT_N_S_soc_S_uart_4018c000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_uart_4018c000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_4018c000_P_clocks_IDX_0_PH DT_N_S_soc_S_ccm_400fc000
#define DT_N_S_soc_S_uart_4018c000_P_clocks_IDX_0_VAL_name 768
#define DT_N_S_soc_S_uart_4018c000_P_clocks_IDX_0_VAL_name_EXISTS 1
#define DT_N_S_soc_S_uart_4018c000_P_clocks_IDX_0_VAL_offset 104
#define DT_N_S_soc_S_uart_4018c000_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_uart_4018c000_P_clocks_IDX_0_VAL_bits 12
#define DT_N_S_soc_S_uart_4018c000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_uart_4018c000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_4018c000, clocks, 0)
#define DT_N_S_soc_S_uart_4018c000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_4018c000, clocks, 0)
#define DT_N_S_soc_S_uart_4018c000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_4018c000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_4018c000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_4018c000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_4018c000_P_clocks_LEN 1
#define DT_N_S_soc_S_uart_4018c000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_uart_4018c000_P_dmas_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_4018c000_P_dmas_IDX_0_PH DT_N_S_soc_S_dma_controller_400e8000
#define DT_N_S_soc_S_uart_4018c000_P_dmas_IDX_0_VAL_mux 5
#define DT_N_S_soc_S_uart_4018c000_P_dmas_IDX_0_VAL_mux_EXISTS 1
#define DT_N_S_soc_S_uart_4018c000_P_dmas_IDX_0_VAL_source 4
#define DT_N_S_soc_S_uart_4018c000_P_dmas_IDX_0_VAL_source_EXISTS 1
#define DT_N_S_soc_S_uart_4018c000_P_dmas_IDX_0_NAME "tx"
#define DT_N_S_soc_S_uart_4018c000_P_dmas_NAME_tx_PH DT_N_S_soc_S_dma_controller_400e8000
#define DT_N_S_soc_S_uart_4018c000_P_dmas_NAME_tx_EXISTS 1
#define DT_N_S_soc_S_uart_4018c000_P_dmas_NAME_tx_VAL_mux DT_N_S_soc_S_uart_4018c000_P_dmas_IDX_0_VAL_mux
#define DT_N_S_soc_S_uart_4018c000_P_dmas_NAME_tx_VAL_mux_EXISTS 1
#define DT_N_S_soc_S_uart_4018c000_P_dmas_NAME_tx_VAL_source DT_N_S_soc_S_uart_4018c000_P_dmas_IDX_0_VAL_source
#define DT_N_S_soc_S_uart_4018c000_P_dmas_NAME_tx_VAL_source_EXISTS 1
#define DT_N_S_soc_S_uart_4018c000_P_dmas_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uart_4018c000_P_dmas_IDX_1_PH DT_N_S_soc_S_dma_controller_400e8000
#define DT_N_S_soc_S_uart_4018c000_P_dmas_IDX_1_VAL_mux 6
#define DT_N_S_soc_S_uart_4018c000_P_dmas_IDX_1_VAL_mux_EXISTS 1
#define DT_N_S_soc_S_uart_4018c000_P_dmas_IDX_1_VAL_source 5
#define DT_N_S_soc_S_uart_4018c000_P_dmas_IDX_1_VAL_source_EXISTS 1
#define DT_N_S_soc_S_uart_4018c000_P_dmas_IDX_1_NAME "rx"
#define DT_N_S_soc_S_uart_4018c000_P_dmas_NAME_rx_PH DT_N_S_soc_S_dma_controller_400e8000
#define DT_N_S_soc_S_uart_4018c000_P_dmas_NAME_rx_EXISTS 1
#define DT_N_S_soc_S_uart_4018c000_P_dmas_NAME_rx_VAL_mux DT_N_S_soc_S_uart_4018c000_P_dmas_IDX_1_VAL_mux
#define DT_N_S_soc_S_uart_4018c000_P_dmas_NAME_rx_VAL_mux_EXISTS 1
#define DT_N_S_soc_S_uart_4018c000_P_dmas_NAME_rx_VAL_source DT_N_S_soc_S_uart_4018c000_P_dmas_IDX_1_VAL_source
#define DT_N_S_soc_S_uart_4018c000_P_dmas_NAME_rx_VAL_source_EXISTS 1
#define DT_N_S_soc_S_uart_4018c000_P_dmas_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_4018c000, dmas, 0) \
	fn(DT_N_S_soc_S_uart_4018c000, dmas, 1)
#define DT_N_S_soc_S_uart_4018c000_P_dmas_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_4018c000, dmas, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_4018c000, dmas, 1)
#define DT_N_S_soc_S_uart_4018c000_P_dmas_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_4018c000, dmas, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uart_4018c000, dmas, 1, __VA_ARGS__)
#define DT_N_S_soc_S_uart_4018c000_P_dmas_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_4018c000, dmas, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_4018c000, dmas, 1, __VA_ARGS__)
#define DT_N_S_soc_S_uart_4018c000_P_dmas_LEN 2
#define DT_N_S_soc_S_uart_4018c000_P_dmas_EXISTS 1
#define DT_N_S_soc_S_uart_4018c000_P_dma_names {"tx", "rx"}
#define DT_N_S_soc_S_uart_4018c000_P_dma_names_IDX_0 "tx"
#define DT_N_S_soc_S_uart_4018c000_P_dma_names_IDX_0_STRING_UNQUOTED tx
#define DT_N_S_soc_S_uart_4018c000_P_dma_names_IDX_0_STRING_TOKEN tx
#define DT_N_S_soc_S_uart_4018c000_P_dma_names_IDX_0_STRING_UPPER_TOKEN TX
#define DT_N_S_soc_S_uart_4018c000_P_dma_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_4018c000_P_dma_names_IDX_1 "rx"
#define DT_N_S_soc_S_uart_4018c000_P_dma_names_IDX_1_STRING_UNQUOTED rx
#define DT_N_S_soc_S_uart_4018c000_P_dma_names_IDX_1_STRING_TOKEN rx
#define DT_N_S_soc_S_uart_4018c000_P_dma_names_IDX_1_STRING_UPPER_TOKEN RX
#define DT_N_S_soc_S_uart_4018c000_P_dma_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uart_4018c000_P_dma_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_4018c000, dma_names, 0) \
	fn(DT_N_S_soc_S_uart_4018c000, dma_names, 1)
#define DT_N_S_soc_S_uart_4018c000_P_dma_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_4018c000, dma_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_4018c000, dma_names, 1)
#define DT_N_S_soc_S_uart_4018c000_P_dma_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_4018c000, dma_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uart_4018c000, dma_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_uart_4018c000_P_dma_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_4018c000, dma_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_4018c000, dma_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_uart_4018c000_P_dma_names_LEN 2
#define DT_N_S_soc_S_uart_4018c000_P_dma_names_EXISTS 1
#define DT_N_S_soc_S_uart_4018c000_P_wakeup_source 0
#define DT_N_S_soc_S_uart_4018c000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/uart@40190000
 *
 * Node identifier: DT_N_S_soc_S_uart_40190000
 *
 * Binding (compatible = nxp,kinetis-lpuart):
 *   $ZEPHYR_BASE/dts/bindings/serial/nxp,kinetis-lpuart.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_uart_40190000_PATH "/soc/uart@40190000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_uart_40190000_FULL_NAME "uart@40190000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_uart_40190000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_uart_40190000_CHILD_IDX 30

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_uart_40190000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_uart_40190000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_uart_40190000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_uart_40190000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_uart_40190000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_uart_40190000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_uart_40190000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_uart_40190000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_uart_40190000_ORD 132

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_uart_40190000_REQUIRES_ORDS \
	11, /* /soc */ \
	12, /* /soc/interrupt-controller@e000e100 */ \
	60, /* /soc/ccm@400fc000 */ \
	114, /* /soc/dma-controller@400e8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_uart_40190000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_uart_40190000_EXISTS 1
#define DT_N_INST_3_nxp_kinetis_lpuart DT_N_S_soc_S_uart_40190000
#define DT_N_NODELABEL_lpuart4         DT_N_S_soc_S_uart_40190000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_uart_40190000_REG_NUM 1
#define DT_N_S_soc_S_uart_40190000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40190000_REG_IDX_0_VAL_ADDRESS 1075380224 /* 0x40190000 */
#define DT_N_S_soc_S_uart_40190000_REG_IDX_0_VAL_SIZE 16384 /* 0x4000 */
#define DT_N_S_soc_S_uart_40190000_RANGES_NUM 0
#define DT_N_S_soc_S_uart_40190000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_uart_40190000_IRQ_NUM 1
#define DT_N_S_soc_S_uart_40190000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40190000_IRQ_IDX_0_VAL_irq 23
#define DT_N_S_soc_S_uart_40190000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_uart_40190000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40190000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_uart_40190000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_uart_40190000_COMPAT_MATCHES_nxp_kinetis_lpuart 1
#define DT_N_S_soc_S_uart_40190000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40190000_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_soc_S_uart_40190000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40190000_COMPAT_MODEL_IDX_0 "kinetis-lpuart"
#define DT_N_S_soc_S_uart_40190000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_uart_40190000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_uart_40190000_P_reg {1075380224 /* 0x40190000 */, 16384 /* 0x4000 */}
#define DT_N_S_soc_S_uart_40190000_P_reg_IDX_0 1075380224
#define DT_N_S_soc_S_uart_40190000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40190000_P_reg_IDX_1 16384
#define DT_N_S_soc_S_uart_40190000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uart_40190000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_40190000, reg, 0) \
	fn(DT_N_S_soc_S_uart_40190000, reg, 1)
#define DT_N_S_soc_S_uart_40190000_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_40190000, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_40190000, reg, 1)
#define DT_N_S_soc_S_uart_40190000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_40190000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uart_40190000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40190000_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_40190000, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_40190000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40190000_P_reg_EXISTS 1
#define DT_N_S_soc_S_uart_40190000_P_interrupts {23 /* 0x17 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_uart_40190000_P_interrupts_IDX_0 23
#define DT_N_S_soc_S_uart_40190000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40190000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_uart_40190000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uart_40190000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_40190000, interrupts, 0) \
	fn(DT_N_S_soc_S_uart_40190000, interrupts, 1)
#define DT_N_S_soc_S_uart_40190000_P_interrupts_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_40190000, interrupts, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_40190000, interrupts, 1)
#define DT_N_S_soc_S_uart_40190000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_40190000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uart_40190000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40190000_P_interrupts_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_40190000, interrupts, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_40190000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40190000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_uart_40190000_P_nxp_loopback 0
#define DT_N_S_soc_S_uart_40190000_P_nxp_loopback_EXISTS 1
#define DT_N_S_soc_S_uart_40190000_P_nxp_rs485_mode 0
#define DT_N_S_soc_S_uart_40190000_P_nxp_rs485_mode_EXISTS 1
#define DT_N_S_soc_S_uart_40190000_P_nxp_rs485_de_active_low 0
#define DT_N_S_soc_S_uart_40190000_P_nxp_rs485_de_active_low_EXISTS 1
#define DT_N_S_soc_S_uart_40190000_P_hw_flow_control 0
#define DT_N_S_soc_S_uart_40190000_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_uart_40190000_P_status "disabled"
#define DT_N_S_soc_S_uart_40190000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_uart_40190000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_uart_40190000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_uart_40190000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_uart_40190000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_uart_40190000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_uart_40190000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_40190000, status, 0) \
	fn(DT_N_S_soc_S_uart_40190000, status, 1) \
	fn(DT_N_S_soc_S_uart_40190000, status, 2) \
	fn(DT_N_S_soc_S_uart_40190000, status, 3) \
	fn(DT_N_S_soc_S_uart_40190000, status, 4) \
	fn(DT_N_S_soc_S_uart_40190000, status, 5) \
	fn(DT_N_S_soc_S_uart_40190000, status, 6) \
	fn(DT_N_S_soc_S_uart_40190000, status, 7)
#define DT_N_S_soc_S_uart_40190000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_40190000, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_40190000, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_40190000, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_40190000, status, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_40190000, status, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_40190000, status, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_40190000, status, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_40190000, status, 7)
#define DT_N_S_soc_S_uart_40190000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_40190000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uart_40190000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uart_40190000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uart_40190000, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uart_40190000, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uart_40190000, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uart_40190000, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uart_40190000, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40190000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_40190000, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_40190000, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_40190000, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_40190000, status, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_40190000, status, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_40190000, status, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_40190000, status, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_40190000, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40190000_P_status_EXISTS 1
#define DT_N_S_soc_S_uart_40190000_P_compatible {"nxp,kinetis-lpuart"}
#define DT_N_S_soc_S_uart_40190000_P_compatible_IDX_0 "nxp,kinetis-lpuart"
#define DT_N_S_soc_S_uart_40190000_P_compatible_IDX_0_STRING_UNQUOTED nxp,kinetis-lpuart
#define DT_N_S_soc_S_uart_40190000_P_compatible_IDX_0_STRING_TOKEN nxp_kinetis_lpuart
#define DT_N_S_soc_S_uart_40190000_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_KINETIS_LPUART
#define DT_N_S_soc_S_uart_40190000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40190000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_40190000, compatible, 0)
#define DT_N_S_soc_S_uart_40190000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_40190000, compatible, 0)
#define DT_N_S_soc_S_uart_40190000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_40190000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40190000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_40190000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40190000_P_compatible_LEN 1
#define DT_N_S_soc_S_uart_40190000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_uart_40190000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40190000_P_clocks_IDX_0_PH DT_N_S_soc_S_ccm_400fc000
#define DT_N_S_soc_S_uart_40190000_P_clocks_IDX_0_VAL_name 768
#define DT_N_S_soc_S_uart_40190000_P_clocks_IDX_0_VAL_name_EXISTS 1
#define DT_N_S_soc_S_uart_40190000_P_clocks_IDX_0_VAL_offset 108
#define DT_N_S_soc_S_uart_40190000_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_uart_40190000_P_clocks_IDX_0_VAL_bits 24
#define DT_N_S_soc_S_uart_40190000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_uart_40190000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_40190000, clocks, 0)
#define DT_N_S_soc_S_uart_40190000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_40190000, clocks, 0)
#define DT_N_S_soc_S_uart_40190000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_40190000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40190000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_40190000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40190000_P_clocks_LEN 1
#define DT_N_S_soc_S_uart_40190000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_uart_40190000_P_dmas_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40190000_P_dmas_IDX_0_PH DT_N_S_soc_S_dma_controller_400e8000
#define DT_N_S_soc_S_uart_40190000_P_dmas_IDX_0_VAL_mux 7
#define DT_N_S_soc_S_uart_40190000_P_dmas_IDX_0_VAL_mux_EXISTS 1
#define DT_N_S_soc_S_uart_40190000_P_dmas_IDX_0_VAL_source 68
#define DT_N_S_soc_S_uart_40190000_P_dmas_IDX_0_VAL_source_EXISTS 1
#define DT_N_S_soc_S_uart_40190000_P_dmas_IDX_0_NAME "tx"
#define DT_N_S_soc_S_uart_40190000_P_dmas_NAME_tx_PH DT_N_S_soc_S_dma_controller_400e8000
#define DT_N_S_soc_S_uart_40190000_P_dmas_NAME_tx_EXISTS 1
#define DT_N_S_soc_S_uart_40190000_P_dmas_NAME_tx_VAL_mux DT_N_S_soc_S_uart_40190000_P_dmas_IDX_0_VAL_mux
#define DT_N_S_soc_S_uart_40190000_P_dmas_NAME_tx_VAL_mux_EXISTS 1
#define DT_N_S_soc_S_uart_40190000_P_dmas_NAME_tx_VAL_source DT_N_S_soc_S_uart_40190000_P_dmas_IDX_0_VAL_source
#define DT_N_S_soc_S_uart_40190000_P_dmas_NAME_tx_VAL_source_EXISTS 1
#define DT_N_S_soc_S_uart_40190000_P_dmas_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uart_40190000_P_dmas_IDX_1_PH DT_N_S_soc_S_dma_controller_400e8000
#define DT_N_S_soc_S_uart_40190000_P_dmas_IDX_1_VAL_mux 8
#define DT_N_S_soc_S_uart_40190000_P_dmas_IDX_1_VAL_mux_EXISTS 1
#define DT_N_S_soc_S_uart_40190000_P_dmas_IDX_1_VAL_source 69
#define DT_N_S_soc_S_uart_40190000_P_dmas_IDX_1_VAL_source_EXISTS 1
#define DT_N_S_soc_S_uart_40190000_P_dmas_IDX_1_NAME "rx"
#define DT_N_S_soc_S_uart_40190000_P_dmas_NAME_rx_PH DT_N_S_soc_S_dma_controller_400e8000
#define DT_N_S_soc_S_uart_40190000_P_dmas_NAME_rx_EXISTS 1
#define DT_N_S_soc_S_uart_40190000_P_dmas_NAME_rx_VAL_mux DT_N_S_soc_S_uart_40190000_P_dmas_IDX_1_VAL_mux
#define DT_N_S_soc_S_uart_40190000_P_dmas_NAME_rx_VAL_mux_EXISTS 1
#define DT_N_S_soc_S_uart_40190000_P_dmas_NAME_rx_VAL_source DT_N_S_soc_S_uart_40190000_P_dmas_IDX_1_VAL_source
#define DT_N_S_soc_S_uart_40190000_P_dmas_NAME_rx_VAL_source_EXISTS 1
#define DT_N_S_soc_S_uart_40190000_P_dmas_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_40190000, dmas, 0) \
	fn(DT_N_S_soc_S_uart_40190000, dmas, 1)
#define DT_N_S_soc_S_uart_40190000_P_dmas_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_40190000, dmas, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_40190000, dmas, 1)
#define DT_N_S_soc_S_uart_40190000_P_dmas_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_40190000, dmas, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uart_40190000, dmas, 1, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40190000_P_dmas_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_40190000, dmas, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_40190000, dmas, 1, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40190000_P_dmas_LEN 2
#define DT_N_S_soc_S_uart_40190000_P_dmas_EXISTS 1
#define DT_N_S_soc_S_uart_40190000_P_dma_names {"tx", "rx"}
#define DT_N_S_soc_S_uart_40190000_P_dma_names_IDX_0 "tx"
#define DT_N_S_soc_S_uart_40190000_P_dma_names_IDX_0_STRING_UNQUOTED tx
#define DT_N_S_soc_S_uart_40190000_P_dma_names_IDX_0_STRING_TOKEN tx
#define DT_N_S_soc_S_uart_40190000_P_dma_names_IDX_0_STRING_UPPER_TOKEN TX
#define DT_N_S_soc_S_uart_40190000_P_dma_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40190000_P_dma_names_IDX_1 "rx"
#define DT_N_S_soc_S_uart_40190000_P_dma_names_IDX_1_STRING_UNQUOTED rx
#define DT_N_S_soc_S_uart_40190000_P_dma_names_IDX_1_STRING_TOKEN rx
#define DT_N_S_soc_S_uart_40190000_P_dma_names_IDX_1_STRING_UPPER_TOKEN RX
#define DT_N_S_soc_S_uart_40190000_P_dma_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uart_40190000_P_dma_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_40190000, dma_names, 0) \
	fn(DT_N_S_soc_S_uart_40190000, dma_names, 1)
#define DT_N_S_soc_S_uart_40190000_P_dma_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_40190000, dma_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_40190000, dma_names, 1)
#define DT_N_S_soc_S_uart_40190000_P_dma_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_40190000, dma_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uart_40190000, dma_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40190000_P_dma_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_40190000, dma_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_40190000, dma_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40190000_P_dma_names_LEN 2
#define DT_N_S_soc_S_uart_40190000_P_dma_names_EXISTS 1
#define DT_N_S_soc_S_uart_40190000_P_wakeup_source 0
#define DT_N_S_soc_S_uart_40190000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/uart@40194000
 *
 * Node identifier: DT_N_S_soc_S_uart_40194000
 *
 * Binding (compatible = nxp,kinetis-lpuart):
 *   $ZEPHYR_BASE/dts/bindings/serial/nxp,kinetis-lpuart.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_uart_40194000_PATH "/soc/uart@40194000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_uart_40194000_FULL_NAME "uart@40194000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_uart_40194000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_uart_40194000_CHILD_IDX 31

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_uart_40194000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_uart_40194000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_uart_40194000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_uart_40194000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_uart_40194000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_uart_40194000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_uart_40194000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_uart_40194000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_uart_40194000_ORD 133

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_uart_40194000_REQUIRES_ORDS \
	11, /* /soc */ \
	12, /* /soc/interrupt-controller@e000e100 */ \
	60, /* /soc/ccm@400fc000 */ \
	114, /* /soc/dma-controller@400e8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_uart_40194000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_uart_40194000_EXISTS 1
#define DT_N_INST_4_nxp_kinetis_lpuart DT_N_S_soc_S_uart_40194000
#define DT_N_NODELABEL_lpuart5         DT_N_S_soc_S_uart_40194000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_uart_40194000_REG_NUM 1
#define DT_N_S_soc_S_uart_40194000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40194000_REG_IDX_0_VAL_ADDRESS 1075396608 /* 0x40194000 */
#define DT_N_S_soc_S_uart_40194000_REG_IDX_0_VAL_SIZE 16384 /* 0x4000 */
#define DT_N_S_soc_S_uart_40194000_RANGES_NUM 0
#define DT_N_S_soc_S_uart_40194000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_uart_40194000_IRQ_NUM 1
#define DT_N_S_soc_S_uart_40194000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40194000_IRQ_IDX_0_VAL_irq 24
#define DT_N_S_soc_S_uart_40194000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_uart_40194000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40194000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_uart_40194000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_uart_40194000_COMPAT_MATCHES_nxp_kinetis_lpuart 1
#define DT_N_S_soc_S_uart_40194000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40194000_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_soc_S_uart_40194000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40194000_COMPAT_MODEL_IDX_0 "kinetis-lpuart"
#define DT_N_S_soc_S_uart_40194000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_uart_40194000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_uart_40194000_P_reg {1075396608 /* 0x40194000 */, 16384 /* 0x4000 */}
#define DT_N_S_soc_S_uart_40194000_P_reg_IDX_0 1075396608
#define DT_N_S_soc_S_uart_40194000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40194000_P_reg_IDX_1 16384
#define DT_N_S_soc_S_uart_40194000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uart_40194000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_40194000, reg, 0) \
	fn(DT_N_S_soc_S_uart_40194000, reg, 1)
#define DT_N_S_soc_S_uart_40194000_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_40194000, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_40194000, reg, 1)
#define DT_N_S_soc_S_uart_40194000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_40194000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uart_40194000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40194000_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_40194000, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_40194000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40194000_P_reg_EXISTS 1
#define DT_N_S_soc_S_uart_40194000_P_interrupts {24 /* 0x18 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_uart_40194000_P_interrupts_IDX_0 24
#define DT_N_S_soc_S_uart_40194000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40194000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_uart_40194000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uart_40194000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_40194000, interrupts, 0) \
	fn(DT_N_S_soc_S_uart_40194000, interrupts, 1)
#define DT_N_S_soc_S_uart_40194000_P_interrupts_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_40194000, interrupts, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_40194000, interrupts, 1)
#define DT_N_S_soc_S_uart_40194000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_40194000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uart_40194000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40194000_P_interrupts_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_40194000, interrupts, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_40194000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40194000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_uart_40194000_P_nxp_loopback 0
#define DT_N_S_soc_S_uart_40194000_P_nxp_loopback_EXISTS 1
#define DT_N_S_soc_S_uart_40194000_P_nxp_rs485_mode 0
#define DT_N_S_soc_S_uart_40194000_P_nxp_rs485_mode_EXISTS 1
#define DT_N_S_soc_S_uart_40194000_P_nxp_rs485_de_active_low 0
#define DT_N_S_soc_S_uart_40194000_P_nxp_rs485_de_active_low_EXISTS 1
#define DT_N_S_soc_S_uart_40194000_P_hw_flow_control 0
#define DT_N_S_soc_S_uart_40194000_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_uart_40194000_P_status "disabled"
#define DT_N_S_soc_S_uart_40194000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_uart_40194000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_uart_40194000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_uart_40194000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_uart_40194000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_uart_40194000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_uart_40194000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_40194000, status, 0) \
	fn(DT_N_S_soc_S_uart_40194000, status, 1) \
	fn(DT_N_S_soc_S_uart_40194000, status, 2) \
	fn(DT_N_S_soc_S_uart_40194000, status, 3) \
	fn(DT_N_S_soc_S_uart_40194000, status, 4) \
	fn(DT_N_S_soc_S_uart_40194000, status, 5) \
	fn(DT_N_S_soc_S_uart_40194000, status, 6) \
	fn(DT_N_S_soc_S_uart_40194000, status, 7)
#define DT_N_S_soc_S_uart_40194000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_40194000, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_40194000, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_40194000, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_40194000, status, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_40194000, status, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_40194000, status, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_40194000, status, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_40194000, status, 7)
#define DT_N_S_soc_S_uart_40194000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_40194000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uart_40194000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uart_40194000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uart_40194000, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uart_40194000, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uart_40194000, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uart_40194000, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uart_40194000, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40194000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_40194000, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_40194000, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_40194000, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_40194000, status, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_40194000, status, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_40194000, status, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_40194000, status, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_40194000, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40194000_P_status_EXISTS 1
#define DT_N_S_soc_S_uart_40194000_P_compatible {"nxp,kinetis-lpuart"}
#define DT_N_S_soc_S_uart_40194000_P_compatible_IDX_0 "nxp,kinetis-lpuart"
#define DT_N_S_soc_S_uart_40194000_P_compatible_IDX_0_STRING_UNQUOTED nxp,kinetis-lpuart
#define DT_N_S_soc_S_uart_40194000_P_compatible_IDX_0_STRING_TOKEN nxp_kinetis_lpuart
#define DT_N_S_soc_S_uart_40194000_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_KINETIS_LPUART
#define DT_N_S_soc_S_uart_40194000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40194000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_40194000, compatible, 0)
#define DT_N_S_soc_S_uart_40194000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_40194000, compatible, 0)
#define DT_N_S_soc_S_uart_40194000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_40194000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40194000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_40194000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40194000_P_compatible_LEN 1
#define DT_N_S_soc_S_uart_40194000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_uart_40194000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40194000_P_clocks_IDX_0_PH DT_N_S_soc_S_ccm_400fc000
#define DT_N_S_soc_S_uart_40194000_P_clocks_IDX_0_VAL_name 768
#define DT_N_S_soc_S_uart_40194000_P_clocks_IDX_0_VAL_name_EXISTS 1
#define DT_N_S_soc_S_uart_40194000_P_clocks_IDX_0_VAL_offset 116
#define DT_N_S_soc_S_uart_40194000_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_uart_40194000_P_clocks_IDX_0_VAL_bits 2
#define DT_N_S_soc_S_uart_40194000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_uart_40194000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_40194000, clocks, 0)
#define DT_N_S_soc_S_uart_40194000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_40194000, clocks, 0)
#define DT_N_S_soc_S_uart_40194000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_40194000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40194000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_40194000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40194000_P_clocks_LEN 1
#define DT_N_S_soc_S_uart_40194000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_uart_40194000_P_dmas_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40194000_P_dmas_IDX_0_PH DT_N_S_soc_S_dma_controller_400e8000
#define DT_N_S_soc_S_uart_40194000_P_dmas_IDX_0_VAL_mux 9
#define DT_N_S_soc_S_uart_40194000_P_dmas_IDX_0_VAL_mux_EXISTS 1
#define DT_N_S_soc_S_uart_40194000_P_dmas_IDX_0_VAL_source 6
#define DT_N_S_soc_S_uart_40194000_P_dmas_IDX_0_VAL_source_EXISTS 1
#define DT_N_S_soc_S_uart_40194000_P_dmas_IDX_0_NAME "tx"
#define DT_N_S_soc_S_uart_40194000_P_dmas_NAME_tx_PH DT_N_S_soc_S_dma_controller_400e8000
#define DT_N_S_soc_S_uart_40194000_P_dmas_NAME_tx_EXISTS 1
#define DT_N_S_soc_S_uart_40194000_P_dmas_NAME_tx_VAL_mux DT_N_S_soc_S_uart_40194000_P_dmas_IDX_0_VAL_mux
#define DT_N_S_soc_S_uart_40194000_P_dmas_NAME_tx_VAL_mux_EXISTS 1
#define DT_N_S_soc_S_uart_40194000_P_dmas_NAME_tx_VAL_source DT_N_S_soc_S_uart_40194000_P_dmas_IDX_0_VAL_source
#define DT_N_S_soc_S_uart_40194000_P_dmas_NAME_tx_VAL_source_EXISTS 1
#define DT_N_S_soc_S_uart_40194000_P_dmas_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uart_40194000_P_dmas_IDX_1_PH DT_N_S_soc_S_dma_controller_400e8000
#define DT_N_S_soc_S_uart_40194000_P_dmas_IDX_1_VAL_mux 10
#define DT_N_S_soc_S_uart_40194000_P_dmas_IDX_1_VAL_mux_EXISTS 1
#define DT_N_S_soc_S_uart_40194000_P_dmas_IDX_1_VAL_source 7
#define DT_N_S_soc_S_uart_40194000_P_dmas_IDX_1_VAL_source_EXISTS 1
#define DT_N_S_soc_S_uart_40194000_P_dmas_IDX_1_NAME "rx"
#define DT_N_S_soc_S_uart_40194000_P_dmas_NAME_rx_PH DT_N_S_soc_S_dma_controller_400e8000
#define DT_N_S_soc_S_uart_40194000_P_dmas_NAME_rx_EXISTS 1
#define DT_N_S_soc_S_uart_40194000_P_dmas_NAME_rx_VAL_mux DT_N_S_soc_S_uart_40194000_P_dmas_IDX_1_VAL_mux
#define DT_N_S_soc_S_uart_40194000_P_dmas_NAME_rx_VAL_mux_EXISTS 1
#define DT_N_S_soc_S_uart_40194000_P_dmas_NAME_rx_VAL_source DT_N_S_soc_S_uart_40194000_P_dmas_IDX_1_VAL_source
#define DT_N_S_soc_S_uart_40194000_P_dmas_NAME_rx_VAL_source_EXISTS 1
#define DT_N_S_soc_S_uart_40194000_P_dmas_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_40194000, dmas, 0) \
	fn(DT_N_S_soc_S_uart_40194000, dmas, 1)
#define DT_N_S_soc_S_uart_40194000_P_dmas_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_40194000, dmas, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_40194000, dmas, 1)
#define DT_N_S_soc_S_uart_40194000_P_dmas_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_40194000, dmas, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uart_40194000, dmas, 1, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40194000_P_dmas_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_40194000, dmas, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_40194000, dmas, 1, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40194000_P_dmas_LEN 2
#define DT_N_S_soc_S_uart_40194000_P_dmas_EXISTS 1
#define DT_N_S_soc_S_uart_40194000_P_dma_names {"tx", "rx"}
#define DT_N_S_soc_S_uart_40194000_P_dma_names_IDX_0 "tx"
#define DT_N_S_soc_S_uart_40194000_P_dma_names_IDX_0_STRING_UNQUOTED tx
#define DT_N_S_soc_S_uart_40194000_P_dma_names_IDX_0_STRING_TOKEN tx
#define DT_N_S_soc_S_uart_40194000_P_dma_names_IDX_0_STRING_UPPER_TOKEN TX
#define DT_N_S_soc_S_uart_40194000_P_dma_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40194000_P_dma_names_IDX_1 "rx"
#define DT_N_S_soc_S_uart_40194000_P_dma_names_IDX_1_STRING_UNQUOTED rx
#define DT_N_S_soc_S_uart_40194000_P_dma_names_IDX_1_STRING_TOKEN rx
#define DT_N_S_soc_S_uart_40194000_P_dma_names_IDX_1_STRING_UPPER_TOKEN RX
#define DT_N_S_soc_S_uart_40194000_P_dma_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uart_40194000_P_dma_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_40194000, dma_names, 0) \
	fn(DT_N_S_soc_S_uart_40194000, dma_names, 1)
#define DT_N_S_soc_S_uart_40194000_P_dma_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_40194000, dma_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_40194000, dma_names, 1)
#define DT_N_S_soc_S_uart_40194000_P_dma_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_40194000, dma_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uart_40194000, dma_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40194000_P_dma_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_40194000, dma_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_40194000, dma_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40194000_P_dma_names_LEN 2
#define DT_N_S_soc_S_uart_40194000_P_dma_names_EXISTS 1
#define DT_N_S_soc_S_uart_40194000_P_wakeup_source 0
#define DT_N_S_soc_S_uart_40194000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/uart@40198000
 *
 * Node identifier: DT_N_S_soc_S_uart_40198000
 *
 * Binding (compatible = nxp,kinetis-lpuart):
 *   $ZEPHYR_BASE/dts/bindings/serial/nxp,kinetis-lpuart.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_uart_40198000_PATH "/soc/uart@40198000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_uart_40198000_FULL_NAME "uart@40198000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_uart_40198000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_uart_40198000_CHILD_IDX 32

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_uart_40198000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_uart_40198000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_uart_40198000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_uart_40198000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_uart_40198000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_uart_40198000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_uart_40198000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_uart_40198000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_uart_40198000_ORD 134

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_uart_40198000_REQUIRES_ORDS \
	11, /* /soc */ \
	12, /* /soc/interrupt-controller@e000e100 */ \
	60, /* /soc/ccm@400fc000 */ \
	114, /* /soc/dma-controller@400e8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_uart_40198000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_uart_40198000_EXISTS 1
#define DT_N_INST_5_nxp_kinetis_lpuart DT_N_S_soc_S_uart_40198000
#define DT_N_NODELABEL_lpuart6         DT_N_S_soc_S_uart_40198000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_uart_40198000_REG_NUM 1
#define DT_N_S_soc_S_uart_40198000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40198000_REG_IDX_0_VAL_ADDRESS 1075412992 /* 0x40198000 */
#define DT_N_S_soc_S_uart_40198000_REG_IDX_0_VAL_SIZE 16384 /* 0x4000 */
#define DT_N_S_soc_S_uart_40198000_RANGES_NUM 0
#define DT_N_S_soc_S_uart_40198000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_uart_40198000_IRQ_NUM 1
#define DT_N_S_soc_S_uart_40198000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40198000_IRQ_IDX_0_VAL_irq 25
#define DT_N_S_soc_S_uart_40198000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_uart_40198000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40198000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_uart_40198000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_uart_40198000_COMPAT_MATCHES_nxp_kinetis_lpuart 1
#define DT_N_S_soc_S_uart_40198000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40198000_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_soc_S_uart_40198000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40198000_COMPAT_MODEL_IDX_0 "kinetis-lpuart"
#define DT_N_S_soc_S_uart_40198000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_uart_40198000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_uart_40198000_P_reg {1075412992 /* 0x40198000 */, 16384 /* 0x4000 */}
#define DT_N_S_soc_S_uart_40198000_P_reg_IDX_0 1075412992
#define DT_N_S_soc_S_uart_40198000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40198000_P_reg_IDX_1 16384
#define DT_N_S_soc_S_uart_40198000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uart_40198000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_40198000, reg, 0) \
	fn(DT_N_S_soc_S_uart_40198000, reg, 1)
#define DT_N_S_soc_S_uart_40198000_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_40198000, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_40198000, reg, 1)
#define DT_N_S_soc_S_uart_40198000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_40198000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uart_40198000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40198000_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_40198000, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_40198000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40198000_P_reg_EXISTS 1
#define DT_N_S_soc_S_uart_40198000_P_interrupts {25 /* 0x19 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_uart_40198000_P_interrupts_IDX_0 25
#define DT_N_S_soc_S_uart_40198000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40198000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_uart_40198000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uart_40198000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_40198000, interrupts, 0) \
	fn(DT_N_S_soc_S_uart_40198000, interrupts, 1)
#define DT_N_S_soc_S_uart_40198000_P_interrupts_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_40198000, interrupts, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_40198000, interrupts, 1)
#define DT_N_S_soc_S_uart_40198000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_40198000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uart_40198000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40198000_P_interrupts_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_40198000, interrupts, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_40198000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40198000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_uart_40198000_P_nxp_loopback 0
#define DT_N_S_soc_S_uart_40198000_P_nxp_loopback_EXISTS 1
#define DT_N_S_soc_S_uart_40198000_P_nxp_rs485_mode 0
#define DT_N_S_soc_S_uart_40198000_P_nxp_rs485_mode_EXISTS 1
#define DT_N_S_soc_S_uart_40198000_P_nxp_rs485_de_active_low 0
#define DT_N_S_soc_S_uart_40198000_P_nxp_rs485_de_active_low_EXISTS 1
#define DT_N_S_soc_S_uart_40198000_P_hw_flow_control 0
#define DT_N_S_soc_S_uart_40198000_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_uart_40198000_P_status "disabled"
#define DT_N_S_soc_S_uart_40198000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_uart_40198000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_uart_40198000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_uart_40198000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_uart_40198000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_uart_40198000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_uart_40198000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_40198000, status, 0) \
	fn(DT_N_S_soc_S_uart_40198000, status, 1) \
	fn(DT_N_S_soc_S_uart_40198000, status, 2) \
	fn(DT_N_S_soc_S_uart_40198000, status, 3) \
	fn(DT_N_S_soc_S_uart_40198000, status, 4) \
	fn(DT_N_S_soc_S_uart_40198000, status, 5) \
	fn(DT_N_S_soc_S_uart_40198000, status, 6) \
	fn(DT_N_S_soc_S_uart_40198000, status, 7)
#define DT_N_S_soc_S_uart_40198000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_40198000, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_40198000, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_40198000, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_40198000, status, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_40198000, status, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_40198000, status, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_40198000, status, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_40198000, status, 7)
#define DT_N_S_soc_S_uart_40198000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_40198000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uart_40198000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uart_40198000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uart_40198000, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uart_40198000, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uart_40198000, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uart_40198000, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uart_40198000, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40198000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_40198000, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_40198000, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_40198000, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_40198000, status, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_40198000, status, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_40198000, status, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_40198000, status, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_40198000, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40198000_P_status_EXISTS 1
#define DT_N_S_soc_S_uart_40198000_P_compatible {"nxp,kinetis-lpuart"}
#define DT_N_S_soc_S_uart_40198000_P_compatible_IDX_0 "nxp,kinetis-lpuart"
#define DT_N_S_soc_S_uart_40198000_P_compatible_IDX_0_STRING_UNQUOTED nxp,kinetis-lpuart
#define DT_N_S_soc_S_uart_40198000_P_compatible_IDX_0_STRING_TOKEN nxp_kinetis_lpuart
#define DT_N_S_soc_S_uart_40198000_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_KINETIS_LPUART
#define DT_N_S_soc_S_uart_40198000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40198000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_40198000, compatible, 0)
#define DT_N_S_soc_S_uart_40198000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_40198000, compatible, 0)
#define DT_N_S_soc_S_uart_40198000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_40198000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40198000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_40198000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40198000_P_compatible_LEN 1
#define DT_N_S_soc_S_uart_40198000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_uart_40198000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40198000_P_clocks_IDX_0_PH DT_N_S_soc_S_ccm_400fc000
#define DT_N_S_soc_S_uart_40198000_P_clocks_IDX_0_VAL_name 768
#define DT_N_S_soc_S_uart_40198000_P_clocks_IDX_0_VAL_name_EXISTS 1
#define DT_N_S_soc_S_uart_40198000_P_clocks_IDX_0_VAL_offset 116
#define DT_N_S_soc_S_uart_40198000_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_uart_40198000_P_clocks_IDX_0_VAL_bits 6
#define DT_N_S_soc_S_uart_40198000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_uart_40198000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_40198000, clocks, 0)
#define DT_N_S_soc_S_uart_40198000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_40198000, clocks, 0)
#define DT_N_S_soc_S_uart_40198000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_40198000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40198000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_40198000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40198000_P_clocks_LEN 1
#define DT_N_S_soc_S_uart_40198000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_uart_40198000_P_dmas_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40198000_P_dmas_IDX_0_PH DT_N_S_soc_S_dma_controller_400e8000
#define DT_N_S_soc_S_uart_40198000_P_dmas_IDX_0_VAL_mux 11
#define DT_N_S_soc_S_uart_40198000_P_dmas_IDX_0_VAL_mux_EXISTS 1
#define DT_N_S_soc_S_uart_40198000_P_dmas_IDX_0_VAL_source 70
#define DT_N_S_soc_S_uart_40198000_P_dmas_IDX_0_VAL_source_EXISTS 1
#define DT_N_S_soc_S_uart_40198000_P_dmas_IDX_0_NAME "tx"
#define DT_N_S_soc_S_uart_40198000_P_dmas_NAME_tx_PH DT_N_S_soc_S_dma_controller_400e8000
#define DT_N_S_soc_S_uart_40198000_P_dmas_NAME_tx_EXISTS 1
#define DT_N_S_soc_S_uart_40198000_P_dmas_NAME_tx_VAL_mux DT_N_S_soc_S_uart_40198000_P_dmas_IDX_0_VAL_mux
#define DT_N_S_soc_S_uart_40198000_P_dmas_NAME_tx_VAL_mux_EXISTS 1
#define DT_N_S_soc_S_uart_40198000_P_dmas_NAME_tx_VAL_source DT_N_S_soc_S_uart_40198000_P_dmas_IDX_0_VAL_source
#define DT_N_S_soc_S_uart_40198000_P_dmas_NAME_tx_VAL_source_EXISTS 1
#define DT_N_S_soc_S_uart_40198000_P_dmas_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uart_40198000_P_dmas_IDX_1_PH DT_N_S_soc_S_dma_controller_400e8000
#define DT_N_S_soc_S_uart_40198000_P_dmas_IDX_1_VAL_mux 12
#define DT_N_S_soc_S_uart_40198000_P_dmas_IDX_1_VAL_mux_EXISTS 1
#define DT_N_S_soc_S_uart_40198000_P_dmas_IDX_1_VAL_source 71
#define DT_N_S_soc_S_uart_40198000_P_dmas_IDX_1_VAL_source_EXISTS 1
#define DT_N_S_soc_S_uart_40198000_P_dmas_IDX_1_NAME "rx"
#define DT_N_S_soc_S_uart_40198000_P_dmas_NAME_rx_PH DT_N_S_soc_S_dma_controller_400e8000
#define DT_N_S_soc_S_uart_40198000_P_dmas_NAME_rx_EXISTS 1
#define DT_N_S_soc_S_uart_40198000_P_dmas_NAME_rx_VAL_mux DT_N_S_soc_S_uart_40198000_P_dmas_IDX_1_VAL_mux
#define DT_N_S_soc_S_uart_40198000_P_dmas_NAME_rx_VAL_mux_EXISTS 1
#define DT_N_S_soc_S_uart_40198000_P_dmas_NAME_rx_VAL_source DT_N_S_soc_S_uart_40198000_P_dmas_IDX_1_VAL_source
#define DT_N_S_soc_S_uart_40198000_P_dmas_NAME_rx_VAL_source_EXISTS 1
#define DT_N_S_soc_S_uart_40198000_P_dmas_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_40198000, dmas, 0) \
	fn(DT_N_S_soc_S_uart_40198000, dmas, 1)
#define DT_N_S_soc_S_uart_40198000_P_dmas_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_40198000, dmas, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_40198000, dmas, 1)
#define DT_N_S_soc_S_uart_40198000_P_dmas_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_40198000, dmas, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uart_40198000, dmas, 1, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40198000_P_dmas_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_40198000, dmas, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_40198000, dmas, 1, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40198000_P_dmas_LEN 2
#define DT_N_S_soc_S_uart_40198000_P_dmas_EXISTS 1
#define DT_N_S_soc_S_uart_40198000_P_dma_names {"tx", "rx"}
#define DT_N_S_soc_S_uart_40198000_P_dma_names_IDX_0 "tx"
#define DT_N_S_soc_S_uart_40198000_P_dma_names_IDX_0_STRING_UNQUOTED tx
#define DT_N_S_soc_S_uart_40198000_P_dma_names_IDX_0_STRING_TOKEN tx
#define DT_N_S_soc_S_uart_40198000_P_dma_names_IDX_0_STRING_UPPER_TOKEN TX
#define DT_N_S_soc_S_uart_40198000_P_dma_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40198000_P_dma_names_IDX_1 "rx"
#define DT_N_S_soc_S_uart_40198000_P_dma_names_IDX_1_STRING_UNQUOTED rx
#define DT_N_S_soc_S_uart_40198000_P_dma_names_IDX_1_STRING_TOKEN rx
#define DT_N_S_soc_S_uart_40198000_P_dma_names_IDX_1_STRING_UPPER_TOKEN RX
#define DT_N_S_soc_S_uart_40198000_P_dma_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uart_40198000_P_dma_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_40198000, dma_names, 0) \
	fn(DT_N_S_soc_S_uart_40198000, dma_names, 1)
#define DT_N_S_soc_S_uart_40198000_P_dma_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_40198000, dma_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_40198000, dma_names, 1)
#define DT_N_S_soc_S_uart_40198000_P_dma_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_40198000, dma_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uart_40198000, dma_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40198000_P_dma_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_40198000, dma_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_40198000, dma_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40198000_P_dma_names_LEN 2
#define DT_N_S_soc_S_uart_40198000_P_dma_names_EXISTS 1
#define DT_N_S_soc_S_uart_40198000_P_wakeup_source 0
#define DT_N_S_soc_S_uart_40198000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/uart@4019c000
 *
 * Node identifier: DT_N_S_soc_S_uart_4019c000
 *
 * Binding (compatible = nxp,kinetis-lpuart):
 *   $ZEPHYR_BASE/dts/bindings/serial/nxp,kinetis-lpuart.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_uart_4019c000_PATH "/soc/uart@4019c000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_uart_4019c000_FULL_NAME "uart@4019c000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_uart_4019c000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_uart_4019c000_CHILD_IDX 33

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_uart_4019c000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_uart_4019c000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_uart_4019c000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_uart_4019c000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_uart_4019c000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_uart_4019c000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_uart_4019c000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_uart_4019c000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_uart_4019c000_ORD 135

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_uart_4019c000_REQUIRES_ORDS \
	11, /* /soc */ \
	12, /* /soc/interrupt-controller@e000e100 */ \
	60, /* /soc/ccm@400fc000 */ \
	114, /* /soc/dma-controller@400e8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_uart_4019c000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_uart_4019c000_EXISTS 1
#define DT_N_INST_6_nxp_kinetis_lpuart DT_N_S_soc_S_uart_4019c000
#define DT_N_NODELABEL_lpuart7         DT_N_S_soc_S_uart_4019c000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_uart_4019c000_REG_NUM 1
#define DT_N_S_soc_S_uart_4019c000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_4019c000_REG_IDX_0_VAL_ADDRESS 1075429376 /* 0x4019c000 */
#define DT_N_S_soc_S_uart_4019c000_REG_IDX_0_VAL_SIZE 16384 /* 0x4000 */
#define DT_N_S_soc_S_uart_4019c000_RANGES_NUM 0
#define DT_N_S_soc_S_uart_4019c000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_uart_4019c000_IRQ_NUM 1
#define DT_N_S_soc_S_uart_4019c000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_4019c000_IRQ_IDX_0_VAL_irq 26
#define DT_N_S_soc_S_uart_4019c000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_uart_4019c000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_4019c000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_uart_4019c000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_uart_4019c000_COMPAT_MATCHES_nxp_kinetis_lpuart 1
#define DT_N_S_soc_S_uart_4019c000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_4019c000_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_soc_S_uart_4019c000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_4019c000_COMPAT_MODEL_IDX_0 "kinetis-lpuart"
#define DT_N_S_soc_S_uart_4019c000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_uart_4019c000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_uart_4019c000_P_reg {1075429376 /* 0x4019c000 */, 16384 /* 0x4000 */}
#define DT_N_S_soc_S_uart_4019c000_P_reg_IDX_0 1075429376
#define DT_N_S_soc_S_uart_4019c000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_4019c000_P_reg_IDX_1 16384
#define DT_N_S_soc_S_uart_4019c000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uart_4019c000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_4019c000, reg, 0) \
	fn(DT_N_S_soc_S_uart_4019c000, reg, 1)
#define DT_N_S_soc_S_uart_4019c000_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_4019c000, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_4019c000, reg, 1)
#define DT_N_S_soc_S_uart_4019c000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_4019c000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uart_4019c000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_uart_4019c000_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_4019c000, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_4019c000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_uart_4019c000_P_reg_EXISTS 1
#define DT_N_S_soc_S_uart_4019c000_P_interrupts {26 /* 0x1a */, 0 /* 0x0 */}
#define DT_N_S_soc_S_uart_4019c000_P_interrupts_IDX_0 26
#define DT_N_S_soc_S_uart_4019c000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_4019c000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_uart_4019c000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uart_4019c000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_4019c000, interrupts, 0) \
	fn(DT_N_S_soc_S_uart_4019c000, interrupts, 1)
#define DT_N_S_soc_S_uart_4019c000_P_interrupts_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_4019c000, interrupts, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_4019c000, interrupts, 1)
#define DT_N_S_soc_S_uart_4019c000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_4019c000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uart_4019c000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_uart_4019c000_P_interrupts_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_4019c000, interrupts, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_4019c000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_uart_4019c000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_uart_4019c000_P_nxp_loopback 0
#define DT_N_S_soc_S_uart_4019c000_P_nxp_loopback_EXISTS 1
#define DT_N_S_soc_S_uart_4019c000_P_nxp_rs485_mode 0
#define DT_N_S_soc_S_uart_4019c000_P_nxp_rs485_mode_EXISTS 1
#define DT_N_S_soc_S_uart_4019c000_P_nxp_rs485_de_active_low 0
#define DT_N_S_soc_S_uart_4019c000_P_nxp_rs485_de_active_low_EXISTS 1
#define DT_N_S_soc_S_uart_4019c000_P_hw_flow_control 0
#define DT_N_S_soc_S_uart_4019c000_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_uart_4019c000_P_status "disabled"
#define DT_N_S_soc_S_uart_4019c000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_uart_4019c000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_uart_4019c000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_uart_4019c000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_uart_4019c000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_uart_4019c000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_uart_4019c000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_4019c000, status, 0) \
	fn(DT_N_S_soc_S_uart_4019c000, status, 1) \
	fn(DT_N_S_soc_S_uart_4019c000, status, 2) \
	fn(DT_N_S_soc_S_uart_4019c000, status, 3) \
	fn(DT_N_S_soc_S_uart_4019c000, status, 4) \
	fn(DT_N_S_soc_S_uart_4019c000, status, 5) \
	fn(DT_N_S_soc_S_uart_4019c000, status, 6) \
	fn(DT_N_S_soc_S_uart_4019c000, status, 7)
#define DT_N_S_soc_S_uart_4019c000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_4019c000, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_4019c000, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_4019c000, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_4019c000, status, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_4019c000, status, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_4019c000, status, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_4019c000, status, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_4019c000, status, 7)
#define DT_N_S_soc_S_uart_4019c000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_4019c000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uart_4019c000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uart_4019c000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uart_4019c000, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uart_4019c000, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uart_4019c000, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uart_4019c000, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uart_4019c000, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_uart_4019c000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_4019c000, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_4019c000, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_4019c000, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_4019c000, status, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_4019c000, status, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_4019c000, status, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_4019c000, status, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_4019c000, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_uart_4019c000_P_status_EXISTS 1
#define DT_N_S_soc_S_uart_4019c000_P_compatible {"nxp,kinetis-lpuart"}
#define DT_N_S_soc_S_uart_4019c000_P_compatible_IDX_0 "nxp,kinetis-lpuart"
#define DT_N_S_soc_S_uart_4019c000_P_compatible_IDX_0_STRING_UNQUOTED nxp,kinetis-lpuart
#define DT_N_S_soc_S_uart_4019c000_P_compatible_IDX_0_STRING_TOKEN nxp_kinetis_lpuart
#define DT_N_S_soc_S_uart_4019c000_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_KINETIS_LPUART
#define DT_N_S_soc_S_uart_4019c000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_4019c000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_4019c000, compatible, 0)
#define DT_N_S_soc_S_uart_4019c000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_4019c000, compatible, 0)
#define DT_N_S_soc_S_uart_4019c000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_4019c000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_4019c000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_4019c000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_4019c000_P_compatible_LEN 1
#define DT_N_S_soc_S_uart_4019c000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_uart_4019c000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_4019c000_P_clocks_IDX_0_PH DT_N_S_soc_S_ccm_400fc000
#define DT_N_S_soc_S_uart_4019c000_P_clocks_IDX_0_VAL_name 768
#define DT_N_S_soc_S_uart_4019c000_P_clocks_IDX_0_VAL_name_EXISTS 1
#define DT_N_S_soc_S_uart_4019c000_P_clocks_IDX_0_VAL_offset 124
#define DT_N_S_soc_S_uart_4019c000_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_uart_4019c000_P_clocks_IDX_0_VAL_bits 26
#define DT_N_S_soc_S_uart_4019c000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_uart_4019c000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_4019c000, clocks, 0)
#define DT_N_S_soc_S_uart_4019c000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_4019c000, clocks, 0)
#define DT_N_S_soc_S_uart_4019c000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_4019c000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_4019c000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_4019c000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_4019c000_P_clocks_LEN 1
#define DT_N_S_soc_S_uart_4019c000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_uart_4019c000_P_dmas_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_4019c000_P_dmas_IDX_0_PH DT_N_S_soc_S_dma_controller_400e8000
#define DT_N_S_soc_S_uart_4019c000_P_dmas_IDX_0_VAL_mux 13
#define DT_N_S_soc_S_uart_4019c000_P_dmas_IDX_0_VAL_mux_EXISTS 1
#define DT_N_S_soc_S_uart_4019c000_P_dmas_IDX_0_VAL_source 8
#define DT_N_S_soc_S_uart_4019c000_P_dmas_IDX_0_VAL_source_EXISTS 1
#define DT_N_S_soc_S_uart_4019c000_P_dmas_IDX_0_NAME "tx"
#define DT_N_S_soc_S_uart_4019c000_P_dmas_NAME_tx_PH DT_N_S_soc_S_dma_controller_400e8000
#define DT_N_S_soc_S_uart_4019c000_P_dmas_NAME_tx_EXISTS 1
#define DT_N_S_soc_S_uart_4019c000_P_dmas_NAME_tx_VAL_mux DT_N_S_soc_S_uart_4019c000_P_dmas_IDX_0_VAL_mux
#define DT_N_S_soc_S_uart_4019c000_P_dmas_NAME_tx_VAL_mux_EXISTS 1
#define DT_N_S_soc_S_uart_4019c000_P_dmas_NAME_tx_VAL_source DT_N_S_soc_S_uart_4019c000_P_dmas_IDX_0_VAL_source
#define DT_N_S_soc_S_uart_4019c000_P_dmas_NAME_tx_VAL_source_EXISTS 1
#define DT_N_S_soc_S_uart_4019c000_P_dmas_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uart_4019c000_P_dmas_IDX_1_PH DT_N_S_soc_S_dma_controller_400e8000
#define DT_N_S_soc_S_uart_4019c000_P_dmas_IDX_1_VAL_mux 14
#define DT_N_S_soc_S_uart_4019c000_P_dmas_IDX_1_VAL_mux_EXISTS 1
#define DT_N_S_soc_S_uart_4019c000_P_dmas_IDX_1_VAL_source 9
#define DT_N_S_soc_S_uart_4019c000_P_dmas_IDX_1_VAL_source_EXISTS 1
#define DT_N_S_soc_S_uart_4019c000_P_dmas_IDX_1_NAME "rx"
#define DT_N_S_soc_S_uart_4019c000_P_dmas_NAME_rx_PH DT_N_S_soc_S_dma_controller_400e8000
#define DT_N_S_soc_S_uart_4019c000_P_dmas_NAME_rx_EXISTS 1
#define DT_N_S_soc_S_uart_4019c000_P_dmas_NAME_rx_VAL_mux DT_N_S_soc_S_uart_4019c000_P_dmas_IDX_1_VAL_mux
#define DT_N_S_soc_S_uart_4019c000_P_dmas_NAME_rx_VAL_mux_EXISTS 1
#define DT_N_S_soc_S_uart_4019c000_P_dmas_NAME_rx_VAL_source DT_N_S_soc_S_uart_4019c000_P_dmas_IDX_1_VAL_source
#define DT_N_S_soc_S_uart_4019c000_P_dmas_NAME_rx_VAL_source_EXISTS 1
#define DT_N_S_soc_S_uart_4019c000_P_dmas_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_4019c000, dmas, 0) \
	fn(DT_N_S_soc_S_uart_4019c000, dmas, 1)
#define DT_N_S_soc_S_uart_4019c000_P_dmas_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_4019c000, dmas, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_4019c000, dmas, 1)
#define DT_N_S_soc_S_uart_4019c000_P_dmas_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_4019c000, dmas, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uart_4019c000, dmas, 1, __VA_ARGS__)
#define DT_N_S_soc_S_uart_4019c000_P_dmas_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_4019c000, dmas, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_4019c000, dmas, 1, __VA_ARGS__)
#define DT_N_S_soc_S_uart_4019c000_P_dmas_LEN 2
#define DT_N_S_soc_S_uart_4019c000_P_dmas_EXISTS 1
#define DT_N_S_soc_S_uart_4019c000_P_dma_names {"tx", "rx"}
#define DT_N_S_soc_S_uart_4019c000_P_dma_names_IDX_0 "tx"
#define DT_N_S_soc_S_uart_4019c000_P_dma_names_IDX_0_STRING_UNQUOTED tx
#define DT_N_S_soc_S_uart_4019c000_P_dma_names_IDX_0_STRING_TOKEN tx
#define DT_N_S_soc_S_uart_4019c000_P_dma_names_IDX_0_STRING_UPPER_TOKEN TX
#define DT_N_S_soc_S_uart_4019c000_P_dma_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_4019c000_P_dma_names_IDX_1 "rx"
#define DT_N_S_soc_S_uart_4019c000_P_dma_names_IDX_1_STRING_UNQUOTED rx
#define DT_N_S_soc_S_uart_4019c000_P_dma_names_IDX_1_STRING_TOKEN rx
#define DT_N_S_soc_S_uart_4019c000_P_dma_names_IDX_1_STRING_UPPER_TOKEN RX
#define DT_N_S_soc_S_uart_4019c000_P_dma_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uart_4019c000_P_dma_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_4019c000, dma_names, 0) \
	fn(DT_N_S_soc_S_uart_4019c000, dma_names, 1)
#define DT_N_S_soc_S_uart_4019c000_P_dma_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_4019c000, dma_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_4019c000, dma_names, 1)
#define DT_N_S_soc_S_uart_4019c000_P_dma_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_4019c000, dma_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uart_4019c000, dma_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_uart_4019c000_P_dma_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_4019c000, dma_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_4019c000, dma_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_uart_4019c000_P_dma_names_LEN 2
#define DT_N_S_soc_S_uart_4019c000_P_dma_names_EXISTS 1
#define DT_N_S_soc_S_uart_4019c000_P_wakeup_source 0
#define DT_N_S_soc_S_uart_4019c000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/uart@401a0000
 *
 * Node identifier: DT_N_S_soc_S_uart_401a0000
 *
 * Binding (compatible = nxp,kinetis-lpuart):
 *   $ZEPHYR_BASE/dts/bindings/serial/nxp,kinetis-lpuart.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_uart_401a0000_PATH "/soc/uart@401a0000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_uart_401a0000_FULL_NAME "uart@401a0000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_uart_401a0000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_uart_401a0000_CHILD_IDX 34

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_uart_401a0000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_uart_401a0000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_uart_401a0000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_uart_401a0000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_uart_401a0000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_uart_401a0000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_uart_401a0000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_uart_401a0000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_uart_401a0000_ORD 136

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_uart_401a0000_REQUIRES_ORDS \
	11, /* /soc */ \
	12, /* /soc/interrupt-controller@e000e100 */ \
	60, /* /soc/ccm@400fc000 */ \
	114, /* /soc/dma-controller@400e8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_uart_401a0000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_uart_401a0000_EXISTS 1
#define DT_N_INST_7_nxp_kinetis_lpuart DT_N_S_soc_S_uart_401a0000
#define DT_N_NODELABEL_lpuart8         DT_N_S_soc_S_uart_401a0000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_uart_401a0000_REG_NUM 1
#define DT_N_S_soc_S_uart_401a0000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_401a0000_REG_IDX_0_VAL_ADDRESS 1075445760 /* 0x401a0000 */
#define DT_N_S_soc_S_uart_401a0000_REG_IDX_0_VAL_SIZE 16384 /* 0x4000 */
#define DT_N_S_soc_S_uart_401a0000_RANGES_NUM 0
#define DT_N_S_soc_S_uart_401a0000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_uart_401a0000_IRQ_NUM 1
#define DT_N_S_soc_S_uart_401a0000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_401a0000_IRQ_IDX_0_VAL_irq 27
#define DT_N_S_soc_S_uart_401a0000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_uart_401a0000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_401a0000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_uart_401a0000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_uart_401a0000_COMPAT_MATCHES_nxp_kinetis_lpuart 1
#define DT_N_S_soc_S_uart_401a0000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_401a0000_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_soc_S_uart_401a0000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_401a0000_COMPAT_MODEL_IDX_0 "kinetis-lpuart"
#define DT_N_S_soc_S_uart_401a0000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_uart_401a0000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_uart_401a0000_P_reg {1075445760 /* 0x401a0000 */, 16384 /* 0x4000 */}
#define DT_N_S_soc_S_uart_401a0000_P_reg_IDX_0 1075445760
#define DT_N_S_soc_S_uart_401a0000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_401a0000_P_reg_IDX_1 16384
#define DT_N_S_soc_S_uart_401a0000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uart_401a0000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_401a0000, reg, 0) \
	fn(DT_N_S_soc_S_uart_401a0000, reg, 1)
#define DT_N_S_soc_S_uart_401a0000_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_401a0000, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_401a0000, reg, 1)
#define DT_N_S_soc_S_uart_401a0000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_401a0000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uart_401a0000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_uart_401a0000_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_401a0000, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_401a0000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_uart_401a0000_P_reg_EXISTS 1
#define DT_N_S_soc_S_uart_401a0000_P_interrupts {27 /* 0x1b */, 0 /* 0x0 */}
#define DT_N_S_soc_S_uart_401a0000_P_interrupts_IDX_0 27
#define DT_N_S_soc_S_uart_401a0000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_401a0000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_uart_401a0000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uart_401a0000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_401a0000, interrupts, 0) \
	fn(DT_N_S_soc_S_uart_401a0000, interrupts, 1)
#define DT_N_S_soc_S_uart_401a0000_P_interrupts_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_401a0000, interrupts, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_401a0000, interrupts, 1)
#define DT_N_S_soc_S_uart_401a0000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_401a0000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uart_401a0000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_uart_401a0000_P_interrupts_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_401a0000, interrupts, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_401a0000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_uart_401a0000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_uart_401a0000_P_nxp_loopback 0
#define DT_N_S_soc_S_uart_401a0000_P_nxp_loopback_EXISTS 1
#define DT_N_S_soc_S_uart_401a0000_P_nxp_rs485_mode 0
#define DT_N_S_soc_S_uart_401a0000_P_nxp_rs485_mode_EXISTS 1
#define DT_N_S_soc_S_uart_401a0000_P_nxp_rs485_de_active_low 0
#define DT_N_S_soc_S_uart_401a0000_P_nxp_rs485_de_active_low_EXISTS 1
#define DT_N_S_soc_S_uart_401a0000_P_hw_flow_control 0
#define DT_N_S_soc_S_uart_401a0000_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_uart_401a0000_P_status "disabled"
#define DT_N_S_soc_S_uart_401a0000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_uart_401a0000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_uart_401a0000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_uart_401a0000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_uart_401a0000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_uart_401a0000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_uart_401a0000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_401a0000, status, 0) \
	fn(DT_N_S_soc_S_uart_401a0000, status, 1) \
	fn(DT_N_S_soc_S_uart_401a0000, status, 2) \
	fn(DT_N_S_soc_S_uart_401a0000, status, 3) \
	fn(DT_N_S_soc_S_uart_401a0000, status, 4) \
	fn(DT_N_S_soc_S_uart_401a0000, status, 5) \
	fn(DT_N_S_soc_S_uart_401a0000, status, 6) \
	fn(DT_N_S_soc_S_uart_401a0000, status, 7)
#define DT_N_S_soc_S_uart_401a0000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_401a0000, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_401a0000, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_401a0000, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_401a0000, status, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_401a0000, status, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_401a0000, status, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_401a0000, status, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_401a0000, status, 7)
#define DT_N_S_soc_S_uart_401a0000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_401a0000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uart_401a0000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uart_401a0000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uart_401a0000, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uart_401a0000, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uart_401a0000, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uart_401a0000, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uart_401a0000, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_uart_401a0000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_401a0000, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_401a0000, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_401a0000, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_401a0000, status, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_401a0000, status, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_401a0000, status, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_401a0000, status, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_401a0000, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_uart_401a0000_P_status_EXISTS 1
#define DT_N_S_soc_S_uart_401a0000_P_compatible {"nxp,kinetis-lpuart"}
#define DT_N_S_soc_S_uart_401a0000_P_compatible_IDX_0 "nxp,kinetis-lpuart"
#define DT_N_S_soc_S_uart_401a0000_P_compatible_IDX_0_STRING_UNQUOTED nxp,kinetis-lpuart
#define DT_N_S_soc_S_uart_401a0000_P_compatible_IDX_0_STRING_TOKEN nxp_kinetis_lpuart
#define DT_N_S_soc_S_uart_401a0000_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_KINETIS_LPUART
#define DT_N_S_soc_S_uart_401a0000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_401a0000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_401a0000, compatible, 0)
#define DT_N_S_soc_S_uart_401a0000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_401a0000, compatible, 0)
#define DT_N_S_soc_S_uart_401a0000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_401a0000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_401a0000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_401a0000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_401a0000_P_compatible_LEN 1
#define DT_N_S_soc_S_uart_401a0000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_uart_401a0000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_401a0000_P_clocks_IDX_0_PH DT_N_S_soc_S_ccm_400fc000
#define DT_N_S_soc_S_uart_401a0000_P_clocks_IDX_0_VAL_name 768
#define DT_N_S_soc_S_uart_401a0000_P_clocks_IDX_0_VAL_name_EXISTS 1
#define DT_N_S_soc_S_uart_401a0000_P_clocks_IDX_0_VAL_offset 128
#define DT_N_S_soc_S_uart_401a0000_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_uart_401a0000_P_clocks_IDX_0_VAL_bits 14
#define DT_N_S_soc_S_uart_401a0000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_uart_401a0000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_401a0000, clocks, 0)
#define DT_N_S_soc_S_uart_401a0000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_401a0000, clocks, 0)
#define DT_N_S_soc_S_uart_401a0000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_401a0000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_401a0000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_401a0000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_401a0000_P_clocks_LEN 1
#define DT_N_S_soc_S_uart_401a0000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_uart_401a0000_P_dmas_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_401a0000_P_dmas_IDX_0_PH DT_N_S_soc_S_dma_controller_400e8000
#define DT_N_S_soc_S_uart_401a0000_P_dmas_IDX_0_VAL_mux 15
#define DT_N_S_soc_S_uart_401a0000_P_dmas_IDX_0_VAL_mux_EXISTS 1
#define DT_N_S_soc_S_uart_401a0000_P_dmas_IDX_0_VAL_source 72
#define DT_N_S_soc_S_uart_401a0000_P_dmas_IDX_0_VAL_source_EXISTS 1
#define DT_N_S_soc_S_uart_401a0000_P_dmas_IDX_0_NAME "tx"
#define DT_N_S_soc_S_uart_401a0000_P_dmas_NAME_tx_PH DT_N_S_soc_S_dma_controller_400e8000
#define DT_N_S_soc_S_uart_401a0000_P_dmas_NAME_tx_EXISTS 1
#define DT_N_S_soc_S_uart_401a0000_P_dmas_NAME_tx_VAL_mux DT_N_S_soc_S_uart_401a0000_P_dmas_IDX_0_VAL_mux
#define DT_N_S_soc_S_uart_401a0000_P_dmas_NAME_tx_VAL_mux_EXISTS 1
#define DT_N_S_soc_S_uart_401a0000_P_dmas_NAME_tx_VAL_source DT_N_S_soc_S_uart_401a0000_P_dmas_IDX_0_VAL_source
#define DT_N_S_soc_S_uart_401a0000_P_dmas_NAME_tx_VAL_source_EXISTS 1
#define DT_N_S_soc_S_uart_401a0000_P_dmas_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uart_401a0000_P_dmas_IDX_1_PH DT_N_S_soc_S_dma_controller_400e8000
#define DT_N_S_soc_S_uart_401a0000_P_dmas_IDX_1_VAL_mux 16
#define DT_N_S_soc_S_uart_401a0000_P_dmas_IDX_1_VAL_mux_EXISTS 1
#define DT_N_S_soc_S_uart_401a0000_P_dmas_IDX_1_VAL_source 73
#define DT_N_S_soc_S_uart_401a0000_P_dmas_IDX_1_VAL_source_EXISTS 1
#define DT_N_S_soc_S_uart_401a0000_P_dmas_IDX_1_NAME "rx"
#define DT_N_S_soc_S_uart_401a0000_P_dmas_NAME_rx_PH DT_N_S_soc_S_dma_controller_400e8000
#define DT_N_S_soc_S_uart_401a0000_P_dmas_NAME_rx_EXISTS 1
#define DT_N_S_soc_S_uart_401a0000_P_dmas_NAME_rx_VAL_mux DT_N_S_soc_S_uart_401a0000_P_dmas_IDX_1_VAL_mux
#define DT_N_S_soc_S_uart_401a0000_P_dmas_NAME_rx_VAL_mux_EXISTS 1
#define DT_N_S_soc_S_uart_401a0000_P_dmas_NAME_rx_VAL_source DT_N_S_soc_S_uart_401a0000_P_dmas_IDX_1_VAL_source
#define DT_N_S_soc_S_uart_401a0000_P_dmas_NAME_rx_VAL_source_EXISTS 1
#define DT_N_S_soc_S_uart_401a0000_P_dmas_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_401a0000, dmas, 0) \
	fn(DT_N_S_soc_S_uart_401a0000, dmas, 1)
#define DT_N_S_soc_S_uart_401a0000_P_dmas_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_401a0000, dmas, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_401a0000, dmas, 1)
#define DT_N_S_soc_S_uart_401a0000_P_dmas_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_401a0000, dmas, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uart_401a0000, dmas, 1, __VA_ARGS__)
#define DT_N_S_soc_S_uart_401a0000_P_dmas_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_401a0000, dmas, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_401a0000, dmas, 1, __VA_ARGS__)
#define DT_N_S_soc_S_uart_401a0000_P_dmas_LEN 2
#define DT_N_S_soc_S_uart_401a0000_P_dmas_EXISTS 1
#define DT_N_S_soc_S_uart_401a0000_P_dma_names {"tx", "rx"}
#define DT_N_S_soc_S_uart_401a0000_P_dma_names_IDX_0 "tx"
#define DT_N_S_soc_S_uart_401a0000_P_dma_names_IDX_0_STRING_UNQUOTED tx
#define DT_N_S_soc_S_uart_401a0000_P_dma_names_IDX_0_STRING_TOKEN tx
#define DT_N_S_soc_S_uart_401a0000_P_dma_names_IDX_0_STRING_UPPER_TOKEN TX
#define DT_N_S_soc_S_uart_401a0000_P_dma_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_401a0000_P_dma_names_IDX_1 "rx"
#define DT_N_S_soc_S_uart_401a0000_P_dma_names_IDX_1_STRING_UNQUOTED rx
#define DT_N_S_soc_S_uart_401a0000_P_dma_names_IDX_1_STRING_TOKEN rx
#define DT_N_S_soc_S_uart_401a0000_P_dma_names_IDX_1_STRING_UPPER_TOKEN RX
#define DT_N_S_soc_S_uart_401a0000_P_dma_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uart_401a0000_P_dma_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_401a0000, dma_names, 0) \
	fn(DT_N_S_soc_S_uart_401a0000, dma_names, 1)
#define DT_N_S_soc_S_uart_401a0000_P_dma_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_401a0000, dma_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_401a0000, dma_names, 1)
#define DT_N_S_soc_S_uart_401a0000_P_dma_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_401a0000, dma_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uart_401a0000, dma_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_uart_401a0000_P_dma_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_401a0000, dma_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_401a0000, dma_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_uart_401a0000_P_dma_names_LEN 2
#define DT_N_S_soc_S_uart_401a0000_P_dma_names_EXISTS 1
#define DT_N_S_soc_S_uart_401a0000_P_wakeup_source 0
#define DT_N_S_soc_S_uart_401a0000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /usbpll-clock
 *
 * Node identifier: DT_N_S_usbpll_clock
 *
 * Binding (compatible = fixed-clock):
 *   $ZEPHYR_BASE/dts/bindings/clock/fixed-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_usbpll_clock_PATH "/usbpll-clock"

/* Node's name with unit-address: */
#define DT_N_S_usbpll_clock_FULL_NAME "usbpll-clock"

/* Node parent (/) identifier: */
#define DT_N_S_usbpll_clock_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_usbpll_clock_CHILD_IDX 7

/* Helper macros for child nodes of this node. */
#define DT_N_S_usbpll_clock_FOREACH_CHILD(fn) 
#define DT_N_S_usbpll_clock_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_usbpll_clock_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_usbpll_clock_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_usbpll_clock_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_usbpll_clock_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_usbpll_clock_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_usbpll_clock_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_usbpll_clock_ORD 137

/* Ordinals for what this node depends on directly: */
#define DT_N_S_usbpll_clock_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_usbpll_clock_SUPPORTS_ORDS \
	138, /* /soc/usbd@402e0000 */ \
	139, /* /soc/usbd@402e0200 */

/* Existence and alternate IDs: */
#define DT_N_S_usbpll_clock_EXISTS 1
#define DT_N_INST_3_fixed_clock DT_N_S_usbpll_clock
#define DT_N_NODELABEL_usbclk   DT_N_S_usbpll_clock

/* Macros for properties that are special in the specification: */
#define DT_N_S_usbpll_clock_REG_NUM 0
#define DT_N_S_usbpll_clock_RANGES_NUM 0
#define DT_N_S_usbpll_clock_FOREACH_RANGE(fn) 
#define DT_N_S_usbpll_clock_IRQ_NUM 0
#define DT_N_S_usbpll_clock_COMPAT_MATCHES_fixed_clock 1
#define DT_N_S_usbpll_clock_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_usbpll_clock_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_usbpll_clock_P_clock_frequency 480000000
#define DT_N_S_usbpll_clock_P_clock_frequency_EXISTS 1

/*
 * Devicetree node: /soc/usbd@402e0000
 *
 * Node identifier: DT_N_S_soc_S_usbd_402e0000
 *
 * Binding (compatible = nxp,mcux-usbd):
 *   $ZEPHYR_BASE/dts/bindings/usb/nxp,mcux-usbd.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_usbd_402e0000_PATH "/soc/usbd@402e0000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_usbd_402e0000_FULL_NAME "usbd@402e0000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_usbd_402e0000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_usbd_402e0000_CHILD_IDX 44

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_usbd_402e0000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_usbd_402e0000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_usbd_402e0000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_usbd_402e0000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_usbd_402e0000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_usbd_402e0000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_usbd_402e0000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_usbd_402e0000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_usbd_402e0000_ORD 138

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_usbd_402e0000_REQUIRES_ORDS \
	11, /* /soc */ \
	12, /* /soc/interrupt-controller@e000e100 */ \
	137, /* /usbpll-clock */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_usbd_402e0000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_usbd_402e0000_EXISTS 1
#define DT_N_INST_0_nxp_mcux_usbd  DT_N_S_soc_S_usbd_402e0000
#define DT_N_NODELABEL_usb1        DT_N_S_soc_S_usbd_402e0000
#define DT_N_NODELABEL_zephyr_udc0 DT_N_S_soc_S_usbd_402e0000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_usbd_402e0000_REG_NUM 1
#define DT_N_S_soc_S_usbd_402e0000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usbd_402e0000_REG_IDX_0_VAL_ADDRESS 1076756480 /* 0x402e0000 */
#define DT_N_S_soc_S_usbd_402e0000_REG_IDX_0_VAL_SIZE 512 /* 0x200 */
#define DT_N_S_soc_S_usbd_402e0000_RANGES_NUM 0
#define DT_N_S_soc_S_usbd_402e0000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_usbd_402e0000_IRQ_NUM 1
#define DT_N_S_soc_S_usbd_402e0000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usbd_402e0000_IRQ_IDX_0_VAL_irq 113
#define DT_N_S_soc_S_usbd_402e0000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_usbd_402e0000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usbd_402e0000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_usbd_402e0000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_usbd_402e0000_IRQ_NAME_usb_otg_VAL_irq DT_N_S_soc_S_usbd_402e0000_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_usbd_402e0000_IRQ_NAME_usb_otg_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_usbd_402e0000_IRQ_NAME_usb_otg_VAL_priority DT_N_S_soc_S_usbd_402e0000_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_usbd_402e0000_IRQ_NAME_usb_otg_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_usbd_402e0000_COMPAT_MATCHES_nxp_mcux_usbd 1
#define DT_N_S_soc_S_usbd_402e0000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usbd_402e0000_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_soc_S_usbd_402e0000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usbd_402e0000_COMPAT_MODEL_IDX_0 "mcux-usbd"
#define DT_N_S_soc_S_usbd_402e0000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_usbd_402e0000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_usbd_402e0000_P_reg {1076756480 /* 0x402e0000 */, 512 /* 0x200 */}
#define DT_N_S_soc_S_usbd_402e0000_P_reg_IDX_0 1076756480
#define DT_N_S_soc_S_usbd_402e0000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usbd_402e0000_P_reg_IDX_1 512
#define DT_N_S_soc_S_usbd_402e0000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_usbd_402e0000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usbd_402e0000, reg, 0) \
	fn(DT_N_S_soc_S_usbd_402e0000, reg, 1)
#define DT_N_S_soc_S_usbd_402e0000_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_usbd_402e0000, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_usbd_402e0000, reg, 1)
#define DT_N_S_soc_S_usbd_402e0000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usbd_402e0000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usbd_402e0000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_usbd_402e0000_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usbd_402e0000, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_usbd_402e0000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_usbd_402e0000_P_reg_EXISTS 1
#define DT_N_S_soc_S_usbd_402e0000_P_interrupts {113 /* 0x71 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_usbd_402e0000_P_interrupts_IDX_0 113
#define DT_N_S_soc_S_usbd_402e0000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usbd_402e0000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_usbd_402e0000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_usbd_402e0000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usbd_402e0000, interrupts, 0) \
	fn(DT_N_S_soc_S_usbd_402e0000, interrupts, 1)
#define DT_N_S_soc_S_usbd_402e0000_P_interrupts_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_usbd_402e0000, interrupts, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_usbd_402e0000, interrupts, 1)
#define DT_N_S_soc_S_usbd_402e0000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usbd_402e0000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usbd_402e0000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_usbd_402e0000_P_interrupts_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usbd_402e0000, interrupts, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_usbd_402e0000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_usbd_402e0000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_usbd_402e0000_P_usb_controller_index "Ehci0"
#define DT_N_S_soc_S_usbd_402e0000_P_usb_controller_index_STRING_UNQUOTED Ehci0
#define DT_N_S_soc_S_usbd_402e0000_P_usb_controller_index_STRING_TOKEN Ehci0
#define DT_N_S_soc_S_usbd_402e0000_P_usb_controller_index_STRING_UPPER_TOKEN EHCI0
#define DT_N_S_soc_S_usbd_402e0000_P_usb_controller_index_ENUM_IDX 2
#define DT_N_S_soc_S_usbd_402e0000_P_usb_controller_index_ENUM_TOKEN Ehci0
#define DT_N_S_soc_S_usbd_402e0000_P_usb_controller_index_ENUM_UPPER_TOKEN EHCI0
#define DT_N_S_soc_S_usbd_402e0000_P_usb_controller_index_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usbd_402e0000, usb_controller_index, 0) \
	fn(DT_N_S_soc_S_usbd_402e0000, usb_controller_index, 1) \
	fn(DT_N_S_soc_S_usbd_402e0000, usb_controller_index, 2) \
	fn(DT_N_S_soc_S_usbd_402e0000, usb_controller_index, 3) \
	fn(DT_N_S_soc_S_usbd_402e0000, usb_controller_index, 4)
#define DT_N_S_soc_S_usbd_402e0000_P_usb_controller_index_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_usbd_402e0000, usb_controller_index, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_usbd_402e0000, usb_controller_index, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_usbd_402e0000, usb_controller_index, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_usbd_402e0000, usb_controller_index, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_usbd_402e0000, usb_controller_index, 4)
#define DT_N_S_soc_S_usbd_402e0000_P_usb_controller_index_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usbd_402e0000, usb_controller_index, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usbd_402e0000, usb_controller_index, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usbd_402e0000, usb_controller_index, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usbd_402e0000, usb_controller_index, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usbd_402e0000, usb_controller_index, 4, __VA_ARGS__)
#define DT_N_S_soc_S_usbd_402e0000_P_usb_controller_index_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usbd_402e0000, usb_controller_index, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_usbd_402e0000, usb_controller_index, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_usbd_402e0000, usb_controller_index, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_usbd_402e0000, usb_controller_index, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_usbd_402e0000, usb_controller_index, 4, __VA_ARGS__)
#define DT_N_S_soc_S_usbd_402e0000_P_usb_controller_index_EXISTS 1
#define DT_N_S_soc_S_usbd_402e0000_P_num_bidir_endpoints 8
#define DT_N_S_soc_S_usbd_402e0000_P_num_bidir_endpoints_EXISTS 1
#define DT_N_S_soc_S_usbd_402e0000_P_status "okay"
#define DT_N_S_soc_S_usbd_402e0000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_usbd_402e0000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_usbd_402e0000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_usbd_402e0000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_usbd_402e0000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_usbd_402e0000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_usbd_402e0000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usbd_402e0000, status, 0) \
	fn(DT_N_S_soc_S_usbd_402e0000, status, 1) \
	fn(DT_N_S_soc_S_usbd_402e0000, status, 2) \
	fn(DT_N_S_soc_S_usbd_402e0000, status, 3)
#define DT_N_S_soc_S_usbd_402e0000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_usbd_402e0000, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_usbd_402e0000, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_usbd_402e0000, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_usbd_402e0000, status, 3)
#define DT_N_S_soc_S_usbd_402e0000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usbd_402e0000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usbd_402e0000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usbd_402e0000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usbd_402e0000, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_usbd_402e0000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usbd_402e0000, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_usbd_402e0000, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_usbd_402e0000, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_usbd_402e0000, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_usbd_402e0000_P_status_EXISTS 1
#define DT_N_S_soc_S_usbd_402e0000_P_compatible {"nxp,mcux-usbd"}
#define DT_N_S_soc_S_usbd_402e0000_P_compatible_IDX_0 "nxp,mcux-usbd"
#define DT_N_S_soc_S_usbd_402e0000_P_compatible_IDX_0_STRING_UNQUOTED nxp,mcux-usbd
#define DT_N_S_soc_S_usbd_402e0000_P_compatible_IDX_0_STRING_TOKEN nxp_mcux_usbd
#define DT_N_S_soc_S_usbd_402e0000_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_MCUX_USBD
#define DT_N_S_soc_S_usbd_402e0000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usbd_402e0000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usbd_402e0000, compatible, 0)
#define DT_N_S_soc_S_usbd_402e0000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_usbd_402e0000, compatible, 0)
#define DT_N_S_soc_S_usbd_402e0000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usbd_402e0000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usbd_402e0000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usbd_402e0000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usbd_402e0000_P_compatible_LEN 1
#define DT_N_S_soc_S_usbd_402e0000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_usbd_402e0000_P_interrupt_names {"usb_otg"}
#define DT_N_S_soc_S_usbd_402e0000_P_interrupt_names_IDX_0 "usb_otg"
#define DT_N_S_soc_S_usbd_402e0000_P_interrupt_names_IDX_0_STRING_UNQUOTED usb_otg
#define DT_N_S_soc_S_usbd_402e0000_P_interrupt_names_IDX_0_STRING_TOKEN usb_otg
#define DT_N_S_soc_S_usbd_402e0000_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN USB_OTG
#define DT_N_S_soc_S_usbd_402e0000_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usbd_402e0000_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usbd_402e0000, interrupt_names, 0)
#define DT_N_S_soc_S_usbd_402e0000_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_usbd_402e0000, interrupt_names, 0)
#define DT_N_S_soc_S_usbd_402e0000_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usbd_402e0000, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usbd_402e0000_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usbd_402e0000, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usbd_402e0000_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_usbd_402e0000_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_usbd_402e0000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usbd_402e0000_P_clocks_IDX_0_PH DT_N_S_usbpll_clock
#define DT_N_S_soc_S_usbd_402e0000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usbd_402e0000, clocks, 0)
#define DT_N_S_soc_S_usbd_402e0000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_usbd_402e0000, clocks, 0)
#define DT_N_S_soc_S_usbd_402e0000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usbd_402e0000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usbd_402e0000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usbd_402e0000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usbd_402e0000_P_clocks_LEN 1
#define DT_N_S_soc_S_usbd_402e0000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_usbd_402e0000_P_wakeup_source 0
#define DT_N_S_soc_S_usbd_402e0000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/usbd@402e0200
 *
 * Node identifier: DT_N_S_soc_S_usbd_402e0200
 *
 * Binding (compatible = nxp,mcux-usbd):
 *   $ZEPHYR_BASE/dts/bindings/usb/nxp,mcux-usbd.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_usbd_402e0200_PATH "/soc/usbd@402e0200"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_usbd_402e0200_FULL_NAME "usbd@402e0200"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_usbd_402e0200_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_usbd_402e0200_CHILD_IDX 45

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_usbd_402e0200_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_usbd_402e0200_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_usbd_402e0200_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_usbd_402e0200_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_usbd_402e0200_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_usbd_402e0200_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_usbd_402e0200_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_usbd_402e0200_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_usbd_402e0200_ORD 139

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_usbd_402e0200_REQUIRES_ORDS \
	11, /* /soc */ \
	12, /* /soc/interrupt-controller@e000e100 */ \
	137, /* /usbpll-clock */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_usbd_402e0200_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_usbd_402e0200_EXISTS 1
#define DT_N_INST_1_nxp_mcux_usbd DT_N_S_soc_S_usbd_402e0200
#define DT_N_NODELABEL_usb2       DT_N_S_soc_S_usbd_402e0200

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_usbd_402e0200_REG_NUM 1
#define DT_N_S_soc_S_usbd_402e0200_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usbd_402e0200_REG_IDX_0_VAL_ADDRESS 1076756992 /* 0x402e0200 */
#define DT_N_S_soc_S_usbd_402e0200_REG_IDX_0_VAL_SIZE 512 /* 0x200 */
#define DT_N_S_soc_S_usbd_402e0200_RANGES_NUM 0
#define DT_N_S_soc_S_usbd_402e0200_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_usbd_402e0200_IRQ_NUM 1
#define DT_N_S_soc_S_usbd_402e0200_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usbd_402e0200_IRQ_IDX_0_VAL_irq 112
#define DT_N_S_soc_S_usbd_402e0200_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_usbd_402e0200_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usbd_402e0200_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_usbd_402e0200_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_usbd_402e0200_IRQ_NAME_usb_otg_VAL_irq DT_N_S_soc_S_usbd_402e0200_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_usbd_402e0200_IRQ_NAME_usb_otg_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_usbd_402e0200_IRQ_NAME_usb_otg_VAL_priority DT_N_S_soc_S_usbd_402e0200_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_usbd_402e0200_IRQ_NAME_usb_otg_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_usbd_402e0200_COMPAT_MATCHES_nxp_mcux_usbd 1
#define DT_N_S_soc_S_usbd_402e0200_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usbd_402e0200_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_soc_S_usbd_402e0200_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usbd_402e0200_COMPAT_MODEL_IDX_0 "mcux-usbd"
#define DT_N_S_soc_S_usbd_402e0200_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_usbd_402e0200_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_usbd_402e0200_P_reg {1076756992 /* 0x402e0200 */, 512 /* 0x200 */}
#define DT_N_S_soc_S_usbd_402e0200_P_reg_IDX_0 1076756992
#define DT_N_S_soc_S_usbd_402e0200_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usbd_402e0200_P_reg_IDX_1 512
#define DT_N_S_soc_S_usbd_402e0200_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_usbd_402e0200_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usbd_402e0200, reg, 0) \
	fn(DT_N_S_soc_S_usbd_402e0200, reg, 1)
#define DT_N_S_soc_S_usbd_402e0200_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_usbd_402e0200, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_usbd_402e0200, reg, 1)
#define DT_N_S_soc_S_usbd_402e0200_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usbd_402e0200, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usbd_402e0200, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_usbd_402e0200_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usbd_402e0200, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_usbd_402e0200, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_usbd_402e0200_P_reg_EXISTS 1
#define DT_N_S_soc_S_usbd_402e0200_P_interrupts {112 /* 0x70 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_usbd_402e0200_P_interrupts_IDX_0 112
#define DT_N_S_soc_S_usbd_402e0200_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usbd_402e0200_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_usbd_402e0200_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_usbd_402e0200_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usbd_402e0200, interrupts, 0) \
	fn(DT_N_S_soc_S_usbd_402e0200, interrupts, 1)
#define DT_N_S_soc_S_usbd_402e0200_P_interrupts_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_usbd_402e0200, interrupts, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_usbd_402e0200, interrupts, 1)
#define DT_N_S_soc_S_usbd_402e0200_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usbd_402e0200, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usbd_402e0200, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_usbd_402e0200_P_interrupts_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usbd_402e0200, interrupts, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_usbd_402e0200, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_usbd_402e0200_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_usbd_402e0200_P_usb_controller_index "Ehci1"
#define DT_N_S_soc_S_usbd_402e0200_P_usb_controller_index_STRING_UNQUOTED Ehci1
#define DT_N_S_soc_S_usbd_402e0200_P_usb_controller_index_STRING_TOKEN Ehci1
#define DT_N_S_soc_S_usbd_402e0200_P_usb_controller_index_STRING_UPPER_TOKEN EHCI1
#define DT_N_S_soc_S_usbd_402e0200_P_usb_controller_index_ENUM_IDX 3
#define DT_N_S_soc_S_usbd_402e0200_P_usb_controller_index_ENUM_TOKEN Ehci1
#define DT_N_S_soc_S_usbd_402e0200_P_usb_controller_index_ENUM_UPPER_TOKEN EHCI1
#define DT_N_S_soc_S_usbd_402e0200_P_usb_controller_index_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usbd_402e0200, usb_controller_index, 0) \
	fn(DT_N_S_soc_S_usbd_402e0200, usb_controller_index, 1) \
	fn(DT_N_S_soc_S_usbd_402e0200, usb_controller_index, 2) \
	fn(DT_N_S_soc_S_usbd_402e0200, usb_controller_index, 3) \
	fn(DT_N_S_soc_S_usbd_402e0200, usb_controller_index, 4)
#define DT_N_S_soc_S_usbd_402e0200_P_usb_controller_index_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_usbd_402e0200, usb_controller_index, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_usbd_402e0200, usb_controller_index, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_usbd_402e0200, usb_controller_index, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_usbd_402e0200, usb_controller_index, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_usbd_402e0200, usb_controller_index, 4)
#define DT_N_S_soc_S_usbd_402e0200_P_usb_controller_index_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usbd_402e0200, usb_controller_index, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usbd_402e0200, usb_controller_index, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usbd_402e0200, usb_controller_index, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usbd_402e0200, usb_controller_index, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usbd_402e0200, usb_controller_index, 4, __VA_ARGS__)
#define DT_N_S_soc_S_usbd_402e0200_P_usb_controller_index_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usbd_402e0200, usb_controller_index, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_usbd_402e0200, usb_controller_index, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_usbd_402e0200, usb_controller_index, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_usbd_402e0200, usb_controller_index, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_usbd_402e0200, usb_controller_index, 4, __VA_ARGS__)
#define DT_N_S_soc_S_usbd_402e0200_P_usb_controller_index_EXISTS 1
#define DT_N_S_soc_S_usbd_402e0200_P_num_bidir_endpoints 8
#define DT_N_S_soc_S_usbd_402e0200_P_num_bidir_endpoints_EXISTS 1
#define DT_N_S_soc_S_usbd_402e0200_P_status "disabled"
#define DT_N_S_soc_S_usbd_402e0200_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_usbd_402e0200_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_usbd_402e0200_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_usbd_402e0200_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_usbd_402e0200_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_usbd_402e0200_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_usbd_402e0200_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usbd_402e0200, status, 0) \
	fn(DT_N_S_soc_S_usbd_402e0200, status, 1) \
	fn(DT_N_S_soc_S_usbd_402e0200, status, 2) \
	fn(DT_N_S_soc_S_usbd_402e0200, status, 3) \
	fn(DT_N_S_soc_S_usbd_402e0200, status, 4) \
	fn(DT_N_S_soc_S_usbd_402e0200, status, 5) \
	fn(DT_N_S_soc_S_usbd_402e0200, status, 6) \
	fn(DT_N_S_soc_S_usbd_402e0200, status, 7)
#define DT_N_S_soc_S_usbd_402e0200_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_usbd_402e0200, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_usbd_402e0200, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_usbd_402e0200, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_usbd_402e0200, status, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_usbd_402e0200, status, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_usbd_402e0200, status, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_usbd_402e0200, status, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_usbd_402e0200, status, 7)
#define DT_N_S_soc_S_usbd_402e0200_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usbd_402e0200, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usbd_402e0200, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usbd_402e0200, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usbd_402e0200, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usbd_402e0200, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usbd_402e0200, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usbd_402e0200, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usbd_402e0200, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_usbd_402e0200_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usbd_402e0200, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_usbd_402e0200, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_usbd_402e0200, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_usbd_402e0200, status, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_usbd_402e0200, status, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_usbd_402e0200, status, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_usbd_402e0200, status, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_usbd_402e0200, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_usbd_402e0200_P_status_EXISTS 1
#define DT_N_S_soc_S_usbd_402e0200_P_compatible {"nxp,mcux-usbd"}
#define DT_N_S_soc_S_usbd_402e0200_P_compatible_IDX_0 "nxp,mcux-usbd"
#define DT_N_S_soc_S_usbd_402e0200_P_compatible_IDX_0_STRING_UNQUOTED nxp,mcux-usbd
#define DT_N_S_soc_S_usbd_402e0200_P_compatible_IDX_0_STRING_TOKEN nxp_mcux_usbd
#define DT_N_S_soc_S_usbd_402e0200_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_MCUX_USBD
#define DT_N_S_soc_S_usbd_402e0200_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usbd_402e0200_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usbd_402e0200, compatible, 0)
#define DT_N_S_soc_S_usbd_402e0200_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_usbd_402e0200, compatible, 0)
#define DT_N_S_soc_S_usbd_402e0200_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usbd_402e0200, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usbd_402e0200_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usbd_402e0200, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usbd_402e0200_P_compatible_LEN 1
#define DT_N_S_soc_S_usbd_402e0200_P_compatible_EXISTS 1
#define DT_N_S_soc_S_usbd_402e0200_P_interrupt_names {"usb_otg"}
#define DT_N_S_soc_S_usbd_402e0200_P_interrupt_names_IDX_0 "usb_otg"
#define DT_N_S_soc_S_usbd_402e0200_P_interrupt_names_IDX_0_STRING_UNQUOTED usb_otg
#define DT_N_S_soc_S_usbd_402e0200_P_interrupt_names_IDX_0_STRING_TOKEN usb_otg
#define DT_N_S_soc_S_usbd_402e0200_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN USB_OTG
#define DT_N_S_soc_S_usbd_402e0200_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usbd_402e0200_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usbd_402e0200, interrupt_names, 0)
#define DT_N_S_soc_S_usbd_402e0200_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_usbd_402e0200, interrupt_names, 0)
#define DT_N_S_soc_S_usbd_402e0200_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usbd_402e0200, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usbd_402e0200_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usbd_402e0200, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usbd_402e0200_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_usbd_402e0200_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_usbd_402e0200_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usbd_402e0200_P_clocks_IDX_0_PH DT_N_S_usbpll_clock
#define DT_N_S_soc_S_usbd_402e0200_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usbd_402e0200, clocks, 0)
#define DT_N_S_soc_S_usbd_402e0200_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_usbd_402e0200, clocks, 0)
#define DT_N_S_soc_S_usbd_402e0200_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usbd_402e0200, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usbd_402e0200_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usbd_402e0200, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usbd_402e0200_P_clocks_LEN 1
#define DT_N_S_soc_S_usbd_402e0200_P_clocks_EXISTS 1
#define DT_N_S_soc_S_usbd_402e0200_P_wakeup_source 0
#define DT_N_S_soc_S_usbd_402e0200_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/usdhc@402c4000
 *
 * Node identifier: DT_N_S_soc_S_usdhc_402c4000
 *
 * Binding (compatible = nxp,imx-usdhc):
 *   $ZEPHYR_BASE/dts/bindings/sdhc/nxp,imx-usdhc.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_usdhc_402c4000_PATH "/soc/usdhc@402c4000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_usdhc_402c4000_FULL_NAME "usdhc@402c4000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_usdhc_402c4000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_usdhc_402c4000_CHILD_IDX 47

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_usdhc_402c4000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_usdhc_402c4000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_usdhc_402c4000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_usdhc_402c4000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_usdhc_402c4000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_usdhc_402c4000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_usdhc_402c4000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_usdhc_402c4000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_usdhc_402c4000_ORD 140

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_usdhc_402c4000_REQUIRES_ORDS \
	11, /* /soc */ \
	12, /* /soc/interrupt-controller@e000e100 */ \
	60, /* /soc/ccm@400fc000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_usdhc_402c4000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_usdhc_402c4000_EXISTS 1
#define DT_N_INST_1_nxp_imx_usdhc DT_N_S_soc_S_usdhc_402c4000
#define DT_N_NODELABEL_usdhc2     DT_N_S_soc_S_usdhc_402c4000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_usdhc_402c4000_REG_NUM 1
#define DT_N_S_soc_S_usdhc_402c4000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usdhc_402c4000_REG_IDX_0_VAL_ADDRESS 1076641792 /* 0x402c4000 */
#define DT_N_S_soc_S_usdhc_402c4000_REG_IDX_0_VAL_SIZE 16384 /* 0x4000 */
#define DT_N_S_soc_S_usdhc_402c4000_RANGES_NUM 0
#define DT_N_S_soc_S_usdhc_402c4000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_usdhc_402c4000_IRQ_NUM 1
#define DT_N_S_soc_S_usdhc_402c4000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usdhc_402c4000_IRQ_IDX_0_VAL_irq 111
#define DT_N_S_soc_S_usdhc_402c4000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_usdhc_402c4000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usdhc_402c4000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_usdhc_402c4000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_usdhc_402c4000_COMPAT_MATCHES_nxp_imx_usdhc 1
#define DT_N_S_soc_S_usdhc_402c4000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usdhc_402c4000_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_soc_S_usdhc_402c4000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usdhc_402c4000_COMPAT_MODEL_IDX_0 "imx-usdhc"
#define DT_N_S_soc_S_usdhc_402c4000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_usdhc_402c4000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_usdhc_402c4000_P_reg {1076641792 /* 0x402c4000 */, 16384 /* 0x4000 */}
#define DT_N_S_soc_S_usdhc_402c4000_P_reg_IDX_0 1076641792
#define DT_N_S_soc_S_usdhc_402c4000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usdhc_402c4000_P_reg_IDX_1 16384
#define DT_N_S_soc_S_usdhc_402c4000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_usdhc_402c4000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usdhc_402c4000, reg, 0) \
	fn(DT_N_S_soc_S_usdhc_402c4000, reg, 1)
#define DT_N_S_soc_S_usdhc_402c4000_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_usdhc_402c4000, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_usdhc_402c4000, reg, 1)
#define DT_N_S_soc_S_usdhc_402c4000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usdhc_402c4000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usdhc_402c4000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_usdhc_402c4000_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usdhc_402c4000, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_usdhc_402c4000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_usdhc_402c4000_P_reg_EXISTS 1
#define DT_N_S_soc_S_usdhc_402c4000_P_data_timeout 15
#define DT_N_S_soc_S_usdhc_402c4000_P_data_timeout_EXISTS 1
#define DT_N_S_soc_S_usdhc_402c4000_P_read_watermark 128
#define DT_N_S_soc_S_usdhc_402c4000_P_read_watermark_EXISTS 1
#define DT_N_S_soc_S_usdhc_402c4000_P_write_watermark 128
#define DT_N_S_soc_S_usdhc_402c4000_P_write_watermark_EXISTS 1
#define DT_N_S_soc_S_usdhc_402c4000_P_max_current_330 120
#define DT_N_S_soc_S_usdhc_402c4000_P_max_current_330_EXISTS 1
#define DT_N_S_soc_S_usdhc_402c4000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usdhc_402c4000_P_clocks_IDX_0_PH DT_N_S_soc_S_ccm_400fc000
#define DT_N_S_soc_S_usdhc_402c4000_P_clocks_IDX_0_VAL_name 1537
#define DT_N_S_soc_S_usdhc_402c4000_P_clocks_IDX_0_VAL_name_EXISTS 1
#define DT_N_S_soc_S_usdhc_402c4000_P_clocks_IDX_0_VAL_offset 0
#define DT_N_S_soc_S_usdhc_402c4000_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_usdhc_402c4000_P_clocks_IDX_0_VAL_bits 0
#define DT_N_S_soc_S_usdhc_402c4000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_usdhc_402c4000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usdhc_402c4000, clocks, 0)
#define DT_N_S_soc_S_usdhc_402c4000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_usdhc_402c4000, clocks, 0)
#define DT_N_S_soc_S_usdhc_402c4000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usdhc_402c4000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usdhc_402c4000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usdhc_402c4000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usdhc_402c4000_P_clocks_LEN 1
#define DT_N_S_soc_S_usdhc_402c4000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_usdhc_402c4000_P_no_1_8_v 0
#define DT_N_S_soc_S_usdhc_402c4000_P_no_1_8_v_EXISTS 1
#define DT_N_S_soc_S_usdhc_402c4000_P_detect_dat3 0
#define DT_N_S_soc_S_usdhc_402c4000_P_detect_dat3_EXISTS 1
#define DT_N_S_soc_S_usdhc_402c4000_P_max_current_300 0
#define DT_N_S_soc_S_usdhc_402c4000_P_max_current_300_EXISTS 1
#define DT_N_S_soc_S_usdhc_402c4000_P_max_current_180 45
#define DT_N_S_soc_S_usdhc_402c4000_P_max_current_180_EXISTS 1
#define DT_N_S_soc_S_usdhc_402c4000_P_max_bus_freq 198000000
#define DT_N_S_soc_S_usdhc_402c4000_P_max_bus_freq_EXISTS 1
#define DT_N_S_soc_S_usdhc_402c4000_P_min_bus_freq 400000
#define DT_N_S_soc_S_usdhc_402c4000_P_min_bus_freq_EXISTS 1
#define DT_N_S_soc_S_usdhc_402c4000_P_power_delay_ms 500
#define DT_N_S_soc_S_usdhc_402c4000_P_power_delay_ms_EXISTS 1
#define DT_N_S_soc_S_usdhc_402c4000_P_mmc_hs200_1_8v 0
#define DT_N_S_soc_S_usdhc_402c4000_P_mmc_hs200_1_8v_EXISTS 1
#define DT_N_S_soc_S_usdhc_402c4000_P_mmc_hs400_1_8v 0
#define DT_N_S_soc_S_usdhc_402c4000_P_mmc_hs400_1_8v_EXISTS 1
#define DT_N_S_soc_S_usdhc_402c4000_P_status "disabled"
#define DT_N_S_soc_S_usdhc_402c4000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_usdhc_402c4000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_usdhc_402c4000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_usdhc_402c4000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_usdhc_402c4000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_usdhc_402c4000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_usdhc_402c4000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usdhc_402c4000, status, 0) \
	fn(DT_N_S_soc_S_usdhc_402c4000, status, 1) \
	fn(DT_N_S_soc_S_usdhc_402c4000, status, 2) \
	fn(DT_N_S_soc_S_usdhc_402c4000, status, 3) \
	fn(DT_N_S_soc_S_usdhc_402c4000, status, 4) \
	fn(DT_N_S_soc_S_usdhc_402c4000, status, 5) \
	fn(DT_N_S_soc_S_usdhc_402c4000, status, 6) \
	fn(DT_N_S_soc_S_usdhc_402c4000, status, 7)
#define DT_N_S_soc_S_usdhc_402c4000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_usdhc_402c4000, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_usdhc_402c4000, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_usdhc_402c4000, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_usdhc_402c4000, status, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_usdhc_402c4000, status, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_usdhc_402c4000, status, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_usdhc_402c4000, status, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_usdhc_402c4000, status, 7)
#define DT_N_S_soc_S_usdhc_402c4000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usdhc_402c4000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usdhc_402c4000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usdhc_402c4000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usdhc_402c4000, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usdhc_402c4000, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usdhc_402c4000, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usdhc_402c4000, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usdhc_402c4000, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_usdhc_402c4000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usdhc_402c4000, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_usdhc_402c4000, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_usdhc_402c4000, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_usdhc_402c4000, status, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_usdhc_402c4000, status, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_usdhc_402c4000, status, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_usdhc_402c4000, status, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_usdhc_402c4000, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_usdhc_402c4000_P_status_EXISTS 1
#define DT_N_S_soc_S_usdhc_402c4000_P_compatible {"nxp,imx-usdhc"}
#define DT_N_S_soc_S_usdhc_402c4000_P_compatible_IDX_0 "nxp,imx-usdhc"
#define DT_N_S_soc_S_usdhc_402c4000_P_compatible_IDX_0_STRING_UNQUOTED nxp,imx-usdhc
#define DT_N_S_soc_S_usdhc_402c4000_P_compatible_IDX_0_STRING_TOKEN nxp_imx_usdhc
#define DT_N_S_soc_S_usdhc_402c4000_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_IMX_USDHC
#define DT_N_S_soc_S_usdhc_402c4000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usdhc_402c4000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usdhc_402c4000, compatible, 0)
#define DT_N_S_soc_S_usdhc_402c4000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_usdhc_402c4000, compatible, 0)
#define DT_N_S_soc_S_usdhc_402c4000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usdhc_402c4000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usdhc_402c4000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usdhc_402c4000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usdhc_402c4000_P_compatible_LEN 1
#define DT_N_S_soc_S_usdhc_402c4000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_usdhc_402c4000_P_interrupts {111 /* 0x6f */, 0 /* 0x0 */}
#define DT_N_S_soc_S_usdhc_402c4000_P_interrupts_IDX_0 111
#define DT_N_S_soc_S_usdhc_402c4000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usdhc_402c4000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_usdhc_402c4000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_usdhc_402c4000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usdhc_402c4000, interrupts, 0) \
	fn(DT_N_S_soc_S_usdhc_402c4000, interrupts, 1)
#define DT_N_S_soc_S_usdhc_402c4000_P_interrupts_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_usdhc_402c4000, interrupts, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_usdhc_402c4000, interrupts, 1)
#define DT_N_S_soc_S_usdhc_402c4000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usdhc_402c4000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usdhc_402c4000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_usdhc_402c4000_P_interrupts_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usdhc_402c4000, interrupts, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_usdhc_402c4000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_usdhc_402c4000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_usdhc_402c4000_P_wakeup_source 0
#define DT_N_S_soc_S_usdhc_402c4000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/wdog@400b8000
 *
 * Node identifier: DT_N_S_soc_S_wdog_400b8000
 *
 * Binding (compatible = nxp,imx-wdog):
 *   $ZEPHYR_BASE/dts/bindings/watchdog/nxp,imx-wdog.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_wdog_400b8000_PATH "/soc/wdog@400b8000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_wdog_400b8000_FULL_NAME "wdog@400b8000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_wdog_400b8000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_wdog_400b8000_CHILD_IDX 53

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_wdog_400b8000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_wdog_400b8000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_wdog_400b8000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_wdog_400b8000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_wdog_400b8000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_wdog_400b8000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_wdog_400b8000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_wdog_400b8000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_wdog_400b8000_ORD 141

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_wdog_400b8000_REQUIRES_ORDS \
	11, /* /soc */ \
	12, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_wdog_400b8000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_wdog_400b8000_EXISTS 1
#define DT_N_INST_0_nxp_imx_wdog DT_N_S_soc_S_wdog_400b8000
#define DT_N_NODELABEL_wdog0     DT_N_S_soc_S_wdog_400b8000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_wdog_400b8000_REG_NUM 1
#define DT_N_S_soc_S_wdog_400b8000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_wdog_400b8000_REG_IDX_0_VAL_ADDRESS 1074495488 /* 0x400b8000 */
#define DT_N_S_soc_S_wdog_400b8000_REG_IDX_0_VAL_SIZE 10 /* 0xa */
#define DT_N_S_soc_S_wdog_400b8000_RANGES_NUM 0
#define DT_N_S_soc_S_wdog_400b8000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_wdog_400b8000_IRQ_NUM 1
#define DT_N_S_soc_S_wdog_400b8000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_wdog_400b8000_IRQ_IDX_0_VAL_irq 92
#define DT_N_S_soc_S_wdog_400b8000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_wdog_400b8000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_wdog_400b8000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_wdog_400b8000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_wdog_400b8000_COMPAT_MATCHES_nxp_imx_wdog 1
#define DT_N_S_soc_S_wdog_400b8000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_wdog_400b8000_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_soc_S_wdog_400b8000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_wdog_400b8000_COMPAT_MODEL_IDX_0 "imx-wdog"
#define DT_N_S_soc_S_wdog_400b8000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_wdog_400b8000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_wdog_400b8000_P_reg {1074495488 /* 0x400b8000 */, 10 /* 0xa */}
#define DT_N_S_soc_S_wdog_400b8000_P_reg_IDX_0 1074495488
#define DT_N_S_soc_S_wdog_400b8000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_wdog_400b8000_P_reg_IDX_1 10
#define DT_N_S_soc_S_wdog_400b8000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_wdog_400b8000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_wdog_400b8000, reg, 0) \
	fn(DT_N_S_soc_S_wdog_400b8000, reg, 1)
#define DT_N_S_soc_S_wdog_400b8000_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_wdog_400b8000, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_wdog_400b8000, reg, 1)
#define DT_N_S_soc_S_wdog_400b8000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_wdog_400b8000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_wdog_400b8000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_wdog_400b8000_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_wdog_400b8000, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_wdog_400b8000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_wdog_400b8000_P_reg_EXISTS 1
#define DT_N_S_soc_S_wdog_400b8000_P_interrupts {92 /* 0x5c */, 0 /* 0x0 */}
#define DT_N_S_soc_S_wdog_400b8000_P_interrupts_IDX_0 92
#define DT_N_S_soc_S_wdog_400b8000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_wdog_400b8000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_wdog_400b8000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_wdog_400b8000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_wdog_400b8000, interrupts, 0) \
	fn(DT_N_S_soc_S_wdog_400b8000, interrupts, 1)
#define DT_N_S_soc_S_wdog_400b8000_P_interrupts_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_wdog_400b8000, interrupts, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_wdog_400b8000, interrupts, 1)
#define DT_N_S_soc_S_wdog_400b8000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_wdog_400b8000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_wdog_400b8000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_wdog_400b8000_P_interrupts_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_wdog_400b8000, interrupts, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_wdog_400b8000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_wdog_400b8000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_wdog_400b8000_P_status "disabled"
#define DT_N_S_soc_S_wdog_400b8000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_wdog_400b8000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_wdog_400b8000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_wdog_400b8000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_wdog_400b8000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_wdog_400b8000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_wdog_400b8000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_wdog_400b8000, status, 0) \
	fn(DT_N_S_soc_S_wdog_400b8000, status, 1) \
	fn(DT_N_S_soc_S_wdog_400b8000, status, 2) \
	fn(DT_N_S_soc_S_wdog_400b8000, status, 3) \
	fn(DT_N_S_soc_S_wdog_400b8000, status, 4) \
	fn(DT_N_S_soc_S_wdog_400b8000, status, 5) \
	fn(DT_N_S_soc_S_wdog_400b8000, status, 6) \
	fn(DT_N_S_soc_S_wdog_400b8000, status, 7)
#define DT_N_S_soc_S_wdog_400b8000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_wdog_400b8000, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_wdog_400b8000, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_wdog_400b8000, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_wdog_400b8000, status, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_wdog_400b8000, status, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_wdog_400b8000, status, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_wdog_400b8000, status, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_wdog_400b8000, status, 7)
#define DT_N_S_soc_S_wdog_400b8000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_wdog_400b8000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_wdog_400b8000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_wdog_400b8000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_wdog_400b8000, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_wdog_400b8000, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_wdog_400b8000, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_wdog_400b8000, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_wdog_400b8000, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_wdog_400b8000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_wdog_400b8000, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_wdog_400b8000, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_wdog_400b8000, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_wdog_400b8000, status, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_wdog_400b8000, status, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_wdog_400b8000, status, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_wdog_400b8000, status, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_wdog_400b8000, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_wdog_400b8000_P_status_EXISTS 1
#define DT_N_S_soc_S_wdog_400b8000_P_compatible {"nxp,imx-wdog"}
#define DT_N_S_soc_S_wdog_400b8000_P_compatible_IDX_0 "nxp,imx-wdog"
#define DT_N_S_soc_S_wdog_400b8000_P_compatible_IDX_0_STRING_UNQUOTED nxp,imx-wdog
#define DT_N_S_soc_S_wdog_400b8000_P_compatible_IDX_0_STRING_TOKEN nxp_imx_wdog
#define DT_N_S_soc_S_wdog_400b8000_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_IMX_WDOG
#define DT_N_S_soc_S_wdog_400b8000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_wdog_400b8000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_wdog_400b8000, compatible, 0)
#define DT_N_S_soc_S_wdog_400b8000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_wdog_400b8000, compatible, 0)
#define DT_N_S_soc_S_wdog_400b8000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_wdog_400b8000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_wdog_400b8000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_wdog_400b8000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_wdog_400b8000_P_compatible_LEN 1
#define DT_N_S_soc_S_wdog_400b8000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_wdog_400b8000_P_wakeup_source 0
#define DT_N_S_soc_S_wdog_400b8000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/wdog@400d0000
 *
 * Node identifier: DT_N_S_soc_S_wdog_400d0000
 *
 * Binding (compatible = nxp,imx-wdog):
 *   $ZEPHYR_BASE/dts/bindings/watchdog/nxp,imx-wdog.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_wdog_400d0000_PATH "/soc/wdog@400d0000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_wdog_400d0000_FULL_NAME "wdog@400d0000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_wdog_400d0000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_wdog_400d0000_CHILD_IDX 54

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_wdog_400d0000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_wdog_400d0000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_wdog_400d0000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_wdog_400d0000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_wdog_400d0000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_wdog_400d0000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_wdog_400d0000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_wdog_400d0000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_wdog_400d0000_ORD 142

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_wdog_400d0000_REQUIRES_ORDS \
	11, /* /soc */ \
	12, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_wdog_400d0000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_wdog_400d0000_EXISTS 1
#define DT_N_INST_1_nxp_imx_wdog DT_N_S_soc_S_wdog_400d0000
#define DT_N_NODELABEL_wdog1     DT_N_S_soc_S_wdog_400d0000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_wdog_400d0000_REG_NUM 1
#define DT_N_S_soc_S_wdog_400d0000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_wdog_400d0000_REG_IDX_0_VAL_ADDRESS 1074593792 /* 0x400d0000 */
#define DT_N_S_soc_S_wdog_400d0000_REG_IDX_0_VAL_SIZE 10 /* 0xa */
#define DT_N_S_soc_S_wdog_400d0000_RANGES_NUM 0
#define DT_N_S_soc_S_wdog_400d0000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_wdog_400d0000_IRQ_NUM 1
#define DT_N_S_soc_S_wdog_400d0000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_wdog_400d0000_IRQ_IDX_0_VAL_irq 45
#define DT_N_S_soc_S_wdog_400d0000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_wdog_400d0000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_wdog_400d0000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_wdog_400d0000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_wdog_400d0000_COMPAT_MATCHES_nxp_imx_wdog 1
#define DT_N_S_soc_S_wdog_400d0000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_wdog_400d0000_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_soc_S_wdog_400d0000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_wdog_400d0000_COMPAT_MODEL_IDX_0 "imx-wdog"
#define DT_N_S_soc_S_wdog_400d0000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_wdog_400d0000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_wdog_400d0000_P_reg {1074593792 /* 0x400d0000 */, 10 /* 0xa */}
#define DT_N_S_soc_S_wdog_400d0000_P_reg_IDX_0 1074593792
#define DT_N_S_soc_S_wdog_400d0000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_wdog_400d0000_P_reg_IDX_1 10
#define DT_N_S_soc_S_wdog_400d0000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_wdog_400d0000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_wdog_400d0000, reg, 0) \
	fn(DT_N_S_soc_S_wdog_400d0000, reg, 1)
#define DT_N_S_soc_S_wdog_400d0000_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_wdog_400d0000, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_wdog_400d0000, reg, 1)
#define DT_N_S_soc_S_wdog_400d0000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_wdog_400d0000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_wdog_400d0000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_wdog_400d0000_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_wdog_400d0000, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_wdog_400d0000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_wdog_400d0000_P_reg_EXISTS 1
#define DT_N_S_soc_S_wdog_400d0000_P_interrupts {45 /* 0x2d */, 0 /* 0x0 */}
#define DT_N_S_soc_S_wdog_400d0000_P_interrupts_IDX_0 45
#define DT_N_S_soc_S_wdog_400d0000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_wdog_400d0000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_wdog_400d0000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_wdog_400d0000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_wdog_400d0000, interrupts, 0) \
	fn(DT_N_S_soc_S_wdog_400d0000, interrupts, 1)
#define DT_N_S_soc_S_wdog_400d0000_P_interrupts_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_wdog_400d0000, interrupts, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_wdog_400d0000, interrupts, 1)
#define DT_N_S_soc_S_wdog_400d0000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_wdog_400d0000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_wdog_400d0000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_wdog_400d0000_P_interrupts_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_wdog_400d0000, interrupts, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_wdog_400d0000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_wdog_400d0000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_wdog_400d0000_P_status "disabled"
#define DT_N_S_soc_S_wdog_400d0000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_wdog_400d0000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_wdog_400d0000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_wdog_400d0000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_wdog_400d0000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_wdog_400d0000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_wdog_400d0000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_wdog_400d0000, status, 0) \
	fn(DT_N_S_soc_S_wdog_400d0000, status, 1) \
	fn(DT_N_S_soc_S_wdog_400d0000, status, 2) \
	fn(DT_N_S_soc_S_wdog_400d0000, status, 3) \
	fn(DT_N_S_soc_S_wdog_400d0000, status, 4) \
	fn(DT_N_S_soc_S_wdog_400d0000, status, 5) \
	fn(DT_N_S_soc_S_wdog_400d0000, status, 6) \
	fn(DT_N_S_soc_S_wdog_400d0000, status, 7)
#define DT_N_S_soc_S_wdog_400d0000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_wdog_400d0000, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_wdog_400d0000, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_wdog_400d0000, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_wdog_400d0000, status, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_wdog_400d0000, status, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_wdog_400d0000, status, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_wdog_400d0000, status, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_wdog_400d0000, status, 7)
#define DT_N_S_soc_S_wdog_400d0000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_wdog_400d0000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_wdog_400d0000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_wdog_400d0000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_wdog_400d0000, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_wdog_400d0000, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_wdog_400d0000, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_wdog_400d0000, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_wdog_400d0000, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_wdog_400d0000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_wdog_400d0000, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_wdog_400d0000, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_wdog_400d0000, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_wdog_400d0000, status, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_wdog_400d0000, status, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_wdog_400d0000, status, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_wdog_400d0000, status, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_wdog_400d0000, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_wdog_400d0000_P_status_EXISTS 1
#define DT_N_S_soc_S_wdog_400d0000_P_compatible {"nxp,imx-wdog"}
#define DT_N_S_soc_S_wdog_400d0000_P_compatible_IDX_0 "nxp,imx-wdog"
#define DT_N_S_soc_S_wdog_400d0000_P_compatible_IDX_0_STRING_UNQUOTED nxp,imx-wdog
#define DT_N_S_soc_S_wdog_400d0000_P_compatible_IDX_0_STRING_TOKEN nxp_imx_wdog
#define DT_N_S_soc_S_wdog_400d0000_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_IMX_WDOG
#define DT_N_S_soc_S_wdog_400d0000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_wdog_400d0000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_wdog_400d0000, compatible, 0)
#define DT_N_S_soc_S_wdog_400d0000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_wdog_400d0000, compatible, 0)
#define DT_N_S_soc_S_wdog_400d0000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_wdog_400d0000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_wdog_400d0000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_wdog_400d0000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_wdog_400d0000_P_compatible_LEN 1
#define DT_N_S_soc_S_wdog_400d0000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_wdog_400d0000_P_wakeup_source 0
#define DT_N_S_soc_S_wdog_400d0000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/xbar1@403bc000
 *
 * Node identifier: DT_N_S_soc_S_xbar1_403bc000
 *
 * Binding (compatible = nxp,mcux-xbar):
 *   $ZEPHYR_BASE/dts/bindings/arm/nxp,mcux-xbar.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_xbar1_403bc000_PATH "/soc/xbar1@403bc000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_xbar1_403bc000_FULL_NAME "xbar1@403bc000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_xbar1_403bc000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_xbar1_403bc000_CHILD_IDX 64

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_xbar1_403bc000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_xbar1_403bc000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_xbar1_403bc000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_xbar1_403bc000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_xbar1_403bc000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_xbar1_403bc000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_xbar1_403bc000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_xbar1_403bc000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_xbar1_403bc000_ORD 143

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_xbar1_403bc000_REQUIRES_ORDS \
	11, /* /soc */ \
	12, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_xbar1_403bc000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_xbar1_403bc000_EXISTS 1
#define DT_N_INST_0_nxp_mcux_xbar DT_N_S_soc_S_xbar1_403bc000
#define DT_N_NODELABEL_xbar1      DT_N_S_soc_S_xbar1_403bc000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_xbar1_403bc000_REG_NUM 1
#define DT_N_S_soc_S_xbar1_403bc000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_xbar1_403bc000_REG_IDX_0_VAL_ADDRESS 1077657600 /* 0x403bc000 */
#define DT_N_S_soc_S_xbar1_403bc000_REG_IDX_0_VAL_SIZE 16384 /* 0x4000 */
#define DT_N_S_soc_S_xbar1_403bc000_RANGES_NUM 0
#define DT_N_S_soc_S_xbar1_403bc000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_xbar1_403bc000_IRQ_NUM 2
#define DT_N_S_soc_S_xbar1_403bc000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_xbar1_403bc000_IRQ_IDX_0_VAL_irq 116
#define DT_N_S_soc_S_xbar1_403bc000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_xbar1_403bc000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_xbar1_403bc000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_xbar1_403bc000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_xbar1_403bc000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_xbar1_403bc000_IRQ_IDX_1_VAL_irq 117
#define DT_N_S_soc_S_xbar1_403bc000_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_xbar1_403bc000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_xbar1_403bc000_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_xbar1_403bc000_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_xbar1_403bc000_COMPAT_MATCHES_nxp_mcux_xbar 1
#define DT_N_S_soc_S_xbar1_403bc000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_xbar1_403bc000_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_soc_S_xbar1_403bc000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_xbar1_403bc000_COMPAT_MODEL_IDX_0 "mcux-xbar"
#define DT_N_S_soc_S_xbar1_403bc000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_xbar1_403bc000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_xbar1_403bc000_P_reg {1077657600 /* 0x403bc000 */, 16384 /* 0x4000 */}
#define DT_N_S_soc_S_xbar1_403bc000_P_reg_IDX_0 1077657600
#define DT_N_S_soc_S_xbar1_403bc000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_xbar1_403bc000_P_reg_IDX_1 16384
#define DT_N_S_soc_S_xbar1_403bc000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_xbar1_403bc000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_xbar1_403bc000, reg, 0) \
	fn(DT_N_S_soc_S_xbar1_403bc000, reg, 1)
#define DT_N_S_soc_S_xbar1_403bc000_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_xbar1_403bc000, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_xbar1_403bc000, reg, 1)
#define DT_N_S_soc_S_xbar1_403bc000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_xbar1_403bc000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_xbar1_403bc000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_xbar1_403bc000_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_xbar1_403bc000, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_xbar1_403bc000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_xbar1_403bc000_P_reg_EXISTS 1
#define DT_N_S_soc_S_xbar1_403bc000_P_status "disabled"
#define DT_N_S_soc_S_xbar1_403bc000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_xbar1_403bc000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_xbar1_403bc000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_xbar1_403bc000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_xbar1_403bc000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_xbar1_403bc000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_xbar1_403bc000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_xbar1_403bc000, status, 0) \
	fn(DT_N_S_soc_S_xbar1_403bc000, status, 1) \
	fn(DT_N_S_soc_S_xbar1_403bc000, status, 2) \
	fn(DT_N_S_soc_S_xbar1_403bc000, status, 3) \
	fn(DT_N_S_soc_S_xbar1_403bc000, status, 4) \
	fn(DT_N_S_soc_S_xbar1_403bc000, status, 5) \
	fn(DT_N_S_soc_S_xbar1_403bc000, status, 6) \
	fn(DT_N_S_soc_S_xbar1_403bc000, status, 7)
#define DT_N_S_soc_S_xbar1_403bc000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_xbar1_403bc000, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_xbar1_403bc000, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_xbar1_403bc000, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_xbar1_403bc000, status, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_xbar1_403bc000, status, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_xbar1_403bc000, status, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_xbar1_403bc000, status, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_xbar1_403bc000, status, 7)
#define DT_N_S_soc_S_xbar1_403bc000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_xbar1_403bc000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_xbar1_403bc000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_xbar1_403bc000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_xbar1_403bc000, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_xbar1_403bc000, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_xbar1_403bc000, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_xbar1_403bc000, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_xbar1_403bc000, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_xbar1_403bc000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_xbar1_403bc000, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_xbar1_403bc000, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_xbar1_403bc000, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_xbar1_403bc000, status, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_xbar1_403bc000, status, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_xbar1_403bc000, status, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_xbar1_403bc000, status, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_xbar1_403bc000, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_xbar1_403bc000_P_status_EXISTS 1
#define DT_N_S_soc_S_xbar1_403bc000_P_compatible {"nxp,mcux-xbar"}
#define DT_N_S_soc_S_xbar1_403bc000_P_compatible_IDX_0 "nxp,mcux-xbar"
#define DT_N_S_soc_S_xbar1_403bc000_P_compatible_IDX_0_STRING_UNQUOTED nxp,mcux-xbar
#define DT_N_S_soc_S_xbar1_403bc000_P_compatible_IDX_0_STRING_TOKEN nxp_mcux_xbar
#define DT_N_S_soc_S_xbar1_403bc000_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_MCUX_XBAR
#define DT_N_S_soc_S_xbar1_403bc000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_xbar1_403bc000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_xbar1_403bc000, compatible, 0)
#define DT_N_S_soc_S_xbar1_403bc000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_xbar1_403bc000, compatible, 0)
#define DT_N_S_soc_S_xbar1_403bc000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_xbar1_403bc000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_xbar1_403bc000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_xbar1_403bc000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_xbar1_403bc000_P_compatible_LEN 1
#define DT_N_S_soc_S_xbar1_403bc000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_xbar1_403bc000_P_interrupts {116 /* 0x74 */, 0 /* 0x0 */, 117 /* 0x75 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_xbar1_403bc000_P_interrupts_IDX_0 116
#define DT_N_S_soc_S_xbar1_403bc000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_xbar1_403bc000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_xbar1_403bc000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_xbar1_403bc000_P_interrupts_IDX_2 117
#define DT_N_S_soc_S_xbar1_403bc000_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_xbar1_403bc000_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_xbar1_403bc000_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_xbar1_403bc000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_xbar1_403bc000, interrupts, 0) \
	fn(DT_N_S_soc_S_xbar1_403bc000, interrupts, 1) \
	fn(DT_N_S_soc_S_xbar1_403bc000, interrupts, 2) \
	fn(DT_N_S_soc_S_xbar1_403bc000, interrupts, 3)
#define DT_N_S_soc_S_xbar1_403bc000_P_interrupts_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_xbar1_403bc000, interrupts, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_xbar1_403bc000, interrupts, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_xbar1_403bc000, interrupts, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_xbar1_403bc000, interrupts, 3)
#define DT_N_S_soc_S_xbar1_403bc000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_xbar1_403bc000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_xbar1_403bc000, interrupts, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_xbar1_403bc000, interrupts, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_xbar1_403bc000, interrupts, 3, __VA_ARGS__)
#define DT_N_S_soc_S_xbar1_403bc000_P_interrupts_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_xbar1_403bc000, interrupts, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_xbar1_403bc000, interrupts, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_xbar1_403bc000, interrupts, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_xbar1_403bc000, interrupts, 3, __VA_ARGS__)
#define DT_N_S_soc_S_xbar1_403bc000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_xbar1_403bc000_P_wakeup_source 0
#define DT_N_S_soc_S_xbar1_403bc000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/xbar2@403c0000
 *
 * Node identifier: DT_N_S_soc_S_xbar2_403c0000
 *
 * Binding (compatible = nxp,mcux-xbar):
 *   $ZEPHYR_BASE/dts/bindings/arm/nxp,mcux-xbar.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_xbar2_403c0000_PATH "/soc/xbar2@403c0000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_xbar2_403c0000_FULL_NAME "xbar2@403c0000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_xbar2_403c0000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_xbar2_403c0000_CHILD_IDX 65

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_xbar2_403c0000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_xbar2_403c0000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_xbar2_403c0000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_xbar2_403c0000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_xbar2_403c0000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_xbar2_403c0000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_xbar2_403c0000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_xbar2_403c0000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_xbar2_403c0000_ORD 144

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_xbar2_403c0000_REQUIRES_ORDS \
	11, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_xbar2_403c0000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_xbar2_403c0000_EXISTS 1
#define DT_N_INST_1_nxp_mcux_xbar DT_N_S_soc_S_xbar2_403c0000
#define DT_N_NODELABEL_xbar2      DT_N_S_soc_S_xbar2_403c0000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_xbar2_403c0000_REG_NUM 1
#define DT_N_S_soc_S_xbar2_403c0000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_xbar2_403c0000_REG_IDX_0_VAL_ADDRESS 1077673984 /* 0x403c0000 */
#define DT_N_S_soc_S_xbar2_403c0000_REG_IDX_0_VAL_SIZE 16384 /* 0x4000 */
#define DT_N_S_soc_S_xbar2_403c0000_RANGES_NUM 0
#define DT_N_S_soc_S_xbar2_403c0000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_xbar2_403c0000_IRQ_NUM 0
#define DT_N_S_soc_S_xbar2_403c0000_COMPAT_MATCHES_nxp_mcux_xbar 1
#define DT_N_S_soc_S_xbar2_403c0000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_xbar2_403c0000_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_soc_S_xbar2_403c0000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_xbar2_403c0000_COMPAT_MODEL_IDX_0 "mcux-xbar"
#define DT_N_S_soc_S_xbar2_403c0000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_xbar2_403c0000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_xbar2_403c0000_P_reg {1077673984 /* 0x403c0000 */, 16384 /* 0x4000 */}
#define DT_N_S_soc_S_xbar2_403c0000_P_reg_IDX_0 1077673984
#define DT_N_S_soc_S_xbar2_403c0000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_xbar2_403c0000_P_reg_IDX_1 16384
#define DT_N_S_soc_S_xbar2_403c0000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_xbar2_403c0000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_xbar2_403c0000, reg, 0) \
	fn(DT_N_S_soc_S_xbar2_403c0000, reg, 1)
#define DT_N_S_soc_S_xbar2_403c0000_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_xbar2_403c0000, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_xbar2_403c0000, reg, 1)
#define DT_N_S_soc_S_xbar2_403c0000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_xbar2_403c0000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_xbar2_403c0000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_xbar2_403c0000_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_xbar2_403c0000, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_xbar2_403c0000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_xbar2_403c0000_P_reg_EXISTS 1
#define DT_N_S_soc_S_xbar2_403c0000_P_status "disabled"
#define DT_N_S_soc_S_xbar2_403c0000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_xbar2_403c0000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_xbar2_403c0000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_xbar2_403c0000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_xbar2_403c0000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_xbar2_403c0000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_xbar2_403c0000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_xbar2_403c0000, status, 0) \
	fn(DT_N_S_soc_S_xbar2_403c0000, status, 1) \
	fn(DT_N_S_soc_S_xbar2_403c0000, status, 2) \
	fn(DT_N_S_soc_S_xbar2_403c0000, status, 3) \
	fn(DT_N_S_soc_S_xbar2_403c0000, status, 4) \
	fn(DT_N_S_soc_S_xbar2_403c0000, status, 5) \
	fn(DT_N_S_soc_S_xbar2_403c0000, status, 6) \
	fn(DT_N_S_soc_S_xbar2_403c0000, status, 7)
#define DT_N_S_soc_S_xbar2_403c0000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_xbar2_403c0000, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_xbar2_403c0000, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_xbar2_403c0000, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_xbar2_403c0000, status, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_xbar2_403c0000, status, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_xbar2_403c0000, status, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_xbar2_403c0000, status, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_xbar2_403c0000, status, 7)
#define DT_N_S_soc_S_xbar2_403c0000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_xbar2_403c0000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_xbar2_403c0000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_xbar2_403c0000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_xbar2_403c0000, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_xbar2_403c0000, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_xbar2_403c0000, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_xbar2_403c0000, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_xbar2_403c0000, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_xbar2_403c0000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_xbar2_403c0000, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_xbar2_403c0000, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_xbar2_403c0000, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_xbar2_403c0000, status, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_xbar2_403c0000, status, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_xbar2_403c0000, status, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_xbar2_403c0000, status, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_xbar2_403c0000, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_xbar2_403c0000_P_status_EXISTS 1
#define DT_N_S_soc_S_xbar2_403c0000_P_compatible {"nxp,mcux-xbar"}
#define DT_N_S_soc_S_xbar2_403c0000_P_compatible_IDX_0 "nxp,mcux-xbar"
#define DT_N_S_soc_S_xbar2_403c0000_P_compatible_IDX_0_STRING_UNQUOTED nxp,mcux-xbar
#define DT_N_S_soc_S_xbar2_403c0000_P_compatible_IDX_0_STRING_TOKEN nxp_mcux_xbar
#define DT_N_S_soc_S_xbar2_403c0000_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_MCUX_XBAR
#define DT_N_S_soc_S_xbar2_403c0000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_xbar2_403c0000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_xbar2_403c0000, compatible, 0)
#define DT_N_S_soc_S_xbar2_403c0000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_xbar2_403c0000, compatible, 0)
#define DT_N_S_soc_S_xbar2_403c0000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_xbar2_403c0000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_xbar2_403c0000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_xbar2_403c0000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_xbar2_403c0000_P_compatible_LEN 1
#define DT_N_S_soc_S_xbar2_403c0000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_xbar2_403c0000_P_wakeup_source 0
#define DT_N_S_soc_S_xbar2_403c0000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/xbar3@403c4000
 *
 * Node identifier: DT_N_S_soc_S_xbar3_403c4000
 *
 * Binding (compatible = nxp,mcux-xbar):
 *   $ZEPHYR_BASE/dts/bindings/arm/nxp,mcux-xbar.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_xbar3_403c4000_PATH "/soc/xbar3@403c4000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_xbar3_403c4000_FULL_NAME "xbar3@403c4000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_xbar3_403c4000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_xbar3_403c4000_CHILD_IDX 66

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_xbar3_403c4000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_xbar3_403c4000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_xbar3_403c4000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_xbar3_403c4000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_xbar3_403c4000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_xbar3_403c4000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_xbar3_403c4000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_xbar3_403c4000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_xbar3_403c4000_ORD 145

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_xbar3_403c4000_REQUIRES_ORDS \
	11, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_xbar3_403c4000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_xbar3_403c4000_EXISTS 1
#define DT_N_INST_2_nxp_mcux_xbar DT_N_S_soc_S_xbar3_403c4000
#define DT_N_NODELABEL_xbar3      DT_N_S_soc_S_xbar3_403c4000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_xbar3_403c4000_REG_NUM 1
#define DT_N_S_soc_S_xbar3_403c4000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_xbar3_403c4000_REG_IDX_0_VAL_ADDRESS 1077690368 /* 0x403c4000 */
#define DT_N_S_soc_S_xbar3_403c4000_REG_IDX_0_VAL_SIZE 16384 /* 0x4000 */
#define DT_N_S_soc_S_xbar3_403c4000_RANGES_NUM 0
#define DT_N_S_soc_S_xbar3_403c4000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_xbar3_403c4000_IRQ_NUM 0
#define DT_N_S_soc_S_xbar3_403c4000_COMPAT_MATCHES_nxp_mcux_xbar 1
#define DT_N_S_soc_S_xbar3_403c4000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_xbar3_403c4000_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_soc_S_xbar3_403c4000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_xbar3_403c4000_COMPAT_MODEL_IDX_0 "mcux-xbar"
#define DT_N_S_soc_S_xbar3_403c4000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_xbar3_403c4000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_xbar3_403c4000_P_reg {1077690368 /* 0x403c4000 */, 16384 /* 0x4000 */}
#define DT_N_S_soc_S_xbar3_403c4000_P_reg_IDX_0 1077690368
#define DT_N_S_soc_S_xbar3_403c4000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_xbar3_403c4000_P_reg_IDX_1 16384
#define DT_N_S_soc_S_xbar3_403c4000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_xbar3_403c4000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_xbar3_403c4000, reg, 0) \
	fn(DT_N_S_soc_S_xbar3_403c4000, reg, 1)
#define DT_N_S_soc_S_xbar3_403c4000_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_xbar3_403c4000, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_xbar3_403c4000, reg, 1)
#define DT_N_S_soc_S_xbar3_403c4000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_xbar3_403c4000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_xbar3_403c4000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_xbar3_403c4000_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_xbar3_403c4000, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_xbar3_403c4000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_xbar3_403c4000_P_reg_EXISTS 1
#define DT_N_S_soc_S_xbar3_403c4000_P_status "disabled"
#define DT_N_S_soc_S_xbar3_403c4000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_xbar3_403c4000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_xbar3_403c4000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_xbar3_403c4000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_xbar3_403c4000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_xbar3_403c4000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_xbar3_403c4000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_xbar3_403c4000, status, 0) \
	fn(DT_N_S_soc_S_xbar3_403c4000, status, 1) \
	fn(DT_N_S_soc_S_xbar3_403c4000, status, 2) \
	fn(DT_N_S_soc_S_xbar3_403c4000, status, 3) \
	fn(DT_N_S_soc_S_xbar3_403c4000, status, 4) \
	fn(DT_N_S_soc_S_xbar3_403c4000, status, 5) \
	fn(DT_N_S_soc_S_xbar3_403c4000, status, 6) \
	fn(DT_N_S_soc_S_xbar3_403c4000, status, 7)
#define DT_N_S_soc_S_xbar3_403c4000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_xbar3_403c4000, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_xbar3_403c4000, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_xbar3_403c4000, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_xbar3_403c4000, status, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_xbar3_403c4000, status, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_xbar3_403c4000, status, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_xbar3_403c4000, status, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_xbar3_403c4000, status, 7)
#define DT_N_S_soc_S_xbar3_403c4000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_xbar3_403c4000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_xbar3_403c4000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_xbar3_403c4000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_xbar3_403c4000, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_xbar3_403c4000, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_xbar3_403c4000, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_xbar3_403c4000, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_xbar3_403c4000, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_xbar3_403c4000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_xbar3_403c4000, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_xbar3_403c4000, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_xbar3_403c4000, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_xbar3_403c4000, status, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_xbar3_403c4000, status, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_xbar3_403c4000, status, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_xbar3_403c4000, status, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_xbar3_403c4000, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_xbar3_403c4000_P_status_EXISTS 1
#define DT_N_S_soc_S_xbar3_403c4000_P_compatible {"nxp,mcux-xbar"}
#define DT_N_S_soc_S_xbar3_403c4000_P_compatible_IDX_0 "nxp,mcux-xbar"
#define DT_N_S_soc_S_xbar3_403c4000_P_compatible_IDX_0_STRING_UNQUOTED nxp,mcux-xbar
#define DT_N_S_soc_S_xbar3_403c4000_P_compatible_IDX_0_STRING_TOKEN nxp_mcux_xbar
#define DT_N_S_soc_S_xbar3_403c4000_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_MCUX_XBAR
#define DT_N_S_soc_S_xbar3_403c4000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_xbar3_403c4000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_xbar3_403c4000, compatible, 0)
#define DT_N_S_soc_S_xbar3_403c4000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_xbar3_403c4000, compatible, 0)
#define DT_N_S_soc_S_xbar3_403c4000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_xbar3_403c4000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_xbar3_403c4000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_xbar3_403c4000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_xbar3_403c4000_P_compatible_LEN 1
#define DT_N_S_soc_S_xbar3_403c4000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_xbar3_403c4000_P_wakeup_source 0
#define DT_N_S_soc_S_xbar3_403c4000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/ccm@400fc000/ahb-podf
 *
 * Node identifier: DT_N_S_soc_S_ccm_400fc000_S_ahb_podf
 *
 * Binding (compatible = fixed-factor-clock):
 *   $ZEPHYR_BASE/dts/bindings/clock/fixed-factor-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_ccm_400fc000_S_ahb_podf_PATH "/soc/ccm@400fc000/ahb-podf"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_ccm_400fc000_S_ahb_podf_FULL_NAME "ahb-podf"

/* Node parent (/soc/ccm@400fc000) identifier: */
#define DT_N_S_soc_S_ccm_400fc000_S_ahb_podf_PARENT DT_N_S_soc_S_ccm_400fc000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_ccm_400fc000_S_ahb_podf_CHILD_IDX 1

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_ccm_400fc000_S_ahb_podf_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_ccm_400fc000_S_ahb_podf_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_ccm_400fc000_S_ahb_podf_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_ccm_400fc000_S_ahb_podf_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_ccm_400fc000_S_ahb_podf_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_ccm_400fc000_S_ahb_podf_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_ccm_400fc000_S_ahb_podf_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_ccm_400fc000_S_ahb_podf_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_ccm_400fc000_S_ahb_podf_ORD 146

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_ccm_400fc000_S_ahb_podf_REQUIRES_ORDS \
	60, /* /soc/ccm@400fc000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_ccm_400fc000_S_ahb_podf_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_ccm_400fc000_S_ahb_podf_EXISTS 1
#define DT_N_INST_1_fixed_factor_clock DT_N_S_soc_S_ccm_400fc000_S_ahb_podf

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_ccm_400fc000_S_ahb_podf_REG_NUM 0
#define DT_N_S_soc_S_ccm_400fc000_S_ahb_podf_RANGES_NUM 0
#define DT_N_S_soc_S_ccm_400fc000_S_ahb_podf_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_ccm_400fc000_S_ahb_podf_IRQ_NUM 0
#define DT_N_S_soc_S_ccm_400fc000_S_ahb_podf_COMPAT_MATCHES_fixed_factor_clock 1
#define DT_N_S_soc_S_ccm_400fc000_S_ahb_podf_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_ccm_400fc000_S_ahb_podf_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_ccm_400fc000_S_ahb_podf_P_clock_div 1
#define DT_N_S_soc_S_ccm_400fc000_S_ahb_podf_P_clock_div_EXISTS 1

/*
 * Devicetree node: /soc/ccm@400fc000/arm-podf
 *
 * Node identifier: DT_N_S_soc_S_ccm_400fc000_S_arm_podf
 *
 * Binding (compatible = fixed-factor-clock):
 *   $ZEPHYR_BASE/dts/bindings/clock/fixed-factor-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_ccm_400fc000_S_arm_podf_PATH "/soc/ccm@400fc000/arm-podf"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_ccm_400fc000_S_arm_podf_FULL_NAME "arm-podf"

/* Node parent (/soc/ccm@400fc000) identifier: */
#define DT_N_S_soc_S_ccm_400fc000_S_arm_podf_PARENT DT_N_S_soc_S_ccm_400fc000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_ccm_400fc000_S_arm_podf_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_ccm_400fc000_S_arm_podf_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_ccm_400fc000_S_arm_podf_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_ccm_400fc000_S_arm_podf_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_ccm_400fc000_S_arm_podf_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_ccm_400fc000_S_arm_podf_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_ccm_400fc000_S_arm_podf_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_ccm_400fc000_S_arm_podf_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_ccm_400fc000_S_arm_podf_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_ccm_400fc000_S_arm_podf_ORD 147

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_ccm_400fc000_S_arm_podf_REQUIRES_ORDS \
	60, /* /soc/ccm@400fc000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_ccm_400fc000_S_arm_podf_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_ccm_400fc000_S_arm_podf_EXISTS 1
#define DT_N_INST_0_fixed_factor_clock DT_N_S_soc_S_ccm_400fc000_S_arm_podf

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_ccm_400fc000_S_arm_podf_REG_NUM 0
#define DT_N_S_soc_S_ccm_400fc000_S_arm_podf_RANGES_NUM 0
#define DT_N_S_soc_S_ccm_400fc000_S_arm_podf_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_ccm_400fc000_S_arm_podf_IRQ_NUM 0
#define DT_N_S_soc_S_ccm_400fc000_S_arm_podf_COMPAT_MATCHES_fixed_factor_clock 1
#define DT_N_S_soc_S_ccm_400fc000_S_arm_podf_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_ccm_400fc000_S_arm_podf_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_ccm_400fc000_S_arm_podf_P_clock_div 1
#define DT_N_S_soc_S_ccm_400fc000_S_arm_podf_P_clock_div_EXISTS 1

/*
 * Devicetree node: /soc/ccm@400fc000/ipg-podf
 *
 * Node identifier: DT_N_S_soc_S_ccm_400fc000_S_ipg_podf
 *
 * Binding (compatible = fixed-factor-clock):
 *   $ZEPHYR_BASE/dts/bindings/clock/fixed-factor-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_ccm_400fc000_S_ipg_podf_PATH "/soc/ccm@400fc000/ipg-podf"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_ccm_400fc000_S_ipg_podf_FULL_NAME "ipg-podf"

/* Node parent (/soc/ccm@400fc000) identifier: */
#define DT_N_S_soc_S_ccm_400fc000_S_ipg_podf_PARENT DT_N_S_soc_S_ccm_400fc000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_ccm_400fc000_S_ipg_podf_CHILD_IDX 2

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_ccm_400fc000_S_ipg_podf_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_ccm_400fc000_S_ipg_podf_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_ccm_400fc000_S_ipg_podf_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_ccm_400fc000_S_ipg_podf_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_ccm_400fc000_S_ipg_podf_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_ccm_400fc000_S_ipg_podf_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_ccm_400fc000_S_ipg_podf_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_ccm_400fc000_S_ipg_podf_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_ccm_400fc000_S_ipg_podf_ORD 148

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_ccm_400fc000_S_ipg_podf_REQUIRES_ORDS \
	60, /* /soc/ccm@400fc000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_ccm_400fc000_S_ipg_podf_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_ccm_400fc000_S_ipg_podf_EXISTS 1
#define DT_N_INST_2_fixed_factor_clock DT_N_S_soc_S_ccm_400fc000_S_ipg_podf

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_ccm_400fc000_S_ipg_podf_REG_NUM 0
#define DT_N_S_soc_S_ccm_400fc000_S_ipg_podf_RANGES_NUM 0
#define DT_N_S_soc_S_ccm_400fc000_S_ipg_podf_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_ccm_400fc000_S_ipg_podf_IRQ_NUM 0
#define DT_N_S_soc_S_ccm_400fc000_S_ipg_podf_COMPAT_MATCHES_fixed_factor_clock 1
#define DT_N_S_soc_S_ccm_400fc000_S_ipg_podf_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_ccm_400fc000_S_ipg_podf_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_ccm_400fc000_S_ipg_podf_P_clock_div 4
#define DT_N_S_soc_S_ccm_400fc000_S_ipg_podf_P_clock_div_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/pinctrl/pinmux_enet
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_PATH "/soc/iomuxc@401f8000/pinctrl/pinmux_enet"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_FULL_NAME "pinmux_enet"

/* Node parent (/soc/iomuxc@401f8000/pinctrl) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_PARENT DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_CHILD_IDX 1

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_ORD 149

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_REQUIRES_ORDS \
	54, /* /soc/iomuxc@401f8000/pinctrl */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_SUPPORTS_ORDS \
	150, /* /soc/ethernet@402d8000 */ \
	181, /* /soc/iomuxc@401f8000/pinctrl/pinmux_enet/group0 */ \
	182, /* /soc/iomuxc@401f8000/pinctrl/pinmux_enet/group1 */ \
	191, /* /soc/iomuxc@401f8000/pinctrl/pinmux_enet/group2 */ \
	192, /* /soc/iomuxc@401f8000/pinctrl/pinmux_enet/group3 */ \
	194, /* /soc/iomuxc@401f8000/pinctrl/pinmux_enet/group4 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_EXISTS 1
#define DT_N_NODELABEL_pinmux_enet DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /soc/ethernet@402d8000
 *
 * Node identifier: DT_N_S_soc_S_ethernet_402d8000
 *
 * Binding (compatible = nxp,kinetis-ethernet):
 *   $ZEPHYR_BASE/dts/bindings/ethernet/nxp,kinetis-ethernet.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_ethernet_402d8000_PATH "/soc/ethernet@402d8000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_ethernet_402d8000_FULL_NAME "ethernet@402d8000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_ethernet_402d8000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_ethernet_402d8000_CHILD_IDX 41

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_ethernet_402d8000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_ethernet_402d8000_S_ptp)
#define DT_N_S_soc_S_ethernet_402d8000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_ethernet_402d8000_S_ptp)
#define DT_N_S_soc_S_ethernet_402d8000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_ethernet_402d8000_S_ptp, __VA_ARGS__)
#define DT_N_S_soc_S_ethernet_402d8000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_ethernet_402d8000_S_ptp, __VA_ARGS__)
#define DT_N_S_soc_S_ethernet_402d8000_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_ethernet_402d8000_S_ptp)
#define DT_N_S_soc_S_ethernet_402d8000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_ethernet_402d8000_S_ptp)
#define DT_N_S_soc_S_ethernet_402d8000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_ethernet_402d8000_S_ptp, __VA_ARGS__)
#define DT_N_S_soc_S_ethernet_402d8000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_ethernet_402d8000_S_ptp, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_ethernet_402d8000_ORD 150

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_ethernet_402d8000_REQUIRES_ORDS \
	11, /* /soc */ \
	12, /* /soc/interrupt-controller@e000e100 */ \
	52, /* /soc/gpio@401b8000 */ \
	149, /* /soc/iomuxc@401f8000/pinctrl/pinmux_enet */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_ethernet_402d8000_SUPPORTS_ORDS \
	152, /* /soc/ethernet@402d8000/ptp */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_ethernet_402d8000_EXISTS 1
#define DT_N_INST_0_nxp_kinetis_ethernet DT_N_S_soc_S_ethernet_402d8000
#define DT_N_NODELABEL_enet              DT_N_S_soc_S_ethernet_402d8000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_ethernet_402d8000_REG_NUM 1
#define DT_N_S_soc_S_ethernet_402d8000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ethernet_402d8000_REG_IDX_0_VAL_ADDRESS 1076723712 /* 0x402d8000 */
#define DT_N_S_soc_S_ethernet_402d8000_REG_IDX_0_VAL_SIZE 1576 /* 0x628 */
#define DT_N_S_soc_S_ethernet_402d8000_RANGES_NUM 0
#define DT_N_S_soc_S_ethernet_402d8000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_ethernet_402d8000_IRQ_NUM 1
#define DT_N_S_soc_S_ethernet_402d8000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ethernet_402d8000_IRQ_IDX_0_VAL_irq 114
#define DT_N_S_soc_S_ethernet_402d8000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_ethernet_402d8000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ethernet_402d8000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_ethernet_402d8000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_ethernet_402d8000_IRQ_NAME_common_VAL_irq DT_N_S_soc_S_ethernet_402d8000_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_ethernet_402d8000_IRQ_NAME_common_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_ethernet_402d8000_IRQ_NAME_common_VAL_priority DT_N_S_soc_S_ethernet_402d8000_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_ethernet_402d8000_IRQ_NAME_common_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_ethernet_402d8000_COMPAT_MATCHES_nxp_kinetis_ethernet 1
#define DT_N_S_soc_S_ethernet_402d8000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ethernet_402d8000_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_soc_S_ethernet_402d8000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ethernet_402d8000_COMPAT_MODEL_IDX_0 "kinetis-ethernet"
#define DT_N_S_soc_S_ethernet_402d8000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_ethernet_402d8000_PINCTRL_NUM 1
#define DT_N_S_soc_S_ethernet_402d8000_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ethernet_402d8000_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_ethernet_402d8000_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_ethernet_402d8000_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_ethernet_402d8000_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_ethernet_402d8000_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet

/* Generic property macros: */
#define DT_N_S_soc_S_ethernet_402d8000_P_reg {1076723712 /* 0x402d8000 */, 1576 /* 0x628 */}
#define DT_N_S_soc_S_ethernet_402d8000_P_reg_IDX_0 1076723712
#define DT_N_S_soc_S_ethernet_402d8000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ethernet_402d8000_P_reg_IDX_1 1576
#define DT_N_S_soc_S_ethernet_402d8000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_ethernet_402d8000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ethernet_402d8000, reg, 0) \
	fn(DT_N_S_soc_S_ethernet_402d8000, reg, 1)
#define DT_N_S_soc_S_ethernet_402d8000_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_ethernet_402d8000, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_ethernet_402d8000, reg, 1)
#define DT_N_S_soc_S_ethernet_402d8000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_ethernet_402d8000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_ethernet_402d8000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_ethernet_402d8000_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_ethernet_402d8000, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_ethernet_402d8000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_ethernet_402d8000_P_reg_EXISTS 1
#define DT_N_S_soc_S_ethernet_402d8000_P_interrupts {114 /* 0x72 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_ethernet_402d8000_P_interrupts_IDX_0 114
#define DT_N_S_soc_S_ethernet_402d8000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ethernet_402d8000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_ethernet_402d8000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_ethernet_402d8000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ethernet_402d8000, interrupts, 0) \
	fn(DT_N_S_soc_S_ethernet_402d8000, interrupts, 1)
#define DT_N_S_soc_S_ethernet_402d8000_P_interrupts_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_ethernet_402d8000, interrupts, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_ethernet_402d8000, interrupts, 1)
#define DT_N_S_soc_S_ethernet_402d8000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_ethernet_402d8000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_ethernet_402d8000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_ethernet_402d8000_P_interrupts_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_ethernet_402d8000, interrupts, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_ethernet_402d8000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_ethernet_402d8000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_ethernet_402d8000_P_phy_addr 0
#define DT_N_S_soc_S_ethernet_402d8000_P_phy_addr_EXISTS 1
#define DT_N_S_soc_S_ethernet_402d8000_P_reset_gpios_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ethernet_402d8000_P_reset_gpios_IDX_0_PH DT_N_S_soc_S_gpio_401b8000
#define DT_N_S_soc_S_ethernet_402d8000_P_reset_gpios_IDX_0_VAL_pin 22
#define DT_N_S_soc_S_ethernet_402d8000_P_reset_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_soc_S_ethernet_402d8000_P_reset_gpios_IDX_0_VAL_flags 0
#define DT_N_S_soc_S_ethernet_402d8000_P_reset_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_ethernet_402d8000_P_reset_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ethernet_402d8000, reset_gpios, 0)
#define DT_N_S_soc_S_ethernet_402d8000_P_reset_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_ethernet_402d8000, reset_gpios, 0)
#define DT_N_S_soc_S_ethernet_402d8000_P_reset_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_ethernet_402d8000, reset_gpios, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ethernet_402d8000_P_reset_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_ethernet_402d8000, reset_gpios, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ethernet_402d8000_P_reset_gpios_LEN 1
#define DT_N_S_soc_S_ethernet_402d8000_P_reset_gpios_EXISTS 1
#define DT_N_S_soc_S_ethernet_402d8000_P_int_gpios_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ethernet_402d8000_P_int_gpios_IDX_0_PH DT_N_S_soc_S_gpio_401b8000
#define DT_N_S_soc_S_ethernet_402d8000_P_int_gpios_IDX_0_VAL_pin 4
#define DT_N_S_soc_S_ethernet_402d8000_P_int_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_soc_S_ethernet_402d8000_P_int_gpios_IDX_0_VAL_flags 0
#define DT_N_S_soc_S_ethernet_402d8000_P_int_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_ethernet_402d8000_P_int_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ethernet_402d8000, int_gpios, 0)
#define DT_N_S_soc_S_ethernet_402d8000_P_int_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_ethernet_402d8000, int_gpios, 0)
#define DT_N_S_soc_S_ethernet_402d8000_P_int_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_ethernet_402d8000, int_gpios, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ethernet_402d8000_P_int_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_ethernet_402d8000, int_gpios, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ethernet_402d8000_P_int_gpios_LEN 1
#define DT_N_S_soc_S_ethernet_402d8000_P_int_gpios_EXISTS 1
#define DT_N_S_soc_S_ethernet_402d8000_P_zephyr_random_mac_address 0
#define DT_N_S_soc_S_ethernet_402d8000_P_zephyr_random_mac_address_EXISTS 1
#define DT_N_S_soc_S_ethernet_402d8000_P_status "okay"
#define DT_N_S_soc_S_ethernet_402d8000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_ethernet_402d8000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_ethernet_402d8000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_ethernet_402d8000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_ethernet_402d8000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_ethernet_402d8000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_ethernet_402d8000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ethernet_402d8000, status, 0) \
	fn(DT_N_S_soc_S_ethernet_402d8000, status, 1) \
	fn(DT_N_S_soc_S_ethernet_402d8000, status, 2) \
	fn(DT_N_S_soc_S_ethernet_402d8000, status, 3)
#define DT_N_S_soc_S_ethernet_402d8000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_ethernet_402d8000, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_ethernet_402d8000, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_ethernet_402d8000, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_ethernet_402d8000, status, 3)
#define DT_N_S_soc_S_ethernet_402d8000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_ethernet_402d8000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_ethernet_402d8000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_ethernet_402d8000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_ethernet_402d8000, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_ethernet_402d8000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_ethernet_402d8000, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_ethernet_402d8000, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_ethernet_402d8000, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_ethernet_402d8000, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_ethernet_402d8000_P_status_EXISTS 1
#define DT_N_S_soc_S_ethernet_402d8000_P_compatible {"nxp,kinetis-ethernet"}
#define DT_N_S_soc_S_ethernet_402d8000_P_compatible_IDX_0 "nxp,kinetis-ethernet"
#define DT_N_S_soc_S_ethernet_402d8000_P_compatible_IDX_0_STRING_UNQUOTED nxp,kinetis-ethernet
#define DT_N_S_soc_S_ethernet_402d8000_P_compatible_IDX_0_STRING_TOKEN nxp_kinetis_ethernet
#define DT_N_S_soc_S_ethernet_402d8000_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_KINETIS_ETHERNET
#define DT_N_S_soc_S_ethernet_402d8000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ethernet_402d8000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ethernet_402d8000, compatible, 0)
#define DT_N_S_soc_S_ethernet_402d8000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_ethernet_402d8000, compatible, 0)
#define DT_N_S_soc_S_ethernet_402d8000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_ethernet_402d8000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ethernet_402d8000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_ethernet_402d8000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ethernet_402d8000_P_compatible_LEN 1
#define DT_N_S_soc_S_ethernet_402d8000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_ethernet_402d8000_P_interrupt_names {"COMMON"}
#define DT_N_S_soc_S_ethernet_402d8000_P_interrupt_names_IDX_0 "COMMON"
#define DT_N_S_soc_S_ethernet_402d8000_P_interrupt_names_IDX_0_STRING_UNQUOTED COMMON
#define DT_N_S_soc_S_ethernet_402d8000_P_interrupt_names_IDX_0_STRING_TOKEN COMMON
#define DT_N_S_soc_S_ethernet_402d8000_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN COMMON
#define DT_N_S_soc_S_ethernet_402d8000_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ethernet_402d8000_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ethernet_402d8000, interrupt_names, 0)
#define DT_N_S_soc_S_ethernet_402d8000_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_ethernet_402d8000, interrupt_names, 0)
#define DT_N_S_soc_S_ethernet_402d8000_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_ethernet_402d8000, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ethernet_402d8000_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_ethernet_402d8000, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ethernet_402d8000_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_ethernet_402d8000_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_ethernet_402d8000_P_wakeup_source 0
#define DT_N_S_soc_S_ethernet_402d8000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_ethernet_402d8000_P_pinctrl_0_IDX_0 DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet
#define DT_N_S_soc_S_ethernet_402d8000_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet
#define DT_N_S_soc_S_ethernet_402d8000_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ethernet_402d8000_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ethernet_402d8000, pinctrl_0, 0)
#define DT_N_S_soc_S_ethernet_402d8000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_ethernet_402d8000, pinctrl_0, 0)
#define DT_N_S_soc_S_ethernet_402d8000_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_ethernet_402d8000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ethernet_402d8000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_ethernet_402d8000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ethernet_402d8000_P_pinctrl_0_LEN 1
#define DT_N_S_soc_S_ethernet_402d8000_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_ethernet_402d8000_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_ethernet_402d8000_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_ethernet_402d8000_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_ethernet_402d8000_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_ethernet_402d8000_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_ethernet_402d8000_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ethernet_402d8000_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ethernet_402d8000, pinctrl_names, 0)
#define DT_N_S_soc_S_ethernet_402d8000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_ethernet_402d8000, pinctrl_names, 0)
#define DT_N_S_soc_S_ethernet_402d8000_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_ethernet_402d8000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ethernet_402d8000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_ethernet_402d8000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ethernet_402d8000_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_ethernet_402d8000_P_pinctrl_names_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/pinctrl/pinmux_ptp
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_ptp
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_ptp_PATH "/soc/iomuxc@401f8000/pinctrl/pinmux_ptp"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_ptp_FULL_NAME "pinmux_ptp"

/* Node parent (/soc/iomuxc@401f8000/pinctrl) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_ptp_PARENT DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_ptp_CHILD_IDX 10

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_ptp_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_ptp_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_ptp_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_ptp_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_ptp_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_ptp_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_ptp_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_ptp_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_ptp_ORD 151

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_ptp_REQUIRES_ORDS \
	54, /* /soc/iomuxc@401f8000/pinctrl */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_ptp_SUPPORTS_ORDS \
	152, /* /soc/ethernet@402d8000/ptp */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_ptp_EXISTS 1
#define DT_N_NODELABEL_pinmux_ptp DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_ptp

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_ptp_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_ptp_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_ptp_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_ptp_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_ptp_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_ptp_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /soc/ethernet@402d8000/ptp
 *
 * Node identifier: DT_N_S_soc_S_ethernet_402d8000_S_ptp
 *
 * Binding (compatible = nxp,kinetis-ptp):
 *   $ZEPHYR_BASE/dts/bindings/ethernet/nxp,kinetis-ptp.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_ethernet_402d8000_S_ptp_PATH "/soc/ethernet@402d8000/ptp"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_ethernet_402d8000_S_ptp_FULL_NAME "ptp"

/* Node parent (/soc/ethernet@402d8000) identifier: */
#define DT_N_S_soc_S_ethernet_402d8000_S_ptp_PARENT DT_N_S_soc_S_ethernet_402d8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_ethernet_402d8000_S_ptp_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_ethernet_402d8000_S_ptp_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_ethernet_402d8000_S_ptp_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_ethernet_402d8000_S_ptp_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_ethernet_402d8000_S_ptp_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_ethernet_402d8000_S_ptp_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_ethernet_402d8000_S_ptp_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_ethernet_402d8000_S_ptp_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_ethernet_402d8000_S_ptp_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_ethernet_402d8000_S_ptp_ORD 152

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_ethernet_402d8000_S_ptp_REQUIRES_ORDS \
	12, /* /soc/interrupt-controller@e000e100 */ \
	150, /* /soc/ethernet@402d8000 */ \
	151, /* /soc/iomuxc@401f8000/pinctrl/pinmux_ptp */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_ethernet_402d8000_S_ptp_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_ethernet_402d8000_S_ptp_EXISTS 1
#define DT_N_INST_0_nxp_kinetis_ptp DT_N_S_soc_S_ethernet_402d8000_S_ptp
#define DT_N_NODELABEL_ptp          DT_N_S_soc_S_ethernet_402d8000_S_ptp

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_ethernet_402d8000_S_ptp_REG_NUM 0
#define DT_N_S_soc_S_ethernet_402d8000_S_ptp_RANGES_NUM 0
#define DT_N_S_soc_S_ethernet_402d8000_S_ptp_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_ethernet_402d8000_S_ptp_IRQ_NUM 1
#define DT_N_S_soc_S_ethernet_402d8000_S_ptp_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ethernet_402d8000_S_ptp_IRQ_IDX_0_VAL_irq 115
#define DT_N_S_soc_S_ethernet_402d8000_S_ptp_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_ethernet_402d8000_S_ptp_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ethernet_402d8000_S_ptp_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_ethernet_402d8000_S_ptp_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_ethernet_402d8000_S_ptp_IRQ_NAME_ieee1588_tmr_VAL_irq DT_N_S_soc_S_ethernet_402d8000_S_ptp_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_ethernet_402d8000_S_ptp_IRQ_NAME_ieee1588_tmr_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_ethernet_402d8000_S_ptp_IRQ_NAME_ieee1588_tmr_VAL_priority DT_N_S_soc_S_ethernet_402d8000_S_ptp_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_ethernet_402d8000_S_ptp_IRQ_NAME_ieee1588_tmr_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_ethernet_402d8000_S_ptp_COMPAT_MATCHES_nxp_kinetis_ptp 1
#define DT_N_S_soc_S_ethernet_402d8000_S_ptp_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ethernet_402d8000_S_ptp_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_soc_S_ethernet_402d8000_S_ptp_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ethernet_402d8000_S_ptp_COMPAT_MODEL_IDX_0 "kinetis-ptp"
#define DT_N_S_soc_S_ethernet_402d8000_S_ptp_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_ethernet_402d8000_S_ptp_PINCTRL_NUM 1
#define DT_N_S_soc_S_ethernet_402d8000_S_ptp_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ethernet_402d8000_S_ptp_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_ethernet_402d8000_S_ptp_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_ethernet_402d8000_S_ptp_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_ethernet_402d8000_S_ptp_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_ethernet_402d8000_S_ptp_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_ptp

/* Generic property macros: */
#define DT_N_S_soc_S_ethernet_402d8000_S_ptp_P_interrupts {115 /* 0x73 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_ethernet_402d8000_S_ptp_P_interrupts_IDX_0 115
#define DT_N_S_soc_S_ethernet_402d8000_S_ptp_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ethernet_402d8000_S_ptp_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_ethernet_402d8000_S_ptp_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_ethernet_402d8000_S_ptp_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ethernet_402d8000_S_ptp, interrupts, 0) \
	fn(DT_N_S_soc_S_ethernet_402d8000_S_ptp, interrupts, 1)
#define DT_N_S_soc_S_ethernet_402d8000_S_ptp_P_interrupts_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_ethernet_402d8000_S_ptp, interrupts, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_ethernet_402d8000_S_ptp, interrupts, 1)
#define DT_N_S_soc_S_ethernet_402d8000_S_ptp_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_ethernet_402d8000_S_ptp, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_ethernet_402d8000_S_ptp, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_ethernet_402d8000_S_ptp_P_interrupts_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_ethernet_402d8000_S_ptp, interrupts, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_ethernet_402d8000_S_ptp, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_ethernet_402d8000_S_ptp_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_ethernet_402d8000_S_ptp_P_status "okay"
#define DT_N_S_soc_S_ethernet_402d8000_S_ptp_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_ethernet_402d8000_S_ptp_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_ethernet_402d8000_S_ptp_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_ethernet_402d8000_S_ptp_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_ethernet_402d8000_S_ptp_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_ethernet_402d8000_S_ptp_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_ethernet_402d8000_S_ptp_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ethernet_402d8000_S_ptp, status, 0) \
	fn(DT_N_S_soc_S_ethernet_402d8000_S_ptp, status, 1) \
	fn(DT_N_S_soc_S_ethernet_402d8000_S_ptp, status, 2) \
	fn(DT_N_S_soc_S_ethernet_402d8000_S_ptp, status, 3)
#define DT_N_S_soc_S_ethernet_402d8000_S_ptp_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_ethernet_402d8000_S_ptp, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_ethernet_402d8000_S_ptp, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_ethernet_402d8000_S_ptp, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_ethernet_402d8000_S_ptp, status, 3)
#define DT_N_S_soc_S_ethernet_402d8000_S_ptp_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_ethernet_402d8000_S_ptp, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_ethernet_402d8000_S_ptp, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_ethernet_402d8000_S_ptp, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_ethernet_402d8000_S_ptp, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_ethernet_402d8000_S_ptp_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_ethernet_402d8000_S_ptp, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_ethernet_402d8000_S_ptp, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_ethernet_402d8000_S_ptp, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_ethernet_402d8000_S_ptp, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_ethernet_402d8000_S_ptp_P_status_EXISTS 1
#define DT_N_S_soc_S_ethernet_402d8000_S_ptp_P_compatible {"nxp,kinetis-ptp"}
#define DT_N_S_soc_S_ethernet_402d8000_S_ptp_P_compatible_IDX_0 "nxp,kinetis-ptp"
#define DT_N_S_soc_S_ethernet_402d8000_S_ptp_P_compatible_IDX_0_STRING_UNQUOTED nxp,kinetis-ptp
#define DT_N_S_soc_S_ethernet_402d8000_S_ptp_P_compatible_IDX_0_STRING_TOKEN nxp_kinetis_ptp
#define DT_N_S_soc_S_ethernet_402d8000_S_ptp_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_KINETIS_PTP
#define DT_N_S_soc_S_ethernet_402d8000_S_ptp_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ethernet_402d8000_S_ptp_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ethernet_402d8000_S_ptp, compatible, 0)
#define DT_N_S_soc_S_ethernet_402d8000_S_ptp_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_ethernet_402d8000_S_ptp, compatible, 0)
#define DT_N_S_soc_S_ethernet_402d8000_S_ptp_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_ethernet_402d8000_S_ptp, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ethernet_402d8000_S_ptp_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_ethernet_402d8000_S_ptp, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ethernet_402d8000_S_ptp_P_compatible_LEN 1
#define DT_N_S_soc_S_ethernet_402d8000_S_ptp_P_compatible_EXISTS 1
#define DT_N_S_soc_S_ethernet_402d8000_S_ptp_P_interrupt_names {"IEEE1588_TMR"}
#define DT_N_S_soc_S_ethernet_402d8000_S_ptp_P_interrupt_names_IDX_0 "IEEE1588_TMR"
#define DT_N_S_soc_S_ethernet_402d8000_S_ptp_P_interrupt_names_IDX_0_STRING_UNQUOTED IEEE1588_TMR
#define DT_N_S_soc_S_ethernet_402d8000_S_ptp_P_interrupt_names_IDX_0_STRING_TOKEN IEEE1588_TMR
#define DT_N_S_soc_S_ethernet_402d8000_S_ptp_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN IEEE1588_TMR
#define DT_N_S_soc_S_ethernet_402d8000_S_ptp_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ethernet_402d8000_S_ptp_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ethernet_402d8000_S_ptp, interrupt_names, 0)
#define DT_N_S_soc_S_ethernet_402d8000_S_ptp_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_ethernet_402d8000_S_ptp, interrupt_names, 0)
#define DT_N_S_soc_S_ethernet_402d8000_S_ptp_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_ethernet_402d8000_S_ptp, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ethernet_402d8000_S_ptp_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_ethernet_402d8000_S_ptp, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ethernet_402d8000_S_ptp_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_ethernet_402d8000_S_ptp_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_ethernet_402d8000_S_ptp_P_wakeup_source 0
#define DT_N_S_soc_S_ethernet_402d8000_S_ptp_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_ethernet_402d8000_S_ptp_P_pinctrl_0_IDX_0 DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_ptp
#define DT_N_S_soc_S_ethernet_402d8000_S_ptp_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_ptp
#define DT_N_S_soc_S_ethernet_402d8000_S_ptp_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ethernet_402d8000_S_ptp_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ethernet_402d8000_S_ptp, pinctrl_0, 0)
#define DT_N_S_soc_S_ethernet_402d8000_S_ptp_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_ethernet_402d8000_S_ptp, pinctrl_0, 0)
#define DT_N_S_soc_S_ethernet_402d8000_S_ptp_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_ethernet_402d8000_S_ptp, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ethernet_402d8000_S_ptp_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_ethernet_402d8000_S_ptp, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ethernet_402d8000_S_ptp_P_pinctrl_0_LEN 1
#define DT_N_S_soc_S_ethernet_402d8000_S_ptp_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_ethernet_402d8000_S_ptp_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_ethernet_402d8000_S_ptp_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_ethernet_402d8000_S_ptp_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_ethernet_402d8000_S_ptp_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_ethernet_402d8000_S_ptp_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_ethernet_402d8000_S_ptp_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ethernet_402d8000_S_ptp_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ethernet_402d8000_S_ptp, pinctrl_names, 0)
#define DT_N_S_soc_S_ethernet_402d8000_S_ptp_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_ethernet_402d8000_S_ptp, pinctrl_names, 0)
#define DT_N_S_soc_S_ethernet_402d8000_S_ptp_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_ethernet_402d8000_S_ptp, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ethernet_402d8000_S_ptp_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_ethernet_402d8000_S_ptp, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ethernet_402d8000_S_ptp_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_ethernet_402d8000_S_ptp_P_pinctrl_names_EXISTS 1

/*
 * Devicetree node: /soc/flexpwm@403dc000
 *
 * Node identifier: DT_N_S_soc_S_flexpwm_403dc000
 *
 * Binding (compatible = nxp,flexpwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/nxp,flexpwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flexpwm_403dc000_PATH "/soc/flexpwm@403dc000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flexpwm_403dc000_FULL_NAME "flexpwm@403dc000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_flexpwm_403dc000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flexpwm_403dc000_CHILD_IDX 37

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flexpwm_403dc000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm0) fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm1) fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm2) fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm3)
#define DT_N_S_soc_S_flexpwm_403dc000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm2) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm3)
#define DT_N_S_soc_S_flexpwm_403dc000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm0, __VA_ARGS__) fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm1, __VA_ARGS__) fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm2, __VA_ARGS__) fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm3, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403dc000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm3, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403dc000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_flexpwm_403dc000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_flexpwm_403dc000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_flexpwm_403dc000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flexpwm_403dc000_ORD 153

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flexpwm_403dc000_REQUIRES_ORDS \
	11, /* /soc */ \
	12, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flexpwm_403dc000_SUPPORTS_ORDS \
	154, /* /soc/flexpwm@403dc000/pwm0 */ \
	155, /* /soc/flexpwm@403dc000/pwm1 */ \
	156, /* /soc/flexpwm@403dc000/pwm2 */ \
	157, /* /soc/flexpwm@403dc000/pwm3 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flexpwm_403dc000_EXISTS 1
#define DT_N_INST_0_nxp_flexpwm DT_N_S_soc_S_flexpwm_403dc000
#define DT_N_NODELABEL_flexpwm1 DT_N_S_soc_S_flexpwm_403dc000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flexpwm_403dc000_REG_NUM 1
#define DT_N_S_soc_S_flexpwm_403dc000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403dc000_REG_IDX_0_VAL_ADDRESS 1077788672 /* 0x403dc000 */
#define DT_N_S_soc_S_flexpwm_403dc000_REG_IDX_0_VAL_SIZE 16384 /* 0x4000 */
#define DT_N_S_soc_S_flexpwm_403dc000_RANGES_NUM 0
#define DT_N_S_soc_S_flexpwm_403dc000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flexpwm_403dc000_IRQ_NUM 1
#define DT_N_S_soc_S_flexpwm_403dc000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403dc000_IRQ_IDX_0_VAL_irq 106
#define DT_N_S_soc_S_flexpwm_403dc000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403dc000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403dc000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_flexpwm_403dc000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403dc000_COMPAT_MATCHES_nxp_flexpwm 1
#define DT_N_S_soc_S_flexpwm_403dc000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403dc000_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_soc_S_flexpwm_403dc000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403dc000_COMPAT_MODEL_IDX_0 "flexpwm"
#define DT_N_S_soc_S_flexpwm_403dc000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flexpwm_403dc000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_flexpwm_403dc000_P_reg {1077788672 /* 0x403dc000 */, 16384 /* 0x4000 */}
#define DT_N_S_soc_S_flexpwm_403dc000_P_reg_IDX_0 1077788672
#define DT_N_S_soc_S_flexpwm_403dc000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403dc000_P_reg_IDX_1 16384
#define DT_N_S_soc_S_flexpwm_403dc000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403dc000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flexpwm_403dc000, reg, 0) \
	fn(DT_N_S_soc_S_flexpwm_403dc000, reg, 1)
#define DT_N_S_soc_S_flexpwm_403dc000_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flexpwm_403dc000, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403dc000, reg, 1)
#define DT_N_S_soc_S_flexpwm_403dc000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flexpwm_403dc000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexpwm_403dc000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403dc000_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flexpwm_403dc000, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403dc000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403dc000_P_reg_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403dc000_P_interrupts {106 /* 0x6a */, 0 /* 0x0 */}
#define DT_N_S_soc_S_flexpwm_403dc000_P_interrupts_IDX_0 106
#define DT_N_S_soc_S_flexpwm_403dc000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403dc000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_flexpwm_403dc000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403dc000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flexpwm_403dc000, interrupts, 0) \
	fn(DT_N_S_soc_S_flexpwm_403dc000, interrupts, 1)
#define DT_N_S_soc_S_flexpwm_403dc000_P_interrupts_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flexpwm_403dc000, interrupts, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403dc000, interrupts, 1)
#define DT_N_S_soc_S_flexpwm_403dc000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flexpwm_403dc000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexpwm_403dc000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403dc000_P_interrupts_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flexpwm_403dc000, interrupts, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403dc000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403dc000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403dc000_P_compatible {"nxp,flexpwm"}
#define DT_N_S_soc_S_flexpwm_403dc000_P_compatible_IDX_0 "nxp,flexpwm"
#define DT_N_S_soc_S_flexpwm_403dc000_P_compatible_IDX_0_STRING_UNQUOTED nxp,flexpwm
#define DT_N_S_soc_S_flexpwm_403dc000_P_compatible_IDX_0_STRING_TOKEN nxp_flexpwm
#define DT_N_S_soc_S_flexpwm_403dc000_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_FLEXPWM
#define DT_N_S_soc_S_flexpwm_403dc000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403dc000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flexpwm_403dc000, compatible, 0)
#define DT_N_S_soc_S_flexpwm_403dc000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flexpwm_403dc000, compatible, 0)
#define DT_N_S_soc_S_flexpwm_403dc000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flexpwm_403dc000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403dc000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flexpwm_403dc000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403dc000_P_compatible_LEN 1
#define DT_N_S_soc_S_flexpwm_403dc000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403dc000_P_wakeup_source 0
#define DT_N_S_soc_S_flexpwm_403dc000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/flexpwm@403dc000/pwm0
 *
 * Node identifier: DT_N_S_soc_S_flexpwm_403dc000_S_pwm0
 *
 * Binding (compatible = nxp,imx-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/nxp,imx-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm0_PATH "/soc/flexpwm@403dc000/pwm0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm0_FULL_NAME "pwm0"

/* Node parent (/soc/flexpwm@403dc000) identifier: */
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm0_PARENT DT_N_S_soc_S_flexpwm_403dc000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm0_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm0_ORD 154

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm0_REQUIRES_ORDS \
	12, /* /soc/interrupt-controller@e000e100 */ \
	60, /* /soc/ccm@400fc000 */ \
	153, /* /soc/flexpwm@403dc000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm0_EXISTS 1
#define DT_N_INST_0_nxp_imx_pwm      DT_N_S_soc_S_flexpwm_403dc000_S_pwm0
#define DT_N_NODELABEL_flexpwm1_pwm0 DT_N_S_soc_S_flexpwm_403dc000_S_pwm0

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm0_REG_NUM 0
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm0_RANGES_NUM 0
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm0_IRQ_NUM 1
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm0_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm0_IRQ_IDX_0_VAL_irq 102
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm0_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm0_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm0_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm0_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm0_COMPAT_MATCHES_nxp_imx_pwm 1
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm0_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm0_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm0_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm0_COMPAT_MODEL_IDX_0 "imx-pwm"
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm0_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm0_P_index 0
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm0_P_index_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm0_P_interrupts {102 /* 0x66 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm0_P_interrupts_IDX_0 102
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm0_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm0_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm0_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm0_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm0, interrupts, 0) \
	fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm0, interrupts, 1)
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm0_P_interrupts_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm0, interrupts, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm0, interrupts, 1)
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm0_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm0, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm0, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm0_P_interrupts_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm0, interrupts, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm0, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm0_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm0_P_run_in_wait 0
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm0_P_run_in_wait_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm0_P_run_in_debug 0
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm0_P_run_in_debug_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm0_P_nxp_prescaler 128
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm0_P_nxp_prescaler_ENUM_IDX 7
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm0_P_nxp_prescaler_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm0_P_status "disabled"
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm0_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm0_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm0_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm0_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm0_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm0_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm0_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm0, status, 0) \
	fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm0, status, 1) \
	fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm0, status, 2) \
	fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm0, status, 3) \
	fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm0, status, 4) \
	fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm0, status, 5) \
	fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm0, status, 6) \
	fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm0, status, 7)
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm0_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm0, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm0, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm0, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm0, status, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm0, status, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm0, status, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm0, status, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm0, status, 7)
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm0_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm0, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm0, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm0, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm0, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm0, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm0, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm0, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm0, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm0_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm0, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm0, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm0, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm0, status, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm0, status, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm0, status, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm0, status, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm0, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm0_P_status_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm0_P_compatible {"nxp,imx-pwm"}
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm0_P_compatible_IDX_0 "nxp,imx-pwm"
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm0_P_compatible_IDX_0_STRING_UNQUOTED nxp,imx-pwm
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm0_P_compatible_IDX_0_STRING_TOKEN nxp_imx_pwm
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm0_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_IMX_PWM
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm0_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm0_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm0, compatible, 0)
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm0_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm0, compatible, 0)
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm0_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm0, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm0_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm0, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm0_P_compatible_LEN 1
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm0_P_compatible_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm0_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm0_P_clocks_IDX_0_PH DT_N_S_soc_S_ccm_400fc000
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm0_P_clocks_IDX_0_VAL_name 3072
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm0_P_clocks_IDX_0_VAL_name_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm0_P_clocks_IDX_0_VAL_offset 0
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm0_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm0_P_clocks_IDX_0_VAL_bits 0
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm0_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm0_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm0, clocks, 0)
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm0_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm0, clocks, 0)
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm0_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm0, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm0_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm0, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm0_P_clocks_LEN 1
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm0_P_clocks_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm0_P_wakeup_source 0
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm0_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/flexpwm@403dc000/pwm1
 *
 * Node identifier: DT_N_S_soc_S_flexpwm_403dc000_S_pwm1
 *
 * Binding (compatible = nxp,imx-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/nxp,imx-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm1_PATH "/soc/flexpwm@403dc000/pwm1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm1_FULL_NAME "pwm1"

/* Node parent (/soc/flexpwm@403dc000) identifier: */
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm1_PARENT DT_N_S_soc_S_flexpwm_403dc000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm1_CHILD_IDX 1

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm1_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm1_ORD 155

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm1_REQUIRES_ORDS \
	12, /* /soc/interrupt-controller@e000e100 */ \
	60, /* /soc/ccm@400fc000 */ \
	153, /* /soc/flexpwm@403dc000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm1_EXISTS 1
#define DT_N_INST_1_nxp_imx_pwm      DT_N_S_soc_S_flexpwm_403dc000_S_pwm1
#define DT_N_NODELABEL_flexpwm1_pwm1 DT_N_S_soc_S_flexpwm_403dc000_S_pwm1

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm1_REG_NUM 0
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm1_RANGES_NUM 0
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm1_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm1_IRQ_NUM 1
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm1_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm1_IRQ_IDX_0_VAL_irq 103
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm1_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm1_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm1_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm1_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm1_COMPAT_MATCHES_nxp_imx_pwm 1
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm1_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm1_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm1_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm1_COMPAT_MODEL_IDX_0 "imx-pwm"
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm1_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm1_P_index 1
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm1_P_index_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm1_P_interrupts {103 /* 0x67 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm1_P_interrupts_IDX_0 103
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm1_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm1_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm1_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm1_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm1, interrupts, 0) \
	fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm1, interrupts, 1)
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm1_P_interrupts_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm1, interrupts, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm1, interrupts, 1)
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm1_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm1, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm1, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm1_P_interrupts_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm1, interrupts, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm1, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm1_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm1_P_run_in_wait 0
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm1_P_run_in_wait_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm1_P_run_in_debug 0
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm1_P_run_in_debug_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm1_P_nxp_prescaler 128
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm1_P_nxp_prescaler_ENUM_IDX 7
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm1_P_nxp_prescaler_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm1_P_status "disabled"
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm1_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm1_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm1_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm1_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm1_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm1_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm1_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm1, status, 0) \
	fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm1, status, 1) \
	fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm1, status, 2) \
	fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm1, status, 3) \
	fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm1, status, 4) \
	fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm1, status, 5) \
	fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm1, status, 6) \
	fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm1, status, 7)
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm1_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm1, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm1, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm1, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm1, status, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm1, status, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm1, status, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm1, status, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm1, status, 7)
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm1_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm1, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm1, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm1, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm1, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm1, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm1, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm1, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm1, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm1_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm1, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm1, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm1, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm1, status, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm1, status, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm1, status, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm1, status, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm1, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm1_P_status_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm1_P_compatible {"nxp,imx-pwm"}
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm1_P_compatible_IDX_0 "nxp,imx-pwm"
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm1_P_compatible_IDX_0_STRING_UNQUOTED nxp,imx-pwm
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm1_P_compatible_IDX_0_STRING_TOKEN nxp_imx_pwm
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm1_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_IMX_PWM
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm1_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm1_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm1, compatible, 0)
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm1_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm1, compatible, 0)
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm1_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm1, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm1_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm1, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm1_P_compatible_LEN 1
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm1_P_compatible_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm1_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm1_P_clocks_IDX_0_PH DT_N_S_soc_S_ccm_400fc000
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm1_P_clocks_IDX_0_VAL_name 3072
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm1_P_clocks_IDX_0_VAL_name_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm1_P_clocks_IDX_0_VAL_offset 0
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm1_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm1_P_clocks_IDX_0_VAL_bits 0
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm1_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm1_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm1, clocks, 0)
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm1_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm1, clocks, 0)
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm1_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm1, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm1_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm1, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm1_P_clocks_LEN 1
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm1_P_clocks_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm1_P_wakeup_source 0
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm1_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/flexpwm@403dc000/pwm2
 *
 * Node identifier: DT_N_S_soc_S_flexpwm_403dc000_S_pwm2
 *
 * Binding (compatible = nxp,imx-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/nxp,imx-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm2_PATH "/soc/flexpwm@403dc000/pwm2"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm2_FULL_NAME "pwm2"

/* Node parent (/soc/flexpwm@403dc000) identifier: */
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm2_PARENT DT_N_S_soc_S_flexpwm_403dc000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm2_CHILD_IDX 2

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm2_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm2_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm2_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm2_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm2_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm2_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm2_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm2_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm2_ORD 156

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm2_REQUIRES_ORDS \
	12, /* /soc/interrupt-controller@e000e100 */ \
	60, /* /soc/ccm@400fc000 */ \
	153, /* /soc/flexpwm@403dc000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm2_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm2_EXISTS 1
#define DT_N_INST_2_nxp_imx_pwm      DT_N_S_soc_S_flexpwm_403dc000_S_pwm2
#define DT_N_NODELABEL_flexpwm1_pwm2 DT_N_S_soc_S_flexpwm_403dc000_S_pwm2

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm2_REG_NUM 0
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm2_RANGES_NUM 0
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm2_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm2_IRQ_NUM 1
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm2_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm2_IRQ_IDX_0_VAL_irq 104
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm2_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm2_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm2_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm2_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm2_COMPAT_MATCHES_nxp_imx_pwm 1
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm2_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm2_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm2_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm2_COMPAT_MODEL_IDX_0 "imx-pwm"
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm2_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm2_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm2_P_index 2
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm2_P_index_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm2_P_interrupts {104 /* 0x68 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm2_P_interrupts_IDX_0 104
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm2_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm2_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm2_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm2_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm2, interrupts, 0) \
	fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm2, interrupts, 1)
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm2_P_interrupts_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm2, interrupts, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm2, interrupts, 1)
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm2_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm2, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm2, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm2_P_interrupts_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm2, interrupts, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm2, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm2_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm2_P_run_in_wait 0
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm2_P_run_in_wait_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm2_P_run_in_debug 0
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm2_P_run_in_debug_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm2_P_nxp_prescaler 128
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm2_P_nxp_prescaler_ENUM_IDX 7
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm2_P_nxp_prescaler_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm2_P_status "disabled"
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm2_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm2_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm2_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm2_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm2_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm2_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm2_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm2, status, 0) \
	fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm2, status, 1) \
	fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm2, status, 2) \
	fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm2, status, 3) \
	fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm2, status, 4) \
	fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm2, status, 5) \
	fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm2, status, 6) \
	fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm2, status, 7)
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm2_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm2, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm2, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm2, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm2, status, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm2, status, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm2, status, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm2, status, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm2, status, 7)
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm2_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm2, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm2, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm2, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm2, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm2, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm2, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm2, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm2, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm2_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm2, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm2, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm2, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm2, status, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm2, status, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm2, status, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm2, status, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm2, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm2_P_status_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm2_P_compatible {"nxp,imx-pwm"}
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm2_P_compatible_IDX_0 "nxp,imx-pwm"
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm2_P_compatible_IDX_0_STRING_UNQUOTED nxp,imx-pwm
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm2_P_compatible_IDX_0_STRING_TOKEN nxp_imx_pwm
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm2_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_IMX_PWM
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm2_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm2_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm2, compatible, 0)
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm2_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm2, compatible, 0)
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm2_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm2, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm2_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm2, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm2_P_compatible_LEN 1
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm2_P_compatible_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm2_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm2_P_clocks_IDX_0_PH DT_N_S_soc_S_ccm_400fc000
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm2_P_clocks_IDX_0_VAL_name 3072
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm2_P_clocks_IDX_0_VAL_name_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm2_P_clocks_IDX_0_VAL_offset 0
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm2_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm2_P_clocks_IDX_0_VAL_bits 0
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm2_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm2_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm2, clocks, 0)
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm2_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm2, clocks, 0)
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm2_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm2, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm2_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm2, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm2_P_clocks_LEN 1
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm2_P_clocks_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm2_P_wakeup_source 0
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm2_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/flexpwm@403dc000/pwm3
 *
 * Node identifier: DT_N_S_soc_S_flexpwm_403dc000_S_pwm3
 *
 * Binding (compatible = nxp,imx-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/nxp,imx-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm3_PATH "/soc/flexpwm@403dc000/pwm3"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm3_FULL_NAME "pwm3"

/* Node parent (/soc/flexpwm@403dc000) identifier: */
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm3_PARENT DT_N_S_soc_S_flexpwm_403dc000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm3_CHILD_IDX 3

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm3_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm3_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm3_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm3_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm3_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm3_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm3_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm3_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm3_ORD 157

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm3_REQUIRES_ORDS \
	12, /* /soc/interrupt-controller@e000e100 */ \
	60, /* /soc/ccm@400fc000 */ \
	153, /* /soc/flexpwm@403dc000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm3_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm3_EXISTS 1
#define DT_N_INST_3_nxp_imx_pwm      DT_N_S_soc_S_flexpwm_403dc000_S_pwm3
#define DT_N_NODELABEL_flexpwm1_pwm3 DT_N_S_soc_S_flexpwm_403dc000_S_pwm3

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm3_REG_NUM 0
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm3_RANGES_NUM 0
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm3_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm3_IRQ_NUM 1
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm3_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm3_IRQ_IDX_0_VAL_irq 105
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm3_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm3_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm3_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm3_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm3_COMPAT_MATCHES_nxp_imx_pwm 1
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm3_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm3_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm3_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm3_COMPAT_MODEL_IDX_0 "imx-pwm"
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm3_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm3_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm3_P_index 3
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm3_P_index_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm3_P_interrupts {105 /* 0x69 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm3_P_interrupts_IDX_0 105
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm3_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm3_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm3_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm3_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm3, interrupts, 0) \
	fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm3, interrupts, 1)
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm3_P_interrupts_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm3, interrupts, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm3, interrupts, 1)
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm3_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm3, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm3, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm3_P_interrupts_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm3, interrupts, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm3, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm3_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm3_P_run_in_wait 0
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm3_P_run_in_wait_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm3_P_run_in_debug 0
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm3_P_run_in_debug_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm3_P_nxp_prescaler 128
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm3_P_nxp_prescaler_ENUM_IDX 7
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm3_P_nxp_prescaler_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm3_P_status "disabled"
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm3_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm3_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm3_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm3_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm3_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm3_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm3_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm3, status, 0) \
	fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm3, status, 1) \
	fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm3, status, 2) \
	fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm3, status, 3) \
	fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm3, status, 4) \
	fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm3, status, 5) \
	fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm3, status, 6) \
	fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm3, status, 7)
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm3_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm3, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm3, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm3, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm3, status, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm3, status, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm3, status, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm3, status, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm3, status, 7)
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm3_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm3, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm3, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm3, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm3, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm3, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm3, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm3, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm3, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm3_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm3, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm3, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm3, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm3, status, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm3, status, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm3, status, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm3, status, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm3, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm3_P_status_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm3_P_compatible {"nxp,imx-pwm"}
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm3_P_compatible_IDX_0 "nxp,imx-pwm"
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm3_P_compatible_IDX_0_STRING_UNQUOTED nxp,imx-pwm
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm3_P_compatible_IDX_0_STRING_TOKEN nxp_imx_pwm
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm3_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_IMX_PWM
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm3_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm3_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm3, compatible, 0)
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm3_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm3, compatible, 0)
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm3_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm3, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm3_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm3, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm3_P_compatible_LEN 1
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm3_P_compatible_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm3_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm3_P_clocks_IDX_0_PH DT_N_S_soc_S_ccm_400fc000
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm3_P_clocks_IDX_0_VAL_name 3072
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm3_P_clocks_IDX_0_VAL_name_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm3_P_clocks_IDX_0_VAL_offset 0
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm3_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm3_P_clocks_IDX_0_VAL_bits 0
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm3_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm3_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm3, clocks, 0)
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm3_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm3, clocks, 0)
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm3_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm3, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm3_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm3, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm3_P_clocks_LEN 1
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm3_P_clocks_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm3_P_wakeup_source 0
#define DT_N_S_soc_S_flexpwm_403dc000_S_pwm3_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/flexpwm@403e0000
 *
 * Node identifier: DT_N_S_soc_S_flexpwm_403e0000
 *
 * Binding (compatible = nxp,flexpwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/nxp,flexpwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flexpwm_403e0000_PATH "/soc/flexpwm@403e0000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flexpwm_403e0000_FULL_NAME "flexpwm@403e0000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_flexpwm_403e0000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flexpwm_403e0000_CHILD_IDX 38

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flexpwm_403e0000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm0) fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm1) fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm2) fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm3)
#define DT_N_S_soc_S_flexpwm_403e0000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm2) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm3)
#define DT_N_S_soc_S_flexpwm_403e0000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm0, __VA_ARGS__) fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm1, __VA_ARGS__) fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm2, __VA_ARGS__) fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm3, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403e0000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm3, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403e0000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_flexpwm_403e0000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_flexpwm_403e0000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_flexpwm_403e0000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flexpwm_403e0000_ORD 158

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flexpwm_403e0000_REQUIRES_ORDS \
	11, /* /soc */ \
	12, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flexpwm_403e0000_SUPPORTS_ORDS \
	159, /* /soc/flexpwm@403e0000/pwm0 */ \
	160, /* /soc/flexpwm@403e0000/pwm1 */ \
	161, /* /soc/flexpwm@403e0000/pwm2 */ \
	162, /* /soc/flexpwm@403e0000/pwm3 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flexpwm_403e0000_EXISTS 1
#define DT_N_INST_1_nxp_flexpwm DT_N_S_soc_S_flexpwm_403e0000
#define DT_N_NODELABEL_flexpwm2 DT_N_S_soc_S_flexpwm_403e0000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flexpwm_403e0000_REG_NUM 1
#define DT_N_S_soc_S_flexpwm_403e0000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e0000_REG_IDX_0_VAL_ADDRESS 1077805056 /* 0x403e0000 */
#define DT_N_S_soc_S_flexpwm_403e0000_REG_IDX_0_VAL_SIZE 16384 /* 0x4000 */
#define DT_N_S_soc_S_flexpwm_403e0000_RANGES_NUM 0
#define DT_N_S_soc_S_flexpwm_403e0000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flexpwm_403e0000_IRQ_NUM 1
#define DT_N_S_soc_S_flexpwm_403e0000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e0000_IRQ_IDX_0_VAL_irq 141
#define DT_N_S_soc_S_flexpwm_403e0000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e0000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e0000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_flexpwm_403e0000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e0000_COMPAT_MATCHES_nxp_flexpwm 1
#define DT_N_S_soc_S_flexpwm_403e0000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e0000_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_soc_S_flexpwm_403e0000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e0000_COMPAT_MODEL_IDX_0 "flexpwm"
#define DT_N_S_soc_S_flexpwm_403e0000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flexpwm_403e0000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_flexpwm_403e0000_P_reg {1077805056 /* 0x403e0000 */, 16384 /* 0x4000 */}
#define DT_N_S_soc_S_flexpwm_403e0000_P_reg_IDX_0 1077805056
#define DT_N_S_soc_S_flexpwm_403e0000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e0000_P_reg_IDX_1 16384
#define DT_N_S_soc_S_flexpwm_403e0000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e0000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flexpwm_403e0000, reg, 0) \
	fn(DT_N_S_soc_S_flexpwm_403e0000, reg, 1)
#define DT_N_S_soc_S_flexpwm_403e0000_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flexpwm_403e0000, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e0000, reg, 1)
#define DT_N_S_soc_S_flexpwm_403e0000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flexpwm_403e0000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexpwm_403e0000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403e0000_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flexpwm_403e0000, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e0000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403e0000_P_reg_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e0000_P_interrupts {141 /* 0x8d */, 0 /* 0x0 */}
#define DT_N_S_soc_S_flexpwm_403e0000_P_interrupts_IDX_0 141
#define DT_N_S_soc_S_flexpwm_403e0000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e0000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_flexpwm_403e0000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e0000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flexpwm_403e0000, interrupts, 0) \
	fn(DT_N_S_soc_S_flexpwm_403e0000, interrupts, 1)
#define DT_N_S_soc_S_flexpwm_403e0000_P_interrupts_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flexpwm_403e0000, interrupts, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e0000, interrupts, 1)
#define DT_N_S_soc_S_flexpwm_403e0000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flexpwm_403e0000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexpwm_403e0000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403e0000_P_interrupts_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flexpwm_403e0000, interrupts, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e0000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403e0000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e0000_P_compatible {"nxp,flexpwm"}
#define DT_N_S_soc_S_flexpwm_403e0000_P_compatible_IDX_0 "nxp,flexpwm"
#define DT_N_S_soc_S_flexpwm_403e0000_P_compatible_IDX_0_STRING_UNQUOTED nxp,flexpwm
#define DT_N_S_soc_S_flexpwm_403e0000_P_compatible_IDX_0_STRING_TOKEN nxp_flexpwm
#define DT_N_S_soc_S_flexpwm_403e0000_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_FLEXPWM
#define DT_N_S_soc_S_flexpwm_403e0000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e0000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flexpwm_403e0000, compatible, 0)
#define DT_N_S_soc_S_flexpwm_403e0000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flexpwm_403e0000, compatible, 0)
#define DT_N_S_soc_S_flexpwm_403e0000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flexpwm_403e0000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403e0000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flexpwm_403e0000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403e0000_P_compatible_LEN 1
#define DT_N_S_soc_S_flexpwm_403e0000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e0000_P_wakeup_source 0
#define DT_N_S_soc_S_flexpwm_403e0000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/flexpwm@403e0000/pwm0
 *
 * Node identifier: DT_N_S_soc_S_flexpwm_403e0000_S_pwm0
 *
 * Binding (compatible = nxp,imx-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/nxp,imx-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm0_PATH "/soc/flexpwm@403e0000/pwm0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm0_FULL_NAME "pwm0"

/* Node parent (/soc/flexpwm@403e0000) identifier: */
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm0_PARENT DT_N_S_soc_S_flexpwm_403e0000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm0_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm0_ORD 159

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm0_REQUIRES_ORDS \
	12, /* /soc/interrupt-controller@e000e100 */ \
	60, /* /soc/ccm@400fc000 */ \
	158, /* /soc/flexpwm@403e0000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm0_EXISTS 1
#define DT_N_INST_4_nxp_imx_pwm      DT_N_S_soc_S_flexpwm_403e0000_S_pwm0
#define DT_N_NODELABEL_flexpwm2_pwm0 DT_N_S_soc_S_flexpwm_403e0000_S_pwm0

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm0_REG_NUM 0
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm0_RANGES_NUM 0
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm0_IRQ_NUM 1
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm0_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm0_IRQ_IDX_0_VAL_irq 137
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm0_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm0_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm0_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm0_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm0_COMPAT_MATCHES_nxp_imx_pwm 1
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm0_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm0_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm0_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm0_COMPAT_MODEL_IDX_0 "imx-pwm"
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm0_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm0_P_index 0
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm0_P_index_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm0_P_interrupts {137 /* 0x89 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm0_P_interrupts_IDX_0 137
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm0_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm0_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm0_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm0_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm0, interrupts, 0) \
	fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm0, interrupts, 1)
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm0_P_interrupts_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm0, interrupts, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm0, interrupts, 1)
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm0_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm0, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm0, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm0_P_interrupts_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm0, interrupts, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm0, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm0_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm0_P_run_in_wait 0
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm0_P_run_in_wait_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm0_P_run_in_debug 0
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm0_P_run_in_debug_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm0_P_nxp_prescaler 128
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm0_P_nxp_prescaler_ENUM_IDX 7
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm0_P_nxp_prescaler_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm0_P_status "disabled"
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm0_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm0_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm0_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm0_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm0_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm0_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm0_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm0, status, 0) \
	fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm0, status, 1) \
	fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm0, status, 2) \
	fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm0, status, 3) \
	fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm0, status, 4) \
	fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm0, status, 5) \
	fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm0, status, 6) \
	fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm0, status, 7)
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm0_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm0, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm0, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm0, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm0, status, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm0, status, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm0, status, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm0, status, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm0, status, 7)
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm0_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm0, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm0, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm0, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm0, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm0, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm0, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm0, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm0, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm0_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm0, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm0, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm0, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm0, status, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm0, status, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm0, status, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm0, status, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm0, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm0_P_status_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm0_P_compatible {"nxp,imx-pwm"}
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm0_P_compatible_IDX_0 "nxp,imx-pwm"
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm0_P_compatible_IDX_0_STRING_UNQUOTED nxp,imx-pwm
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm0_P_compatible_IDX_0_STRING_TOKEN nxp_imx_pwm
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm0_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_IMX_PWM
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm0_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm0_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm0, compatible, 0)
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm0_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm0, compatible, 0)
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm0_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm0, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm0_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm0, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm0_P_compatible_LEN 1
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm0_P_compatible_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm0_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm0_P_clocks_IDX_0_PH DT_N_S_soc_S_ccm_400fc000
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm0_P_clocks_IDX_0_VAL_name 3072
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm0_P_clocks_IDX_0_VAL_name_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm0_P_clocks_IDX_0_VAL_offset 0
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm0_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm0_P_clocks_IDX_0_VAL_bits 0
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm0_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm0_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm0, clocks, 0)
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm0_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm0, clocks, 0)
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm0_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm0, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm0_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm0, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm0_P_clocks_LEN 1
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm0_P_clocks_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm0_P_wakeup_source 0
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm0_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/flexpwm@403e0000/pwm1
 *
 * Node identifier: DT_N_S_soc_S_flexpwm_403e0000_S_pwm1
 *
 * Binding (compatible = nxp,imx-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/nxp,imx-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm1_PATH "/soc/flexpwm@403e0000/pwm1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm1_FULL_NAME "pwm1"

/* Node parent (/soc/flexpwm@403e0000) identifier: */
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm1_PARENT DT_N_S_soc_S_flexpwm_403e0000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm1_CHILD_IDX 1

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm1_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm1_ORD 160

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm1_REQUIRES_ORDS \
	12, /* /soc/interrupt-controller@e000e100 */ \
	60, /* /soc/ccm@400fc000 */ \
	158, /* /soc/flexpwm@403e0000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm1_EXISTS 1
#define DT_N_INST_5_nxp_imx_pwm      DT_N_S_soc_S_flexpwm_403e0000_S_pwm1
#define DT_N_NODELABEL_flexpwm2_pwm1 DT_N_S_soc_S_flexpwm_403e0000_S_pwm1

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm1_REG_NUM 0
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm1_RANGES_NUM 0
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm1_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm1_IRQ_NUM 1
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm1_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm1_IRQ_IDX_0_VAL_irq 138
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm1_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm1_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm1_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm1_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm1_COMPAT_MATCHES_nxp_imx_pwm 1
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm1_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm1_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm1_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm1_COMPAT_MODEL_IDX_0 "imx-pwm"
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm1_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm1_P_index 1
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm1_P_index_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm1_P_interrupts {138 /* 0x8a */, 0 /* 0x0 */}
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm1_P_interrupts_IDX_0 138
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm1_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm1_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm1_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm1_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm1, interrupts, 0) \
	fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm1, interrupts, 1)
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm1_P_interrupts_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm1, interrupts, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm1, interrupts, 1)
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm1_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm1, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm1, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm1_P_interrupts_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm1, interrupts, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm1, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm1_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm1_P_run_in_wait 0
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm1_P_run_in_wait_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm1_P_run_in_debug 0
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm1_P_run_in_debug_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm1_P_nxp_prescaler 128
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm1_P_nxp_prescaler_ENUM_IDX 7
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm1_P_nxp_prescaler_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm1_P_status "disabled"
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm1_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm1_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm1_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm1_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm1_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm1_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm1_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm1, status, 0) \
	fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm1, status, 1) \
	fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm1, status, 2) \
	fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm1, status, 3) \
	fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm1, status, 4) \
	fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm1, status, 5) \
	fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm1, status, 6) \
	fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm1, status, 7)
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm1_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm1, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm1, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm1, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm1, status, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm1, status, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm1, status, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm1, status, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm1, status, 7)
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm1_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm1, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm1, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm1, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm1, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm1, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm1, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm1, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm1, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm1_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm1, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm1, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm1, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm1, status, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm1, status, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm1, status, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm1, status, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm1, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm1_P_status_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm1_P_compatible {"nxp,imx-pwm"}
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm1_P_compatible_IDX_0 "nxp,imx-pwm"
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm1_P_compatible_IDX_0_STRING_UNQUOTED nxp,imx-pwm
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm1_P_compatible_IDX_0_STRING_TOKEN nxp_imx_pwm
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm1_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_IMX_PWM
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm1_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm1_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm1, compatible, 0)
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm1_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm1, compatible, 0)
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm1_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm1, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm1_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm1, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm1_P_compatible_LEN 1
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm1_P_compatible_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm1_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm1_P_clocks_IDX_0_PH DT_N_S_soc_S_ccm_400fc000
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm1_P_clocks_IDX_0_VAL_name 3072
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm1_P_clocks_IDX_0_VAL_name_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm1_P_clocks_IDX_0_VAL_offset 0
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm1_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm1_P_clocks_IDX_0_VAL_bits 0
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm1_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm1_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm1, clocks, 0)
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm1_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm1, clocks, 0)
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm1_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm1, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm1_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm1, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm1_P_clocks_LEN 1
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm1_P_clocks_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm1_P_wakeup_source 0
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm1_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/flexpwm@403e0000/pwm2
 *
 * Node identifier: DT_N_S_soc_S_flexpwm_403e0000_S_pwm2
 *
 * Binding (compatible = nxp,imx-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/nxp,imx-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm2_PATH "/soc/flexpwm@403e0000/pwm2"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm2_FULL_NAME "pwm2"

/* Node parent (/soc/flexpwm@403e0000) identifier: */
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm2_PARENT DT_N_S_soc_S_flexpwm_403e0000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm2_CHILD_IDX 2

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm2_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm2_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm2_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm2_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm2_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm2_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm2_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm2_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm2_ORD 161

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm2_REQUIRES_ORDS \
	12, /* /soc/interrupt-controller@e000e100 */ \
	60, /* /soc/ccm@400fc000 */ \
	158, /* /soc/flexpwm@403e0000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm2_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm2_EXISTS 1
#define DT_N_INST_6_nxp_imx_pwm      DT_N_S_soc_S_flexpwm_403e0000_S_pwm2
#define DT_N_NODELABEL_flexpwm2_pwm2 DT_N_S_soc_S_flexpwm_403e0000_S_pwm2

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm2_REG_NUM 0
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm2_RANGES_NUM 0
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm2_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm2_IRQ_NUM 1
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm2_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm2_IRQ_IDX_0_VAL_irq 139
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm2_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm2_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm2_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm2_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm2_COMPAT_MATCHES_nxp_imx_pwm 1
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm2_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm2_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm2_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm2_COMPAT_MODEL_IDX_0 "imx-pwm"
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm2_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm2_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm2_P_index 2
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm2_P_index_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm2_P_interrupts {139 /* 0x8b */, 0 /* 0x0 */}
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm2_P_interrupts_IDX_0 139
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm2_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm2_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm2_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm2_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm2, interrupts, 0) \
	fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm2, interrupts, 1)
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm2_P_interrupts_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm2, interrupts, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm2, interrupts, 1)
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm2_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm2, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm2, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm2_P_interrupts_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm2, interrupts, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm2, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm2_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm2_P_run_in_wait 0
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm2_P_run_in_wait_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm2_P_run_in_debug 0
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm2_P_run_in_debug_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm2_P_nxp_prescaler 128
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm2_P_nxp_prescaler_ENUM_IDX 7
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm2_P_nxp_prescaler_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm2_P_status "disabled"
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm2_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm2_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm2_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm2_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm2_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm2_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm2_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm2, status, 0) \
	fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm2, status, 1) \
	fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm2, status, 2) \
	fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm2, status, 3) \
	fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm2, status, 4) \
	fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm2, status, 5) \
	fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm2, status, 6) \
	fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm2, status, 7)
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm2_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm2, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm2, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm2, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm2, status, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm2, status, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm2, status, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm2, status, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm2, status, 7)
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm2_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm2, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm2, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm2, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm2, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm2, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm2, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm2, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm2, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm2_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm2, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm2, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm2, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm2, status, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm2, status, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm2, status, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm2, status, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm2, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm2_P_status_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm2_P_compatible {"nxp,imx-pwm"}
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm2_P_compatible_IDX_0 "nxp,imx-pwm"
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm2_P_compatible_IDX_0_STRING_UNQUOTED nxp,imx-pwm
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm2_P_compatible_IDX_0_STRING_TOKEN nxp_imx_pwm
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm2_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_IMX_PWM
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm2_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm2_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm2, compatible, 0)
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm2_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm2, compatible, 0)
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm2_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm2, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm2_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm2, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm2_P_compatible_LEN 1
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm2_P_compatible_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm2_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm2_P_clocks_IDX_0_PH DT_N_S_soc_S_ccm_400fc000
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm2_P_clocks_IDX_0_VAL_name 3072
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm2_P_clocks_IDX_0_VAL_name_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm2_P_clocks_IDX_0_VAL_offset 0
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm2_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm2_P_clocks_IDX_0_VAL_bits 0
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm2_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm2_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm2, clocks, 0)
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm2_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm2, clocks, 0)
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm2_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm2, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm2_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm2, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm2_P_clocks_LEN 1
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm2_P_clocks_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm2_P_wakeup_source 0
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm2_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/flexpwm@403e0000/pwm3
 *
 * Node identifier: DT_N_S_soc_S_flexpwm_403e0000_S_pwm3
 *
 * Binding (compatible = nxp,imx-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/nxp,imx-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm3_PATH "/soc/flexpwm@403e0000/pwm3"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm3_FULL_NAME "pwm3"

/* Node parent (/soc/flexpwm@403e0000) identifier: */
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm3_PARENT DT_N_S_soc_S_flexpwm_403e0000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm3_CHILD_IDX 3

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm3_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm3_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm3_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm3_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm3_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm3_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm3_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm3_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm3_ORD 162

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm3_REQUIRES_ORDS \
	12, /* /soc/interrupt-controller@e000e100 */ \
	60, /* /soc/ccm@400fc000 */ \
	158, /* /soc/flexpwm@403e0000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm3_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm3_EXISTS 1
#define DT_N_INST_7_nxp_imx_pwm      DT_N_S_soc_S_flexpwm_403e0000_S_pwm3
#define DT_N_NODELABEL_flexpwm2_pwm3 DT_N_S_soc_S_flexpwm_403e0000_S_pwm3

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm3_REG_NUM 0
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm3_RANGES_NUM 0
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm3_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm3_IRQ_NUM 1
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm3_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm3_IRQ_IDX_0_VAL_irq 140
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm3_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm3_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm3_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm3_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm3_COMPAT_MATCHES_nxp_imx_pwm 1
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm3_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm3_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm3_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm3_COMPAT_MODEL_IDX_0 "imx-pwm"
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm3_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm3_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm3_P_index 3
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm3_P_index_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm3_P_interrupts {140 /* 0x8c */, 0 /* 0x0 */}
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm3_P_interrupts_IDX_0 140
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm3_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm3_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm3_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm3_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm3, interrupts, 0) \
	fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm3, interrupts, 1)
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm3_P_interrupts_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm3, interrupts, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm3, interrupts, 1)
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm3_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm3, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm3, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm3_P_interrupts_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm3, interrupts, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm3, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm3_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm3_P_run_in_wait 0
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm3_P_run_in_wait_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm3_P_run_in_debug 0
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm3_P_run_in_debug_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm3_P_nxp_prescaler 128
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm3_P_nxp_prescaler_ENUM_IDX 7
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm3_P_nxp_prescaler_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm3_P_status "disabled"
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm3_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm3_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm3_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm3_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm3_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm3_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm3_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm3, status, 0) \
	fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm3, status, 1) \
	fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm3, status, 2) \
	fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm3, status, 3) \
	fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm3, status, 4) \
	fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm3, status, 5) \
	fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm3, status, 6) \
	fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm3, status, 7)
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm3_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm3, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm3, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm3, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm3, status, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm3, status, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm3, status, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm3, status, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm3, status, 7)
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm3_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm3, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm3, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm3, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm3, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm3, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm3, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm3, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm3, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm3_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm3, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm3, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm3, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm3, status, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm3, status, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm3, status, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm3, status, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm3, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm3_P_status_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm3_P_compatible {"nxp,imx-pwm"}
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm3_P_compatible_IDX_0 "nxp,imx-pwm"
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm3_P_compatible_IDX_0_STRING_UNQUOTED nxp,imx-pwm
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm3_P_compatible_IDX_0_STRING_TOKEN nxp_imx_pwm
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm3_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_IMX_PWM
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm3_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm3_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm3, compatible, 0)
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm3_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm3, compatible, 0)
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm3_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm3, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm3_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm3, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm3_P_compatible_LEN 1
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm3_P_compatible_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm3_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm3_P_clocks_IDX_0_PH DT_N_S_soc_S_ccm_400fc000
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm3_P_clocks_IDX_0_VAL_name 3072
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm3_P_clocks_IDX_0_VAL_name_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm3_P_clocks_IDX_0_VAL_offset 0
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm3_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm3_P_clocks_IDX_0_VAL_bits 0
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm3_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm3_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm3, clocks, 0)
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm3_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm3, clocks, 0)
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm3_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm3, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm3_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm3, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm3_P_clocks_LEN 1
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm3_P_clocks_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm3_P_wakeup_source 0
#define DT_N_S_soc_S_flexpwm_403e0000_S_pwm3_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/flexpwm@403e4000
 *
 * Node identifier: DT_N_S_soc_S_flexpwm_403e4000
 *
 * Binding (compatible = nxp,flexpwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/nxp,flexpwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flexpwm_403e4000_PATH "/soc/flexpwm@403e4000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flexpwm_403e4000_FULL_NAME "flexpwm@403e4000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_flexpwm_403e4000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flexpwm_403e4000_CHILD_IDX 39

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flexpwm_403e4000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm0) fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm1) fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm2) fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm3)
#define DT_N_S_soc_S_flexpwm_403e4000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm2) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm3)
#define DT_N_S_soc_S_flexpwm_403e4000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm0, __VA_ARGS__) fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm1, __VA_ARGS__) fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm2, __VA_ARGS__) fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm3, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403e4000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm3, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403e4000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_flexpwm_403e4000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_flexpwm_403e4000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_flexpwm_403e4000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flexpwm_403e4000_ORD 163

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flexpwm_403e4000_REQUIRES_ORDS \
	11, /* /soc */ \
	12, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flexpwm_403e4000_SUPPORTS_ORDS \
	164, /* /soc/flexpwm@403e4000/pwm0 */ \
	165, /* /soc/flexpwm@403e4000/pwm1 */ \
	166, /* /soc/flexpwm@403e4000/pwm2 */ \
	167, /* /soc/flexpwm@403e4000/pwm3 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flexpwm_403e4000_EXISTS 1
#define DT_N_INST_2_nxp_flexpwm DT_N_S_soc_S_flexpwm_403e4000
#define DT_N_NODELABEL_flexpwm3 DT_N_S_soc_S_flexpwm_403e4000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flexpwm_403e4000_REG_NUM 1
#define DT_N_S_soc_S_flexpwm_403e4000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e4000_REG_IDX_0_VAL_ADDRESS 1077821440 /* 0x403e4000 */
#define DT_N_S_soc_S_flexpwm_403e4000_REG_IDX_0_VAL_SIZE 16384 /* 0x4000 */
#define DT_N_S_soc_S_flexpwm_403e4000_RANGES_NUM 0
#define DT_N_S_soc_S_flexpwm_403e4000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flexpwm_403e4000_IRQ_NUM 1
#define DT_N_S_soc_S_flexpwm_403e4000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e4000_IRQ_IDX_0_VAL_irq 146
#define DT_N_S_soc_S_flexpwm_403e4000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e4000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e4000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_flexpwm_403e4000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e4000_COMPAT_MATCHES_nxp_flexpwm 1
#define DT_N_S_soc_S_flexpwm_403e4000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e4000_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_soc_S_flexpwm_403e4000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e4000_COMPAT_MODEL_IDX_0 "flexpwm"
#define DT_N_S_soc_S_flexpwm_403e4000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flexpwm_403e4000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_flexpwm_403e4000_P_reg {1077821440 /* 0x403e4000 */, 16384 /* 0x4000 */}
#define DT_N_S_soc_S_flexpwm_403e4000_P_reg_IDX_0 1077821440
#define DT_N_S_soc_S_flexpwm_403e4000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e4000_P_reg_IDX_1 16384
#define DT_N_S_soc_S_flexpwm_403e4000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e4000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flexpwm_403e4000, reg, 0) \
	fn(DT_N_S_soc_S_flexpwm_403e4000, reg, 1)
#define DT_N_S_soc_S_flexpwm_403e4000_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flexpwm_403e4000, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e4000, reg, 1)
#define DT_N_S_soc_S_flexpwm_403e4000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flexpwm_403e4000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexpwm_403e4000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403e4000_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flexpwm_403e4000, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e4000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403e4000_P_reg_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e4000_P_interrupts {146 /* 0x92 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_flexpwm_403e4000_P_interrupts_IDX_0 146
#define DT_N_S_soc_S_flexpwm_403e4000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e4000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_flexpwm_403e4000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e4000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flexpwm_403e4000, interrupts, 0) \
	fn(DT_N_S_soc_S_flexpwm_403e4000, interrupts, 1)
#define DT_N_S_soc_S_flexpwm_403e4000_P_interrupts_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flexpwm_403e4000, interrupts, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e4000, interrupts, 1)
#define DT_N_S_soc_S_flexpwm_403e4000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flexpwm_403e4000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexpwm_403e4000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403e4000_P_interrupts_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flexpwm_403e4000, interrupts, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e4000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403e4000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e4000_P_compatible {"nxp,flexpwm"}
#define DT_N_S_soc_S_flexpwm_403e4000_P_compatible_IDX_0 "nxp,flexpwm"
#define DT_N_S_soc_S_flexpwm_403e4000_P_compatible_IDX_0_STRING_UNQUOTED nxp,flexpwm
#define DT_N_S_soc_S_flexpwm_403e4000_P_compatible_IDX_0_STRING_TOKEN nxp_flexpwm
#define DT_N_S_soc_S_flexpwm_403e4000_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_FLEXPWM
#define DT_N_S_soc_S_flexpwm_403e4000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e4000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flexpwm_403e4000, compatible, 0)
#define DT_N_S_soc_S_flexpwm_403e4000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flexpwm_403e4000, compatible, 0)
#define DT_N_S_soc_S_flexpwm_403e4000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flexpwm_403e4000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403e4000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flexpwm_403e4000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403e4000_P_compatible_LEN 1
#define DT_N_S_soc_S_flexpwm_403e4000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e4000_P_wakeup_source 0
#define DT_N_S_soc_S_flexpwm_403e4000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/flexpwm@403e4000/pwm0
 *
 * Node identifier: DT_N_S_soc_S_flexpwm_403e4000_S_pwm0
 *
 * Binding (compatible = nxp,imx-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/nxp,imx-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm0_PATH "/soc/flexpwm@403e4000/pwm0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm0_FULL_NAME "pwm0"

/* Node parent (/soc/flexpwm@403e4000) identifier: */
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm0_PARENT DT_N_S_soc_S_flexpwm_403e4000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm0_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm0_ORD 164

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm0_REQUIRES_ORDS \
	12, /* /soc/interrupt-controller@e000e100 */ \
	60, /* /soc/ccm@400fc000 */ \
	163, /* /soc/flexpwm@403e4000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm0_EXISTS 1
#define DT_N_INST_8_nxp_imx_pwm      DT_N_S_soc_S_flexpwm_403e4000_S_pwm0
#define DT_N_NODELABEL_flexpwm3_pwm0 DT_N_S_soc_S_flexpwm_403e4000_S_pwm0

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm0_REG_NUM 0
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm0_RANGES_NUM 0
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm0_IRQ_NUM 1
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm0_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm0_IRQ_IDX_0_VAL_irq 142
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm0_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm0_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm0_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm0_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm0_COMPAT_MATCHES_nxp_imx_pwm 1
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm0_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm0_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm0_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm0_COMPAT_MODEL_IDX_0 "imx-pwm"
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm0_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm0_P_index 0
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm0_P_index_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm0_P_interrupts {142 /* 0x8e */, 0 /* 0x0 */}
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm0_P_interrupts_IDX_0 142
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm0_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm0_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm0_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm0_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm0, interrupts, 0) \
	fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm0, interrupts, 1)
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm0_P_interrupts_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm0, interrupts, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm0, interrupts, 1)
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm0_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm0, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm0, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm0_P_interrupts_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm0, interrupts, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm0, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm0_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm0_P_run_in_wait 0
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm0_P_run_in_wait_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm0_P_run_in_debug 0
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm0_P_run_in_debug_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm0_P_nxp_prescaler 128
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm0_P_nxp_prescaler_ENUM_IDX 7
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm0_P_nxp_prescaler_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm0_P_status "disabled"
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm0_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm0_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm0_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm0_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm0_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm0_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm0_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm0, status, 0) \
	fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm0, status, 1) \
	fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm0, status, 2) \
	fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm0, status, 3) \
	fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm0, status, 4) \
	fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm0, status, 5) \
	fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm0, status, 6) \
	fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm0, status, 7)
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm0_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm0, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm0, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm0, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm0, status, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm0, status, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm0, status, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm0, status, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm0, status, 7)
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm0_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm0, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm0, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm0, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm0, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm0, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm0, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm0, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm0, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm0_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm0, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm0, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm0, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm0, status, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm0, status, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm0, status, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm0, status, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm0, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm0_P_status_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm0_P_compatible {"nxp,imx-pwm"}
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm0_P_compatible_IDX_0 "nxp,imx-pwm"
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm0_P_compatible_IDX_0_STRING_UNQUOTED nxp,imx-pwm
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm0_P_compatible_IDX_0_STRING_TOKEN nxp_imx_pwm
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm0_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_IMX_PWM
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm0_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm0_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm0, compatible, 0)
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm0_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm0, compatible, 0)
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm0_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm0, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm0_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm0, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm0_P_compatible_LEN 1
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm0_P_compatible_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm0_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm0_P_clocks_IDX_0_PH DT_N_S_soc_S_ccm_400fc000
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm0_P_clocks_IDX_0_VAL_name 3072
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm0_P_clocks_IDX_0_VAL_name_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm0_P_clocks_IDX_0_VAL_offset 0
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm0_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm0_P_clocks_IDX_0_VAL_bits 0
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm0_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm0_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm0, clocks, 0)
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm0_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm0, clocks, 0)
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm0_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm0, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm0_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm0, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm0_P_clocks_LEN 1
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm0_P_clocks_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm0_P_wakeup_source 0
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm0_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/flexpwm@403e4000/pwm1
 *
 * Node identifier: DT_N_S_soc_S_flexpwm_403e4000_S_pwm1
 *
 * Binding (compatible = nxp,imx-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/nxp,imx-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm1_PATH "/soc/flexpwm@403e4000/pwm1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm1_FULL_NAME "pwm1"

/* Node parent (/soc/flexpwm@403e4000) identifier: */
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm1_PARENT DT_N_S_soc_S_flexpwm_403e4000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm1_CHILD_IDX 1

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm1_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm1_ORD 165

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm1_REQUIRES_ORDS \
	12, /* /soc/interrupt-controller@e000e100 */ \
	60, /* /soc/ccm@400fc000 */ \
	163, /* /soc/flexpwm@403e4000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm1_EXISTS 1
#define DT_N_INST_9_nxp_imx_pwm      DT_N_S_soc_S_flexpwm_403e4000_S_pwm1
#define DT_N_NODELABEL_flexpwm3_pwm1 DT_N_S_soc_S_flexpwm_403e4000_S_pwm1

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm1_REG_NUM 0
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm1_RANGES_NUM 0
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm1_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm1_IRQ_NUM 1
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm1_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm1_IRQ_IDX_0_VAL_irq 143
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm1_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm1_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm1_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm1_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm1_COMPAT_MATCHES_nxp_imx_pwm 1
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm1_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm1_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm1_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm1_COMPAT_MODEL_IDX_0 "imx-pwm"
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm1_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm1_P_index 1
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm1_P_index_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm1_P_interrupts {143 /* 0x8f */, 0 /* 0x0 */}
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm1_P_interrupts_IDX_0 143
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm1_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm1_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm1_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm1_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm1, interrupts, 0) \
	fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm1, interrupts, 1)
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm1_P_interrupts_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm1, interrupts, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm1, interrupts, 1)
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm1_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm1, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm1, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm1_P_interrupts_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm1, interrupts, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm1, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm1_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm1_P_run_in_wait 0
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm1_P_run_in_wait_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm1_P_run_in_debug 0
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm1_P_run_in_debug_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm1_P_nxp_prescaler 128
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm1_P_nxp_prescaler_ENUM_IDX 7
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm1_P_nxp_prescaler_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm1_P_status "disabled"
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm1_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm1_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm1_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm1_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm1_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm1_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm1_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm1, status, 0) \
	fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm1, status, 1) \
	fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm1, status, 2) \
	fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm1, status, 3) \
	fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm1, status, 4) \
	fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm1, status, 5) \
	fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm1, status, 6) \
	fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm1, status, 7)
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm1_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm1, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm1, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm1, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm1, status, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm1, status, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm1, status, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm1, status, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm1, status, 7)
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm1_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm1, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm1, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm1, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm1, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm1, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm1, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm1, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm1, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm1_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm1, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm1, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm1, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm1, status, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm1, status, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm1, status, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm1, status, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm1, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm1_P_status_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm1_P_compatible {"nxp,imx-pwm"}
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm1_P_compatible_IDX_0 "nxp,imx-pwm"
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm1_P_compatible_IDX_0_STRING_UNQUOTED nxp,imx-pwm
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm1_P_compatible_IDX_0_STRING_TOKEN nxp_imx_pwm
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm1_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_IMX_PWM
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm1_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm1_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm1, compatible, 0)
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm1_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm1, compatible, 0)
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm1_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm1, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm1_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm1, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm1_P_compatible_LEN 1
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm1_P_compatible_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm1_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm1_P_clocks_IDX_0_PH DT_N_S_soc_S_ccm_400fc000
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm1_P_clocks_IDX_0_VAL_name 3072
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm1_P_clocks_IDX_0_VAL_name_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm1_P_clocks_IDX_0_VAL_offset 0
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm1_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm1_P_clocks_IDX_0_VAL_bits 0
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm1_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm1_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm1, clocks, 0)
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm1_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm1, clocks, 0)
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm1_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm1, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm1_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm1, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm1_P_clocks_LEN 1
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm1_P_clocks_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm1_P_wakeup_source 0
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm1_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/flexpwm@403e4000/pwm2
 *
 * Node identifier: DT_N_S_soc_S_flexpwm_403e4000_S_pwm2
 *
 * Binding (compatible = nxp,imx-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/nxp,imx-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm2_PATH "/soc/flexpwm@403e4000/pwm2"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm2_FULL_NAME "pwm2"

/* Node parent (/soc/flexpwm@403e4000) identifier: */
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm2_PARENT DT_N_S_soc_S_flexpwm_403e4000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm2_CHILD_IDX 2

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm2_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm2_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm2_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm2_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm2_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm2_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm2_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm2_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm2_ORD 166

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm2_REQUIRES_ORDS \
	12, /* /soc/interrupt-controller@e000e100 */ \
	60, /* /soc/ccm@400fc000 */ \
	163, /* /soc/flexpwm@403e4000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm2_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm2_EXISTS 1
#define DT_N_INST_10_nxp_imx_pwm     DT_N_S_soc_S_flexpwm_403e4000_S_pwm2
#define DT_N_NODELABEL_flexpwm3_pwm2 DT_N_S_soc_S_flexpwm_403e4000_S_pwm2

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm2_REG_NUM 0
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm2_RANGES_NUM 0
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm2_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm2_IRQ_NUM 1
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm2_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm2_IRQ_IDX_0_VAL_irq 144
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm2_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm2_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm2_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm2_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm2_COMPAT_MATCHES_nxp_imx_pwm 1
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm2_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm2_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm2_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm2_COMPAT_MODEL_IDX_0 "imx-pwm"
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm2_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm2_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm2_P_index 2
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm2_P_index_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm2_P_interrupts {144 /* 0x90 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm2_P_interrupts_IDX_0 144
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm2_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm2_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm2_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm2_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm2, interrupts, 0) \
	fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm2, interrupts, 1)
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm2_P_interrupts_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm2, interrupts, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm2, interrupts, 1)
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm2_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm2, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm2, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm2_P_interrupts_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm2, interrupts, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm2, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm2_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm2_P_run_in_wait 0
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm2_P_run_in_wait_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm2_P_run_in_debug 0
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm2_P_run_in_debug_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm2_P_nxp_prescaler 128
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm2_P_nxp_prescaler_ENUM_IDX 7
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm2_P_nxp_prescaler_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm2_P_status "disabled"
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm2_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm2_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm2_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm2_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm2_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm2_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm2_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm2, status, 0) \
	fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm2, status, 1) \
	fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm2, status, 2) \
	fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm2, status, 3) \
	fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm2, status, 4) \
	fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm2, status, 5) \
	fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm2, status, 6) \
	fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm2, status, 7)
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm2_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm2, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm2, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm2, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm2, status, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm2, status, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm2, status, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm2, status, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm2, status, 7)
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm2_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm2, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm2, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm2, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm2, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm2, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm2, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm2, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm2, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm2_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm2, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm2, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm2, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm2, status, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm2, status, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm2, status, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm2, status, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm2, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm2_P_status_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm2_P_compatible {"nxp,imx-pwm"}
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm2_P_compatible_IDX_0 "nxp,imx-pwm"
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm2_P_compatible_IDX_0_STRING_UNQUOTED nxp,imx-pwm
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm2_P_compatible_IDX_0_STRING_TOKEN nxp_imx_pwm
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm2_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_IMX_PWM
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm2_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm2_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm2, compatible, 0)
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm2_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm2, compatible, 0)
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm2_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm2, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm2_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm2, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm2_P_compatible_LEN 1
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm2_P_compatible_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm2_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm2_P_clocks_IDX_0_PH DT_N_S_soc_S_ccm_400fc000
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm2_P_clocks_IDX_0_VAL_name 3072
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm2_P_clocks_IDX_0_VAL_name_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm2_P_clocks_IDX_0_VAL_offset 0
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm2_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm2_P_clocks_IDX_0_VAL_bits 0
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm2_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm2_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm2, clocks, 0)
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm2_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm2, clocks, 0)
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm2_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm2, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm2_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm2, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm2_P_clocks_LEN 1
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm2_P_clocks_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm2_P_wakeup_source 0
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm2_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/flexpwm@403e4000/pwm3
 *
 * Node identifier: DT_N_S_soc_S_flexpwm_403e4000_S_pwm3
 *
 * Binding (compatible = nxp,imx-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/nxp,imx-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm3_PATH "/soc/flexpwm@403e4000/pwm3"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm3_FULL_NAME "pwm3"

/* Node parent (/soc/flexpwm@403e4000) identifier: */
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm3_PARENT DT_N_S_soc_S_flexpwm_403e4000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm3_CHILD_IDX 3

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm3_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm3_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm3_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm3_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm3_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm3_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm3_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm3_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm3_ORD 167

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm3_REQUIRES_ORDS \
	12, /* /soc/interrupt-controller@e000e100 */ \
	60, /* /soc/ccm@400fc000 */ \
	163, /* /soc/flexpwm@403e4000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm3_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm3_EXISTS 1
#define DT_N_INST_11_nxp_imx_pwm     DT_N_S_soc_S_flexpwm_403e4000_S_pwm3
#define DT_N_NODELABEL_flexpwm3_pwm3 DT_N_S_soc_S_flexpwm_403e4000_S_pwm3

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm3_REG_NUM 0
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm3_RANGES_NUM 0
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm3_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm3_IRQ_NUM 1
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm3_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm3_IRQ_IDX_0_VAL_irq 145
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm3_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm3_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm3_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm3_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm3_COMPAT_MATCHES_nxp_imx_pwm 1
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm3_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm3_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm3_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm3_COMPAT_MODEL_IDX_0 "imx-pwm"
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm3_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm3_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm3_P_index 3
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm3_P_index_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm3_P_interrupts {145 /* 0x91 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm3_P_interrupts_IDX_0 145
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm3_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm3_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm3_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm3_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm3, interrupts, 0) \
	fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm3, interrupts, 1)
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm3_P_interrupts_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm3, interrupts, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm3, interrupts, 1)
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm3_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm3, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm3, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm3_P_interrupts_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm3, interrupts, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm3, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm3_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm3_P_run_in_wait 0
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm3_P_run_in_wait_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm3_P_run_in_debug 0
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm3_P_run_in_debug_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm3_P_nxp_prescaler 128
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm3_P_nxp_prescaler_ENUM_IDX 7
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm3_P_nxp_prescaler_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm3_P_status "disabled"
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm3_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm3_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm3_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm3_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm3_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm3_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm3_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm3, status, 0) \
	fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm3, status, 1) \
	fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm3, status, 2) \
	fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm3, status, 3) \
	fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm3, status, 4) \
	fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm3, status, 5) \
	fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm3, status, 6) \
	fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm3, status, 7)
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm3_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm3, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm3, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm3, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm3, status, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm3, status, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm3, status, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm3, status, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm3, status, 7)
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm3_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm3, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm3, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm3, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm3, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm3, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm3, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm3, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm3, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm3_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm3, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm3, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm3, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm3, status, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm3, status, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm3, status, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm3, status, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm3, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm3_P_status_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm3_P_compatible {"nxp,imx-pwm"}
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm3_P_compatible_IDX_0 "nxp,imx-pwm"
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm3_P_compatible_IDX_0_STRING_UNQUOTED nxp,imx-pwm
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm3_P_compatible_IDX_0_STRING_TOKEN nxp_imx_pwm
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm3_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_IMX_PWM
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm3_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm3_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm3, compatible, 0)
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm3_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm3, compatible, 0)
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm3_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm3, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm3_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm3, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm3_P_compatible_LEN 1
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm3_P_compatible_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm3_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm3_P_clocks_IDX_0_PH DT_N_S_soc_S_ccm_400fc000
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm3_P_clocks_IDX_0_VAL_name 3072
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm3_P_clocks_IDX_0_VAL_name_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm3_P_clocks_IDX_0_VAL_offset 0
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm3_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm3_P_clocks_IDX_0_VAL_bits 0
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm3_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm3_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm3, clocks, 0)
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm3_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm3, clocks, 0)
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm3_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm3, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm3_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm3, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm3_P_clocks_LEN 1
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm3_P_clocks_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm3_P_wakeup_source 0
#define DT_N_S_soc_S_flexpwm_403e4000_S_pwm3_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/flexpwm@403e8000
 *
 * Node identifier: DT_N_S_soc_S_flexpwm_403e8000
 *
 * Binding (compatible = nxp,flexpwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/nxp,flexpwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flexpwm_403e8000_PATH "/soc/flexpwm@403e8000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flexpwm_403e8000_FULL_NAME "flexpwm@403e8000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_flexpwm_403e8000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flexpwm_403e8000_CHILD_IDX 40

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flexpwm_403e8000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm0) fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm1) fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm2) fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm3)
#define DT_N_S_soc_S_flexpwm_403e8000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm2) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm3)
#define DT_N_S_soc_S_flexpwm_403e8000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm0, __VA_ARGS__) fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm1, __VA_ARGS__) fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm2, __VA_ARGS__) fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm3, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403e8000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm3, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403e8000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_flexpwm_403e8000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_flexpwm_403e8000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_flexpwm_403e8000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flexpwm_403e8000_ORD 168

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flexpwm_403e8000_REQUIRES_ORDS \
	11, /* /soc */ \
	12, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flexpwm_403e8000_SUPPORTS_ORDS \
	169, /* /soc/flexpwm@403e8000/pwm0 */ \
	170, /* /soc/flexpwm@403e8000/pwm1 */ \
	171, /* /soc/flexpwm@403e8000/pwm2 */ \
	172, /* /soc/flexpwm@403e8000/pwm3 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flexpwm_403e8000_EXISTS 1
#define DT_N_INST_3_nxp_flexpwm DT_N_S_soc_S_flexpwm_403e8000
#define DT_N_NODELABEL_flexpwm4 DT_N_S_soc_S_flexpwm_403e8000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flexpwm_403e8000_REG_NUM 1
#define DT_N_S_soc_S_flexpwm_403e8000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e8000_REG_IDX_0_VAL_ADDRESS 1077837824 /* 0x403e8000 */
#define DT_N_S_soc_S_flexpwm_403e8000_REG_IDX_0_VAL_SIZE 16384 /* 0x4000 */
#define DT_N_S_soc_S_flexpwm_403e8000_RANGES_NUM 0
#define DT_N_S_soc_S_flexpwm_403e8000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flexpwm_403e8000_IRQ_NUM 1
#define DT_N_S_soc_S_flexpwm_403e8000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e8000_IRQ_IDX_0_VAL_irq 151
#define DT_N_S_soc_S_flexpwm_403e8000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e8000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e8000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_flexpwm_403e8000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e8000_COMPAT_MATCHES_nxp_flexpwm 1
#define DT_N_S_soc_S_flexpwm_403e8000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e8000_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_soc_S_flexpwm_403e8000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e8000_COMPAT_MODEL_IDX_0 "flexpwm"
#define DT_N_S_soc_S_flexpwm_403e8000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flexpwm_403e8000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_flexpwm_403e8000_P_reg {1077837824 /* 0x403e8000 */, 16384 /* 0x4000 */}
#define DT_N_S_soc_S_flexpwm_403e8000_P_reg_IDX_0 1077837824
#define DT_N_S_soc_S_flexpwm_403e8000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e8000_P_reg_IDX_1 16384
#define DT_N_S_soc_S_flexpwm_403e8000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e8000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flexpwm_403e8000, reg, 0) \
	fn(DT_N_S_soc_S_flexpwm_403e8000, reg, 1)
#define DT_N_S_soc_S_flexpwm_403e8000_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flexpwm_403e8000, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e8000, reg, 1)
#define DT_N_S_soc_S_flexpwm_403e8000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flexpwm_403e8000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexpwm_403e8000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403e8000_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flexpwm_403e8000, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e8000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403e8000_P_reg_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e8000_P_interrupts {151 /* 0x97 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_flexpwm_403e8000_P_interrupts_IDX_0 151
#define DT_N_S_soc_S_flexpwm_403e8000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e8000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_flexpwm_403e8000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e8000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flexpwm_403e8000, interrupts, 0) \
	fn(DT_N_S_soc_S_flexpwm_403e8000, interrupts, 1)
#define DT_N_S_soc_S_flexpwm_403e8000_P_interrupts_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flexpwm_403e8000, interrupts, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e8000, interrupts, 1)
#define DT_N_S_soc_S_flexpwm_403e8000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flexpwm_403e8000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexpwm_403e8000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403e8000_P_interrupts_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flexpwm_403e8000, interrupts, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e8000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403e8000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e8000_P_compatible {"nxp,flexpwm"}
#define DT_N_S_soc_S_flexpwm_403e8000_P_compatible_IDX_0 "nxp,flexpwm"
#define DT_N_S_soc_S_flexpwm_403e8000_P_compatible_IDX_0_STRING_UNQUOTED nxp,flexpwm
#define DT_N_S_soc_S_flexpwm_403e8000_P_compatible_IDX_0_STRING_TOKEN nxp_flexpwm
#define DT_N_S_soc_S_flexpwm_403e8000_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_FLEXPWM
#define DT_N_S_soc_S_flexpwm_403e8000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e8000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flexpwm_403e8000, compatible, 0)
#define DT_N_S_soc_S_flexpwm_403e8000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flexpwm_403e8000, compatible, 0)
#define DT_N_S_soc_S_flexpwm_403e8000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flexpwm_403e8000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403e8000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flexpwm_403e8000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403e8000_P_compatible_LEN 1
#define DT_N_S_soc_S_flexpwm_403e8000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e8000_P_wakeup_source 0
#define DT_N_S_soc_S_flexpwm_403e8000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/flexpwm@403e8000/pwm0
 *
 * Node identifier: DT_N_S_soc_S_flexpwm_403e8000_S_pwm0
 *
 * Binding (compatible = nxp,imx-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/nxp,imx-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm0_PATH "/soc/flexpwm@403e8000/pwm0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm0_FULL_NAME "pwm0"

/* Node parent (/soc/flexpwm@403e8000) identifier: */
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm0_PARENT DT_N_S_soc_S_flexpwm_403e8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm0_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm0_ORD 169

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm0_REQUIRES_ORDS \
	12, /* /soc/interrupt-controller@e000e100 */ \
	60, /* /soc/ccm@400fc000 */ \
	168, /* /soc/flexpwm@403e8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm0_EXISTS 1
#define DT_N_INST_12_nxp_imx_pwm     DT_N_S_soc_S_flexpwm_403e8000_S_pwm0
#define DT_N_NODELABEL_flexpwm4_pwm0 DT_N_S_soc_S_flexpwm_403e8000_S_pwm0

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm0_REG_NUM 0
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm0_RANGES_NUM 0
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm0_IRQ_NUM 1
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm0_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm0_IRQ_IDX_0_VAL_irq 147
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm0_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm0_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm0_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm0_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm0_COMPAT_MATCHES_nxp_imx_pwm 1
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm0_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm0_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm0_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm0_COMPAT_MODEL_IDX_0 "imx-pwm"
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm0_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm0_P_index 0
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm0_P_index_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm0_P_interrupts {147 /* 0x93 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm0_P_interrupts_IDX_0 147
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm0_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm0_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm0_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm0_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm0, interrupts, 0) \
	fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm0, interrupts, 1)
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm0_P_interrupts_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm0, interrupts, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm0, interrupts, 1)
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm0_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm0, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm0, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm0_P_interrupts_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm0, interrupts, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm0, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm0_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm0_P_run_in_wait 0
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm0_P_run_in_wait_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm0_P_run_in_debug 0
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm0_P_run_in_debug_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm0_P_nxp_prescaler 128
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm0_P_nxp_prescaler_ENUM_IDX 7
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm0_P_nxp_prescaler_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm0_P_status "disabled"
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm0_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm0_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm0_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm0_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm0_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm0_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm0_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm0, status, 0) \
	fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm0, status, 1) \
	fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm0, status, 2) \
	fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm0, status, 3) \
	fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm0, status, 4) \
	fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm0, status, 5) \
	fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm0, status, 6) \
	fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm0, status, 7)
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm0_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm0, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm0, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm0, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm0, status, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm0, status, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm0, status, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm0, status, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm0, status, 7)
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm0_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm0, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm0, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm0, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm0, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm0, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm0, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm0, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm0, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm0_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm0, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm0, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm0, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm0, status, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm0, status, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm0, status, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm0, status, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm0, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm0_P_status_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm0_P_compatible {"nxp,imx-pwm"}
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm0_P_compatible_IDX_0 "nxp,imx-pwm"
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm0_P_compatible_IDX_0_STRING_UNQUOTED nxp,imx-pwm
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm0_P_compatible_IDX_0_STRING_TOKEN nxp_imx_pwm
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm0_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_IMX_PWM
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm0_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm0_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm0, compatible, 0)
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm0_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm0, compatible, 0)
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm0_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm0, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm0_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm0, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm0_P_compatible_LEN 1
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm0_P_compatible_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm0_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm0_P_clocks_IDX_0_PH DT_N_S_soc_S_ccm_400fc000
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm0_P_clocks_IDX_0_VAL_name 3072
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm0_P_clocks_IDX_0_VAL_name_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm0_P_clocks_IDX_0_VAL_offset 0
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm0_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm0_P_clocks_IDX_0_VAL_bits 0
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm0_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm0_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm0, clocks, 0)
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm0_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm0, clocks, 0)
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm0_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm0, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm0_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm0, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm0_P_clocks_LEN 1
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm0_P_clocks_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm0_P_wakeup_source 0
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm0_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/flexpwm@403e8000/pwm1
 *
 * Node identifier: DT_N_S_soc_S_flexpwm_403e8000_S_pwm1
 *
 * Binding (compatible = nxp,imx-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/nxp,imx-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm1_PATH "/soc/flexpwm@403e8000/pwm1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm1_FULL_NAME "pwm1"

/* Node parent (/soc/flexpwm@403e8000) identifier: */
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm1_PARENT DT_N_S_soc_S_flexpwm_403e8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm1_CHILD_IDX 1

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm1_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm1_ORD 170

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm1_REQUIRES_ORDS \
	12, /* /soc/interrupt-controller@e000e100 */ \
	60, /* /soc/ccm@400fc000 */ \
	168, /* /soc/flexpwm@403e8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm1_EXISTS 1
#define DT_N_INST_13_nxp_imx_pwm     DT_N_S_soc_S_flexpwm_403e8000_S_pwm1
#define DT_N_NODELABEL_flexpwm4_pwm1 DT_N_S_soc_S_flexpwm_403e8000_S_pwm1

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm1_REG_NUM 0
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm1_RANGES_NUM 0
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm1_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm1_IRQ_NUM 1
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm1_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm1_IRQ_IDX_0_VAL_irq 148
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm1_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm1_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm1_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm1_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm1_COMPAT_MATCHES_nxp_imx_pwm 1
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm1_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm1_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm1_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm1_COMPAT_MODEL_IDX_0 "imx-pwm"
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm1_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm1_P_index 1
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm1_P_index_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm1_P_interrupts {148 /* 0x94 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm1_P_interrupts_IDX_0 148
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm1_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm1_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm1_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm1_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm1, interrupts, 0) \
	fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm1, interrupts, 1)
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm1_P_interrupts_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm1, interrupts, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm1, interrupts, 1)
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm1_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm1, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm1, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm1_P_interrupts_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm1, interrupts, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm1, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm1_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm1_P_run_in_wait 0
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm1_P_run_in_wait_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm1_P_run_in_debug 0
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm1_P_run_in_debug_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm1_P_nxp_prescaler 128
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm1_P_nxp_prescaler_ENUM_IDX 7
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm1_P_nxp_prescaler_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm1_P_status "disabled"
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm1_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm1_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm1_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm1_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm1_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm1_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm1_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm1, status, 0) \
	fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm1, status, 1) \
	fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm1, status, 2) \
	fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm1, status, 3) \
	fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm1, status, 4) \
	fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm1, status, 5) \
	fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm1, status, 6) \
	fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm1, status, 7)
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm1_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm1, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm1, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm1, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm1, status, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm1, status, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm1, status, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm1, status, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm1, status, 7)
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm1_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm1, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm1, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm1, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm1, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm1, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm1, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm1, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm1, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm1_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm1, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm1, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm1, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm1, status, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm1, status, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm1, status, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm1, status, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm1, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm1_P_status_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm1_P_compatible {"nxp,imx-pwm"}
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm1_P_compatible_IDX_0 "nxp,imx-pwm"
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm1_P_compatible_IDX_0_STRING_UNQUOTED nxp,imx-pwm
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm1_P_compatible_IDX_0_STRING_TOKEN nxp_imx_pwm
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm1_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_IMX_PWM
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm1_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm1_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm1, compatible, 0)
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm1_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm1, compatible, 0)
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm1_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm1, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm1_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm1, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm1_P_compatible_LEN 1
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm1_P_compatible_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm1_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm1_P_clocks_IDX_0_PH DT_N_S_soc_S_ccm_400fc000
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm1_P_clocks_IDX_0_VAL_name 3072
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm1_P_clocks_IDX_0_VAL_name_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm1_P_clocks_IDX_0_VAL_offset 0
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm1_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm1_P_clocks_IDX_0_VAL_bits 0
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm1_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm1_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm1, clocks, 0)
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm1_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm1, clocks, 0)
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm1_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm1, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm1_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm1, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm1_P_clocks_LEN 1
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm1_P_clocks_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm1_P_wakeup_source 0
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm1_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/flexpwm@403e8000/pwm2
 *
 * Node identifier: DT_N_S_soc_S_flexpwm_403e8000_S_pwm2
 *
 * Binding (compatible = nxp,imx-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/nxp,imx-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm2_PATH "/soc/flexpwm@403e8000/pwm2"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm2_FULL_NAME "pwm2"

/* Node parent (/soc/flexpwm@403e8000) identifier: */
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm2_PARENT DT_N_S_soc_S_flexpwm_403e8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm2_CHILD_IDX 2

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm2_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm2_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm2_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm2_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm2_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm2_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm2_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm2_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm2_ORD 171

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm2_REQUIRES_ORDS \
	12, /* /soc/interrupt-controller@e000e100 */ \
	60, /* /soc/ccm@400fc000 */ \
	168, /* /soc/flexpwm@403e8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm2_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm2_EXISTS 1
#define DT_N_INST_14_nxp_imx_pwm     DT_N_S_soc_S_flexpwm_403e8000_S_pwm2
#define DT_N_NODELABEL_flexpwm4_pwm2 DT_N_S_soc_S_flexpwm_403e8000_S_pwm2

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm2_REG_NUM 0
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm2_RANGES_NUM 0
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm2_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm2_IRQ_NUM 1
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm2_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm2_IRQ_IDX_0_VAL_irq 149
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm2_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm2_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm2_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm2_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm2_COMPAT_MATCHES_nxp_imx_pwm 1
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm2_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm2_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm2_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm2_COMPAT_MODEL_IDX_0 "imx-pwm"
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm2_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm2_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm2_P_index 2
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm2_P_index_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm2_P_interrupts {149 /* 0x95 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm2_P_interrupts_IDX_0 149
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm2_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm2_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm2_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm2_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm2, interrupts, 0) \
	fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm2, interrupts, 1)
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm2_P_interrupts_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm2, interrupts, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm2, interrupts, 1)
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm2_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm2, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm2, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm2_P_interrupts_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm2, interrupts, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm2, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm2_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm2_P_run_in_wait 0
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm2_P_run_in_wait_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm2_P_run_in_debug 0
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm2_P_run_in_debug_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm2_P_nxp_prescaler 128
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm2_P_nxp_prescaler_ENUM_IDX 7
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm2_P_nxp_prescaler_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm2_P_status "disabled"
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm2_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm2_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm2_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm2_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm2_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm2_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm2_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm2, status, 0) \
	fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm2, status, 1) \
	fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm2, status, 2) \
	fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm2, status, 3) \
	fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm2, status, 4) \
	fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm2, status, 5) \
	fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm2, status, 6) \
	fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm2, status, 7)
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm2_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm2, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm2, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm2, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm2, status, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm2, status, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm2, status, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm2, status, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm2, status, 7)
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm2_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm2, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm2, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm2, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm2, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm2, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm2, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm2, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm2, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm2_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm2, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm2, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm2, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm2, status, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm2, status, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm2, status, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm2, status, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm2, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm2_P_status_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm2_P_compatible {"nxp,imx-pwm"}
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm2_P_compatible_IDX_0 "nxp,imx-pwm"
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm2_P_compatible_IDX_0_STRING_UNQUOTED nxp,imx-pwm
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm2_P_compatible_IDX_0_STRING_TOKEN nxp_imx_pwm
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm2_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_IMX_PWM
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm2_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm2_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm2, compatible, 0)
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm2_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm2, compatible, 0)
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm2_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm2, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm2_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm2, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm2_P_compatible_LEN 1
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm2_P_compatible_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm2_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm2_P_clocks_IDX_0_PH DT_N_S_soc_S_ccm_400fc000
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm2_P_clocks_IDX_0_VAL_name 3072
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm2_P_clocks_IDX_0_VAL_name_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm2_P_clocks_IDX_0_VAL_offset 0
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm2_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm2_P_clocks_IDX_0_VAL_bits 0
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm2_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm2_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm2, clocks, 0)
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm2_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm2, clocks, 0)
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm2_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm2, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm2_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm2, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm2_P_clocks_LEN 1
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm2_P_clocks_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm2_P_wakeup_source 0
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm2_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/flexpwm@403e8000/pwm3
 *
 * Node identifier: DT_N_S_soc_S_flexpwm_403e8000_S_pwm3
 *
 * Binding (compatible = nxp,imx-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/nxp,imx-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm3_PATH "/soc/flexpwm@403e8000/pwm3"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm3_FULL_NAME "pwm3"

/* Node parent (/soc/flexpwm@403e8000) identifier: */
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm3_PARENT DT_N_S_soc_S_flexpwm_403e8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm3_CHILD_IDX 3

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm3_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm3_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm3_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm3_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm3_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm3_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm3_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm3_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm3_ORD 172

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm3_REQUIRES_ORDS \
	12, /* /soc/interrupt-controller@e000e100 */ \
	60, /* /soc/ccm@400fc000 */ \
	168, /* /soc/flexpwm@403e8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm3_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm3_EXISTS 1
#define DT_N_INST_15_nxp_imx_pwm     DT_N_S_soc_S_flexpwm_403e8000_S_pwm3
#define DT_N_NODELABEL_flexpwm4_pwm3 DT_N_S_soc_S_flexpwm_403e8000_S_pwm3

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm3_REG_NUM 0
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm3_RANGES_NUM 0
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm3_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm3_IRQ_NUM 1
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm3_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm3_IRQ_IDX_0_VAL_irq 150
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm3_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm3_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm3_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm3_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm3_COMPAT_MATCHES_nxp_imx_pwm 1
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm3_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm3_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm3_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm3_COMPAT_MODEL_IDX_0 "imx-pwm"
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm3_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm3_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm3_P_index 3
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm3_P_index_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm3_P_interrupts {150 /* 0x96 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm3_P_interrupts_IDX_0 150
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm3_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm3_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm3_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm3_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm3, interrupts, 0) \
	fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm3, interrupts, 1)
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm3_P_interrupts_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm3, interrupts, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm3, interrupts, 1)
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm3_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm3, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm3, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm3_P_interrupts_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm3, interrupts, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm3, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm3_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm3_P_run_in_wait 0
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm3_P_run_in_wait_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm3_P_run_in_debug 0
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm3_P_run_in_debug_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm3_P_nxp_prescaler 128
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm3_P_nxp_prescaler_ENUM_IDX 7
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm3_P_nxp_prescaler_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm3_P_status "disabled"
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm3_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm3_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm3_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm3_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm3_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm3_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm3_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm3, status, 0) \
	fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm3, status, 1) \
	fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm3, status, 2) \
	fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm3, status, 3) \
	fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm3, status, 4) \
	fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm3, status, 5) \
	fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm3, status, 6) \
	fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm3, status, 7)
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm3_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm3, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm3, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm3, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm3, status, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm3, status, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm3, status, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm3, status, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm3, status, 7)
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm3_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm3, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm3, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm3, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm3, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm3, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm3, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm3, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm3, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm3_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm3, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm3, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm3, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm3, status, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm3, status, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm3, status, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm3, status, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm3, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm3_P_status_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm3_P_compatible {"nxp,imx-pwm"}
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm3_P_compatible_IDX_0 "nxp,imx-pwm"
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm3_P_compatible_IDX_0_STRING_UNQUOTED nxp,imx-pwm
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm3_P_compatible_IDX_0_STRING_TOKEN nxp_imx_pwm
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm3_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_IMX_PWM
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm3_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm3_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm3, compatible, 0)
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm3_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm3, compatible, 0)
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm3_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm3, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm3_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm3, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm3_P_compatible_LEN 1
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm3_P_compatible_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm3_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm3_P_clocks_IDX_0_PH DT_N_S_soc_S_ccm_400fc000
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm3_P_clocks_IDX_0_VAL_name 3072
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm3_P_clocks_IDX_0_VAL_name_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm3_P_clocks_IDX_0_VAL_offset 0
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm3_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm3_P_clocks_IDX_0_VAL_bits 0
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm3_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm3_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm3, clocks, 0)
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm3_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm3, clocks, 0)
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm3_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm3, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm3_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm3, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm3_P_clocks_LEN 1
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm3_P_clocks_EXISTS 1
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm3_P_wakeup_source 0
#define DT_N_S_soc_S_flexpwm_403e8000_S_pwm3_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/flexram@400b0000
 *
 * Node identifier: DT_N_S_soc_S_flexram_400b0000
 */

/* Node's full path: */
#define DT_N_S_soc_S_flexram_400b0000_PATH "/soc/flexram@400b0000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flexram_400b0000_FULL_NAME "flexram@400b0000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_flexram_400b0000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flexram_400b0000_CHILD_IDX 2

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flexram_400b0000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_flexram_400b0000_S_itcm_0) fn(DT_N_S_soc_S_flexram_400b0000_S_dtcm_20000000) fn(DT_N_S_soc_S_flexram_400b0000_S_ocram_20200000)
#define DT_N_S_soc_S_flexram_400b0000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_flexram_400b0000_S_itcm_0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flexram_400b0000_S_dtcm_20000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flexram_400b0000_S_ocram_20200000)
#define DT_N_S_soc_S_flexram_400b0000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_flexram_400b0000_S_itcm_0, __VA_ARGS__) fn(DT_N_S_soc_S_flexram_400b0000_S_dtcm_20000000, __VA_ARGS__) fn(DT_N_S_soc_S_flexram_400b0000_S_ocram_20200000, __VA_ARGS__)
#define DT_N_S_soc_S_flexram_400b0000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flexram_400b0000_S_itcm_0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flexram_400b0000_S_dtcm_20000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flexram_400b0000_S_ocram_20200000, __VA_ARGS__)
#define DT_N_S_soc_S_flexram_400b0000_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_flexram_400b0000_S_itcm_0) fn(DT_N_S_soc_S_flexram_400b0000_S_dtcm_20000000) fn(DT_N_S_soc_S_flexram_400b0000_S_ocram_20200000)
#define DT_N_S_soc_S_flexram_400b0000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_flexram_400b0000_S_itcm_0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flexram_400b0000_S_dtcm_20000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flexram_400b0000_S_ocram_20200000)
#define DT_N_S_soc_S_flexram_400b0000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_flexram_400b0000_S_itcm_0, __VA_ARGS__) fn(DT_N_S_soc_S_flexram_400b0000_S_dtcm_20000000, __VA_ARGS__) fn(DT_N_S_soc_S_flexram_400b0000_S_ocram_20200000, __VA_ARGS__)
#define DT_N_S_soc_S_flexram_400b0000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flexram_400b0000_S_itcm_0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flexram_400b0000_S_dtcm_20000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flexram_400b0000_S_ocram_20200000, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flexram_400b0000_ORD 173

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flexram_400b0000_REQUIRES_ORDS \
	11, /* /soc */ \
	12, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flexram_400b0000_SUPPORTS_ORDS \
	174, /* /soc/flexram@400b0000/dtcm@20000000 */ \
	175, /* /soc/flexram@400b0000/itcm@0 */ \
	176, /* /soc/flexram@400b0000/ocram@20200000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flexram_400b0000_EXISTS 1
#define DT_N_INST_0_nxp_imx_flexram DT_N_S_soc_S_flexram_400b0000
#define DT_N_NODELABEL_flexram      DT_N_S_soc_S_flexram_400b0000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flexram_400b0000_REG_NUM 1
#define DT_N_S_soc_S_flexram_400b0000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexram_400b0000_REG_IDX_0_VAL_ADDRESS 1074462720 /* 0x400b0000 */
#define DT_N_S_soc_S_flexram_400b0000_REG_IDX_0_VAL_SIZE 16384 /* 0x4000 */
#define DT_N_S_soc_S_flexram_400b0000_RANGES_NUM 0
#define DT_N_S_soc_S_flexram_400b0000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flexram_400b0000_IRQ_NUM 1
#define DT_N_S_soc_S_flexram_400b0000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexram_400b0000_IRQ_IDX_0_VAL_irq 38
#define DT_N_S_soc_S_flexram_400b0000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_flexram_400b0000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexram_400b0000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_flexram_400b0000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_flexram_400b0000_COMPAT_MATCHES_nxp_imx_flexram 1
#define DT_N_S_soc_S_flexram_400b0000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexram_400b0000_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_soc_S_flexram_400b0000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexram_400b0000_COMPAT_MODEL_IDX_0 "imx-flexram"
#define DT_N_S_soc_S_flexram_400b0000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flexram_400b0000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_flexram_400b0000_P_compatible {"nxp,imx-flexram"}
#define DT_N_S_soc_S_flexram_400b0000_P_compatible_IDX_0 "nxp,imx-flexram"
#define DT_N_S_soc_S_flexram_400b0000_P_compatible_IDX_0_STRING_UNQUOTED nxp,imx-flexram
#define DT_N_S_soc_S_flexram_400b0000_P_compatible_IDX_0_STRING_TOKEN nxp_imx_flexram
#define DT_N_S_soc_S_flexram_400b0000_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_IMX_FLEXRAM
#define DT_N_S_soc_S_flexram_400b0000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexram_400b0000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flexram_400b0000, compatible, 0)
#define DT_N_S_soc_S_flexram_400b0000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flexram_400b0000, compatible, 0)
#define DT_N_S_soc_S_flexram_400b0000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flexram_400b0000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flexram_400b0000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flexram_400b0000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flexram_400b0000_P_compatible_LEN 1
#define DT_N_S_soc_S_flexram_400b0000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_flexram_400b0000_P_reg {1074462720 /* 0x400b0000 */, 16384 /* 0x4000 */}
#define DT_N_S_soc_S_flexram_400b0000_P_reg_IDX_0 1074462720
#define DT_N_S_soc_S_flexram_400b0000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexram_400b0000_P_reg_IDX_1 16384
#define DT_N_S_soc_S_flexram_400b0000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flexram_400b0000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flexram_400b0000, reg, 0) \
	fn(DT_N_S_soc_S_flexram_400b0000, reg, 1)
#define DT_N_S_soc_S_flexram_400b0000_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flexram_400b0000, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexram_400b0000, reg, 1)
#define DT_N_S_soc_S_flexram_400b0000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flexram_400b0000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexram_400b0000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_flexram_400b0000_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flexram_400b0000, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexram_400b0000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_flexram_400b0000_P_reg_EXISTS 1
#define DT_N_S_soc_S_flexram_400b0000_P_interrupts {38 /* 0x26 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_flexram_400b0000_P_interrupts_IDX_0 38
#define DT_N_S_soc_S_flexram_400b0000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexram_400b0000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_flexram_400b0000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flexram_400b0000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flexram_400b0000, interrupts, 0) \
	fn(DT_N_S_soc_S_flexram_400b0000, interrupts, 1)
#define DT_N_S_soc_S_flexram_400b0000_P_interrupts_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flexram_400b0000, interrupts, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexram_400b0000, interrupts, 1)
#define DT_N_S_soc_S_flexram_400b0000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flexram_400b0000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexram_400b0000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_flexram_400b0000_P_interrupts_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flexram_400b0000, interrupts, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexram_400b0000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_flexram_400b0000_P_interrupts_EXISTS 1

/*
 * Devicetree node: /soc/flexram@400b0000/dtcm@20000000
 *
 * Node identifier: DT_N_S_soc_S_flexram_400b0000_S_dtcm_20000000
 *
 * Binding (compatible = zephyr,memory-region):
 *   $ZEPHYR_BASE/dts/bindings/base/zephyr,memory-region.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flexram_400b0000_S_dtcm_20000000_PATH "/soc/flexram@400b0000/dtcm@20000000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flexram_400b0000_S_dtcm_20000000_FULL_NAME "dtcm@20000000"

/* Node parent (/soc/flexram@400b0000) identifier: */
#define DT_N_S_soc_S_flexram_400b0000_S_dtcm_20000000_PARENT DT_N_S_soc_S_flexram_400b0000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flexram_400b0000_S_dtcm_20000000_CHILD_IDX 1

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flexram_400b0000_S_dtcm_20000000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_flexram_400b0000_S_dtcm_20000000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_flexram_400b0000_S_dtcm_20000000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_flexram_400b0000_S_dtcm_20000000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_flexram_400b0000_S_dtcm_20000000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_flexram_400b0000_S_dtcm_20000000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_flexram_400b0000_S_dtcm_20000000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_flexram_400b0000_S_dtcm_20000000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flexram_400b0000_S_dtcm_20000000_ORD 174

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flexram_400b0000_S_dtcm_20000000_REQUIRES_ORDS \
	173, /* /soc/flexram@400b0000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flexram_400b0000_S_dtcm_20000000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flexram_400b0000_S_dtcm_20000000_EXISTS 1
#define DT_N_INST_1_zephyr_memory_region DT_N_S_soc_S_flexram_400b0000_S_dtcm_20000000
#define DT_N_INST_0_nxp_imx_dtcm         DT_N_S_soc_S_flexram_400b0000_S_dtcm_20000000
#define DT_N_NODELABEL_dtcm              DT_N_S_soc_S_flexram_400b0000_S_dtcm_20000000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flexram_400b0000_S_dtcm_20000000_REG_NUM 1
#define DT_N_S_soc_S_flexram_400b0000_S_dtcm_20000000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexram_400b0000_S_dtcm_20000000_REG_IDX_0_VAL_ADDRESS 536870912 /* 0x20000000 */
#define DT_N_S_soc_S_flexram_400b0000_S_dtcm_20000000_REG_IDX_0_VAL_SIZE 65536 /* 0x10000 */
#define DT_N_S_soc_S_flexram_400b0000_S_dtcm_20000000_RANGES_NUM 0
#define DT_N_S_soc_S_flexram_400b0000_S_dtcm_20000000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flexram_400b0000_S_dtcm_20000000_IRQ_NUM 0
#define DT_N_S_soc_S_flexram_400b0000_S_dtcm_20000000_COMPAT_MATCHES_zephyr_memory_region 1
#define DT_N_S_soc_S_flexram_400b0000_S_dtcm_20000000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexram_400b0000_S_dtcm_20000000_COMPAT_VENDOR_IDX_0 "Zephyr-specific binding"
#define DT_N_S_soc_S_flexram_400b0000_S_dtcm_20000000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexram_400b0000_S_dtcm_20000000_COMPAT_MODEL_IDX_0 "memory-region"
#define DT_N_S_soc_S_flexram_400b0000_S_dtcm_20000000_COMPAT_MATCHES_nxp_imx_dtcm 1
#define DT_N_S_soc_S_flexram_400b0000_S_dtcm_20000000_COMPAT_VENDOR_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flexram_400b0000_S_dtcm_20000000_COMPAT_VENDOR_IDX_1 "NXP Semiconductors"
#define DT_N_S_soc_S_flexram_400b0000_S_dtcm_20000000_COMPAT_MODEL_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flexram_400b0000_S_dtcm_20000000_COMPAT_MODEL_IDX_1 "imx-dtcm"
#define DT_N_S_soc_S_flexram_400b0000_S_dtcm_20000000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flexram_400b0000_S_dtcm_20000000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_flexram_400b0000_S_dtcm_20000000_P_zephyr_memory_region "DTCM"
#define DT_N_S_soc_S_flexram_400b0000_S_dtcm_20000000_P_zephyr_memory_region_STRING_UNQUOTED DTCM
#define DT_N_S_soc_S_flexram_400b0000_S_dtcm_20000000_P_zephyr_memory_region_STRING_TOKEN DTCM
#define DT_N_S_soc_S_flexram_400b0000_S_dtcm_20000000_P_zephyr_memory_region_STRING_UPPER_TOKEN DTCM
#define DT_N_S_soc_S_flexram_400b0000_S_dtcm_20000000_P_zephyr_memory_region_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flexram_400b0000_S_dtcm_20000000, zephyr_memory_region, 0) \
	fn(DT_N_S_soc_S_flexram_400b0000_S_dtcm_20000000, zephyr_memory_region, 1) \
	fn(DT_N_S_soc_S_flexram_400b0000_S_dtcm_20000000, zephyr_memory_region, 2) \
	fn(DT_N_S_soc_S_flexram_400b0000_S_dtcm_20000000, zephyr_memory_region, 3)
#define DT_N_S_soc_S_flexram_400b0000_S_dtcm_20000000_P_zephyr_memory_region_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flexram_400b0000_S_dtcm_20000000, zephyr_memory_region, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexram_400b0000_S_dtcm_20000000, zephyr_memory_region, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexram_400b0000_S_dtcm_20000000, zephyr_memory_region, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexram_400b0000_S_dtcm_20000000, zephyr_memory_region, 3)
#define DT_N_S_soc_S_flexram_400b0000_S_dtcm_20000000_P_zephyr_memory_region_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flexram_400b0000_S_dtcm_20000000, zephyr_memory_region, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexram_400b0000_S_dtcm_20000000, zephyr_memory_region, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexram_400b0000_S_dtcm_20000000, zephyr_memory_region, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexram_400b0000_S_dtcm_20000000, zephyr_memory_region, 3, __VA_ARGS__)
#define DT_N_S_soc_S_flexram_400b0000_S_dtcm_20000000_P_zephyr_memory_region_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flexram_400b0000_S_dtcm_20000000, zephyr_memory_region, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexram_400b0000_S_dtcm_20000000, zephyr_memory_region, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexram_400b0000_S_dtcm_20000000, zephyr_memory_region, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexram_400b0000_S_dtcm_20000000, zephyr_memory_region, 3, __VA_ARGS__)
#define DT_N_S_soc_S_flexram_400b0000_S_dtcm_20000000_P_zephyr_memory_region_EXISTS 1
#define DT_N_S_soc_S_flexram_400b0000_S_dtcm_20000000_P_compatible {"zephyr,memory-region", "nxp,imx-dtcm"}
#define DT_N_S_soc_S_flexram_400b0000_S_dtcm_20000000_P_compatible_IDX_0 "zephyr,memory-region"
#define DT_N_S_soc_S_flexram_400b0000_S_dtcm_20000000_P_compatible_IDX_0_STRING_UNQUOTED zephyr,memory-region
#define DT_N_S_soc_S_flexram_400b0000_S_dtcm_20000000_P_compatible_IDX_0_STRING_TOKEN zephyr_memory_region
#define DT_N_S_soc_S_flexram_400b0000_S_dtcm_20000000_P_compatible_IDX_0_STRING_UPPER_TOKEN ZEPHYR_MEMORY_REGION
#define DT_N_S_soc_S_flexram_400b0000_S_dtcm_20000000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexram_400b0000_S_dtcm_20000000_P_compatible_IDX_1 "nxp,imx-dtcm"
#define DT_N_S_soc_S_flexram_400b0000_S_dtcm_20000000_P_compatible_IDX_1_STRING_UNQUOTED nxp,imx-dtcm
#define DT_N_S_soc_S_flexram_400b0000_S_dtcm_20000000_P_compatible_IDX_1_STRING_TOKEN nxp_imx_dtcm
#define DT_N_S_soc_S_flexram_400b0000_S_dtcm_20000000_P_compatible_IDX_1_STRING_UPPER_TOKEN NXP_IMX_DTCM
#define DT_N_S_soc_S_flexram_400b0000_S_dtcm_20000000_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flexram_400b0000_S_dtcm_20000000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flexram_400b0000_S_dtcm_20000000, compatible, 0) \
	fn(DT_N_S_soc_S_flexram_400b0000_S_dtcm_20000000, compatible, 1)
#define DT_N_S_soc_S_flexram_400b0000_S_dtcm_20000000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flexram_400b0000_S_dtcm_20000000, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexram_400b0000_S_dtcm_20000000, compatible, 1)
#define DT_N_S_soc_S_flexram_400b0000_S_dtcm_20000000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flexram_400b0000_S_dtcm_20000000, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexram_400b0000_S_dtcm_20000000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_flexram_400b0000_S_dtcm_20000000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flexram_400b0000_S_dtcm_20000000, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexram_400b0000_S_dtcm_20000000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_flexram_400b0000_S_dtcm_20000000_P_compatible_LEN 2
#define DT_N_S_soc_S_flexram_400b0000_S_dtcm_20000000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_flexram_400b0000_S_dtcm_20000000_P_reg {536870912 /* 0x20000000 */, 65536 /* 0x10000 */}
#define DT_N_S_soc_S_flexram_400b0000_S_dtcm_20000000_P_reg_IDX_0 536870912
#define DT_N_S_soc_S_flexram_400b0000_S_dtcm_20000000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexram_400b0000_S_dtcm_20000000_P_reg_IDX_1 65536
#define DT_N_S_soc_S_flexram_400b0000_S_dtcm_20000000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flexram_400b0000_S_dtcm_20000000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flexram_400b0000_S_dtcm_20000000, reg, 0) \
	fn(DT_N_S_soc_S_flexram_400b0000_S_dtcm_20000000, reg, 1)
#define DT_N_S_soc_S_flexram_400b0000_S_dtcm_20000000_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flexram_400b0000_S_dtcm_20000000, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexram_400b0000_S_dtcm_20000000, reg, 1)
#define DT_N_S_soc_S_flexram_400b0000_S_dtcm_20000000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flexram_400b0000_S_dtcm_20000000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexram_400b0000_S_dtcm_20000000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_flexram_400b0000_S_dtcm_20000000_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flexram_400b0000_S_dtcm_20000000, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexram_400b0000_S_dtcm_20000000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_flexram_400b0000_S_dtcm_20000000_P_reg_EXISTS 1
#define DT_N_S_soc_S_flexram_400b0000_S_dtcm_20000000_P_wakeup_source 0
#define DT_N_S_soc_S_flexram_400b0000_S_dtcm_20000000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/flexram@400b0000/itcm@0
 *
 * Node identifier: DT_N_S_soc_S_flexram_400b0000_S_itcm_0
 *
 * Binding (compatible = zephyr,memory-region):
 *   $ZEPHYR_BASE/dts/bindings/base/zephyr,memory-region.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flexram_400b0000_S_itcm_0_PATH "/soc/flexram@400b0000/itcm@0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flexram_400b0000_S_itcm_0_FULL_NAME "itcm@0"

/* Node parent (/soc/flexram@400b0000) identifier: */
#define DT_N_S_soc_S_flexram_400b0000_S_itcm_0_PARENT DT_N_S_soc_S_flexram_400b0000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flexram_400b0000_S_itcm_0_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flexram_400b0000_S_itcm_0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_flexram_400b0000_S_itcm_0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_flexram_400b0000_S_itcm_0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_flexram_400b0000_S_itcm_0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_flexram_400b0000_S_itcm_0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_flexram_400b0000_S_itcm_0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_flexram_400b0000_S_itcm_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_flexram_400b0000_S_itcm_0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flexram_400b0000_S_itcm_0_ORD 175

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flexram_400b0000_S_itcm_0_REQUIRES_ORDS \
	173, /* /soc/flexram@400b0000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flexram_400b0000_S_itcm_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flexram_400b0000_S_itcm_0_EXISTS 1
#define DT_N_INST_0_zephyr_memory_region DT_N_S_soc_S_flexram_400b0000_S_itcm_0
#define DT_N_INST_0_nxp_imx_itcm         DT_N_S_soc_S_flexram_400b0000_S_itcm_0
#define DT_N_NODELABEL_itcm              DT_N_S_soc_S_flexram_400b0000_S_itcm_0

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flexram_400b0000_S_itcm_0_REG_NUM 1
#define DT_N_S_soc_S_flexram_400b0000_S_itcm_0_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexram_400b0000_S_itcm_0_REG_IDX_0_VAL_ADDRESS 0 /* 0x0 */
#define DT_N_S_soc_S_flexram_400b0000_S_itcm_0_REG_IDX_0_VAL_SIZE 65536 /* 0x10000 */
#define DT_N_S_soc_S_flexram_400b0000_S_itcm_0_RANGES_NUM 0
#define DT_N_S_soc_S_flexram_400b0000_S_itcm_0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flexram_400b0000_S_itcm_0_IRQ_NUM 0
#define DT_N_S_soc_S_flexram_400b0000_S_itcm_0_COMPAT_MATCHES_zephyr_memory_region 1
#define DT_N_S_soc_S_flexram_400b0000_S_itcm_0_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexram_400b0000_S_itcm_0_COMPAT_VENDOR_IDX_0 "Zephyr-specific binding"
#define DT_N_S_soc_S_flexram_400b0000_S_itcm_0_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexram_400b0000_S_itcm_0_COMPAT_MODEL_IDX_0 "memory-region"
#define DT_N_S_soc_S_flexram_400b0000_S_itcm_0_COMPAT_MATCHES_nxp_imx_itcm 1
#define DT_N_S_soc_S_flexram_400b0000_S_itcm_0_COMPAT_VENDOR_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flexram_400b0000_S_itcm_0_COMPAT_VENDOR_IDX_1 "NXP Semiconductors"
#define DT_N_S_soc_S_flexram_400b0000_S_itcm_0_COMPAT_MODEL_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flexram_400b0000_S_itcm_0_COMPAT_MODEL_IDX_1 "imx-itcm"
#define DT_N_S_soc_S_flexram_400b0000_S_itcm_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flexram_400b0000_S_itcm_0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_flexram_400b0000_S_itcm_0_P_zephyr_memory_region "ITCM"
#define DT_N_S_soc_S_flexram_400b0000_S_itcm_0_P_zephyr_memory_region_STRING_UNQUOTED ITCM
#define DT_N_S_soc_S_flexram_400b0000_S_itcm_0_P_zephyr_memory_region_STRING_TOKEN ITCM
#define DT_N_S_soc_S_flexram_400b0000_S_itcm_0_P_zephyr_memory_region_STRING_UPPER_TOKEN ITCM
#define DT_N_S_soc_S_flexram_400b0000_S_itcm_0_P_zephyr_memory_region_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flexram_400b0000_S_itcm_0, zephyr_memory_region, 0) \
	fn(DT_N_S_soc_S_flexram_400b0000_S_itcm_0, zephyr_memory_region, 1) \
	fn(DT_N_S_soc_S_flexram_400b0000_S_itcm_0, zephyr_memory_region, 2) \
	fn(DT_N_S_soc_S_flexram_400b0000_S_itcm_0, zephyr_memory_region, 3)
#define DT_N_S_soc_S_flexram_400b0000_S_itcm_0_P_zephyr_memory_region_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flexram_400b0000_S_itcm_0, zephyr_memory_region, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexram_400b0000_S_itcm_0, zephyr_memory_region, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexram_400b0000_S_itcm_0, zephyr_memory_region, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexram_400b0000_S_itcm_0, zephyr_memory_region, 3)
#define DT_N_S_soc_S_flexram_400b0000_S_itcm_0_P_zephyr_memory_region_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flexram_400b0000_S_itcm_0, zephyr_memory_region, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexram_400b0000_S_itcm_0, zephyr_memory_region, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexram_400b0000_S_itcm_0, zephyr_memory_region, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexram_400b0000_S_itcm_0, zephyr_memory_region, 3, __VA_ARGS__)
#define DT_N_S_soc_S_flexram_400b0000_S_itcm_0_P_zephyr_memory_region_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flexram_400b0000_S_itcm_0, zephyr_memory_region, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexram_400b0000_S_itcm_0, zephyr_memory_region, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexram_400b0000_S_itcm_0, zephyr_memory_region, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexram_400b0000_S_itcm_0, zephyr_memory_region, 3, __VA_ARGS__)
#define DT_N_S_soc_S_flexram_400b0000_S_itcm_0_P_zephyr_memory_region_EXISTS 1
#define DT_N_S_soc_S_flexram_400b0000_S_itcm_0_P_compatible {"zephyr,memory-region", "nxp,imx-itcm"}
#define DT_N_S_soc_S_flexram_400b0000_S_itcm_0_P_compatible_IDX_0 "zephyr,memory-region"
#define DT_N_S_soc_S_flexram_400b0000_S_itcm_0_P_compatible_IDX_0_STRING_UNQUOTED zephyr,memory-region
#define DT_N_S_soc_S_flexram_400b0000_S_itcm_0_P_compatible_IDX_0_STRING_TOKEN zephyr_memory_region
#define DT_N_S_soc_S_flexram_400b0000_S_itcm_0_P_compatible_IDX_0_STRING_UPPER_TOKEN ZEPHYR_MEMORY_REGION
#define DT_N_S_soc_S_flexram_400b0000_S_itcm_0_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexram_400b0000_S_itcm_0_P_compatible_IDX_1 "nxp,imx-itcm"
#define DT_N_S_soc_S_flexram_400b0000_S_itcm_0_P_compatible_IDX_1_STRING_UNQUOTED nxp,imx-itcm
#define DT_N_S_soc_S_flexram_400b0000_S_itcm_0_P_compatible_IDX_1_STRING_TOKEN nxp_imx_itcm
#define DT_N_S_soc_S_flexram_400b0000_S_itcm_0_P_compatible_IDX_1_STRING_UPPER_TOKEN NXP_IMX_ITCM
#define DT_N_S_soc_S_flexram_400b0000_S_itcm_0_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flexram_400b0000_S_itcm_0_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flexram_400b0000_S_itcm_0, compatible, 0) \
	fn(DT_N_S_soc_S_flexram_400b0000_S_itcm_0, compatible, 1)
#define DT_N_S_soc_S_flexram_400b0000_S_itcm_0_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flexram_400b0000_S_itcm_0, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexram_400b0000_S_itcm_0, compatible, 1)
#define DT_N_S_soc_S_flexram_400b0000_S_itcm_0_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flexram_400b0000_S_itcm_0, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexram_400b0000_S_itcm_0, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_flexram_400b0000_S_itcm_0_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flexram_400b0000_S_itcm_0, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexram_400b0000_S_itcm_0, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_flexram_400b0000_S_itcm_0_P_compatible_LEN 2
#define DT_N_S_soc_S_flexram_400b0000_S_itcm_0_P_compatible_EXISTS 1
#define DT_N_S_soc_S_flexram_400b0000_S_itcm_0_P_reg {0 /* 0x0 */, 65536 /* 0x10000 */}
#define DT_N_S_soc_S_flexram_400b0000_S_itcm_0_P_reg_IDX_0 0
#define DT_N_S_soc_S_flexram_400b0000_S_itcm_0_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexram_400b0000_S_itcm_0_P_reg_IDX_1 65536
#define DT_N_S_soc_S_flexram_400b0000_S_itcm_0_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flexram_400b0000_S_itcm_0_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flexram_400b0000_S_itcm_0, reg, 0) \
	fn(DT_N_S_soc_S_flexram_400b0000_S_itcm_0, reg, 1)
#define DT_N_S_soc_S_flexram_400b0000_S_itcm_0_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flexram_400b0000_S_itcm_0, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexram_400b0000_S_itcm_0, reg, 1)
#define DT_N_S_soc_S_flexram_400b0000_S_itcm_0_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flexram_400b0000_S_itcm_0, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexram_400b0000_S_itcm_0, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_flexram_400b0000_S_itcm_0_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flexram_400b0000_S_itcm_0, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexram_400b0000_S_itcm_0, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_flexram_400b0000_S_itcm_0_P_reg_EXISTS 1
#define DT_N_S_soc_S_flexram_400b0000_S_itcm_0_P_wakeup_source 0
#define DT_N_S_soc_S_flexram_400b0000_S_itcm_0_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/flexram@400b0000/ocram@20200000
 *
 * Node identifier: DT_N_S_soc_S_flexram_400b0000_S_ocram_20200000
 *
 * Binding (compatible = zephyr,memory-region):
 *   $ZEPHYR_BASE/dts/bindings/base/zephyr,memory-region.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flexram_400b0000_S_ocram_20200000_PATH "/soc/flexram@400b0000/ocram@20200000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flexram_400b0000_S_ocram_20200000_FULL_NAME "ocram@20200000"

/* Node parent (/soc/flexram@400b0000) identifier: */
#define DT_N_S_soc_S_flexram_400b0000_S_ocram_20200000_PARENT DT_N_S_soc_S_flexram_400b0000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flexram_400b0000_S_ocram_20200000_CHILD_IDX 2

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flexram_400b0000_S_ocram_20200000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_flexram_400b0000_S_ocram_20200000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_flexram_400b0000_S_ocram_20200000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_flexram_400b0000_S_ocram_20200000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_flexram_400b0000_S_ocram_20200000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_flexram_400b0000_S_ocram_20200000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_flexram_400b0000_S_ocram_20200000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_flexram_400b0000_S_ocram_20200000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flexram_400b0000_S_ocram_20200000_ORD 176

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flexram_400b0000_S_ocram_20200000_REQUIRES_ORDS \
	173, /* /soc/flexram@400b0000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flexram_400b0000_S_ocram_20200000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flexram_400b0000_S_ocram_20200000_EXISTS 1
#define DT_N_INST_2_zephyr_memory_region DT_N_S_soc_S_flexram_400b0000_S_ocram_20200000
#define DT_N_INST_0_mmio_sram            DT_N_S_soc_S_flexram_400b0000_S_ocram_20200000
#define DT_N_NODELABEL_ocram             DT_N_S_soc_S_flexram_400b0000_S_ocram_20200000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flexram_400b0000_S_ocram_20200000_REG_NUM 1
#define DT_N_S_soc_S_flexram_400b0000_S_ocram_20200000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexram_400b0000_S_ocram_20200000_REG_IDX_0_VAL_ADDRESS 538968064 /* 0x20200000 */
#define DT_N_S_soc_S_flexram_400b0000_S_ocram_20200000_REG_IDX_0_VAL_SIZE 131072 /* 0x20000 */
#define DT_N_S_soc_S_flexram_400b0000_S_ocram_20200000_RANGES_NUM 0
#define DT_N_S_soc_S_flexram_400b0000_S_ocram_20200000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flexram_400b0000_S_ocram_20200000_IRQ_NUM 0
#define DT_N_S_soc_S_flexram_400b0000_S_ocram_20200000_COMPAT_MATCHES_zephyr_memory_region 1
#define DT_N_S_soc_S_flexram_400b0000_S_ocram_20200000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexram_400b0000_S_ocram_20200000_COMPAT_VENDOR_IDX_0 "Zephyr-specific binding"
#define DT_N_S_soc_S_flexram_400b0000_S_ocram_20200000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexram_400b0000_S_ocram_20200000_COMPAT_MODEL_IDX_0 "memory-region"
#define DT_N_S_soc_S_flexram_400b0000_S_ocram_20200000_COMPAT_MATCHES_mmio_sram 1
#define DT_N_S_soc_S_flexram_400b0000_S_ocram_20200000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flexram_400b0000_S_ocram_20200000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_flexram_400b0000_S_ocram_20200000_P_zephyr_memory_region "OCRAM"
#define DT_N_S_soc_S_flexram_400b0000_S_ocram_20200000_P_zephyr_memory_region_STRING_UNQUOTED OCRAM
#define DT_N_S_soc_S_flexram_400b0000_S_ocram_20200000_P_zephyr_memory_region_STRING_TOKEN OCRAM
#define DT_N_S_soc_S_flexram_400b0000_S_ocram_20200000_P_zephyr_memory_region_STRING_UPPER_TOKEN OCRAM
#define DT_N_S_soc_S_flexram_400b0000_S_ocram_20200000_P_zephyr_memory_region_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flexram_400b0000_S_ocram_20200000, zephyr_memory_region, 0) \
	fn(DT_N_S_soc_S_flexram_400b0000_S_ocram_20200000, zephyr_memory_region, 1) \
	fn(DT_N_S_soc_S_flexram_400b0000_S_ocram_20200000, zephyr_memory_region, 2) \
	fn(DT_N_S_soc_S_flexram_400b0000_S_ocram_20200000, zephyr_memory_region, 3) \
	fn(DT_N_S_soc_S_flexram_400b0000_S_ocram_20200000, zephyr_memory_region, 4)
#define DT_N_S_soc_S_flexram_400b0000_S_ocram_20200000_P_zephyr_memory_region_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flexram_400b0000_S_ocram_20200000, zephyr_memory_region, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexram_400b0000_S_ocram_20200000, zephyr_memory_region, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexram_400b0000_S_ocram_20200000, zephyr_memory_region, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexram_400b0000_S_ocram_20200000, zephyr_memory_region, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexram_400b0000_S_ocram_20200000, zephyr_memory_region, 4)
#define DT_N_S_soc_S_flexram_400b0000_S_ocram_20200000_P_zephyr_memory_region_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flexram_400b0000_S_ocram_20200000, zephyr_memory_region, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexram_400b0000_S_ocram_20200000, zephyr_memory_region, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexram_400b0000_S_ocram_20200000, zephyr_memory_region, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexram_400b0000_S_ocram_20200000, zephyr_memory_region, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexram_400b0000_S_ocram_20200000, zephyr_memory_region, 4, __VA_ARGS__)
#define DT_N_S_soc_S_flexram_400b0000_S_ocram_20200000_P_zephyr_memory_region_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flexram_400b0000_S_ocram_20200000, zephyr_memory_region, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexram_400b0000_S_ocram_20200000, zephyr_memory_region, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexram_400b0000_S_ocram_20200000, zephyr_memory_region, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexram_400b0000_S_ocram_20200000, zephyr_memory_region, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexram_400b0000_S_ocram_20200000, zephyr_memory_region, 4, __VA_ARGS__)
#define DT_N_S_soc_S_flexram_400b0000_S_ocram_20200000_P_zephyr_memory_region_EXISTS 1
#define DT_N_S_soc_S_flexram_400b0000_S_ocram_20200000_P_compatible {"zephyr,memory-region", "mmio-sram"}
#define DT_N_S_soc_S_flexram_400b0000_S_ocram_20200000_P_compatible_IDX_0 "zephyr,memory-region"
#define DT_N_S_soc_S_flexram_400b0000_S_ocram_20200000_P_compatible_IDX_0_STRING_UNQUOTED zephyr,memory-region
#define DT_N_S_soc_S_flexram_400b0000_S_ocram_20200000_P_compatible_IDX_0_STRING_TOKEN zephyr_memory_region
#define DT_N_S_soc_S_flexram_400b0000_S_ocram_20200000_P_compatible_IDX_0_STRING_UPPER_TOKEN ZEPHYR_MEMORY_REGION
#define DT_N_S_soc_S_flexram_400b0000_S_ocram_20200000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexram_400b0000_S_ocram_20200000_P_compatible_IDX_1 "mmio-sram"
#define DT_N_S_soc_S_flexram_400b0000_S_ocram_20200000_P_compatible_IDX_1_STRING_UNQUOTED mmio-sram
#define DT_N_S_soc_S_flexram_400b0000_S_ocram_20200000_P_compatible_IDX_1_STRING_TOKEN mmio_sram
#define DT_N_S_soc_S_flexram_400b0000_S_ocram_20200000_P_compatible_IDX_1_STRING_UPPER_TOKEN MMIO_SRAM
#define DT_N_S_soc_S_flexram_400b0000_S_ocram_20200000_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flexram_400b0000_S_ocram_20200000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flexram_400b0000_S_ocram_20200000, compatible, 0) \
	fn(DT_N_S_soc_S_flexram_400b0000_S_ocram_20200000, compatible, 1)
#define DT_N_S_soc_S_flexram_400b0000_S_ocram_20200000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flexram_400b0000_S_ocram_20200000, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexram_400b0000_S_ocram_20200000, compatible, 1)
#define DT_N_S_soc_S_flexram_400b0000_S_ocram_20200000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flexram_400b0000_S_ocram_20200000, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexram_400b0000_S_ocram_20200000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_flexram_400b0000_S_ocram_20200000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flexram_400b0000_S_ocram_20200000, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexram_400b0000_S_ocram_20200000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_flexram_400b0000_S_ocram_20200000_P_compatible_LEN 2
#define DT_N_S_soc_S_flexram_400b0000_S_ocram_20200000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_flexram_400b0000_S_ocram_20200000_P_reg {538968064 /* 0x20200000 */, 131072 /* 0x20000 */}
#define DT_N_S_soc_S_flexram_400b0000_S_ocram_20200000_P_reg_IDX_0 538968064
#define DT_N_S_soc_S_flexram_400b0000_S_ocram_20200000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flexram_400b0000_S_ocram_20200000_P_reg_IDX_1 131072
#define DT_N_S_soc_S_flexram_400b0000_S_ocram_20200000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flexram_400b0000_S_ocram_20200000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flexram_400b0000_S_ocram_20200000, reg, 0) \
	fn(DT_N_S_soc_S_flexram_400b0000_S_ocram_20200000, reg, 1)
#define DT_N_S_soc_S_flexram_400b0000_S_ocram_20200000_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flexram_400b0000_S_ocram_20200000, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexram_400b0000_S_ocram_20200000, reg, 1)
#define DT_N_S_soc_S_flexram_400b0000_S_ocram_20200000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flexram_400b0000_S_ocram_20200000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flexram_400b0000_S_ocram_20200000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_flexram_400b0000_S_ocram_20200000_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flexram_400b0000_S_ocram_20200000, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flexram_400b0000_S_ocram_20200000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_flexram_400b0000_S_ocram_20200000_P_reg_EXISTS 1
#define DT_N_S_soc_S_flexram_400b0000_S_ocram_20200000_P_wakeup_source 0
#define DT_N_S_soc_S_flexram_400b0000_S_ocram_20200000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B1_10_ADC1_IN10
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_adc1_in10
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_adc1_in10_PATH "/soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B1_10_ADC1_IN10"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_adc1_in10_FULL_NAME "IOMUXC_GPIO_AD_B1_10_ADC1_IN10"

/* Node parent (/soc/iomuxc@401f8000) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_adc1_in10_PARENT DT_N_S_soc_S_iomuxc_401f8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_adc1_in10_CHILD_IDX 44

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_adc1_in10_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_adc1_in10_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_adc1_in10_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_adc1_in10_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_adc1_in10_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_adc1_in10_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_adc1_in10_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_adc1_in10_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_adc1_in10_ORD 177

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_adc1_in10_REQUIRES_ORDS \
	13, /* /soc/iomuxc@401f8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_adc1_in10_SUPPORTS_ORDS \
	179, /* /soc/iomuxc@401f8000/pinctrl/pinmux_adc1/group0 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_adc1_in10_EXISTS 1
#define DT_N_NODELABEL_iomuxc_gpio_ad_b1_10_adc1_in10 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_adc1_in10

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_adc1_in10_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_adc1_in10_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_adc1_in10_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_adc1_in10_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_adc1_in10_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_adc1_in10_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_adc1_in10_P_pinmux {1075806500 /* 0x401f8124 */, 5 /* 0x5 */, 0 /* 0x0 */, 0 /* 0x0 */, 1075806872 /* 0x401f8298 */}
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_adc1_in10_P_pinmux_IDX_0 1075806500
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_adc1_in10_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_adc1_in10_P_pinmux_IDX_1 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_adc1_in10_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_adc1_in10_P_pinmux_IDX_2 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_adc1_in10_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_adc1_in10_P_pinmux_IDX_3 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_adc1_in10_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_adc1_in10_P_pinmux_IDX_4 1075806872
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_adc1_in10_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_adc1_in10_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_adc1_in10, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_adc1_in10, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_adc1_in10, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_adc1_in10, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_adc1_in10, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_adc1_in10_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_adc1_in10, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_adc1_in10, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_adc1_in10, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_adc1_in10, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_adc1_in10, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_adc1_in10_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_adc1_in10, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_adc1_in10, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_adc1_in10, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_adc1_in10, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_adc1_in10, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_adc1_in10_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_adc1_in10, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_adc1_in10, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_adc1_in10, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_adc1_in10, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_adc1_in10, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_adc1_in10_P_pinmux_LEN 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_adc1_in10_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_adc1_in10_P_pin_pue 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_adc1_in10_P_pin_pue_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_adc1_in10_P_pin_pdrv 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_adc1_in10_P_pin_pdrv_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_adc1_in10_P_pin_lpsr 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_adc1_in10_P_pin_lpsr_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_adc1_in10_P_pin_snvs 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_adc1_in10_P_pin_snvs_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B1_11_ADC1_IN11
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_adc1_in11
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_adc1_in11_PATH "/soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B1_11_ADC1_IN11"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_adc1_in11_FULL_NAME "IOMUXC_GPIO_AD_B1_11_ADC1_IN11"

/* Node parent (/soc/iomuxc@401f8000) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_adc1_in11_PARENT DT_N_S_soc_S_iomuxc_401f8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_adc1_in11_CHILD_IDX 46

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_adc1_in11_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_adc1_in11_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_adc1_in11_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_adc1_in11_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_adc1_in11_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_adc1_in11_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_adc1_in11_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_adc1_in11_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_adc1_in11_ORD 178

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_adc1_in11_REQUIRES_ORDS \
	13, /* /soc/iomuxc@401f8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_adc1_in11_SUPPORTS_ORDS \
	179, /* /soc/iomuxc@401f8000/pinctrl/pinmux_adc1/group0 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_adc1_in11_EXISTS 1
#define DT_N_NODELABEL_iomuxc_gpio_ad_b1_11_adc1_in11 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_adc1_in11

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_adc1_in11_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_adc1_in11_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_adc1_in11_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_adc1_in11_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_adc1_in11_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_adc1_in11_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_adc1_in11_P_pinmux {1075806504 /* 0x401f8128 */, 5 /* 0x5 */, 0 /* 0x0 */, 0 /* 0x0 */, 1075806876 /* 0x401f829c */}
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_adc1_in11_P_pinmux_IDX_0 1075806504
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_adc1_in11_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_adc1_in11_P_pinmux_IDX_1 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_adc1_in11_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_adc1_in11_P_pinmux_IDX_2 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_adc1_in11_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_adc1_in11_P_pinmux_IDX_3 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_adc1_in11_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_adc1_in11_P_pinmux_IDX_4 1075806876
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_adc1_in11_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_adc1_in11_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_adc1_in11, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_adc1_in11, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_adc1_in11, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_adc1_in11, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_adc1_in11, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_adc1_in11_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_adc1_in11, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_adc1_in11, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_adc1_in11, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_adc1_in11, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_adc1_in11, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_adc1_in11_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_adc1_in11, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_adc1_in11, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_adc1_in11, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_adc1_in11, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_adc1_in11, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_adc1_in11_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_adc1_in11, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_adc1_in11, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_adc1_in11, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_adc1_in11, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_adc1_in11, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_adc1_in11_P_pinmux_LEN 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_adc1_in11_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_adc1_in11_P_pin_pue 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_adc1_in11_P_pin_pue_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_adc1_in11_P_pin_pdrv 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_adc1_in11_P_pin_pdrv_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_adc1_in11_P_pin_lpsr 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_adc1_in11_P_pin_lpsr_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_adc1_in11_P_pin_snvs 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_adc1_in11_P_pin_snvs_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/pinctrl/pinmux_adc1/group0
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0_PATH "/soc/iomuxc@401f8000/pinctrl/pinmux_adc1/group0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0_FULL_NAME "group0"

/* Node parent (/soc/iomuxc@401f8000/pinctrl/pinmux_adc1) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0_PARENT DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0_ORD 179

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0_REQUIRES_ORDS \
	55, /* /soc/iomuxc@401f8000/pinctrl/pinmux_adc1 */ \
	177, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B1_10_ADC1_IN10 */ \
	178, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B1_11_ADC1_IN11 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0_P_pinmux_IDX_0 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_adc1_in10
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0_P_pinmux_IDX_0_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_adc1_in10
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0_P_pinmux_IDX_1 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_adc1_in11
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0_P_pinmux_IDX_1_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_adc1_in11
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0, pinmux, 1)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0, pinmux, 1)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0, pinmux, 1, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0, pinmux, 1, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0_P_pinmux_LEN 2
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0_P_drive_strength "r0-6"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0_P_drive_strength_STRING_UNQUOTED r0-6
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0_P_drive_strength_STRING_TOKEN r0_6
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0_P_drive_strength_STRING_UPPER_TOKEN R0_6
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0_P_drive_strength_ENUM_IDX 6
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0_P_drive_strength_ENUM_TOKEN r0_6
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0_P_drive_strength_ENUM_UPPER_TOKEN R0_6
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0, drive_strength, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0, drive_strength, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0, drive_strength, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0, drive_strength, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0, drive_strength, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0, drive_strength, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0, drive_strength, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0, drive_strength, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0, drive_strength, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0, drive_strength, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0, drive_strength, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0, drive_strength, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0, drive_strength, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0, drive_strength, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0, drive_strength, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0, drive_strength, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0_P_bias_pull_up_value "47k"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0_P_bias_pull_up_value_STRING_UNQUOTED 47k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0_P_bias_pull_up_value_STRING_TOKEN 47k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0_P_bias_pull_up_value_STRING_UPPER_TOKEN 47K
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0_P_bias_pull_up_value_ENUM_IDX 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0_P_bias_pull_up_value_ENUM_TOKEN 47k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0_P_bias_pull_up_value_ENUM_UPPER_TOKEN 47K
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0_P_bias_pull_up_value_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0, bias_pull_up_value, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0, bias_pull_up_value, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0, bias_pull_up_value, 2)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0_P_bias_pull_up_value_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0, bias_pull_up_value, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0, bias_pull_up_value, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0, bias_pull_up_value, 2)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0_P_bias_pull_up_value_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0, bias_pull_up_value, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0, bias_pull_up_value, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0, bias_pull_up_value, 2, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0_P_bias_pull_up_value_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0, bias_pull_up_value, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0, bias_pull_up_value, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0, bias_pull_up_value, 2, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0_P_bias_pull_up_value_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0_P_bias_pull_down_value "100k"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0_P_bias_pull_down_value_STRING_UNQUOTED 100k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0_P_bias_pull_down_value_STRING_TOKEN 100k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0_P_bias_pull_down_value_STRING_UPPER_TOKEN 100K
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0_P_bias_pull_down_value_ENUM_IDX 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0_P_bias_pull_down_value_ENUM_TOKEN 100k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0_P_bias_pull_down_value_ENUM_UPPER_TOKEN 100K
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0_P_bias_pull_down_value_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0, bias_pull_down_value, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0, bias_pull_down_value, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0, bias_pull_down_value, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0, bias_pull_down_value, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0_P_bias_pull_down_value_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0, bias_pull_down_value, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0, bias_pull_down_value, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0, bias_pull_down_value, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0, bias_pull_down_value, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0_P_bias_pull_down_value_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0, bias_pull_down_value, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0, bias_pull_down_value, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0, bias_pull_down_value, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0, bias_pull_down_value, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0_P_bias_pull_down_value_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0, bias_pull_down_value, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0, bias_pull_down_value, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0, bias_pull_down_value, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0, bias_pull_down_value, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0_P_bias_pull_down_value_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0_P_slew_rate "slow"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0_P_slew_rate_STRING_UNQUOTED slow
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0_P_slew_rate_STRING_TOKEN slow
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0_P_slew_rate_STRING_UPPER_TOKEN SLOW
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0_P_slew_rate_ENUM_TOKEN slow
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0_P_slew_rate_ENUM_UPPER_TOKEN SLOW
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0, slew_rate, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0, slew_rate, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0, slew_rate, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0, slew_rate, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0, slew_rate, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0, slew_rate, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0, slew_rate, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0, slew_rate, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0, slew_rate, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0, slew_rate, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0, slew_rate, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0, slew_rate, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0, slew_rate, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0_P_nxp_speed "100-mhz"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0_P_nxp_speed_STRING_UNQUOTED 100-mhz
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0_P_nxp_speed_STRING_TOKEN 100_mhz
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0_P_nxp_speed_STRING_UPPER_TOKEN 100_MHZ
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0_P_nxp_speed_ENUM_IDX 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0_P_nxp_speed_ENUM_TOKEN 100_mhz
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0_P_nxp_speed_ENUM_UPPER_TOKEN 100_MHZ
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0_P_nxp_speed_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0, nxp_speed, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0, nxp_speed, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0, nxp_speed, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0, nxp_speed, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0, nxp_speed, 4) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0, nxp_speed, 5) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0, nxp_speed, 6)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0_P_nxp_speed_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0, nxp_speed, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0, nxp_speed, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0, nxp_speed, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0, nxp_speed, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0, nxp_speed, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0, nxp_speed, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0, nxp_speed, 6)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0_P_nxp_speed_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0, nxp_speed, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0, nxp_speed, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0, nxp_speed, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0, nxp_speed, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0, nxp_speed, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0, nxp_speed, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0, nxp_speed, 6, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0_P_nxp_speed_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0, nxp_speed, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0, nxp_speed, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0, nxp_speed, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0, nxp_speed, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0, nxp_speed, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0, nxp_speed, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0, nxp_speed, 6, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0_P_nxp_speed_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0_P_bias_disable 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0_P_bias_pull_up 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0_P_bias_pull_down 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0_P_drive_open_drain 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0_P_input_enable 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0_P_input_enable_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0_P_input_schmitt_enable 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0_P_input_schmitt_enable_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_08_ENET_REF_CLK
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_enet_ref_clk
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_enet_ref_clk_PATH "/soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_08_ENET_REF_CLK"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_enet_ref_clk_FULL_NAME "IOMUXC_GPIO_AD_B0_08_ENET_REF_CLK"

/* Node parent (/soc/iomuxc@401f8000) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_enet_ref_clk_PARENT DT_N_S_soc_S_iomuxc_401f8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_enet_ref_clk_CHILD_IDX 11

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_enet_ref_clk_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_enet_ref_clk_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_enet_ref_clk_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_enet_ref_clk_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_enet_ref_clk_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_enet_ref_clk_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_enet_ref_clk_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_enet_ref_clk_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_enet_ref_clk_ORD 180

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_enet_ref_clk_REQUIRES_ORDS \
	13, /* /soc/iomuxc@401f8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_enet_ref_clk_SUPPORTS_ORDS \
	181, /* /soc/iomuxc@401f8000/pinctrl/pinmux_enet/group0 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_enet_ref_clk_EXISTS 1
#define DT_N_NODELABEL_iomuxc_gpio_ad_b0_08_enet_ref_clk DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_enet_ref_clk

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_enet_ref_clk_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_enet_ref_clk_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_enet_ref_clk_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_enet_ref_clk_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_enet_ref_clk_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_enet_ref_clk_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_enet_ref_clk_P_pinmux {1075806428 /* 0x401f80dc */, 4 /* 0x4 */, 1075806980 /* 0x401f8304 */, 1 /* 0x1 */, 1075806800 /* 0x401f8250 */}
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_enet_ref_clk_P_pinmux_IDX_0 1075806428
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_enet_ref_clk_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_enet_ref_clk_P_pinmux_IDX_1 4
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_enet_ref_clk_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_enet_ref_clk_P_pinmux_IDX_2 1075806980
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_enet_ref_clk_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_enet_ref_clk_P_pinmux_IDX_3 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_enet_ref_clk_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_enet_ref_clk_P_pinmux_IDX_4 1075806800
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_enet_ref_clk_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_enet_ref_clk_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_enet_ref_clk, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_enet_ref_clk, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_enet_ref_clk, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_enet_ref_clk, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_enet_ref_clk, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_enet_ref_clk_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_enet_ref_clk, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_enet_ref_clk, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_enet_ref_clk, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_enet_ref_clk, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_enet_ref_clk, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_enet_ref_clk_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_enet_ref_clk, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_enet_ref_clk, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_enet_ref_clk, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_enet_ref_clk, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_enet_ref_clk, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_enet_ref_clk_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_enet_ref_clk, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_enet_ref_clk, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_enet_ref_clk, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_enet_ref_clk, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_enet_ref_clk, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_enet_ref_clk_P_pinmux_LEN 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_enet_ref_clk_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_enet_ref_clk_P_pin_pue 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_enet_ref_clk_P_pin_pue_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_enet_ref_clk_P_pin_pdrv 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_enet_ref_clk_P_pin_pdrv_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_enet_ref_clk_P_pin_lpsr 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_enet_ref_clk_P_pin_lpsr_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_enet_ref_clk_P_pin_snvs 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_enet_ref_clk_P_pin_snvs_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/pinctrl/pinmux_enet/group0
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0_PATH "/soc/iomuxc@401f8000/pinctrl/pinmux_enet/group0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0_FULL_NAME "group0"

/* Node parent (/soc/iomuxc@401f8000/pinctrl/pinmux_enet) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0_PARENT DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0_ORD 181

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0_REQUIRES_ORDS \
	149, /* /soc/iomuxc@401f8000/pinctrl/pinmux_enet */ \
	180, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_08_ENET_REF_CLK */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0_P_pinmux_IDX_0 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_enet_ref_clk
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0_P_pinmux_IDX_0_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_enet_ref_clk
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0, pinmux, 0)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0, pinmux, 0)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0, pinmux, 0, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0, pinmux, 0, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0_P_pinmux_LEN 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0_P_drive_strength "r0-6"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0_P_drive_strength_STRING_UNQUOTED r0-6
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0_P_drive_strength_STRING_TOKEN r0_6
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0_P_drive_strength_STRING_UPPER_TOKEN R0_6
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0_P_drive_strength_ENUM_IDX 6
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0_P_drive_strength_ENUM_TOKEN r0_6
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0_P_drive_strength_ENUM_UPPER_TOKEN R0_6
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0, drive_strength, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0, drive_strength, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0, drive_strength, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0, drive_strength, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0, drive_strength, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0, drive_strength, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0, drive_strength, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0, drive_strength, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0, drive_strength, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0, drive_strength, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0, drive_strength, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0, drive_strength, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0, drive_strength, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0, drive_strength, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0, drive_strength, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0, drive_strength, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0_P_bias_pull_up_value "47k"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0_P_bias_pull_up_value_STRING_UNQUOTED 47k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0_P_bias_pull_up_value_STRING_TOKEN 47k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0_P_bias_pull_up_value_STRING_UPPER_TOKEN 47K
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0_P_bias_pull_up_value_ENUM_IDX 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0_P_bias_pull_up_value_ENUM_TOKEN 47k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0_P_bias_pull_up_value_ENUM_UPPER_TOKEN 47K
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0_P_bias_pull_up_value_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0, bias_pull_up_value, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0, bias_pull_up_value, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0, bias_pull_up_value, 2)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0_P_bias_pull_up_value_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0, bias_pull_up_value, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0, bias_pull_up_value, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0, bias_pull_up_value, 2)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0_P_bias_pull_up_value_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0, bias_pull_up_value, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0, bias_pull_up_value, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0, bias_pull_up_value, 2, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0_P_bias_pull_up_value_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0, bias_pull_up_value, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0, bias_pull_up_value, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0, bias_pull_up_value, 2, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0_P_bias_pull_up_value_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0_P_bias_pull_down_value "100k"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0_P_bias_pull_down_value_STRING_UNQUOTED 100k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0_P_bias_pull_down_value_STRING_TOKEN 100k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0_P_bias_pull_down_value_STRING_UPPER_TOKEN 100K
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0_P_bias_pull_down_value_ENUM_IDX 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0_P_bias_pull_down_value_ENUM_TOKEN 100k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0_P_bias_pull_down_value_ENUM_UPPER_TOKEN 100K
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0_P_bias_pull_down_value_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0, bias_pull_down_value, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0, bias_pull_down_value, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0, bias_pull_down_value, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0, bias_pull_down_value, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0_P_bias_pull_down_value_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0, bias_pull_down_value, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0, bias_pull_down_value, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0, bias_pull_down_value, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0, bias_pull_down_value, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0_P_bias_pull_down_value_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0, bias_pull_down_value, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0, bias_pull_down_value, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0, bias_pull_down_value, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0, bias_pull_down_value, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0_P_bias_pull_down_value_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0, bias_pull_down_value, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0, bias_pull_down_value, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0, bias_pull_down_value, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0, bias_pull_down_value, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0_P_bias_pull_down_value_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0_P_slew_rate "fast"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0_P_slew_rate_STRING_UNQUOTED fast
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0_P_slew_rate_STRING_TOKEN fast
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0_P_slew_rate_STRING_UPPER_TOKEN FAST
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0_P_slew_rate_ENUM_IDX 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0_P_slew_rate_ENUM_TOKEN fast
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0_P_slew_rate_ENUM_UPPER_TOKEN FAST
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0, slew_rate, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0, slew_rate, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0, slew_rate, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0, slew_rate, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0, slew_rate, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0, slew_rate, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0, slew_rate, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0, slew_rate, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0, slew_rate, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0, slew_rate, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0, slew_rate, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0, slew_rate, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0, slew_rate, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0_P_nxp_speed "50-mhz"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0_P_nxp_speed_STRING_UNQUOTED 50-mhz
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0_P_nxp_speed_STRING_TOKEN 50_mhz
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0_P_nxp_speed_STRING_UPPER_TOKEN 50_MHZ
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0_P_nxp_speed_ENUM_IDX 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0_P_nxp_speed_ENUM_TOKEN 50_mhz
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0_P_nxp_speed_ENUM_UPPER_TOKEN 50_MHZ
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0_P_nxp_speed_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0, nxp_speed, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0, nxp_speed, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0, nxp_speed, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0, nxp_speed, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0, nxp_speed, 4) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0, nxp_speed, 5)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0_P_nxp_speed_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0, nxp_speed, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0, nxp_speed, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0, nxp_speed, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0, nxp_speed, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0, nxp_speed, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0, nxp_speed, 5)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0_P_nxp_speed_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0, nxp_speed, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0, nxp_speed, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0, nxp_speed, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0, nxp_speed, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0, nxp_speed, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0, nxp_speed, 5, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0_P_nxp_speed_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0, nxp_speed, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0, nxp_speed, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0, nxp_speed, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0, nxp_speed, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0, nxp_speed, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0, nxp_speed, 5, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0_P_nxp_speed_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0_P_bias_disable 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0_P_bias_pull_up 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0_P_bias_pull_down 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0_P_drive_open_drain 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0_P_input_enable 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0_P_input_enable_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0_P_input_schmitt_enable 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0_P_input_schmitt_enable_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/pinctrl/pinmux_enet/group1
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1_PATH "/soc/iomuxc@401f8000/pinctrl/pinmux_enet/group1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1_FULL_NAME "group1"

/* Node parent (/soc/iomuxc@401f8000/pinctrl/pinmux_enet) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1_PARENT DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1_CHILD_IDX 1

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1_ORD 182

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1_REQUIRES_ORDS \
	24, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_04_GPIO1_IO04 */ \
	149, /* /soc/iomuxc@401f8000/pinctrl/pinmux_enet */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1_P_pinmux_IDX_0 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_04_gpio1_io04
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1_P_pinmux_IDX_0_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_04_gpio1_io04
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1, pinmux, 0)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1, pinmux, 0)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1, pinmux, 0, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1, pinmux, 0, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1_P_pinmux_LEN 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1_P_drive_strength "r0-5"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1_P_drive_strength_STRING_UNQUOTED r0-5
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1_P_drive_strength_STRING_TOKEN r0_5
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1_P_drive_strength_STRING_UPPER_TOKEN R0_5
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1_P_drive_strength_ENUM_IDX 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1_P_drive_strength_ENUM_TOKEN r0_5
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1_P_drive_strength_ENUM_UPPER_TOKEN R0_5
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1, drive_strength, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1, drive_strength, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1, drive_strength, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1, drive_strength, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1, drive_strength, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1, drive_strength, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1, drive_strength, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1, drive_strength, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1, drive_strength, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1, drive_strength, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1, drive_strength, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1, drive_strength, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1, drive_strength, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1, drive_strength, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1, drive_strength, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1, drive_strength, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1_P_bias_pull_up_value "100k"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1_P_bias_pull_up_value_STRING_UNQUOTED 100k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1_P_bias_pull_up_value_STRING_TOKEN 100k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1_P_bias_pull_up_value_STRING_UPPER_TOKEN 100K
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1_P_bias_pull_up_value_ENUM_IDX 2
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1_P_bias_pull_up_value_ENUM_TOKEN 100k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1_P_bias_pull_up_value_ENUM_UPPER_TOKEN 100K
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1_P_bias_pull_up_value_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1, bias_pull_up_value, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1, bias_pull_up_value, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1, bias_pull_up_value, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1, bias_pull_up_value, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1_P_bias_pull_up_value_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1, bias_pull_up_value, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1, bias_pull_up_value, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1, bias_pull_up_value, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1, bias_pull_up_value, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1_P_bias_pull_up_value_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1, bias_pull_up_value, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1, bias_pull_up_value, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1, bias_pull_up_value, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1, bias_pull_up_value, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1_P_bias_pull_up_value_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1, bias_pull_up_value, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1, bias_pull_up_value, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1, bias_pull_up_value, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1, bias_pull_up_value, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1_P_bias_pull_up_value_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1_P_bias_pull_down_value "100k"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1_P_bias_pull_down_value_STRING_UNQUOTED 100k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1_P_bias_pull_down_value_STRING_TOKEN 100k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1_P_bias_pull_down_value_STRING_UPPER_TOKEN 100K
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1_P_bias_pull_down_value_ENUM_IDX 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1_P_bias_pull_down_value_ENUM_TOKEN 100k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1_P_bias_pull_down_value_ENUM_UPPER_TOKEN 100K
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1_P_bias_pull_down_value_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1, bias_pull_down_value, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1, bias_pull_down_value, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1, bias_pull_down_value, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1, bias_pull_down_value, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1_P_bias_pull_down_value_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1, bias_pull_down_value, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1, bias_pull_down_value, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1, bias_pull_down_value, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1, bias_pull_down_value, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1_P_bias_pull_down_value_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1, bias_pull_down_value, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1, bias_pull_down_value, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1, bias_pull_down_value, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1, bias_pull_down_value, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1_P_bias_pull_down_value_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1, bias_pull_down_value, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1, bias_pull_down_value, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1, bias_pull_down_value, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1, bias_pull_down_value, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1_P_bias_pull_down_value_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1_P_slew_rate "fast"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1_P_slew_rate_STRING_UNQUOTED fast
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1_P_slew_rate_STRING_TOKEN fast
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1_P_slew_rate_STRING_UPPER_TOKEN FAST
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1_P_slew_rate_ENUM_IDX 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1_P_slew_rate_ENUM_TOKEN fast
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1_P_slew_rate_ENUM_UPPER_TOKEN FAST
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1, slew_rate, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1, slew_rate, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1, slew_rate, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1, slew_rate, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1, slew_rate, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1, slew_rate, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1, slew_rate, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1, slew_rate, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1, slew_rate, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1, slew_rate, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1, slew_rate, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1, slew_rate, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1, slew_rate, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1_P_nxp_speed "100-mhz"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1_P_nxp_speed_STRING_UNQUOTED 100-mhz
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1_P_nxp_speed_STRING_TOKEN 100_mhz
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1_P_nxp_speed_STRING_UPPER_TOKEN 100_MHZ
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1_P_nxp_speed_ENUM_IDX 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1_P_nxp_speed_ENUM_TOKEN 100_mhz
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1_P_nxp_speed_ENUM_UPPER_TOKEN 100_MHZ
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1_P_nxp_speed_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1, nxp_speed, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1, nxp_speed, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1, nxp_speed, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1, nxp_speed, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1, nxp_speed, 4) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1, nxp_speed, 5) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1, nxp_speed, 6)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1_P_nxp_speed_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1, nxp_speed, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1, nxp_speed, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1, nxp_speed, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1, nxp_speed, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1, nxp_speed, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1, nxp_speed, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1, nxp_speed, 6)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1_P_nxp_speed_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1, nxp_speed, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1, nxp_speed, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1, nxp_speed, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1, nxp_speed, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1, nxp_speed, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1, nxp_speed, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1, nxp_speed, 6, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1_P_nxp_speed_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1, nxp_speed, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1, nxp_speed, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1, nxp_speed, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1, nxp_speed, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1, nxp_speed, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1, nxp_speed, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1, nxp_speed, 6, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1_P_nxp_speed_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1_P_bias_disable 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1_P_bias_pull_up 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1_P_bias_pull_down 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1_P_drive_open_drain 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1_P_input_enable 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1_P_input_enable_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1_P_input_schmitt_enable 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1_P_input_schmitt_enable_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_09_ENET_RX_DATA1
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_enet_rx_data1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_enet_rx_data1_PATH "/soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_09_ENET_RX_DATA1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_enet_rx_data1_FULL_NAME "IOMUXC_GPIO_AD_B0_09_ENET_RX_DATA1"

/* Node parent (/soc/iomuxc@401f8000) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_enet_rx_data1_PARENT DT_N_S_soc_S_iomuxc_401f8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_enet_rx_data1_CHILD_IDX 13

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_enet_rx_data1_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_enet_rx_data1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_enet_rx_data1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_enet_rx_data1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_enet_rx_data1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_enet_rx_data1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_enet_rx_data1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_enet_rx_data1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_enet_rx_data1_ORD 183

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_enet_rx_data1_REQUIRES_ORDS \
	13, /* /soc/iomuxc@401f8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_enet_rx_data1_SUPPORTS_ORDS \
	191, /* /soc/iomuxc@401f8000/pinctrl/pinmux_enet/group2 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_enet_rx_data1_EXISTS 1
#define DT_N_NODELABEL_iomuxc_gpio_ad_b0_09_enet_rx_data1 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_enet_rx_data1

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_enet_rx_data1_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_enet_rx_data1_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_enet_rx_data1_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_enet_rx_data1_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_enet_rx_data1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_enet_rx_data1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_enet_rx_data1_P_pinmux {1075806432 /* 0x401f80e0 */, 0 /* 0x0 */, 1075806992 /* 0x401f8310 */, 1 /* 0x1 */, 1075806804 /* 0x401f8254 */}
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_enet_rx_data1_P_pinmux_IDX_0 1075806432
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_enet_rx_data1_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_enet_rx_data1_P_pinmux_IDX_1 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_enet_rx_data1_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_enet_rx_data1_P_pinmux_IDX_2 1075806992
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_enet_rx_data1_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_enet_rx_data1_P_pinmux_IDX_3 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_enet_rx_data1_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_enet_rx_data1_P_pinmux_IDX_4 1075806804
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_enet_rx_data1_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_enet_rx_data1_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_enet_rx_data1, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_enet_rx_data1, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_enet_rx_data1, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_enet_rx_data1, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_enet_rx_data1, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_enet_rx_data1_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_enet_rx_data1, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_enet_rx_data1, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_enet_rx_data1, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_enet_rx_data1, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_enet_rx_data1, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_enet_rx_data1_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_enet_rx_data1, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_enet_rx_data1, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_enet_rx_data1, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_enet_rx_data1, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_enet_rx_data1, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_enet_rx_data1_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_enet_rx_data1, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_enet_rx_data1, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_enet_rx_data1, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_enet_rx_data1, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_enet_rx_data1, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_enet_rx_data1_P_pinmux_LEN 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_enet_rx_data1_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_enet_rx_data1_P_pin_pue 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_enet_rx_data1_P_pin_pue_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_enet_rx_data1_P_pin_pdrv 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_enet_rx_data1_P_pin_pdrv_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_enet_rx_data1_P_pin_lpsr 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_enet_rx_data1_P_pin_lpsr_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_enet_rx_data1_P_pin_snvs 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_enet_rx_data1_P_pin_snvs_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_11_ENET_RX_EN
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_enet_rx_en
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_enet_rx_en_PATH "/soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_11_ENET_RX_EN"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_enet_rx_en_FULL_NAME "IOMUXC_GPIO_AD_B0_11_ENET_RX_EN"

/* Node parent (/soc/iomuxc@401f8000) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_enet_rx_en_PARENT DT_N_S_soc_S_iomuxc_401f8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_enet_rx_en_CHILD_IDX 18

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_enet_rx_en_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_enet_rx_en_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_enet_rx_en_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_enet_rx_en_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_enet_rx_en_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_enet_rx_en_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_enet_rx_en_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_enet_rx_en_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_enet_rx_en_ORD 184

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_enet_rx_en_REQUIRES_ORDS \
	13, /* /soc/iomuxc@401f8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_enet_rx_en_SUPPORTS_ORDS \
	191, /* /soc/iomuxc@401f8000/pinctrl/pinmux_enet/group2 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_enet_rx_en_EXISTS 1
#define DT_N_NODELABEL_iomuxc_gpio_ad_b0_11_enet_rx_en DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_enet_rx_en

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_enet_rx_en_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_enet_rx_en_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_enet_rx_en_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_enet_rx_en_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_enet_rx_en_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_enet_rx_en_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_enet_rx_en_P_pinmux {1075806440 /* 0x401f80e8 */, 0 /* 0x0 */, 1075806996 /* 0x401f8314 */, 1 /* 0x1 */, 1075806812 /* 0x401f825c */}
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_enet_rx_en_P_pinmux_IDX_0 1075806440
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_enet_rx_en_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_enet_rx_en_P_pinmux_IDX_1 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_enet_rx_en_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_enet_rx_en_P_pinmux_IDX_2 1075806996
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_enet_rx_en_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_enet_rx_en_P_pinmux_IDX_3 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_enet_rx_en_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_enet_rx_en_P_pinmux_IDX_4 1075806812
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_enet_rx_en_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_enet_rx_en_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_enet_rx_en, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_enet_rx_en, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_enet_rx_en, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_enet_rx_en, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_enet_rx_en, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_enet_rx_en_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_enet_rx_en, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_enet_rx_en, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_enet_rx_en, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_enet_rx_en, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_enet_rx_en, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_enet_rx_en_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_enet_rx_en, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_enet_rx_en, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_enet_rx_en, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_enet_rx_en, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_enet_rx_en, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_enet_rx_en_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_enet_rx_en, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_enet_rx_en, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_enet_rx_en, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_enet_rx_en, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_enet_rx_en, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_enet_rx_en_P_pinmux_LEN 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_enet_rx_en_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_enet_rx_en_P_pin_pue 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_enet_rx_en_P_pin_pue_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_enet_rx_en_P_pin_pdrv 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_enet_rx_en_P_pin_pdrv_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_enet_rx_en_P_pin_lpsr 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_enet_rx_en_P_pin_lpsr_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_enet_rx_en_P_pin_snvs 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_enet_rx_en_P_pin_snvs_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_12_ENET_RX_ER
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_enet_rx_er
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_enet_rx_er_PATH "/soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_12_ENET_RX_ER"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_enet_rx_er_FULL_NAME "IOMUXC_GPIO_AD_B0_12_ENET_RX_ER"

/* Node parent (/soc/iomuxc@401f8000) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_enet_rx_er_PARENT DT_N_S_soc_S_iomuxc_401f8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_enet_rx_er_CHILD_IDX 21

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_enet_rx_er_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_enet_rx_er_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_enet_rx_er_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_enet_rx_er_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_enet_rx_er_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_enet_rx_er_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_enet_rx_er_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_enet_rx_er_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_enet_rx_er_ORD 185

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_enet_rx_er_REQUIRES_ORDS \
	13, /* /soc/iomuxc@401f8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_enet_rx_er_SUPPORTS_ORDS \
	191, /* /soc/iomuxc@401f8000/pinctrl/pinmux_enet/group2 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_enet_rx_er_EXISTS 1
#define DT_N_NODELABEL_iomuxc_gpio_ad_b0_12_enet_rx_er DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_enet_rx_er

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_enet_rx_er_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_enet_rx_er_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_enet_rx_er_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_enet_rx_er_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_enet_rx_er_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_enet_rx_er_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_enet_rx_er_P_pinmux {1075806444 /* 0x401f80ec */, 0 /* 0x0 */, 1075807000 /* 0x401f8318 */, 1 /* 0x1 */, 1075806816 /* 0x401f8260 */}
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_enet_rx_er_P_pinmux_IDX_0 1075806444
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_enet_rx_er_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_enet_rx_er_P_pinmux_IDX_1 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_enet_rx_er_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_enet_rx_er_P_pinmux_IDX_2 1075807000
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_enet_rx_er_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_enet_rx_er_P_pinmux_IDX_3 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_enet_rx_er_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_enet_rx_er_P_pinmux_IDX_4 1075806816
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_enet_rx_er_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_enet_rx_er_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_enet_rx_er, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_enet_rx_er, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_enet_rx_er, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_enet_rx_er, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_enet_rx_er, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_enet_rx_er_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_enet_rx_er, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_enet_rx_er, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_enet_rx_er, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_enet_rx_er, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_enet_rx_er, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_enet_rx_er_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_enet_rx_er, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_enet_rx_er, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_enet_rx_er, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_enet_rx_er, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_enet_rx_er, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_enet_rx_er_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_enet_rx_er, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_enet_rx_er, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_enet_rx_er, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_enet_rx_er, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_enet_rx_er, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_enet_rx_er_P_pinmux_LEN 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_enet_rx_er_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_enet_rx_er_P_pin_pue 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_enet_rx_er_P_pin_pue_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_enet_rx_er_P_pin_pdrv 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_enet_rx_er_P_pin_pdrv_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_enet_rx_er_P_pin_lpsr 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_enet_rx_er_P_pin_lpsr_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_enet_rx_er_P_pin_snvs 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_enet_rx_er_P_pin_snvs_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_13_ENET_TX_EN
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_enet_tx_en
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_enet_tx_en_PATH "/soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_13_ENET_TX_EN"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_enet_tx_en_FULL_NAME "IOMUXC_GPIO_AD_B0_13_ENET_TX_EN"

/* Node parent (/soc/iomuxc@401f8000) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_enet_tx_en_PARENT DT_N_S_soc_S_iomuxc_401f8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_enet_tx_en_CHILD_IDX 24

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_enet_tx_en_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_enet_tx_en_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_enet_tx_en_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_enet_tx_en_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_enet_tx_en_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_enet_tx_en_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_enet_tx_en_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_enet_tx_en_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_enet_tx_en_ORD 186

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_enet_tx_en_REQUIRES_ORDS \
	13, /* /soc/iomuxc@401f8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_enet_tx_en_SUPPORTS_ORDS \
	191, /* /soc/iomuxc@401f8000/pinctrl/pinmux_enet/group2 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_enet_tx_en_EXISTS 1
#define DT_N_NODELABEL_iomuxc_gpio_ad_b0_13_enet_tx_en DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_enet_tx_en

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_enet_tx_en_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_enet_tx_en_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_enet_tx_en_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_enet_tx_en_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_enet_tx_en_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_enet_tx_en_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_enet_tx_en_P_pinmux {1075806448 /* 0x401f80f0 */, 0 /* 0x0 */, 0 /* 0x0 */, 0 /* 0x0 */, 1075806820 /* 0x401f8264 */}
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_enet_tx_en_P_pinmux_IDX_0 1075806448
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_enet_tx_en_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_enet_tx_en_P_pinmux_IDX_1 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_enet_tx_en_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_enet_tx_en_P_pinmux_IDX_2 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_enet_tx_en_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_enet_tx_en_P_pinmux_IDX_3 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_enet_tx_en_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_enet_tx_en_P_pinmux_IDX_4 1075806820
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_enet_tx_en_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_enet_tx_en_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_enet_tx_en, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_enet_tx_en, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_enet_tx_en, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_enet_tx_en, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_enet_tx_en, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_enet_tx_en_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_enet_tx_en, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_enet_tx_en, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_enet_tx_en, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_enet_tx_en, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_enet_tx_en, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_enet_tx_en_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_enet_tx_en, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_enet_tx_en, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_enet_tx_en, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_enet_tx_en, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_enet_tx_en, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_enet_tx_en_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_enet_tx_en, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_enet_tx_en, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_enet_tx_en, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_enet_tx_en, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_enet_tx_en, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_enet_tx_en_P_pinmux_LEN 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_enet_tx_en_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_enet_tx_en_P_pin_pue 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_enet_tx_en_P_pin_pue_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_enet_tx_en_P_pin_pdrv 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_enet_tx_en_P_pin_pdrv_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_enet_tx_en_P_pin_lpsr 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_enet_tx_en_P_pin_lpsr_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_enet_tx_en_P_pin_snvs 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_enet_tx_en_P_pin_snvs_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_14_ENET_TX_DATA0
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_enet_tx_data0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_enet_tx_data0_PATH "/soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_14_ENET_TX_DATA0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_enet_tx_data0_FULL_NAME "IOMUXC_GPIO_AD_B0_14_ENET_TX_DATA0"

/* Node parent (/soc/iomuxc@401f8000) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_enet_tx_data0_PARENT DT_N_S_soc_S_iomuxc_401f8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_enet_tx_data0_CHILD_IDX 27

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_enet_tx_data0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_enet_tx_data0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_enet_tx_data0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_enet_tx_data0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_enet_tx_data0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_enet_tx_data0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_enet_tx_data0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_enet_tx_data0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_enet_tx_data0_ORD 187

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_enet_tx_data0_REQUIRES_ORDS \
	13, /* /soc/iomuxc@401f8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_enet_tx_data0_SUPPORTS_ORDS \
	191, /* /soc/iomuxc@401f8000/pinctrl/pinmux_enet/group2 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_enet_tx_data0_EXISTS 1
#define DT_N_NODELABEL_iomuxc_gpio_ad_b0_14_enet_tx_data0 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_enet_tx_data0

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_enet_tx_data0_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_enet_tx_data0_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_enet_tx_data0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_enet_tx_data0_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_enet_tx_data0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_enet_tx_data0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_enet_tx_data0_P_pinmux {1075806452 /* 0x401f80f4 */, 0 /* 0x0 */, 0 /* 0x0 */, 0 /* 0x0 */, 1075806824 /* 0x401f8268 */}
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_enet_tx_data0_P_pinmux_IDX_0 1075806452
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_enet_tx_data0_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_enet_tx_data0_P_pinmux_IDX_1 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_enet_tx_data0_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_enet_tx_data0_P_pinmux_IDX_2 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_enet_tx_data0_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_enet_tx_data0_P_pinmux_IDX_3 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_enet_tx_data0_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_enet_tx_data0_P_pinmux_IDX_4 1075806824
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_enet_tx_data0_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_enet_tx_data0_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_enet_tx_data0, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_enet_tx_data0, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_enet_tx_data0, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_enet_tx_data0, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_enet_tx_data0, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_enet_tx_data0_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_enet_tx_data0, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_enet_tx_data0, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_enet_tx_data0, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_enet_tx_data0, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_enet_tx_data0, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_enet_tx_data0_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_enet_tx_data0, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_enet_tx_data0, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_enet_tx_data0, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_enet_tx_data0, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_enet_tx_data0, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_enet_tx_data0_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_enet_tx_data0, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_enet_tx_data0, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_enet_tx_data0, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_enet_tx_data0, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_enet_tx_data0, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_enet_tx_data0_P_pinmux_LEN 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_enet_tx_data0_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_enet_tx_data0_P_pin_pue 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_enet_tx_data0_P_pin_pue_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_enet_tx_data0_P_pin_pdrv 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_enet_tx_data0_P_pin_pdrv_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_enet_tx_data0_P_pin_lpsr 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_enet_tx_data0_P_pin_lpsr_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_enet_tx_data0_P_pin_snvs 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_enet_tx_data0_P_pin_snvs_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_15_ENET_TX_DATA1
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_enet_tx_data1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_enet_tx_data1_PATH "/soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_15_ENET_TX_DATA1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_enet_tx_data1_FULL_NAME "IOMUXC_GPIO_AD_B0_15_ENET_TX_DATA1"

/* Node parent (/soc/iomuxc@401f8000) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_enet_tx_data1_PARENT DT_N_S_soc_S_iomuxc_401f8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_enet_tx_data1_CHILD_IDX 29

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_enet_tx_data1_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_enet_tx_data1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_enet_tx_data1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_enet_tx_data1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_enet_tx_data1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_enet_tx_data1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_enet_tx_data1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_enet_tx_data1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_enet_tx_data1_ORD 188

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_enet_tx_data1_REQUIRES_ORDS \
	13, /* /soc/iomuxc@401f8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_enet_tx_data1_SUPPORTS_ORDS \
	191, /* /soc/iomuxc@401f8000/pinctrl/pinmux_enet/group2 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_enet_tx_data1_EXISTS 1
#define DT_N_NODELABEL_iomuxc_gpio_ad_b0_15_enet_tx_data1 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_enet_tx_data1

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_enet_tx_data1_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_enet_tx_data1_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_enet_tx_data1_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_enet_tx_data1_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_enet_tx_data1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_enet_tx_data1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_enet_tx_data1_P_pinmux {1075806456 /* 0x401f80f8 */, 0 /* 0x0 */, 0 /* 0x0 */, 0 /* 0x0 */, 1075806828 /* 0x401f826c */}
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_enet_tx_data1_P_pinmux_IDX_0 1075806456
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_enet_tx_data1_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_enet_tx_data1_P_pinmux_IDX_1 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_enet_tx_data1_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_enet_tx_data1_P_pinmux_IDX_2 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_enet_tx_data1_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_enet_tx_data1_P_pinmux_IDX_3 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_enet_tx_data1_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_enet_tx_data1_P_pinmux_IDX_4 1075806828
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_enet_tx_data1_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_enet_tx_data1_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_enet_tx_data1, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_enet_tx_data1, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_enet_tx_data1, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_enet_tx_data1, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_enet_tx_data1, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_enet_tx_data1_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_enet_tx_data1, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_enet_tx_data1, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_enet_tx_data1, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_enet_tx_data1, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_enet_tx_data1, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_enet_tx_data1_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_enet_tx_data1, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_enet_tx_data1, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_enet_tx_data1, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_enet_tx_data1, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_enet_tx_data1, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_enet_tx_data1_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_enet_tx_data1, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_enet_tx_data1, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_enet_tx_data1, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_enet_tx_data1, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_enet_tx_data1, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_enet_tx_data1_P_pinmux_LEN 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_enet_tx_data1_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_enet_tx_data1_P_pin_pue 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_enet_tx_data1_P_pin_pue_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_enet_tx_data1_P_pin_pdrv 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_enet_tx_data1_P_pin_pdrv_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_enet_tx_data1_P_pin_lpsr 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_enet_tx_data1_P_pin_lpsr_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_enet_tx_data1_P_pin_snvs 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_enet_tx_data1_P_pin_snvs_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_40_ENET_MDIO
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_enet_mdio
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_enet_mdio_PATH "/soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_40_ENET_MDIO"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_enet_mdio_FULL_NAME "IOMUXC_GPIO_EMC_40_ENET_MDIO"

/* Node parent (/soc/iomuxc@401f8000) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_enet_mdio_PARENT DT_N_S_soc_S_iomuxc_401f8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_enet_mdio_CHILD_IDX 95

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_enet_mdio_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_enet_mdio_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_enet_mdio_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_enet_mdio_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_enet_mdio_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_enet_mdio_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_enet_mdio_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_enet_mdio_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_enet_mdio_ORD 189

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_enet_mdio_REQUIRES_ORDS \
	13, /* /soc/iomuxc@401f8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_enet_mdio_SUPPORTS_ORDS \
	191, /* /soc/iomuxc@401f8000/pinctrl/pinmux_enet/group2 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_enet_mdio_EXISTS 1
#define DT_N_NODELABEL_iomuxc_gpio_emc_40_enet_mdio DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_enet_mdio

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_enet_mdio_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_enet_mdio_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_enet_mdio_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_enet_mdio_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_enet_mdio_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_enet_mdio_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_enet_mdio_P_pinmux {1075806388 /* 0x401f80b4 */, 4 /* 0x4 */, 1075806984 /* 0x401f8308 */, 2 /* 0x2 */, 1075806760 /* 0x401f8228 */}
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_enet_mdio_P_pinmux_IDX_0 1075806388
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_enet_mdio_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_enet_mdio_P_pinmux_IDX_1 4
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_enet_mdio_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_enet_mdio_P_pinmux_IDX_2 1075806984
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_enet_mdio_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_enet_mdio_P_pinmux_IDX_3 2
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_enet_mdio_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_enet_mdio_P_pinmux_IDX_4 1075806760
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_enet_mdio_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_enet_mdio_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_enet_mdio, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_enet_mdio, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_enet_mdio, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_enet_mdio, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_enet_mdio, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_enet_mdio_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_enet_mdio, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_enet_mdio, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_enet_mdio, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_enet_mdio, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_enet_mdio, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_enet_mdio_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_enet_mdio, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_enet_mdio, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_enet_mdio, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_enet_mdio, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_enet_mdio, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_enet_mdio_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_enet_mdio, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_enet_mdio, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_enet_mdio, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_enet_mdio, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_enet_mdio, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_enet_mdio_P_pinmux_LEN 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_enet_mdio_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_enet_mdio_P_pin_pue 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_enet_mdio_P_pin_pue_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_enet_mdio_P_pin_pdrv 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_enet_mdio_P_pin_pdrv_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_enet_mdio_P_pin_lpsr 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_enet_mdio_P_pin_lpsr_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_enet_mdio_P_pin_snvs 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_enet_mdio_P_pin_snvs_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_41_ENET_MDC
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_enet_mdc
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_enet_mdc_PATH "/soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_41_ENET_MDC"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_enet_mdc_FULL_NAME "IOMUXC_GPIO_EMC_41_ENET_MDC"

/* Node parent (/soc/iomuxc@401f8000) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_enet_mdc_PARENT DT_N_S_soc_S_iomuxc_401f8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_enet_mdc_CHILD_IDX 97

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_enet_mdc_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_enet_mdc_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_enet_mdc_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_enet_mdc_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_enet_mdc_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_enet_mdc_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_enet_mdc_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_enet_mdc_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_enet_mdc_ORD 190

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_enet_mdc_REQUIRES_ORDS \
	13, /* /soc/iomuxc@401f8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_enet_mdc_SUPPORTS_ORDS \
	191, /* /soc/iomuxc@401f8000/pinctrl/pinmux_enet/group2 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_enet_mdc_EXISTS 1
#define DT_N_NODELABEL_iomuxc_gpio_emc_41_enet_mdc DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_enet_mdc

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_enet_mdc_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_enet_mdc_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_enet_mdc_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_enet_mdc_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_enet_mdc_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_enet_mdc_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_enet_mdc_P_pinmux {1075806392 /* 0x401f80b8 */, 4 /* 0x4 */, 0 /* 0x0 */, 0 /* 0x0 */, 1075806764 /* 0x401f822c */}
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_enet_mdc_P_pinmux_IDX_0 1075806392
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_enet_mdc_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_enet_mdc_P_pinmux_IDX_1 4
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_enet_mdc_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_enet_mdc_P_pinmux_IDX_2 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_enet_mdc_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_enet_mdc_P_pinmux_IDX_3 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_enet_mdc_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_enet_mdc_P_pinmux_IDX_4 1075806764
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_enet_mdc_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_enet_mdc_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_enet_mdc, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_enet_mdc, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_enet_mdc, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_enet_mdc, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_enet_mdc, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_enet_mdc_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_enet_mdc, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_enet_mdc, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_enet_mdc, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_enet_mdc, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_enet_mdc, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_enet_mdc_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_enet_mdc, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_enet_mdc, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_enet_mdc, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_enet_mdc, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_enet_mdc, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_enet_mdc_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_enet_mdc, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_enet_mdc, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_enet_mdc, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_enet_mdc, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_enet_mdc, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_enet_mdc_P_pinmux_LEN 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_enet_mdc_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_enet_mdc_P_pin_pue 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_enet_mdc_P_pin_pue_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_enet_mdc_P_pin_pdrv 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_enet_mdc_P_pin_pdrv_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_enet_mdc_P_pin_lpsr 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_enet_mdc_P_pin_lpsr_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_enet_mdc_P_pin_snvs 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_enet_mdc_P_pin_snvs_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/pinctrl/pinmux_enet/group2
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2_PATH "/soc/iomuxc@401f8000/pinctrl/pinmux_enet/group2"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2_FULL_NAME "group2"

/* Node parent (/soc/iomuxc@401f8000/pinctrl/pinmux_enet) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2_PARENT DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2_CHILD_IDX 2

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2_ORD 191

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2_REQUIRES_ORDS \
	149, /* /soc/iomuxc@401f8000/pinctrl/pinmux_enet */ \
	183, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_09_ENET_RX_DATA1 */ \
	184, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_11_ENET_RX_EN */ \
	185, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_12_ENET_RX_ER */ \
	186, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_13_ENET_TX_EN */ \
	187, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_14_ENET_TX_DATA0 */ \
	188, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_15_ENET_TX_DATA1 */ \
	189, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_40_ENET_MDIO */ \
	190, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_41_ENET_MDC */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2_P_pinmux_IDX_0 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_enet_rx_data1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2_P_pinmux_IDX_0_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_enet_rx_data1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2_P_pinmux_IDX_1 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_enet_rx_en
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2_P_pinmux_IDX_1_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_enet_rx_en
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2_P_pinmux_IDX_2 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_enet_tx_data0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2_P_pinmux_IDX_2_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_enet_tx_data0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2_P_pinmux_IDX_3 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_enet_tx_data1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2_P_pinmux_IDX_3_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_enet_tx_data1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2_P_pinmux_IDX_4 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_enet_tx_en
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2_P_pinmux_IDX_4_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_enet_tx_en
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2_P_pinmux_IDX_5 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_enet_rx_er
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2_P_pinmux_IDX_5_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_enet_rx_er
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2_P_pinmux_IDX_5_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2_P_pinmux_IDX_6 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_enet_mdio
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2_P_pinmux_IDX_6_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_enet_mdio
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2_P_pinmux_IDX_6_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2_P_pinmux_IDX_7 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_enet_mdc
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2_P_pinmux_IDX_7_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_enet_mdc
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2_P_pinmux_IDX_7_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2, pinmux, 4) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2, pinmux, 5) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2, pinmux, 6) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2, pinmux, 7)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2, pinmux, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2, pinmux, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2, pinmux, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2, pinmux, 7)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2, pinmux, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2, pinmux, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2, pinmux, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2, pinmux, 7, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2, pinmux, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2, pinmux, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2, pinmux, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2, pinmux, 7, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2_P_pinmux_LEN 8
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2_P_drive_strength "r0-5"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2_P_drive_strength_STRING_UNQUOTED r0-5
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2_P_drive_strength_STRING_TOKEN r0_5
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2_P_drive_strength_STRING_UPPER_TOKEN R0_5
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2_P_drive_strength_ENUM_IDX 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2_P_drive_strength_ENUM_TOKEN r0_5
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2_P_drive_strength_ENUM_UPPER_TOKEN R0_5
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2, drive_strength, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2, drive_strength, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2, drive_strength, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2, drive_strength, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2, drive_strength, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2, drive_strength, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2, drive_strength, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2, drive_strength, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2, drive_strength, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2, drive_strength, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2, drive_strength, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2, drive_strength, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2, drive_strength, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2, drive_strength, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2, drive_strength, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2, drive_strength, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2_P_bias_pull_up_value "100k"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2_P_bias_pull_up_value_STRING_UNQUOTED 100k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2_P_bias_pull_up_value_STRING_TOKEN 100k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2_P_bias_pull_up_value_STRING_UPPER_TOKEN 100K
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2_P_bias_pull_up_value_ENUM_IDX 2
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2_P_bias_pull_up_value_ENUM_TOKEN 100k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2_P_bias_pull_up_value_ENUM_UPPER_TOKEN 100K
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2_P_bias_pull_up_value_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2, bias_pull_up_value, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2, bias_pull_up_value, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2, bias_pull_up_value, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2, bias_pull_up_value, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2_P_bias_pull_up_value_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2, bias_pull_up_value, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2, bias_pull_up_value, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2, bias_pull_up_value, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2, bias_pull_up_value, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2_P_bias_pull_up_value_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2, bias_pull_up_value, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2, bias_pull_up_value, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2, bias_pull_up_value, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2, bias_pull_up_value, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2_P_bias_pull_up_value_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2, bias_pull_up_value, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2, bias_pull_up_value, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2, bias_pull_up_value, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2, bias_pull_up_value, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2_P_bias_pull_up_value_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2_P_bias_pull_down_value "100k"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2_P_bias_pull_down_value_STRING_UNQUOTED 100k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2_P_bias_pull_down_value_STRING_TOKEN 100k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2_P_bias_pull_down_value_STRING_UPPER_TOKEN 100K
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2_P_bias_pull_down_value_ENUM_IDX 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2_P_bias_pull_down_value_ENUM_TOKEN 100k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2_P_bias_pull_down_value_ENUM_UPPER_TOKEN 100K
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2_P_bias_pull_down_value_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2, bias_pull_down_value, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2, bias_pull_down_value, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2, bias_pull_down_value, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2, bias_pull_down_value, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2_P_bias_pull_down_value_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2, bias_pull_down_value, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2, bias_pull_down_value, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2, bias_pull_down_value, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2, bias_pull_down_value, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2_P_bias_pull_down_value_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2, bias_pull_down_value, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2, bias_pull_down_value, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2, bias_pull_down_value, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2, bias_pull_down_value, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2_P_bias_pull_down_value_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2, bias_pull_down_value, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2, bias_pull_down_value, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2, bias_pull_down_value, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2, bias_pull_down_value, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2_P_bias_pull_down_value_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2_P_slew_rate "fast"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2_P_slew_rate_STRING_UNQUOTED fast
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2_P_slew_rate_STRING_TOKEN fast
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2_P_slew_rate_STRING_UPPER_TOKEN FAST
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2_P_slew_rate_ENUM_IDX 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2_P_slew_rate_ENUM_TOKEN fast
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2_P_slew_rate_ENUM_UPPER_TOKEN FAST
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2, slew_rate, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2, slew_rate, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2, slew_rate, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2, slew_rate, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2, slew_rate, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2, slew_rate, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2, slew_rate, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2, slew_rate, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2, slew_rate, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2, slew_rate, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2, slew_rate, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2, slew_rate, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2, slew_rate, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2_P_nxp_speed "200-mhz"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2_P_nxp_speed_STRING_UNQUOTED 200-mhz
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2_P_nxp_speed_STRING_TOKEN 200_mhz
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2_P_nxp_speed_STRING_UPPER_TOKEN 200_MHZ
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2_P_nxp_speed_ENUM_IDX 3
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2_P_nxp_speed_ENUM_TOKEN 200_mhz
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2_P_nxp_speed_ENUM_UPPER_TOKEN 200_MHZ
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2_P_nxp_speed_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2, nxp_speed, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2, nxp_speed, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2, nxp_speed, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2, nxp_speed, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2, nxp_speed, 4) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2, nxp_speed, 5) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2, nxp_speed, 6)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2_P_nxp_speed_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2, nxp_speed, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2, nxp_speed, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2, nxp_speed, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2, nxp_speed, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2, nxp_speed, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2, nxp_speed, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2, nxp_speed, 6)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2_P_nxp_speed_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2, nxp_speed, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2, nxp_speed, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2, nxp_speed, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2, nxp_speed, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2, nxp_speed, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2, nxp_speed, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2, nxp_speed, 6, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2_P_nxp_speed_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2, nxp_speed, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2, nxp_speed, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2, nxp_speed, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2, nxp_speed, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2, nxp_speed, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2, nxp_speed, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2, nxp_speed, 6, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2_P_nxp_speed_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2_P_bias_disable 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2_P_bias_pull_up 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2_P_bias_pull_down 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2_P_drive_open_drain 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2_P_input_enable 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2_P_input_enable_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2_P_input_schmitt_enable 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2_P_input_schmitt_enable_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/pinctrl/pinmux_enet/group3
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3_PATH "/soc/iomuxc@401f8000/pinctrl/pinmux_enet/group3"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3_FULL_NAME "group3"

/* Node parent (/soc/iomuxc@401f8000/pinctrl/pinmux_enet) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3_PARENT DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3_CHILD_IDX 3

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3_ORD 192

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3_REQUIRES_ORDS \
	42, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B1_06_GPIO1_IO22 */ \
	149, /* /soc/iomuxc@401f8000/pinctrl/pinmux_enet */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3_P_pinmux_IDX_0 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_06_gpio1_io22
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3_P_pinmux_IDX_0_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_06_gpio1_io22
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3, pinmux, 0)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3, pinmux, 0)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3, pinmux, 0, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3, pinmux, 0, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3_P_pinmux_LEN 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3_P_drive_strength "r0-5"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3_P_drive_strength_STRING_UNQUOTED r0-5
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3_P_drive_strength_STRING_TOKEN r0_5
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3_P_drive_strength_STRING_UPPER_TOKEN R0_5
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3_P_drive_strength_ENUM_IDX 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3_P_drive_strength_ENUM_TOKEN r0_5
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3_P_drive_strength_ENUM_UPPER_TOKEN R0_5
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3, drive_strength, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3, drive_strength, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3, drive_strength, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3, drive_strength, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3, drive_strength, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3, drive_strength, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3, drive_strength, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3, drive_strength, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3, drive_strength, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3, drive_strength, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3, drive_strength, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3, drive_strength, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3, drive_strength, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3, drive_strength, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3, drive_strength, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3, drive_strength, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3_P_bias_pull_up_value "100k"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3_P_bias_pull_up_value_STRING_UNQUOTED 100k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3_P_bias_pull_up_value_STRING_TOKEN 100k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3_P_bias_pull_up_value_STRING_UPPER_TOKEN 100K
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3_P_bias_pull_up_value_ENUM_IDX 2
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3_P_bias_pull_up_value_ENUM_TOKEN 100k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3_P_bias_pull_up_value_ENUM_UPPER_TOKEN 100K
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3_P_bias_pull_up_value_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3, bias_pull_up_value, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3, bias_pull_up_value, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3, bias_pull_up_value, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3, bias_pull_up_value, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3_P_bias_pull_up_value_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3, bias_pull_up_value, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3, bias_pull_up_value, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3, bias_pull_up_value, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3, bias_pull_up_value, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3_P_bias_pull_up_value_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3, bias_pull_up_value, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3, bias_pull_up_value, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3, bias_pull_up_value, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3, bias_pull_up_value, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3_P_bias_pull_up_value_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3, bias_pull_up_value, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3, bias_pull_up_value, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3, bias_pull_up_value, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3, bias_pull_up_value, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3_P_bias_pull_up_value_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3_P_bias_pull_down_value "100k"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3_P_bias_pull_down_value_STRING_UNQUOTED 100k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3_P_bias_pull_down_value_STRING_TOKEN 100k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3_P_bias_pull_down_value_STRING_UPPER_TOKEN 100K
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3_P_bias_pull_down_value_ENUM_IDX 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3_P_bias_pull_down_value_ENUM_TOKEN 100k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3_P_bias_pull_down_value_ENUM_UPPER_TOKEN 100K
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3_P_bias_pull_down_value_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3, bias_pull_down_value, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3, bias_pull_down_value, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3, bias_pull_down_value, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3, bias_pull_down_value, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3_P_bias_pull_down_value_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3, bias_pull_down_value, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3, bias_pull_down_value, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3, bias_pull_down_value, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3, bias_pull_down_value, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3_P_bias_pull_down_value_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3, bias_pull_down_value, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3, bias_pull_down_value, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3, bias_pull_down_value, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3, bias_pull_down_value, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3_P_bias_pull_down_value_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3, bias_pull_down_value, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3, bias_pull_down_value, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3, bias_pull_down_value, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3, bias_pull_down_value, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3_P_bias_pull_down_value_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3_P_slew_rate "slow"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3_P_slew_rate_STRING_UNQUOTED slow
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3_P_slew_rate_STRING_TOKEN slow
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3_P_slew_rate_STRING_UPPER_TOKEN SLOW
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3_P_slew_rate_ENUM_TOKEN slow
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3_P_slew_rate_ENUM_UPPER_TOKEN SLOW
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3, slew_rate, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3, slew_rate, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3, slew_rate, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3, slew_rate, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3, slew_rate, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3, slew_rate, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3, slew_rate, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3, slew_rate, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3, slew_rate, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3, slew_rate, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3, slew_rate, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3, slew_rate, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3, slew_rate, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3_P_nxp_speed "100-mhz"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3_P_nxp_speed_STRING_UNQUOTED 100-mhz
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3_P_nxp_speed_STRING_TOKEN 100_mhz
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3_P_nxp_speed_STRING_UPPER_TOKEN 100_MHZ
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3_P_nxp_speed_ENUM_IDX 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3_P_nxp_speed_ENUM_TOKEN 100_mhz
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3_P_nxp_speed_ENUM_UPPER_TOKEN 100_MHZ
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3_P_nxp_speed_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3, nxp_speed, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3, nxp_speed, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3, nxp_speed, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3, nxp_speed, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3, nxp_speed, 4) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3, nxp_speed, 5) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3, nxp_speed, 6)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3_P_nxp_speed_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3, nxp_speed, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3, nxp_speed, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3, nxp_speed, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3, nxp_speed, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3, nxp_speed, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3, nxp_speed, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3, nxp_speed, 6)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3_P_nxp_speed_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3, nxp_speed, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3, nxp_speed, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3, nxp_speed, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3, nxp_speed, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3, nxp_speed, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3, nxp_speed, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3, nxp_speed, 6, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3_P_nxp_speed_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3, nxp_speed, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3, nxp_speed, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3, nxp_speed, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3, nxp_speed, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3, nxp_speed, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3, nxp_speed, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3, nxp_speed, 6, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3_P_nxp_speed_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3_P_bias_disable 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3_P_bias_pull_up 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3_P_bias_pull_down 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3_P_drive_open_drain 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3_P_input_enable 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3_P_input_enable_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3_P_input_schmitt_enable 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3_P_input_schmitt_enable_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_10_ENET_RX_DATA0
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_enet_rx_data0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_enet_rx_data0_PATH "/soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_10_ENET_RX_DATA0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_enet_rx_data0_FULL_NAME "IOMUXC_GPIO_AD_B0_10_ENET_RX_DATA0"

/* Node parent (/soc/iomuxc@401f8000) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_enet_rx_data0_PARENT DT_N_S_soc_S_iomuxc_401f8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_enet_rx_data0_CHILD_IDX 15

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_enet_rx_data0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_enet_rx_data0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_enet_rx_data0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_enet_rx_data0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_enet_rx_data0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_enet_rx_data0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_enet_rx_data0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_enet_rx_data0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_enet_rx_data0_ORD 193

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_enet_rx_data0_REQUIRES_ORDS \
	13, /* /soc/iomuxc@401f8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_enet_rx_data0_SUPPORTS_ORDS \
	194, /* /soc/iomuxc@401f8000/pinctrl/pinmux_enet/group4 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_enet_rx_data0_EXISTS 1
#define DT_N_NODELABEL_iomuxc_gpio_ad_b0_10_enet_rx_data0 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_enet_rx_data0

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_enet_rx_data0_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_enet_rx_data0_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_enet_rx_data0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_enet_rx_data0_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_enet_rx_data0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_enet_rx_data0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_enet_rx_data0_P_pinmux {1075806436 /* 0x401f80e4 */, 0 /* 0x0 */, 1075806988 /* 0x401f830c */, 1 /* 0x1 */, 1075806808 /* 0x401f8258 */}
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_enet_rx_data0_P_pinmux_IDX_0 1075806436
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_enet_rx_data0_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_enet_rx_data0_P_pinmux_IDX_1 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_enet_rx_data0_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_enet_rx_data0_P_pinmux_IDX_2 1075806988
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_enet_rx_data0_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_enet_rx_data0_P_pinmux_IDX_3 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_enet_rx_data0_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_enet_rx_data0_P_pinmux_IDX_4 1075806808
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_enet_rx_data0_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_enet_rx_data0_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_enet_rx_data0, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_enet_rx_data0, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_enet_rx_data0, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_enet_rx_data0, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_enet_rx_data0, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_enet_rx_data0_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_enet_rx_data0, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_enet_rx_data0, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_enet_rx_data0, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_enet_rx_data0, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_enet_rx_data0, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_enet_rx_data0_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_enet_rx_data0, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_enet_rx_data0, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_enet_rx_data0, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_enet_rx_data0, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_enet_rx_data0, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_enet_rx_data0_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_enet_rx_data0, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_enet_rx_data0, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_enet_rx_data0, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_enet_rx_data0, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_enet_rx_data0, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_enet_rx_data0_P_pinmux_LEN 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_enet_rx_data0_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_enet_rx_data0_P_pin_pue 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_enet_rx_data0_P_pin_pue_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_enet_rx_data0_P_pin_pdrv 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_enet_rx_data0_P_pin_pdrv_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_enet_rx_data0_P_pin_lpsr 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_enet_rx_data0_P_pin_lpsr_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_enet_rx_data0_P_pin_snvs 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_enet_rx_data0_P_pin_snvs_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/pinctrl/pinmux_enet/group4
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4_PATH "/soc/iomuxc@401f8000/pinctrl/pinmux_enet/group4"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4_FULL_NAME "group4"

/* Node parent (/soc/iomuxc@401f8000/pinctrl/pinmux_enet) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4_PARENT DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4_CHILD_IDX 4

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4_ORD 194

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4_REQUIRES_ORDS \
	149, /* /soc/iomuxc@401f8000/pinctrl/pinmux_enet */ \
	193, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_10_ENET_RX_DATA0 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4_P_pinmux_IDX_0 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_enet_rx_data0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4_P_pinmux_IDX_0_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_enet_rx_data0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4, pinmux, 0)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4, pinmux, 0)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4, pinmux, 0, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4, pinmux, 0, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4_P_pinmux_LEN 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4_P_drive_strength "r0-6"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4_P_drive_strength_STRING_UNQUOTED r0-6
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4_P_drive_strength_STRING_TOKEN r0_6
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4_P_drive_strength_STRING_UPPER_TOKEN R0_6
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4_P_drive_strength_ENUM_IDX 6
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4_P_drive_strength_ENUM_TOKEN r0_6
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4_P_drive_strength_ENUM_UPPER_TOKEN R0_6
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4, drive_strength, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4, drive_strength, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4, drive_strength, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4, drive_strength, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4, drive_strength, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4, drive_strength, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4, drive_strength, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4, drive_strength, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4, drive_strength, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4, drive_strength, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4, drive_strength, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4, drive_strength, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4, drive_strength, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4, drive_strength, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4, drive_strength, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4, drive_strength, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4_P_bias_pull_up_value "47k"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4_P_bias_pull_up_value_STRING_UNQUOTED 47k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4_P_bias_pull_up_value_STRING_TOKEN 47k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4_P_bias_pull_up_value_STRING_UPPER_TOKEN 47K
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4_P_bias_pull_up_value_ENUM_IDX 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4_P_bias_pull_up_value_ENUM_TOKEN 47k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4_P_bias_pull_up_value_ENUM_UPPER_TOKEN 47K
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4_P_bias_pull_up_value_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4, bias_pull_up_value, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4, bias_pull_up_value, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4, bias_pull_up_value, 2)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4_P_bias_pull_up_value_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4, bias_pull_up_value, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4, bias_pull_up_value, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4, bias_pull_up_value, 2)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4_P_bias_pull_up_value_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4, bias_pull_up_value, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4, bias_pull_up_value, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4, bias_pull_up_value, 2, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4_P_bias_pull_up_value_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4, bias_pull_up_value, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4, bias_pull_up_value, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4, bias_pull_up_value, 2, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4_P_bias_pull_up_value_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4_P_bias_pull_down_value "100k"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4_P_bias_pull_down_value_STRING_UNQUOTED 100k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4_P_bias_pull_down_value_STRING_TOKEN 100k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4_P_bias_pull_down_value_STRING_UPPER_TOKEN 100K
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4_P_bias_pull_down_value_ENUM_IDX 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4_P_bias_pull_down_value_ENUM_TOKEN 100k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4_P_bias_pull_down_value_ENUM_UPPER_TOKEN 100K
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4_P_bias_pull_down_value_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4, bias_pull_down_value, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4, bias_pull_down_value, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4, bias_pull_down_value, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4, bias_pull_down_value, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4_P_bias_pull_down_value_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4, bias_pull_down_value, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4, bias_pull_down_value, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4, bias_pull_down_value, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4, bias_pull_down_value, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4_P_bias_pull_down_value_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4, bias_pull_down_value, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4, bias_pull_down_value, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4, bias_pull_down_value, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4, bias_pull_down_value, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4_P_bias_pull_down_value_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4, bias_pull_down_value, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4, bias_pull_down_value, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4, bias_pull_down_value, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4, bias_pull_down_value, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4_P_bias_pull_down_value_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4_P_slew_rate "slow"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4_P_slew_rate_STRING_UNQUOTED slow
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4_P_slew_rate_STRING_TOKEN slow
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4_P_slew_rate_STRING_UPPER_TOKEN SLOW
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4_P_slew_rate_ENUM_TOKEN slow
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4_P_slew_rate_ENUM_UPPER_TOKEN SLOW
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4, slew_rate, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4, slew_rate, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4, slew_rate, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4, slew_rate, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4, slew_rate, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4, slew_rate, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4, slew_rate, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4, slew_rate, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4, slew_rate, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4, slew_rate, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4, slew_rate, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4, slew_rate, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4, slew_rate, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4_P_nxp_speed "100-mhz"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4_P_nxp_speed_STRING_UNQUOTED 100-mhz
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4_P_nxp_speed_STRING_TOKEN 100_mhz
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4_P_nxp_speed_STRING_UPPER_TOKEN 100_MHZ
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4_P_nxp_speed_ENUM_IDX 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4_P_nxp_speed_ENUM_TOKEN 100_mhz
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4_P_nxp_speed_ENUM_UPPER_TOKEN 100_MHZ
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4_P_nxp_speed_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4, nxp_speed, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4, nxp_speed, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4, nxp_speed, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4, nxp_speed, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4, nxp_speed, 4) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4, nxp_speed, 5) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4, nxp_speed, 6)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4_P_nxp_speed_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4, nxp_speed, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4, nxp_speed, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4, nxp_speed, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4, nxp_speed, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4, nxp_speed, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4, nxp_speed, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4, nxp_speed, 6)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4_P_nxp_speed_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4, nxp_speed, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4, nxp_speed, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4, nxp_speed, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4, nxp_speed, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4, nxp_speed, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4, nxp_speed, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4, nxp_speed, 6, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4_P_nxp_speed_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4, nxp_speed, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4, nxp_speed, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4, nxp_speed, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4, nxp_speed, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4, nxp_speed, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4, nxp_speed, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4, nxp_speed, 6, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4_P_nxp_speed_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4_P_bias_disable 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4_P_bias_pull_up 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4_P_bias_pull_down 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4_P_drive_open_drain 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4_P_input_enable 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4_P_input_enable_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4_P_input_schmitt_enable 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4_P_input_schmitt_enable_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B1_00_FLEXCAN1_TX
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_flexcan1_tx
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_flexcan1_tx_PATH "/soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B1_00_FLEXCAN1_TX"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_flexcan1_tx_FULL_NAME "IOMUXC_GPIO_SD_B1_00_FLEXCAN1_TX"

/* Node parent (/soc/iomuxc@401f8000) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_flexcan1_tx_PARENT DT_N_S_soc_S_iomuxc_401f8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_flexcan1_tx_CHILD_IDX 112

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_flexcan1_tx_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_flexcan1_tx_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_flexcan1_tx_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_flexcan1_tx_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_flexcan1_tx_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_flexcan1_tx_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_flexcan1_tx_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_flexcan1_tx_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_flexcan1_tx_ORD 195

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_flexcan1_tx_REQUIRES_ORDS \
	13, /* /soc/iomuxc@401f8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_flexcan1_tx_SUPPORTS_ORDS \
	198, /* /soc/iomuxc@401f8000/pinctrl/pinmux_flexcan1/group0 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_flexcan1_tx_EXISTS 1
#define DT_N_NODELABEL_iomuxc_gpio_sd_b1_00_flexcan1_tx DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_flexcan1_tx

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_flexcan1_tx_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_flexcan1_tx_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_flexcan1_tx_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_flexcan1_tx_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_flexcan1_tx_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_flexcan1_tx_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_flexcan1_tx_P_pinmux {1075806552 /* 0x401f8158 */, 4 /* 0x4 */, 0 /* 0x0 */, 0 /* 0x0 */, 1075806924 /* 0x401f82cc */}
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_flexcan1_tx_P_pinmux_IDX_0 1075806552
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_flexcan1_tx_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_flexcan1_tx_P_pinmux_IDX_1 4
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_flexcan1_tx_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_flexcan1_tx_P_pinmux_IDX_2 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_flexcan1_tx_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_flexcan1_tx_P_pinmux_IDX_3 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_flexcan1_tx_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_flexcan1_tx_P_pinmux_IDX_4 1075806924
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_flexcan1_tx_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_flexcan1_tx_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_flexcan1_tx, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_flexcan1_tx, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_flexcan1_tx, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_flexcan1_tx, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_flexcan1_tx, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_flexcan1_tx_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_flexcan1_tx, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_flexcan1_tx, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_flexcan1_tx, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_flexcan1_tx, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_flexcan1_tx, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_flexcan1_tx_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_flexcan1_tx, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_flexcan1_tx, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_flexcan1_tx, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_flexcan1_tx, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_flexcan1_tx, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_flexcan1_tx_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_flexcan1_tx, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_flexcan1_tx, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_flexcan1_tx, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_flexcan1_tx, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_flexcan1_tx, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_flexcan1_tx_P_pinmux_LEN 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_flexcan1_tx_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_flexcan1_tx_P_pin_pue 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_flexcan1_tx_P_pin_pue_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_flexcan1_tx_P_pin_pdrv 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_flexcan1_tx_P_pin_pdrv_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_flexcan1_tx_P_pin_lpsr 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_flexcan1_tx_P_pin_lpsr_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_flexcan1_tx_P_pin_snvs 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_flexcan1_tx_P_pin_snvs_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B1_01_FLEXCAN1_RX
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_flexcan1_rx
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_flexcan1_rx_PATH "/soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B1_01_FLEXCAN1_RX"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_flexcan1_rx_FULL_NAME "IOMUXC_GPIO_SD_B1_01_FLEXCAN1_RX"

/* Node parent (/soc/iomuxc@401f8000) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_flexcan1_rx_PARENT DT_N_S_soc_S_iomuxc_401f8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_flexcan1_rx_CHILD_IDX 114

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_flexcan1_rx_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_flexcan1_rx_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_flexcan1_rx_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_flexcan1_rx_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_flexcan1_rx_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_flexcan1_rx_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_flexcan1_rx_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_flexcan1_rx_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_flexcan1_rx_ORD 196

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_flexcan1_rx_REQUIRES_ORDS \
	13, /* /soc/iomuxc@401f8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_flexcan1_rx_SUPPORTS_ORDS \
	198, /* /soc/iomuxc@401f8000/pinctrl/pinmux_flexcan1/group0 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_flexcan1_rx_EXISTS 1
#define DT_N_NODELABEL_iomuxc_gpio_sd_b1_01_flexcan1_rx DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_flexcan1_rx

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_flexcan1_rx_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_flexcan1_rx_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_flexcan1_rx_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_flexcan1_rx_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_flexcan1_rx_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_flexcan1_rx_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_flexcan1_rx_P_pinmux {1075806556 /* 0x401f815c */, 4 /* 0x4 */, 1075807008 /* 0x401f8320 */, 1 /* 0x1 */, 1075806928 /* 0x401f82d0 */}
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_flexcan1_rx_P_pinmux_IDX_0 1075806556
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_flexcan1_rx_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_flexcan1_rx_P_pinmux_IDX_1 4
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_flexcan1_rx_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_flexcan1_rx_P_pinmux_IDX_2 1075807008
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_flexcan1_rx_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_flexcan1_rx_P_pinmux_IDX_3 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_flexcan1_rx_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_flexcan1_rx_P_pinmux_IDX_4 1075806928
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_flexcan1_rx_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_flexcan1_rx_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_flexcan1_rx, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_flexcan1_rx, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_flexcan1_rx, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_flexcan1_rx, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_flexcan1_rx, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_flexcan1_rx_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_flexcan1_rx, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_flexcan1_rx, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_flexcan1_rx, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_flexcan1_rx, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_flexcan1_rx, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_flexcan1_rx_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_flexcan1_rx, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_flexcan1_rx, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_flexcan1_rx, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_flexcan1_rx, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_flexcan1_rx, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_flexcan1_rx_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_flexcan1_rx, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_flexcan1_rx, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_flexcan1_rx, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_flexcan1_rx, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_flexcan1_rx, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_flexcan1_rx_P_pinmux_LEN 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_flexcan1_rx_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_flexcan1_rx_P_pin_pue 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_flexcan1_rx_P_pin_pue_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_flexcan1_rx_P_pin_pdrv 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_flexcan1_rx_P_pin_pdrv_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_flexcan1_rx_P_pin_lpsr 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_flexcan1_rx_P_pin_lpsr_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_flexcan1_rx_P_pin_snvs 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_flexcan1_rx_P_pin_snvs_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/pinctrl/pinmux_flexcan1
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_PATH "/soc/iomuxc@401f8000/pinctrl/pinmux_flexcan1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_FULL_NAME "pinmux_flexcan1"

/* Node parent (/soc/iomuxc@401f8000/pinctrl) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_PARENT DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_CHILD_IDX 2

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_ORD 197

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_REQUIRES_ORDS \
	54, /* /soc/iomuxc@401f8000/pinctrl */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_SUPPORTS_ORDS \
	198, /* /soc/iomuxc@401f8000/pinctrl/pinmux_flexcan1/group0 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_EXISTS 1
#define DT_N_NODELABEL_pinmux_flexcan1 DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /soc/iomuxc@401f8000/pinctrl/pinmux_flexcan1/group0
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0_PATH "/soc/iomuxc@401f8000/pinctrl/pinmux_flexcan1/group0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0_FULL_NAME "group0"

/* Node parent (/soc/iomuxc@401f8000/pinctrl/pinmux_flexcan1) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0_PARENT DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0_ORD 198

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0_REQUIRES_ORDS \
	195, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B1_00_FLEXCAN1_TX */ \
	196, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B1_01_FLEXCAN1_RX */ \
	197, /* /soc/iomuxc@401f8000/pinctrl/pinmux_flexcan1 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0_P_pinmux_IDX_0 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_flexcan1_tx
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0_P_pinmux_IDX_0_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_flexcan1_tx
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0_P_pinmux_IDX_1 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_flexcan1_rx
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0_P_pinmux_IDX_1_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_flexcan1_rx
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0, pinmux, 1)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0, pinmux, 1)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0, pinmux, 1, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0, pinmux, 1, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0_P_pinmux_LEN 2
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0_P_drive_strength "r0-6"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0_P_drive_strength_STRING_UNQUOTED r0-6
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0_P_drive_strength_STRING_TOKEN r0_6
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0_P_drive_strength_STRING_UPPER_TOKEN R0_6
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0_P_drive_strength_ENUM_IDX 6
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0_P_drive_strength_ENUM_TOKEN r0_6
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0_P_drive_strength_ENUM_UPPER_TOKEN R0_6
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0, drive_strength, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0, drive_strength, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0, drive_strength, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0, drive_strength, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0, drive_strength, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0, drive_strength, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0, drive_strength, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0, drive_strength, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0, drive_strength, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0, drive_strength, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0, drive_strength, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0, drive_strength, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0, drive_strength, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0, drive_strength, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0, drive_strength, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0, drive_strength, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0_P_bias_pull_up_value "47k"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0_P_bias_pull_up_value_STRING_UNQUOTED 47k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0_P_bias_pull_up_value_STRING_TOKEN 47k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0_P_bias_pull_up_value_STRING_UPPER_TOKEN 47K
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0_P_bias_pull_up_value_ENUM_IDX 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0_P_bias_pull_up_value_ENUM_TOKEN 47k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0_P_bias_pull_up_value_ENUM_UPPER_TOKEN 47K
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0_P_bias_pull_up_value_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0, bias_pull_up_value, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0, bias_pull_up_value, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0, bias_pull_up_value, 2)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0_P_bias_pull_up_value_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0, bias_pull_up_value, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0, bias_pull_up_value, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0, bias_pull_up_value, 2)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0_P_bias_pull_up_value_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0, bias_pull_up_value, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0, bias_pull_up_value, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0, bias_pull_up_value, 2, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0_P_bias_pull_up_value_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0, bias_pull_up_value, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0, bias_pull_up_value, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0, bias_pull_up_value, 2, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0_P_bias_pull_up_value_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0_P_bias_pull_down_value "100k"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0_P_bias_pull_down_value_STRING_UNQUOTED 100k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0_P_bias_pull_down_value_STRING_TOKEN 100k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0_P_bias_pull_down_value_STRING_UPPER_TOKEN 100K
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0_P_bias_pull_down_value_ENUM_IDX 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0_P_bias_pull_down_value_ENUM_TOKEN 100k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0_P_bias_pull_down_value_ENUM_UPPER_TOKEN 100K
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0_P_bias_pull_down_value_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0, bias_pull_down_value, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0, bias_pull_down_value, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0, bias_pull_down_value, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0, bias_pull_down_value, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0_P_bias_pull_down_value_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0, bias_pull_down_value, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0, bias_pull_down_value, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0, bias_pull_down_value, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0, bias_pull_down_value, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0_P_bias_pull_down_value_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0, bias_pull_down_value, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0, bias_pull_down_value, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0, bias_pull_down_value, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0, bias_pull_down_value, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0_P_bias_pull_down_value_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0, bias_pull_down_value, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0, bias_pull_down_value, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0, bias_pull_down_value, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0, bias_pull_down_value, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0_P_bias_pull_down_value_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0_P_slew_rate "slow"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0_P_slew_rate_STRING_UNQUOTED slow
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0_P_slew_rate_STRING_TOKEN slow
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0_P_slew_rate_STRING_UPPER_TOKEN SLOW
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0_P_slew_rate_ENUM_TOKEN slow
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0_P_slew_rate_ENUM_UPPER_TOKEN SLOW
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0, slew_rate, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0, slew_rate, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0, slew_rate, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0, slew_rate, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0, slew_rate, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0, slew_rate, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0, slew_rate, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0, slew_rate, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0, slew_rate, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0, slew_rate, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0, slew_rate, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0, slew_rate, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0, slew_rate, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0_P_nxp_speed "100-mhz"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0_P_nxp_speed_STRING_UNQUOTED 100-mhz
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0_P_nxp_speed_STRING_TOKEN 100_mhz
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0_P_nxp_speed_STRING_UPPER_TOKEN 100_MHZ
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0_P_nxp_speed_ENUM_IDX 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0_P_nxp_speed_ENUM_TOKEN 100_mhz
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0_P_nxp_speed_ENUM_UPPER_TOKEN 100_MHZ
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0_P_nxp_speed_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0, nxp_speed, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0, nxp_speed, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0, nxp_speed, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0, nxp_speed, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0, nxp_speed, 4) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0, nxp_speed, 5) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0, nxp_speed, 6)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0_P_nxp_speed_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0, nxp_speed, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0, nxp_speed, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0, nxp_speed, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0, nxp_speed, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0, nxp_speed, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0, nxp_speed, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0, nxp_speed, 6)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0_P_nxp_speed_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0, nxp_speed, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0, nxp_speed, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0, nxp_speed, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0, nxp_speed, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0, nxp_speed, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0, nxp_speed, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0, nxp_speed, 6, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0_P_nxp_speed_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0, nxp_speed, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0, nxp_speed, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0, nxp_speed, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0, nxp_speed, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0, nxp_speed, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0, nxp_speed, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0, nxp_speed, 6, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0_P_nxp_speed_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0_P_bias_disable 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0_P_bias_pull_up 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0_P_bias_pull_down 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0_P_drive_open_drain 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0_P_input_enable 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0_P_input_enable_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0_P_input_schmitt_enable 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0_P_input_schmitt_enable_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B1_14_LPI2C1_SCL
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_lpi2c1_scl
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_lpi2c1_scl_PATH "/soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B1_14_LPI2C1_SCL"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_lpi2c1_scl_FULL_NAME "IOMUXC_GPIO_AD_B1_14_LPI2C1_SCL"

/* Node parent (/soc/iomuxc@401f8000) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_lpi2c1_scl_PARENT DT_N_S_soc_S_iomuxc_401f8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_lpi2c1_scl_CHILD_IDX 51

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_lpi2c1_scl_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_lpi2c1_scl_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_lpi2c1_scl_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_lpi2c1_scl_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_lpi2c1_scl_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_lpi2c1_scl_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_lpi2c1_scl_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_lpi2c1_scl_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_lpi2c1_scl_ORD 199

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_lpi2c1_scl_REQUIRES_ORDS \
	13, /* /soc/iomuxc@401f8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_lpi2c1_scl_SUPPORTS_ORDS \
	201, /* /soc/iomuxc@401f8000/pinctrl/pinmux_lpi2c1/group0 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_lpi2c1_scl_EXISTS 1
#define DT_N_NODELABEL_iomuxc_gpio_ad_b1_14_lpi2c1_scl DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_lpi2c1_scl

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_lpi2c1_scl_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_lpi2c1_scl_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_lpi2c1_scl_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_lpi2c1_scl_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_lpi2c1_scl_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_lpi2c1_scl_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_lpi2c1_scl_P_pinmux {1075806516 /* 0x401f8134 */, 0 /* 0x0 */, 1075807100 /* 0x401f837c */, 1 /* 0x1 */, 1075806888 /* 0x401f82a8 */}
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_lpi2c1_scl_P_pinmux_IDX_0 1075806516
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_lpi2c1_scl_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_lpi2c1_scl_P_pinmux_IDX_1 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_lpi2c1_scl_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_lpi2c1_scl_P_pinmux_IDX_2 1075807100
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_lpi2c1_scl_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_lpi2c1_scl_P_pinmux_IDX_3 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_lpi2c1_scl_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_lpi2c1_scl_P_pinmux_IDX_4 1075806888
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_lpi2c1_scl_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_lpi2c1_scl_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_lpi2c1_scl, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_lpi2c1_scl, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_lpi2c1_scl, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_lpi2c1_scl, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_lpi2c1_scl, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_lpi2c1_scl_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_lpi2c1_scl, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_lpi2c1_scl, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_lpi2c1_scl, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_lpi2c1_scl, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_lpi2c1_scl, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_lpi2c1_scl_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_lpi2c1_scl, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_lpi2c1_scl, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_lpi2c1_scl, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_lpi2c1_scl, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_lpi2c1_scl, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_lpi2c1_scl_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_lpi2c1_scl, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_lpi2c1_scl, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_lpi2c1_scl, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_lpi2c1_scl, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_lpi2c1_scl, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_lpi2c1_scl_P_pinmux_LEN 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_lpi2c1_scl_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_lpi2c1_scl_P_pin_pue 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_lpi2c1_scl_P_pin_pue_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_lpi2c1_scl_P_pin_pdrv 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_lpi2c1_scl_P_pin_pdrv_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_lpi2c1_scl_P_pin_lpsr 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_lpi2c1_scl_P_pin_lpsr_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_lpi2c1_scl_P_pin_snvs 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_lpi2c1_scl_P_pin_snvs_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B1_15_LPI2C1_SDA
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_lpi2c1_sda
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_lpi2c1_sda_PATH "/soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B1_15_LPI2C1_SDA"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_lpi2c1_sda_FULL_NAME "IOMUXC_GPIO_AD_B1_15_LPI2C1_SDA"

/* Node parent (/soc/iomuxc@401f8000) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_lpi2c1_sda_PARENT DT_N_S_soc_S_iomuxc_401f8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_lpi2c1_sda_CHILD_IDX 53

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_lpi2c1_sda_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_lpi2c1_sda_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_lpi2c1_sda_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_lpi2c1_sda_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_lpi2c1_sda_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_lpi2c1_sda_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_lpi2c1_sda_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_lpi2c1_sda_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_lpi2c1_sda_ORD 200

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_lpi2c1_sda_REQUIRES_ORDS \
	13, /* /soc/iomuxc@401f8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_lpi2c1_sda_SUPPORTS_ORDS \
	201, /* /soc/iomuxc@401f8000/pinctrl/pinmux_lpi2c1/group0 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_lpi2c1_sda_EXISTS 1
#define DT_N_NODELABEL_iomuxc_gpio_ad_b1_15_lpi2c1_sda DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_lpi2c1_sda

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_lpi2c1_sda_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_lpi2c1_sda_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_lpi2c1_sda_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_lpi2c1_sda_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_lpi2c1_sda_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_lpi2c1_sda_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_lpi2c1_sda_P_pinmux {1075806520 /* 0x401f8138 */, 0 /* 0x0 */, 1075807104 /* 0x401f8380 */, 1 /* 0x1 */, 1075806892 /* 0x401f82ac */}
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_lpi2c1_sda_P_pinmux_IDX_0 1075806520
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_lpi2c1_sda_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_lpi2c1_sda_P_pinmux_IDX_1 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_lpi2c1_sda_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_lpi2c1_sda_P_pinmux_IDX_2 1075807104
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_lpi2c1_sda_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_lpi2c1_sda_P_pinmux_IDX_3 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_lpi2c1_sda_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_lpi2c1_sda_P_pinmux_IDX_4 1075806892
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_lpi2c1_sda_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_lpi2c1_sda_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_lpi2c1_sda, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_lpi2c1_sda, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_lpi2c1_sda, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_lpi2c1_sda, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_lpi2c1_sda, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_lpi2c1_sda_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_lpi2c1_sda, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_lpi2c1_sda, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_lpi2c1_sda, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_lpi2c1_sda, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_lpi2c1_sda, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_lpi2c1_sda_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_lpi2c1_sda, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_lpi2c1_sda, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_lpi2c1_sda, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_lpi2c1_sda, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_lpi2c1_sda, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_lpi2c1_sda_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_lpi2c1_sda, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_lpi2c1_sda, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_lpi2c1_sda, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_lpi2c1_sda, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_lpi2c1_sda, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_lpi2c1_sda_P_pinmux_LEN 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_lpi2c1_sda_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_lpi2c1_sda_P_pin_pue 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_lpi2c1_sda_P_pin_pue_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_lpi2c1_sda_P_pin_pdrv 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_lpi2c1_sda_P_pin_pdrv_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_lpi2c1_sda_P_pin_lpsr 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_lpi2c1_sda_P_pin_lpsr_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_lpi2c1_sda_P_pin_snvs 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_lpi2c1_sda_P_pin_snvs_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/pinctrl/pinmux_lpi2c1/group0
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0_PATH "/soc/iomuxc@401f8000/pinctrl/pinmux_lpi2c1/group0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0_FULL_NAME "group0"

/* Node parent (/soc/iomuxc@401f8000/pinctrl/pinmux_lpi2c1) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0_PARENT DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0_ORD 201

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0_REQUIRES_ORDS \
	101, /* /soc/iomuxc@401f8000/pinctrl/pinmux_lpi2c1 */ \
	199, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B1_14_LPI2C1_SCL */ \
	200, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B1_15_LPI2C1_SDA */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0_P_pinmux_IDX_0 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_lpi2c1_scl
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0_P_pinmux_IDX_0_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_lpi2c1_scl
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0_P_pinmux_IDX_1 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_lpi2c1_sda
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0_P_pinmux_IDX_1_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_lpi2c1_sda
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0, pinmux, 1)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0, pinmux, 1)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0, pinmux, 1, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0, pinmux, 1, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0_P_pinmux_LEN 2
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0_P_drive_strength "r0-6"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0_P_drive_strength_STRING_UNQUOTED r0-6
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0_P_drive_strength_STRING_TOKEN r0_6
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0_P_drive_strength_STRING_UPPER_TOKEN R0_6
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0_P_drive_strength_ENUM_IDX 6
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0_P_drive_strength_ENUM_TOKEN r0_6
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0_P_drive_strength_ENUM_UPPER_TOKEN R0_6
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0, drive_strength, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0, drive_strength, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0, drive_strength, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0, drive_strength, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0, drive_strength, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0, drive_strength, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0, drive_strength, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0, drive_strength, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0, drive_strength, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0, drive_strength, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0, drive_strength, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0, drive_strength, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0, drive_strength, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0, drive_strength, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0, drive_strength, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0, drive_strength, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0_P_bias_pull_up_value "47k"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0_P_bias_pull_up_value_STRING_UNQUOTED 47k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0_P_bias_pull_up_value_STRING_TOKEN 47k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0_P_bias_pull_up_value_STRING_UPPER_TOKEN 47K
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0_P_bias_pull_up_value_ENUM_IDX 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0_P_bias_pull_up_value_ENUM_TOKEN 47k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0_P_bias_pull_up_value_ENUM_UPPER_TOKEN 47K
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0_P_bias_pull_up_value_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0, bias_pull_up_value, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0, bias_pull_up_value, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0, bias_pull_up_value, 2)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0_P_bias_pull_up_value_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0, bias_pull_up_value, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0, bias_pull_up_value, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0, bias_pull_up_value, 2)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0_P_bias_pull_up_value_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0, bias_pull_up_value, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0, bias_pull_up_value, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0, bias_pull_up_value, 2, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0_P_bias_pull_up_value_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0, bias_pull_up_value, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0, bias_pull_up_value, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0, bias_pull_up_value, 2, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0_P_bias_pull_up_value_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0_P_bias_pull_down_value "100k"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0_P_bias_pull_down_value_STRING_UNQUOTED 100k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0_P_bias_pull_down_value_STRING_TOKEN 100k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0_P_bias_pull_down_value_STRING_UPPER_TOKEN 100K
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0_P_bias_pull_down_value_ENUM_IDX 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0_P_bias_pull_down_value_ENUM_TOKEN 100k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0_P_bias_pull_down_value_ENUM_UPPER_TOKEN 100K
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0_P_bias_pull_down_value_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0, bias_pull_down_value, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0, bias_pull_down_value, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0, bias_pull_down_value, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0, bias_pull_down_value, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0_P_bias_pull_down_value_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0, bias_pull_down_value, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0, bias_pull_down_value, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0, bias_pull_down_value, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0, bias_pull_down_value, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0_P_bias_pull_down_value_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0, bias_pull_down_value, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0, bias_pull_down_value, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0, bias_pull_down_value, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0, bias_pull_down_value, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0_P_bias_pull_down_value_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0, bias_pull_down_value, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0, bias_pull_down_value, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0, bias_pull_down_value, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0, bias_pull_down_value, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0_P_bias_pull_down_value_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0_P_slew_rate "slow"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0_P_slew_rate_STRING_UNQUOTED slow
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0_P_slew_rate_STRING_TOKEN slow
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0_P_slew_rate_STRING_UPPER_TOKEN SLOW
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0_P_slew_rate_ENUM_TOKEN slow
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0_P_slew_rate_ENUM_UPPER_TOKEN SLOW
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0, slew_rate, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0, slew_rate, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0, slew_rate, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0, slew_rate, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0, slew_rate, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0, slew_rate, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0, slew_rate, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0, slew_rate, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0, slew_rate, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0, slew_rate, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0, slew_rate, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0, slew_rate, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0, slew_rate, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0_P_nxp_speed "100-mhz"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0_P_nxp_speed_STRING_UNQUOTED 100-mhz
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0_P_nxp_speed_STRING_TOKEN 100_mhz
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0_P_nxp_speed_STRING_UPPER_TOKEN 100_MHZ
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0_P_nxp_speed_ENUM_IDX 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0_P_nxp_speed_ENUM_TOKEN 100_mhz
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0_P_nxp_speed_ENUM_UPPER_TOKEN 100_MHZ
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0_P_nxp_speed_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0, nxp_speed, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0, nxp_speed, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0, nxp_speed, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0, nxp_speed, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0, nxp_speed, 4) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0, nxp_speed, 5) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0, nxp_speed, 6)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0_P_nxp_speed_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0, nxp_speed, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0, nxp_speed, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0, nxp_speed, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0, nxp_speed, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0, nxp_speed, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0, nxp_speed, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0, nxp_speed, 6)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0_P_nxp_speed_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0, nxp_speed, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0, nxp_speed, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0, nxp_speed, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0, nxp_speed, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0, nxp_speed, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0, nxp_speed, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0, nxp_speed, 6, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0_P_nxp_speed_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0, nxp_speed, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0, nxp_speed, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0, nxp_speed, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0, nxp_speed, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0, nxp_speed, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0, nxp_speed, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0, nxp_speed, 6, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0_P_nxp_speed_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0_P_bias_disable 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0_P_bias_pull_up 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0_P_bias_pull_down 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0_P_drive_open_drain 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0_P_input_enable 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0_P_input_enable_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0_P_input_schmitt_enable 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0_P_input_schmitt_enable_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B1_02_LPI2C4_SCL
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_lpi2c4_scl
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_lpi2c4_scl_PATH "/soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B1_02_LPI2C4_SCL"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_lpi2c4_scl_FULL_NAME "IOMUXC_GPIO_SD_B1_02_LPI2C4_SCL"

/* Node parent (/soc/iomuxc@401f8000) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_lpi2c4_scl_PARENT DT_N_S_soc_S_iomuxc_401f8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_lpi2c4_scl_CHILD_IDX 117

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_lpi2c4_scl_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_lpi2c4_scl_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_lpi2c4_scl_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_lpi2c4_scl_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_lpi2c4_scl_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_lpi2c4_scl_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_lpi2c4_scl_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_lpi2c4_scl_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_lpi2c4_scl_ORD 202

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_lpi2c4_scl_REQUIRES_ORDS \
	13, /* /soc/iomuxc@401f8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_lpi2c4_scl_SUPPORTS_ORDS \
	204, /* /soc/iomuxc@401f8000/pinctrl/pinmux_lpi2c4/group0 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_lpi2c4_scl_EXISTS 1
#define DT_N_NODELABEL_iomuxc_gpio_sd_b1_02_lpi2c4_scl DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_lpi2c4_scl

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_lpi2c4_scl_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_lpi2c4_scl_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_lpi2c4_scl_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_lpi2c4_scl_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_lpi2c4_scl_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_lpi2c4_scl_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_lpi2c4_scl_P_pinmux {1075806560 /* 0x401f8160 */, 3 /* 0x3 */, 1075807124 /* 0x401f8394 */, 1 /* 0x1 */, 1075806932 /* 0x401f82d4 */}
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_lpi2c4_scl_P_pinmux_IDX_0 1075806560
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_lpi2c4_scl_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_lpi2c4_scl_P_pinmux_IDX_1 3
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_lpi2c4_scl_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_lpi2c4_scl_P_pinmux_IDX_2 1075807124
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_lpi2c4_scl_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_lpi2c4_scl_P_pinmux_IDX_3 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_lpi2c4_scl_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_lpi2c4_scl_P_pinmux_IDX_4 1075806932
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_lpi2c4_scl_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_lpi2c4_scl_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_lpi2c4_scl, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_lpi2c4_scl, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_lpi2c4_scl, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_lpi2c4_scl, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_lpi2c4_scl, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_lpi2c4_scl_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_lpi2c4_scl, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_lpi2c4_scl, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_lpi2c4_scl, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_lpi2c4_scl, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_lpi2c4_scl, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_lpi2c4_scl_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_lpi2c4_scl, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_lpi2c4_scl, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_lpi2c4_scl, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_lpi2c4_scl, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_lpi2c4_scl, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_lpi2c4_scl_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_lpi2c4_scl, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_lpi2c4_scl, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_lpi2c4_scl, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_lpi2c4_scl, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_lpi2c4_scl, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_lpi2c4_scl_P_pinmux_LEN 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_lpi2c4_scl_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_lpi2c4_scl_P_pin_pue 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_lpi2c4_scl_P_pin_pue_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_lpi2c4_scl_P_pin_pdrv 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_lpi2c4_scl_P_pin_pdrv_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_lpi2c4_scl_P_pin_lpsr 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_lpi2c4_scl_P_pin_lpsr_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_lpi2c4_scl_P_pin_snvs 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_lpi2c4_scl_P_pin_snvs_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B1_03_LPI2C4_SDA
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_lpi2c4_sda
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_lpi2c4_sda_PATH "/soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B1_03_LPI2C4_SDA"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_lpi2c4_sda_FULL_NAME "IOMUXC_GPIO_SD_B1_03_LPI2C4_SDA"

/* Node parent (/soc/iomuxc@401f8000) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_lpi2c4_sda_PARENT DT_N_S_soc_S_iomuxc_401f8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_lpi2c4_sda_CHILD_IDX 119

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_lpi2c4_sda_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_lpi2c4_sda_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_lpi2c4_sda_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_lpi2c4_sda_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_lpi2c4_sda_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_lpi2c4_sda_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_lpi2c4_sda_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_lpi2c4_sda_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_lpi2c4_sda_ORD 203

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_lpi2c4_sda_REQUIRES_ORDS \
	13, /* /soc/iomuxc@401f8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_lpi2c4_sda_SUPPORTS_ORDS \
	204, /* /soc/iomuxc@401f8000/pinctrl/pinmux_lpi2c4/group0 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_lpi2c4_sda_EXISTS 1
#define DT_N_NODELABEL_iomuxc_gpio_sd_b1_03_lpi2c4_sda DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_lpi2c4_sda

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_lpi2c4_sda_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_lpi2c4_sda_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_lpi2c4_sda_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_lpi2c4_sda_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_lpi2c4_sda_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_lpi2c4_sda_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_lpi2c4_sda_P_pinmux {1075806564 /* 0x401f8164 */, 3 /* 0x3 */, 1075807128 /* 0x401f8398 */, 1 /* 0x1 */, 1075806936 /* 0x401f82d8 */}
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_lpi2c4_sda_P_pinmux_IDX_0 1075806564
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_lpi2c4_sda_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_lpi2c4_sda_P_pinmux_IDX_1 3
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_lpi2c4_sda_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_lpi2c4_sda_P_pinmux_IDX_2 1075807128
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_lpi2c4_sda_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_lpi2c4_sda_P_pinmux_IDX_3 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_lpi2c4_sda_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_lpi2c4_sda_P_pinmux_IDX_4 1075806936
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_lpi2c4_sda_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_lpi2c4_sda_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_lpi2c4_sda, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_lpi2c4_sda, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_lpi2c4_sda, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_lpi2c4_sda, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_lpi2c4_sda, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_lpi2c4_sda_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_lpi2c4_sda, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_lpi2c4_sda, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_lpi2c4_sda, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_lpi2c4_sda, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_lpi2c4_sda, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_lpi2c4_sda_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_lpi2c4_sda, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_lpi2c4_sda, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_lpi2c4_sda, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_lpi2c4_sda, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_lpi2c4_sda, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_lpi2c4_sda_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_lpi2c4_sda, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_lpi2c4_sda, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_lpi2c4_sda, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_lpi2c4_sda, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_lpi2c4_sda, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_lpi2c4_sda_P_pinmux_LEN 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_lpi2c4_sda_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_lpi2c4_sda_P_pin_pue 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_lpi2c4_sda_P_pin_pue_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_lpi2c4_sda_P_pin_pdrv 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_lpi2c4_sda_P_pin_pdrv_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_lpi2c4_sda_P_pin_lpsr 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_lpi2c4_sda_P_pin_lpsr_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_lpi2c4_sda_P_pin_snvs 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_lpi2c4_sda_P_pin_snvs_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/pinctrl/pinmux_lpi2c4/group0
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0_PATH "/soc/iomuxc@401f8000/pinctrl/pinmux_lpi2c4/group0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0_FULL_NAME "group0"

/* Node parent (/soc/iomuxc@401f8000/pinctrl/pinmux_lpi2c4) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0_PARENT DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0_ORD 204

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0_REQUIRES_ORDS \
	105, /* /soc/iomuxc@401f8000/pinctrl/pinmux_lpi2c4 */ \
	202, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B1_02_LPI2C4_SCL */ \
	203, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B1_03_LPI2C4_SDA */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0_P_pinmux_IDX_0 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_lpi2c4_sda
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0_P_pinmux_IDX_0_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_lpi2c4_sda
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0_P_pinmux_IDX_1 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_lpi2c4_scl
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0_P_pinmux_IDX_1_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_lpi2c4_scl
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0, pinmux, 1)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0, pinmux, 1)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0, pinmux, 1, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0, pinmux, 1, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0_P_pinmux_LEN 2
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0_P_drive_strength "r0-6"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0_P_drive_strength_STRING_UNQUOTED r0-6
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0_P_drive_strength_STRING_TOKEN r0_6
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0_P_drive_strength_STRING_UPPER_TOKEN R0_6
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0_P_drive_strength_ENUM_IDX 6
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0_P_drive_strength_ENUM_TOKEN r0_6
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0_P_drive_strength_ENUM_UPPER_TOKEN R0_6
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0, drive_strength, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0, drive_strength, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0, drive_strength, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0, drive_strength, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0, drive_strength, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0, drive_strength, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0, drive_strength, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0, drive_strength, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0, drive_strength, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0, drive_strength, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0, drive_strength, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0, drive_strength, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0, drive_strength, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0, drive_strength, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0, drive_strength, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0, drive_strength, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0_P_bias_pull_up_value "47k"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0_P_bias_pull_up_value_STRING_UNQUOTED 47k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0_P_bias_pull_up_value_STRING_TOKEN 47k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0_P_bias_pull_up_value_STRING_UPPER_TOKEN 47K
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0_P_bias_pull_up_value_ENUM_IDX 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0_P_bias_pull_up_value_ENUM_TOKEN 47k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0_P_bias_pull_up_value_ENUM_UPPER_TOKEN 47K
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0_P_bias_pull_up_value_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0, bias_pull_up_value, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0, bias_pull_up_value, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0, bias_pull_up_value, 2)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0_P_bias_pull_up_value_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0, bias_pull_up_value, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0, bias_pull_up_value, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0, bias_pull_up_value, 2)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0_P_bias_pull_up_value_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0, bias_pull_up_value, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0, bias_pull_up_value, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0, bias_pull_up_value, 2, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0_P_bias_pull_up_value_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0, bias_pull_up_value, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0, bias_pull_up_value, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0, bias_pull_up_value, 2, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0_P_bias_pull_up_value_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0_P_bias_pull_down_value "100k"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0_P_bias_pull_down_value_STRING_UNQUOTED 100k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0_P_bias_pull_down_value_STRING_TOKEN 100k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0_P_bias_pull_down_value_STRING_UPPER_TOKEN 100K
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0_P_bias_pull_down_value_ENUM_IDX 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0_P_bias_pull_down_value_ENUM_TOKEN 100k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0_P_bias_pull_down_value_ENUM_UPPER_TOKEN 100K
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0_P_bias_pull_down_value_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0, bias_pull_down_value, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0, bias_pull_down_value, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0, bias_pull_down_value, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0, bias_pull_down_value, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0_P_bias_pull_down_value_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0, bias_pull_down_value, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0, bias_pull_down_value, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0, bias_pull_down_value, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0, bias_pull_down_value, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0_P_bias_pull_down_value_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0, bias_pull_down_value, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0, bias_pull_down_value, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0, bias_pull_down_value, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0, bias_pull_down_value, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0_P_bias_pull_down_value_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0, bias_pull_down_value, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0, bias_pull_down_value, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0, bias_pull_down_value, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0, bias_pull_down_value, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0_P_bias_pull_down_value_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0_P_slew_rate "slow"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0_P_slew_rate_STRING_UNQUOTED slow
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0_P_slew_rate_STRING_TOKEN slow
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0_P_slew_rate_STRING_UPPER_TOKEN SLOW
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0_P_slew_rate_ENUM_TOKEN slow
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0_P_slew_rate_ENUM_UPPER_TOKEN SLOW
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0, slew_rate, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0, slew_rate, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0, slew_rate, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0, slew_rate, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0, slew_rate, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0, slew_rate, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0, slew_rate, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0, slew_rate, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0, slew_rate, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0, slew_rate, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0, slew_rate, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0, slew_rate, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0, slew_rate, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0_P_nxp_speed "100-mhz"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0_P_nxp_speed_STRING_UNQUOTED 100-mhz
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0_P_nxp_speed_STRING_TOKEN 100_mhz
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0_P_nxp_speed_STRING_UPPER_TOKEN 100_MHZ
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0_P_nxp_speed_ENUM_IDX 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0_P_nxp_speed_ENUM_TOKEN 100_mhz
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0_P_nxp_speed_ENUM_UPPER_TOKEN 100_MHZ
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0_P_nxp_speed_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0, nxp_speed, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0, nxp_speed, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0, nxp_speed, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0, nxp_speed, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0, nxp_speed, 4) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0, nxp_speed, 5) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0, nxp_speed, 6)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0_P_nxp_speed_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0, nxp_speed, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0, nxp_speed, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0, nxp_speed, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0, nxp_speed, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0, nxp_speed, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0, nxp_speed, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0, nxp_speed, 6)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0_P_nxp_speed_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0, nxp_speed, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0, nxp_speed, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0, nxp_speed, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0, nxp_speed, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0, nxp_speed, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0, nxp_speed, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0, nxp_speed, 6, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0_P_nxp_speed_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0, nxp_speed, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0, nxp_speed, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0, nxp_speed, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0, nxp_speed, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0, nxp_speed, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0, nxp_speed, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0, nxp_speed, 6, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0_P_nxp_speed_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0_P_bias_disable 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0_P_bias_pull_up 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0_P_bias_pull_down 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0_P_drive_open_drain 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0_P_input_enable 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0_P_input_enable_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0_P_input_schmitt_enable 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0_P_input_schmitt_enable_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_10_LPSPI1_SCK
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_lpspi1_sck
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_lpspi1_sck_PATH "/soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_10_LPSPI1_SCK"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_lpspi1_sck_FULL_NAME "IOMUXC_GPIO_AD_B0_10_LPSPI1_SCK"

/* Node parent (/soc/iomuxc@401f8000) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_lpspi1_sck_PARENT DT_N_S_soc_S_iomuxc_401f8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_lpspi1_sck_CHILD_IDX 17

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_lpspi1_sck_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_lpspi1_sck_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_lpspi1_sck_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_lpspi1_sck_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_lpspi1_sck_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_lpspi1_sck_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_lpspi1_sck_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_lpspi1_sck_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_lpspi1_sck_ORD 205

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_lpspi1_sck_REQUIRES_ORDS \
	13, /* /soc/iomuxc@401f8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_lpspi1_sck_SUPPORTS_ORDS \
	210, /* /soc/iomuxc@401f8000/pinctrl/pinmux_lpspi1/group0 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_lpspi1_sck_EXISTS 1
#define DT_N_NODELABEL_iomuxc_gpio_ad_b0_10_lpspi1_sck DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_lpspi1_sck

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_lpspi1_sck_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_lpspi1_sck_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_lpspi1_sck_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_lpspi1_sck_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_lpspi1_sck_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_lpspi1_sck_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_lpspi1_sck_P_pinmux {1075806436 /* 0x401f80e4 */, 1 /* 0x1 */, 1075807136 /* 0x401f83a0 */, 1 /* 0x1 */, 1075806808 /* 0x401f8258 */}
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_lpspi1_sck_P_pinmux_IDX_0 1075806436
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_lpspi1_sck_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_lpspi1_sck_P_pinmux_IDX_1 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_lpspi1_sck_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_lpspi1_sck_P_pinmux_IDX_2 1075807136
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_lpspi1_sck_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_lpspi1_sck_P_pinmux_IDX_3 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_lpspi1_sck_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_lpspi1_sck_P_pinmux_IDX_4 1075806808
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_lpspi1_sck_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_lpspi1_sck_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_lpspi1_sck, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_lpspi1_sck, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_lpspi1_sck, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_lpspi1_sck, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_lpspi1_sck, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_lpspi1_sck_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_lpspi1_sck, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_lpspi1_sck, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_lpspi1_sck, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_lpspi1_sck, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_lpspi1_sck, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_lpspi1_sck_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_lpspi1_sck, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_lpspi1_sck, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_lpspi1_sck, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_lpspi1_sck, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_lpspi1_sck, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_lpspi1_sck_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_lpspi1_sck, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_lpspi1_sck, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_lpspi1_sck, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_lpspi1_sck, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_lpspi1_sck, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_lpspi1_sck_P_pinmux_LEN 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_lpspi1_sck_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_lpspi1_sck_P_pin_pue 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_lpspi1_sck_P_pin_pue_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_lpspi1_sck_P_pin_pdrv 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_lpspi1_sck_P_pin_pdrv_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_lpspi1_sck_P_pin_lpsr 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_lpspi1_sck_P_pin_lpsr_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_lpspi1_sck_P_pin_snvs 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_lpspi1_sck_P_pin_snvs_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_11_LPSPI1_PCS0
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_lpspi1_pcs0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_lpspi1_pcs0_PATH "/soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_11_LPSPI1_PCS0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_lpspi1_pcs0_FULL_NAME "IOMUXC_GPIO_AD_B0_11_LPSPI1_PCS0"

/* Node parent (/soc/iomuxc@401f8000) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_lpspi1_pcs0_PARENT DT_N_S_soc_S_iomuxc_401f8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_lpspi1_pcs0_CHILD_IDX 20

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_lpspi1_pcs0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_lpspi1_pcs0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_lpspi1_pcs0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_lpspi1_pcs0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_lpspi1_pcs0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_lpspi1_pcs0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_lpspi1_pcs0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_lpspi1_pcs0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_lpspi1_pcs0_ORD 206

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_lpspi1_pcs0_REQUIRES_ORDS \
	13, /* /soc/iomuxc@401f8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_lpspi1_pcs0_SUPPORTS_ORDS \
	210, /* /soc/iomuxc@401f8000/pinctrl/pinmux_lpspi1/group0 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_lpspi1_pcs0_EXISTS 1
#define DT_N_NODELABEL_iomuxc_gpio_ad_b0_11_lpspi1_pcs0 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_lpspi1_pcs0

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_lpspi1_pcs0_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_lpspi1_pcs0_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_lpspi1_pcs0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_lpspi1_pcs0_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_lpspi1_pcs0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_lpspi1_pcs0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_lpspi1_pcs0_P_pinmux {1075806440 /* 0x401f80e8 */, 1 /* 0x1 */, 1075807132 /* 0x401f839c */, 1 /* 0x1 */, 1075806812 /* 0x401f825c */}
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_lpspi1_pcs0_P_pinmux_IDX_0 1075806440
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_lpspi1_pcs0_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_lpspi1_pcs0_P_pinmux_IDX_1 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_lpspi1_pcs0_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_lpspi1_pcs0_P_pinmux_IDX_2 1075807132
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_lpspi1_pcs0_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_lpspi1_pcs0_P_pinmux_IDX_3 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_lpspi1_pcs0_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_lpspi1_pcs0_P_pinmux_IDX_4 1075806812
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_lpspi1_pcs0_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_lpspi1_pcs0_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_lpspi1_pcs0, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_lpspi1_pcs0, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_lpspi1_pcs0, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_lpspi1_pcs0, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_lpspi1_pcs0, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_lpspi1_pcs0_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_lpspi1_pcs0, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_lpspi1_pcs0, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_lpspi1_pcs0, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_lpspi1_pcs0, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_lpspi1_pcs0, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_lpspi1_pcs0_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_lpspi1_pcs0, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_lpspi1_pcs0, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_lpspi1_pcs0, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_lpspi1_pcs0, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_lpspi1_pcs0, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_lpspi1_pcs0_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_lpspi1_pcs0, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_lpspi1_pcs0, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_lpspi1_pcs0, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_lpspi1_pcs0, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_lpspi1_pcs0, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_lpspi1_pcs0_P_pinmux_LEN 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_lpspi1_pcs0_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_lpspi1_pcs0_P_pin_pue 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_lpspi1_pcs0_P_pin_pue_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_lpspi1_pcs0_P_pin_pdrv 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_lpspi1_pcs0_P_pin_pdrv_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_lpspi1_pcs0_P_pin_lpsr 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_lpspi1_pcs0_P_pin_lpsr_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_lpspi1_pcs0_P_pin_snvs 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_lpspi1_pcs0_P_pin_snvs_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_12_LPSPI1_SDO
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_lpspi1_sdo
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_lpspi1_sdo_PATH "/soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_12_LPSPI1_SDO"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_lpspi1_sdo_FULL_NAME "IOMUXC_GPIO_AD_B0_12_LPSPI1_SDO"

/* Node parent (/soc/iomuxc@401f8000) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_lpspi1_sdo_PARENT DT_N_S_soc_S_iomuxc_401f8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_lpspi1_sdo_CHILD_IDX 23

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_lpspi1_sdo_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_lpspi1_sdo_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_lpspi1_sdo_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_lpspi1_sdo_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_lpspi1_sdo_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_lpspi1_sdo_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_lpspi1_sdo_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_lpspi1_sdo_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_lpspi1_sdo_ORD 207

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_lpspi1_sdo_REQUIRES_ORDS \
	13, /* /soc/iomuxc@401f8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_lpspi1_sdo_SUPPORTS_ORDS \
	210, /* /soc/iomuxc@401f8000/pinctrl/pinmux_lpspi1/group0 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_lpspi1_sdo_EXISTS 1
#define DT_N_NODELABEL_iomuxc_gpio_ad_b0_12_lpspi1_sdo DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_lpspi1_sdo

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_lpspi1_sdo_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_lpspi1_sdo_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_lpspi1_sdo_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_lpspi1_sdo_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_lpspi1_sdo_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_lpspi1_sdo_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_lpspi1_sdo_P_pinmux {1075806444 /* 0x401f80ec */, 1 /* 0x1 */, 1075807144 /* 0x401f83a8 */, 1 /* 0x1 */, 1075806816 /* 0x401f8260 */}
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_lpspi1_sdo_P_pinmux_IDX_0 1075806444
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_lpspi1_sdo_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_lpspi1_sdo_P_pinmux_IDX_1 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_lpspi1_sdo_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_lpspi1_sdo_P_pinmux_IDX_2 1075807144
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_lpspi1_sdo_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_lpspi1_sdo_P_pinmux_IDX_3 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_lpspi1_sdo_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_lpspi1_sdo_P_pinmux_IDX_4 1075806816
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_lpspi1_sdo_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_lpspi1_sdo_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_lpspi1_sdo, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_lpspi1_sdo, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_lpspi1_sdo, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_lpspi1_sdo, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_lpspi1_sdo, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_lpspi1_sdo_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_lpspi1_sdo, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_lpspi1_sdo, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_lpspi1_sdo, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_lpspi1_sdo, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_lpspi1_sdo, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_lpspi1_sdo_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_lpspi1_sdo, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_lpspi1_sdo, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_lpspi1_sdo, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_lpspi1_sdo, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_lpspi1_sdo, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_lpspi1_sdo_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_lpspi1_sdo, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_lpspi1_sdo, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_lpspi1_sdo, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_lpspi1_sdo, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_lpspi1_sdo, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_lpspi1_sdo_P_pinmux_LEN 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_lpspi1_sdo_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_lpspi1_sdo_P_pin_pue 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_lpspi1_sdo_P_pin_pue_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_lpspi1_sdo_P_pin_pdrv 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_lpspi1_sdo_P_pin_pdrv_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_lpspi1_sdo_P_pin_lpsr 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_lpspi1_sdo_P_pin_lpsr_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_lpspi1_sdo_P_pin_snvs 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_lpspi1_sdo_P_pin_snvs_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_13_LPSPI1_SDI
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_lpspi1_sdi
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_lpspi1_sdi_PATH "/soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_13_LPSPI1_SDI"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_lpspi1_sdi_FULL_NAME "IOMUXC_GPIO_AD_B0_13_LPSPI1_SDI"

/* Node parent (/soc/iomuxc@401f8000) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_lpspi1_sdi_PARENT DT_N_S_soc_S_iomuxc_401f8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_lpspi1_sdi_CHILD_IDX 26

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_lpspi1_sdi_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_lpspi1_sdi_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_lpspi1_sdi_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_lpspi1_sdi_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_lpspi1_sdi_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_lpspi1_sdi_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_lpspi1_sdi_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_lpspi1_sdi_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_lpspi1_sdi_ORD 208

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_lpspi1_sdi_REQUIRES_ORDS \
	13, /* /soc/iomuxc@401f8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_lpspi1_sdi_SUPPORTS_ORDS \
	210, /* /soc/iomuxc@401f8000/pinctrl/pinmux_lpspi1/group0 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_lpspi1_sdi_EXISTS 1
#define DT_N_NODELABEL_iomuxc_gpio_ad_b0_13_lpspi1_sdi DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_lpspi1_sdi

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_lpspi1_sdi_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_lpspi1_sdi_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_lpspi1_sdi_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_lpspi1_sdi_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_lpspi1_sdi_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_lpspi1_sdi_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_lpspi1_sdi_P_pinmux {1075806448 /* 0x401f80f0 */, 1 /* 0x1 */, 1075807140 /* 0x401f83a4 */, 1 /* 0x1 */, 1075806820 /* 0x401f8264 */}
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_lpspi1_sdi_P_pinmux_IDX_0 1075806448
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_lpspi1_sdi_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_lpspi1_sdi_P_pinmux_IDX_1 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_lpspi1_sdi_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_lpspi1_sdi_P_pinmux_IDX_2 1075807140
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_lpspi1_sdi_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_lpspi1_sdi_P_pinmux_IDX_3 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_lpspi1_sdi_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_lpspi1_sdi_P_pinmux_IDX_4 1075806820
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_lpspi1_sdi_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_lpspi1_sdi_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_lpspi1_sdi, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_lpspi1_sdi, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_lpspi1_sdi, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_lpspi1_sdi, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_lpspi1_sdi, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_lpspi1_sdi_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_lpspi1_sdi, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_lpspi1_sdi, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_lpspi1_sdi, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_lpspi1_sdi, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_lpspi1_sdi, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_lpspi1_sdi_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_lpspi1_sdi, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_lpspi1_sdi, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_lpspi1_sdi, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_lpspi1_sdi, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_lpspi1_sdi, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_lpspi1_sdi_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_lpspi1_sdi, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_lpspi1_sdi, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_lpspi1_sdi, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_lpspi1_sdi, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_lpspi1_sdi, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_lpspi1_sdi_P_pinmux_LEN 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_lpspi1_sdi_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_lpspi1_sdi_P_pin_pue 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_lpspi1_sdi_P_pin_pue_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_lpspi1_sdi_P_pin_pdrv 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_lpspi1_sdi_P_pin_pdrv_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_lpspi1_sdi_P_pin_lpsr 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_lpspi1_sdi_P_pin_lpsr_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_lpspi1_sdi_P_pin_snvs 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_lpspi1_sdi_P_pin_snvs_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/pinctrl/pinmux_lpspi1
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_PATH "/soc/iomuxc@401f8000/pinctrl/pinmux_lpspi1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_FULL_NAME "pinmux_lpspi1"

/* Node parent (/soc/iomuxc@401f8000/pinctrl) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_PARENT DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_CHILD_IDX 5

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_ORD 209

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_REQUIRES_ORDS \
	54, /* /soc/iomuxc@401f8000/pinctrl */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_SUPPORTS_ORDS \
	210, /* /soc/iomuxc@401f8000/pinctrl/pinmux_lpspi1/group0 */ \
	283, /* /soc/spi@40394000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_EXISTS 1
#define DT_N_NODELABEL_pinmux_lpspi1 DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /soc/iomuxc@401f8000/pinctrl/pinmux_lpspi1/group0
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0_PATH "/soc/iomuxc@401f8000/pinctrl/pinmux_lpspi1/group0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0_FULL_NAME "group0"

/* Node parent (/soc/iomuxc@401f8000/pinctrl/pinmux_lpspi1) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0_PARENT DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0_ORD 210

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0_REQUIRES_ORDS \
	205, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_10_LPSPI1_SCK */ \
	206, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_11_LPSPI1_PCS0 */ \
	207, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_12_LPSPI1_SDO */ \
	208, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_13_LPSPI1_SDI */ \
	209, /* /soc/iomuxc@401f8000/pinctrl/pinmux_lpspi1 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0_P_pinmux_IDX_0 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_lpspi1_sck
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0_P_pinmux_IDX_0_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_lpspi1_sck
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0_P_pinmux_IDX_1 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_lpspi1_pcs0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0_P_pinmux_IDX_1_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_lpspi1_pcs0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0_P_pinmux_IDX_2 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_lpspi1_sdo
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0_P_pinmux_IDX_2_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_lpspi1_sdo
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0_P_pinmux_IDX_3 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_lpspi1_sdi
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0_P_pinmux_IDX_3_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_lpspi1_sdi
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0, pinmux, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0, pinmux, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0, pinmux, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0, pinmux, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0_P_pinmux_LEN 4
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0_P_drive_strength "r0-6"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0_P_drive_strength_STRING_UNQUOTED r0-6
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0_P_drive_strength_STRING_TOKEN r0_6
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0_P_drive_strength_STRING_UPPER_TOKEN R0_6
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0_P_drive_strength_ENUM_IDX 6
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0_P_drive_strength_ENUM_TOKEN r0_6
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0_P_drive_strength_ENUM_UPPER_TOKEN R0_6
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0, drive_strength, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0, drive_strength, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0, drive_strength, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0, drive_strength, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0, drive_strength, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0, drive_strength, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0, drive_strength, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0, drive_strength, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0, drive_strength, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0, drive_strength, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0, drive_strength, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0, drive_strength, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0, drive_strength, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0, drive_strength, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0, drive_strength, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0, drive_strength, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0_P_bias_pull_up_value "47k"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0_P_bias_pull_up_value_STRING_UNQUOTED 47k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0_P_bias_pull_up_value_STRING_TOKEN 47k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0_P_bias_pull_up_value_STRING_UPPER_TOKEN 47K
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0_P_bias_pull_up_value_ENUM_IDX 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0_P_bias_pull_up_value_ENUM_TOKEN 47k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0_P_bias_pull_up_value_ENUM_UPPER_TOKEN 47K
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0_P_bias_pull_up_value_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0, bias_pull_up_value, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0, bias_pull_up_value, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0, bias_pull_up_value, 2)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0_P_bias_pull_up_value_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0, bias_pull_up_value, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0, bias_pull_up_value, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0, bias_pull_up_value, 2)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0_P_bias_pull_up_value_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0, bias_pull_up_value, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0, bias_pull_up_value, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0, bias_pull_up_value, 2, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0_P_bias_pull_up_value_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0, bias_pull_up_value, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0, bias_pull_up_value, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0, bias_pull_up_value, 2, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0_P_bias_pull_up_value_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0_P_bias_pull_down_value "100k"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0_P_bias_pull_down_value_STRING_UNQUOTED 100k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0_P_bias_pull_down_value_STRING_TOKEN 100k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0_P_bias_pull_down_value_STRING_UPPER_TOKEN 100K
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0_P_bias_pull_down_value_ENUM_IDX 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0_P_bias_pull_down_value_ENUM_TOKEN 100k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0_P_bias_pull_down_value_ENUM_UPPER_TOKEN 100K
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0_P_bias_pull_down_value_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0, bias_pull_down_value, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0, bias_pull_down_value, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0, bias_pull_down_value, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0, bias_pull_down_value, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0_P_bias_pull_down_value_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0, bias_pull_down_value, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0, bias_pull_down_value, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0, bias_pull_down_value, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0, bias_pull_down_value, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0_P_bias_pull_down_value_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0, bias_pull_down_value, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0, bias_pull_down_value, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0, bias_pull_down_value, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0, bias_pull_down_value, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0_P_bias_pull_down_value_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0, bias_pull_down_value, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0, bias_pull_down_value, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0, bias_pull_down_value, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0, bias_pull_down_value, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0_P_bias_pull_down_value_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0_P_slew_rate "slow"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0_P_slew_rate_STRING_UNQUOTED slow
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0_P_slew_rate_STRING_TOKEN slow
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0_P_slew_rate_STRING_UPPER_TOKEN SLOW
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0_P_slew_rate_ENUM_TOKEN slow
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0_P_slew_rate_ENUM_UPPER_TOKEN SLOW
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0, slew_rate, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0, slew_rate, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0, slew_rate, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0, slew_rate, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0, slew_rate, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0, slew_rate, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0, slew_rate, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0, slew_rate, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0, slew_rate, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0, slew_rate, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0, slew_rate, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0, slew_rate, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0, slew_rate, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0_P_nxp_speed "100-mhz"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0_P_nxp_speed_STRING_UNQUOTED 100-mhz
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0_P_nxp_speed_STRING_TOKEN 100_mhz
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0_P_nxp_speed_STRING_UPPER_TOKEN 100_MHZ
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0_P_nxp_speed_ENUM_IDX 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0_P_nxp_speed_ENUM_TOKEN 100_mhz
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0_P_nxp_speed_ENUM_UPPER_TOKEN 100_MHZ
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0_P_nxp_speed_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0, nxp_speed, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0, nxp_speed, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0, nxp_speed, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0, nxp_speed, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0, nxp_speed, 4) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0, nxp_speed, 5) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0, nxp_speed, 6)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0_P_nxp_speed_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0, nxp_speed, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0, nxp_speed, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0, nxp_speed, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0, nxp_speed, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0, nxp_speed, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0, nxp_speed, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0, nxp_speed, 6)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0_P_nxp_speed_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0, nxp_speed, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0, nxp_speed, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0, nxp_speed, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0, nxp_speed, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0, nxp_speed, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0, nxp_speed, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0, nxp_speed, 6, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0_P_nxp_speed_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0, nxp_speed, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0, nxp_speed, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0, nxp_speed, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0, nxp_speed, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0, nxp_speed, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0, nxp_speed, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0, nxp_speed, 6, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0_P_nxp_speed_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0_P_bias_disable 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0_P_bias_pull_up 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0_P_bias_pull_down 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0_P_drive_open_drain 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0_P_input_enable 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0_P_input_enable_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0_P_input_schmitt_enable 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0_P_input_schmitt_enable_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_06_LPUART1_TX
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_lpuart1_tx
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_lpuart1_tx_PATH "/soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_06_LPUART1_TX"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_lpuart1_tx_FULL_NAME "IOMUXC_GPIO_AD_B0_06_LPUART1_TX"

/* Node parent (/soc/iomuxc@401f8000) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_lpuart1_tx_PARENT DT_N_S_soc_S_iomuxc_401f8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_lpuart1_tx_CHILD_IDX 8

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_lpuart1_tx_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_lpuart1_tx_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_lpuart1_tx_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_lpuart1_tx_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_lpuart1_tx_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_lpuart1_tx_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_lpuart1_tx_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_lpuart1_tx_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_lpuart1_tx_ORD 211

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_lpuart1_tx_REQUIRES_ORDS \
	13, /* /soc/iomuxc@401f8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_lpuart1_tx_SUPPORTS_ORDS \
	213, /* /soc/iomuxc@401f8000/pinctrl/pinmux_lpuart1/group0 */ \
	215, /* /soc/iomuxc@401f8000/pinctrl/pinmux_lpuart1_sleep/group1 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_lpuart1_tx_EXISTS 1
#define DT_N_NODELABEL_iomuxc_gpio_ad_b0_06_lpuart1_tx DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_lpuart1_tx

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_lpuart1_tx_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_lpuart1_tx_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_lpuart1_tx_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_lpuart1_tx_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_lpuart1_tx_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_lpuart1_tx_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_lpuart1_tx_P_pinmux {1075806420 /* 0x401f80d4 */, 2 /* 0x2 */, 0 /* 0x0 */, 0 /* 0x0 */, 1075806792 /* 0x401f8248 */}
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_lpuart1_tx_P_pinmux_IDX_0 1075806420
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_lpuart1_tx_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_lpuart1_tx_P_pinmux_IDX_1 2
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_lpuart1_tx_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_lpuart1_tx_P_pinmux_IDX_2 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_lpuart1_tx_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_lpuart1_tx_P_pinmux_IDX_3 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_lpuart1_tx_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_lpuart1_tx_P_pinmux_IDX_4 1075806792
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_lpuart1_tx_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_lpuart1_tx_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_lpuart1_tx, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_lpuart1_tx, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_lpuart1_tx, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_lpuart1_tx, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_lpuart1_tx, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_lpuart1_tx_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_lpuart1_tx, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_lpuart1_tx, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_lpuart1_tx, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_lpuart1_tx, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_lpuart1_tx, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_lpuart1_tx_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_lpuart1_tx, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_lpuart1_tx, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_lpuart1_tx, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_lpuart1_tx, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_lpuart1_tx, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_lpuart1_tx_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_lpuart1_tx, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_lpuart1_tx, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_lpuart1_tx, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_lpuart1_tx, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_lpuart1_tx, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_lpuart1_tx_P_pinmux_LEN 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_lpuart1_tx_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_lpuart1_tx_P_pin_pue 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_lpuart1_tx_P_pin_pue_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_lpuart1_tx_P_pin_pdrv 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_lpuart1_tx_P_pin_pdrv_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_lpuart1_tx_P_pin_lpsr 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_lpuart1_tx_P_pin_lpsr_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_lpuart1_tx_P_pin_snvs 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_lpuart1_tx_P_pin_snvs_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_07_LPUART1_RX
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_lpuart1_rx
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_lpuart1_rx_PATH "/soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_07_LPUART1_RX"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_lpuart1_rx_FULL_NAME "IOMUXC_GPIO_AD_B0_07_LPUART1_RX"

/* Node parent (/soc/iomuxc@401f8000) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_lpuart1_rx_PARENT DT_N_S_soc_S_iomuxc_401f8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_lpuart1_rx_CHILD_IDX 10

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_lpuart1_rx_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_lpuart1_rx_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_lpuart1_rx_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_lpuart1_rx_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_lpuart1_rx_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_lpuart1_rx_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_lpuart1_rx_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_lpuart1_rx_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_lpuart1_rx_ORD 212

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_lpuart1_rx_REQUIRES_ORDS \
	13, /* /soc/iomuxc@401f8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_lpuart1_rx_SUPPORTS_ORDS \
	213, /* /soc/iomuxc@401f8000/pinctrl/pinmux_lpuart1/group0 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_lpuart1_rx_EXISTS 1
#define DT_N_NODELABEL_iomuxc_gpio_ad_b0_07_lpuart1_rx DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_lpuart1_rx

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_lpuart1_rx_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_lpuart1_rx_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_lpuart1_rx_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_lpuart1_rx_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_lpuart1_rx_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_lpuart1_rx_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_lpuart1_rx_P_pinmux {1075806424 /* 0x401f80d8 */, 2 /* 0x2 */, 0 /* 0x0 */, 0 /* 0x0 */, 1075806796 /* 0x401f824c */}
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_lpuart1_rx_P_pinmux_IDX_0 1075806424
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_lpuart1_rx_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_lpuart1_rx_P_pinmux_IDX_1 2
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_lpuart1_rx_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_lpuart1_rx_P_pinmux_IDX_2 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_lpuart1_rx_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_lpuart1_rx_P_pinmux_IDX_3 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_lpuart1_rx_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_lpuart1_rx_P_pinmux_IDX_4 1075806796
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_lpuart1_rx_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_lpuart1_rx_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_lpuart1_rx, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_lpuart1_rx, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_lpuart1_rx, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_lpuart1_rx, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_lpuart1_rx, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_lpuart1_rx_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_lpuart1_rx, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_lpuart1_rx, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_lpuart1_rx, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_lpuart1_rx, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_lpuart1_rx, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_lpuart1_rx_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_lpuart1_rx, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_lpuart1_rx, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_lpuart1_rx, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_lpuart1_rx, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_lpuart1_rx, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_lpuart1_rx_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_lpuart1_rx, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_lpuart1_rx, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_lpuart1_rx, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_lpuart1_rx, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_lpuart1_rx, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_lpuart1_rx_P_pinmux_LEN 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_lpuart1_rx_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_lpuart1_rx_P_pin_pue 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_lpuart1_rx_P_pin_pue_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_lpuart1_rx_P_pin_pdrv 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_lpuart1_rx_P_pin_pdrv_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_lpuart1_rx_P_pin_lpsr 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_lpuart1_rx_P_pin_lpsr_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_lpuart1_rx_P_pin_snvs 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_lpuart1_rx_P_pin_snvs_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/pinctrl/pinmux_lpuart1/group0
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0_PATH "/soc/iomuxc@401f8000/pinctrl/pinmux_lpuart1/group0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0_FULL_NAME "group0"

/* Node parent (/soc/iomuxc@401f8000/pinctrl/pinmux_lpuart1) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0_PARENT DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0_ORD 213

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0_REQUIRES_ORDS \
	125, /* /soc/iomuxc@401f8000/pinctrl/pinmux_lpuart1 */ \
	211, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_06_LPUART1_TX */ \
	212, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_07_LPUART1_RX */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0_P_pinmux_IDX_0 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_lpuart1_rx
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0_P_pinmux_IDX_0_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_lpuart1_rx
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0_P_pinmux_IDX_1 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_lpuart1_tx
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0_P_pinmux_IDX_1_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_lpuart1_tx
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0, pinmux, 1)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0, pinmux, 1)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0, pinmux, 1, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0, pinmux, 1, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0_P_pinmux_LEN 2
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0_P_drive_strength "r0-6"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0_P_drive_strength_STRING_UNQUOTED r0-6
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0_P_drive_strength_STRING_TOKEN r0_6
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0_P_drive_strength_STRING_UPPER_TOKEN R0_6
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0_P_drive_strength_ENUM_IDX 6
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0_P_drive_strength_ENUM_TOKEN r0_6
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0_P_drive_strength_ENUM_UPPER_TOKEN R0_6
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0, drive_strength, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0, drive_strength, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0, drive_strength, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0, drive_strength, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0, drive_strength, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0, drive_strength, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0, drive_strength, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0, drive_strength, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0, drive_strength, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0, drive_strength, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0, drive_strength, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0, drive_strength, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0, drive_strength, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0, drive_strength, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0, drive_strength, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0, drive_strength, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0_P_bias_pull_up_value "47k"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0_P_bias_pull_up_value_STRING_UNQUOTED 47k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0_P_bias_pull_up_value_STRING_TOKEN 47k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0_P_bias_pull_up_value_STRING_UPPER_TOKEN 47K
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0_P_bias_pull_up_value_ENUM_IDX 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0_P_bias_pull_up_value_ENUM_TOKEN 47k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0_P_bias_pull_up_value_ENUM_UPPER_TOKEN 47K
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0_P_bias_pull_up_value_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0, bias_pull_up_value, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0, bias_pull_up_value, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0, bias_pull_up_value, 2)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0_P_bias_pull_up_value_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0, bias_pull_up_value, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0, bias_pull_up_value, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0, bias_pull_up_value, 2)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0_P_bias_pull_up_value_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0, bias_pull_up_value, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0, bias_pull_up_value, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0, bias_pull_up_value, 2, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0_P_bias_pull_up_value_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0, bias_pull_up_value, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0, bias_pull_up_value, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0, bias_pull_up_value, 2, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0_P_bias_pull_up_value_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0_P_bias_pull_down_value "100k"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0_P_bias_pull_down_value_STRING_UNQUOTED 100k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0_P_bias_pull_down_value_STRING_TOKEN 100k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0_P_bias_pull_down_value_STRING_UPPER_TOKEN 100K
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0_P_bias_pull_down_value_ENUM_IDX 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0_P_bias_pull_down_value_ENUM_TOKEN 100k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0_P_bias_pull_down_value_ENUM_UPPER_TOKEN 100K
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0_P_bias_pull_down_value_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0, bias_pull_down_value, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0, bias_pull_down_value, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0, bias_pull_down_value, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0, bias_pull_down_value, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0_P_bias_pull_down_value_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0, bias_pull_down_value, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0, bias_pull_down_value, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0, bias_pull_down_value, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0, bias_pull_down_value, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0_P_bias_pull_down_value_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0, bias_pull_down_value, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0, bias_pull_down_value, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0, bias_pull_down_value, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0, bias_pull_down_value, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0_P_bias_pull_down_value_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0, bias_pull_down_value, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0, bias_pull_down_value, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0, bias_pull_down_value, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0, bias_pull_down_value, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0_P_bias_pull_down_value_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0_P_slew_rate "slow"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0_P_slew_rate_STRING_UNQUOTED slow
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0_P_slew_rate_STRING_TOKEN slow
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0_P_slew_rate_STRING_UPPER_TOKEN SLOW
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0_P_slew_rate_ENUM_TOKEN slow
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0_P_slew_rate_ENUM_UPPER_TOKEN SLOW
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0, slew_rate, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0, slew_rate, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0, slew_rate, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0, slew_rate, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0, slew_rate, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0, slew_rate, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0, slew_rate, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0, slew_rate, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0, slew_rate, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0, slew_rate, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0, slew_rate, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0, slew_rate, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0, slew_rate, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0_P_nxp_speed "100-mhz"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0_P_nxp_speed_STRING_UNQUOTED 100-mhz
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0_P_nxp_speed_STRING_TOKEN 100_mhz
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0_P_nxp_speed_STRING_UPPER_TOKEN 100_MHZ
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0_P_nxp_speed_ENUM_IDX 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0_P_nxp_speed_ENUM_TOKEN 100_mhz
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0_P_nxp_speed_ENUM_UPPER_TOKEN 100_MHZ
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0_P_nxp_speed_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0, nxp_speed, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0, nxp_speed, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0, nxp_speed, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0, nxp_speed, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0, nxp_speed, 4) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0, nxp_speed, 5) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0, nxp_speed, 6)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0_P_nxp_speed_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0, nxp_speed, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0, nxp_speed, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0, nxp_speed, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0, nxp_speed, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0, nxp_speed, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0, nxp_speed, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0, nxp_speed, 6)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0_P_nxp_speed_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0, nxp_speed, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0, nxp_speed, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0, nxp_speed, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0, nxp_speed, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0, nxp_speed, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0, nxp_speed, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0, nxp_speed, 6, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0_P_nxp_speed_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0, nxp_speed, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0, nxp_speed, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0, nxp_speed, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0, nxp_speed, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0, nxp_speed, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0, nxp_speed, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0, nxp_speed, 6, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0_P_nxp_speed_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0_P_bias_disable 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0_P_bias_pull_up 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0_P_bias_pull_down 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0_P_drive_open_drain 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0_P_input_enable 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0_P_input_enable_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0_P_input_schmitt_enable 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0_P_input_schmitt_enable_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/pinctrl/pinmux_lpuart1_sleep/group0
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0_PATH "/soc/iomuxc@401f8000/pinctrl/pinmux_lpuart1_sleep/group0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0_FULL_NAME "group0"

/* Node parent (/soc/iomuxc@401f8000/pinctrl/pinmux_lpuart1_sleep) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0_PARENT DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0_ORD 214

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0_REQUIRES_ORDS \
	27, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_07_GPIO1_IO07 */ \
	126, /* /soc/iomuxc@401f8000/pinctrl/pinmux_lpuart1_sleep */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0_P_pinmux_IDX_0 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_gpio1_io07
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0_P_pinmux_IDX_0_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_gpio1_io07
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0, pinmux, 0)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0, pinmux, 0)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0, pinmux, 0, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0, pinmux, 0, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0_P_pinmux_LEN 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0_P_drive_strength "r0-6"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0_P_drive_strength_STRING_UNQUOTED r0-6
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0_P_drive_strength_STRING_TOKEN r0_6
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0_P_drive_strength_STRING_UPPER_TOKEN R0_6
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0_P_drive_strength_ENUM_IDX 6
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0_P_drive_strength_ENUM_TOKEN r0_6
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0_P_drive_strength_ENUM_UPPER_TOKEN R0_6
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0, drive_strength, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0, drive_strength, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0, drive_strength, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0, drive_strength, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0, drive_strength, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0, drive_strength, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0, drive_strength, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0, drive_strength, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0, drive_strength, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0, drive_strength, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0, drive_strength, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0, drive_strength, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0, drive_strength, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0, drive_strength, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0, drive_strength, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0, drive_strength, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0_P_bias_pull_up_value "100k"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0_P_bias_pull_up_value_STRING_UNQUOTED 100k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0_P_bias_pull_up_value_STRING_TOKEN 100k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0_P_bias_pull_up_value_STRING_UPPER_TOKEN 100K
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0_P_bias_pull_up_value_ENUM_IDX 2
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0_P_bias_pull_up_value_ENUM_TOKEN 100k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0_P_bias_pull_up_value_ENUM_UPPER_TOKEN 100K
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0_P_bias_pull_up_value_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0, bias_pull_up_value, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0, bias_pull_up_value, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0, bias_pull_up_value, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0, bias_pull_up_value, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0_P_bias_pull_up_value_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0, bias_pull_up_value, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0, bias_pull_up_value, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0, bias_pull_up_value, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0, bias_pull_up_value, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0_P_bias_pull_up_value_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0, bias_pull_up_value, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0, bias_pull_up_value, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0, bias_pull_up_value, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0, bias_pull_up_value, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0_P_bias_pull_up_value_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0, bias_pull_up_value, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0, bias_pull_up_value, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0, bias_pull_up_value, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0, bias_pull_up_value, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0_P_bias_pull_up_value_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0_P_bias_pull_down_value "100k"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0_P_bias_pull_down_value_STRING_UNQUOTED 100k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0_P_bias_pull_down_value_STRING_TOKEN 100k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0_P_bias_pull_down_value_STRING_UPPER_TOKEN 100K
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0_P_bias_pull_down_value_ENUM_IDX 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0_P_bias_pull_down_value_ENUM_TOKEN 100k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0_P_bias_pull_down_value_ENUM_UPPER_TOKEN 100K
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0_P_bias_pull_down_value_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0, bias_pull_down_value, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0, bias_pull_down_value, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0, bias_pull_down_value, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0, bias_pull_down_value, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0_P_bias_pull_down_value_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0, bias_pull_down_value, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0, bias_pull_down_value, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0, bias_pull_down_value, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0, bias_pull_down_value, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0_P_bias_pull_down_value_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0, bias_pull_down_value, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0, bias_pull_down_value, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0, bias_pull_down_value, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0, bias_pull_down_value, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0_P_bias_pull_down_value_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0, bias_pull_down_value, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0, bias_pull_down_value, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0, bias_pull_down_value, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0, bias_pull_down_value, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0_P_bias_pull_down_value_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0_P_slew_rate "slow"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0_P_slew_rate_STRING_UNQUOTED slow
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0_P_slew_rate_STRING_TOKEN slow
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0_P_slew_rate_STRING_UPPER_TOKEN SLOW
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0_P_slew_rate_ENUM_TOKEN slow
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0_P_slew_rate_ENUM_UPPER_TOKEN SLOW
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0, slew_rate, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0, slew_rate, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0, slew_rate, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0, slew_rate, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0, slew_rate, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0, slew_rate, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0, slew_rate, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0, slew_rate, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0, slew_rate, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0, slew_rate, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0, slew_rate, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0, slew_rate, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0, slew_rate, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0_P_nxp_speed "100-mhz"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0_P_nxp_speed_STRING_UNQUOTED 100-mhz
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0_P_nxp_speed_STRING_TOKEN 100_mhz
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0_P_nxp_speed_STRING_UPPER_TOKEN 100_MHZ
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0_P_nxp_speed_ENUM_IDX 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0_P_nxp_speed_ENUM_TOKEN 100_mhz
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0_P_nxp_speed_ENUM_UPPER_TOKEN 100_MHZ
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0_P_nxp_speed_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0, nxp_speed, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0, nxp_speed, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0, nxp_speed, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0, nxp_speed, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0, nxp_speed, 4) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0, nxp_speed, 5) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0, nxp_speed, 6)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0_P_nxp_speed_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0, nxp_speed, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0, nxp_speed, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0, nxp_speed, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0, nxp_speed, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0, nxp_speed, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0, nxp_speed, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0, nxp_speed, 6)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0_P_nxp_speed_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0, nxp_speed, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0, nxp_speed, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0, nxp_speed, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0, nxp_speed, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0, nxp_speed, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0, nxp_speed, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0, nxp_speed, 6, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0_P_nxp_speed_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0, nxp_speed, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0, nxp_speed, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0, nxp_speed, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0, nxp_speed, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0, nxp_speed, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0, nxp_speed, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0, nxp_speed, 6, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0_P_nxp_speed_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0_P_bias_disable 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0_P_bias_pull_up 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0_P_bias_pull_down 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0_P_drive_open_drain 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0_P_input_enable 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0_P_input_enable_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0_P_input_schmitt_enable 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0_P_input_schmitt_enable_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/pinctrl/pinmux_lpuart1_sleep/group1
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1_PATH "/soc/iomuxc@401f8000/pinctrl/pinmux_lpuart1_sleep/group1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1_FULL_NAME "group1"

/* Node parent (/soc/iomuxc@401f8000/pinctrl/pinmux_lpuart1_sleep) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1_PARENT DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1_CHILD_IDX 1

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1_ORD 215

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1_REQUIRES_ORDS \
	126, /* /soc/iomuxc@401f8000/pinctrl/pinmux_lpuart1_sleep */ \
	211, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_06_LPUART1_TX */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1_P_pinmux_IDX_0 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_lpuart1_tx
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1_P_pinmux_IDX_0_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_lpuart1_tx
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1, pinmux, 0)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1, pinmux, 0)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1, pinmux, 0, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1, pinmux, 0, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1_P_pinmux_LEN 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1_P_drive_strength "r0-6"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1_P_drive_strength_STRING_UNQUOTED r0-6
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1_P_drive_strength_STRING_TOKEN r0_6
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1_P_drive_strength_STRING_UPPER_TOKEN R0_6
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1_P_drive_strength_ENUM_IDX 6
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1_P_drive_strength_ENUM_TOKEN r0_6
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1_P_drive_strength_ENUM_UPPER_TOKEN R0_6
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1, drive_strength, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1, drive_strength, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1, drive_strength, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1, drive_strength, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1, drive_strength, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1, drive_strength, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1, drive_strength, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1, drive_strength, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1, drive_strength, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1, drive_strength, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1, drive_strength, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1, drive_strength, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1, drive_strength, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1, drive_strength, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1, drive_strength, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1, drive_strength, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1_P_bias_pull_up_value "47k"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1_P_bias_pull_up_value_STRING_UNQUOTED 47k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1_P_bias_pull_up_value_STRING_TOKEN 47k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1_P_bias_pull_up_value_STRING_UPPER_TOKEN 47K
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1_P_bias_pull_up_value_ENUM_IDX 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1_P_bias_pull_up_value_ENUM_TOKEN 47k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1_P_bias_pull_up_value_ENUM_UPPER_TOKEN 47K
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1_P_bias_pull_up_value_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1, bias_pull_up_value, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1, bias_pull_up_value, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1, bias_pull_up_value, 2)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1_P_bias_pull_up_value_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1, bias_pull_up_value, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1, bias_pull_up_value, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1, bias_pull_up_value, 2)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1_P_bias_pull_up_value_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1, bias_pull_up_value, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1, bias_pull_up_value, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1, bias_pull_up_value, 2, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1_P_bias_pull_up_value_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1, bias_pull_up_value, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1, bias_pull_up_value, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1, bias_pull_up_value, 2, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1_P_bias_pull_up_value_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1_P_bias_pull_down_value "100k"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1_P_bias_pull_down_value_STRING_UNQUOTED 100k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1_P_bias_pull_down_value_STRING_TOKEN 100k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1_P_bias_pull_down_value_STRING_UPPER_TOKEN 100K
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1_P_bias_pull_down_value_ENUM_IDX 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1_P_bias_pull_down_value_ENUM_TOKEN 100k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1_P_bias_pull_down_value_ENUM_UPPER_TOKEN 100K
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1_P_bias_pull_down_value_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1, bias_pull_down_value, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1, bias_pull_down_value, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1, bias_pull_down_value, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1, bias_pull_down_value, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1_P_bias_pull_down_value_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1, bias_pull_down_value, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1, bias_pull_down_value, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1, bias_pull_down_value, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1, bias_pull_down_value, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1_P_bias_pull_down_value_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1, bias_pull_down_value, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1, bias_pull_down_value, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1, bias_pull_down_value, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1, bias_pull_down_value, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1_P_bias_pull_down_value_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1, bias_pull_down_value, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1, bias_pull_down_value, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1, bias_pull_down_value, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1, bias_pull_down_value, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1_P_bias_pull_down_value_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1_P_slew_rate "slow"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1_P_slew_rate_STRING_UNQUOTED slow
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1_P_slew_rate_STRING_TOKEN slow
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1_P_slew_rate_STRING_UPPER_TOKEN SLOW
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1_P_slew_rate_ENUM_TOKEN slow
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1_P_slew_rate_ENUM_UPPER_TOKEN SLOW
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1, slew_rate, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1, slew_rate, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1, slew_rate, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1, slew_rate, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1, slew_rate, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1, slew_rate, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1, slew_rate, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1, slew_rate, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1, slew_rate, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1, slew_rate, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1, slew_rate, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1, slew_rate, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1, slew_rate, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1_P_nxp_speed "100-mhz"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1_P_nxp_speed_STRING_UNQUOTED 100-mhz
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1_P_nxp_speed_STRING_TOKEN 100_mhz
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1_P_nxp_speed_STRING_UPPER_TOKEN 100_MHZ
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1_P_nxp_speed_ENUM_IDX 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1_P_nxp_speed_ENUM_TOKEN 100_mhz
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1_P_nxp_speed_ENUM_UPPER_TOKEN 100_MHZ
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1_P_nxp_speed_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1, nxp_speed, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1, nxp_speed, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1, nxp_speed, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1, nxp_speed, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1, nxp_speed, 4) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1, nxp_speed, 5) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1, nxp_speed, 6)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1_P_nxp_speed_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1, nxp_speed, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1, nxp_speed, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1, nxp_speed, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1, nxp_speed, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1, nxp_speed, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1, nxp_speed, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1, nxp_speed, 6)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1_P_nxp_speed_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1, nxp_speed, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1, nxp_speed, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1, nxp_speed, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1, nxp_speed, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1, nxp_speed, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1, nxp_speed, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1, nxp_speed, 6, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1_P_nxp_speed_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1, nxp_speed, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1, nxp_speed, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1, nxp_speed, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1, nxp_speed, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1, nxp_speed, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1, nxp_speed, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1, nxp_speed, 6, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1_P_nxp_speed_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1_P_bias_disable 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1_P_bias_pull_up 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1_P_bias_pull_down 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1_P_drive_open_drain 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1_P_input_enable 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1_P_input_enable_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1_P_input_schmitt_enable 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1_P_input_schmitt_enable_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B1_08_LPUART2_TX
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_lpuart2_tx
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_lpuart2_tx_PATH "/soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B1_08_LPUART2_TX"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_lpuart2_tx_FULL_NAME "IOMUXC_GPIO_AD_B1_08_LPUART2_TX"

/* Node parent (/soc/iomuxc@401f8000) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_lpuart2_tx_PARENT DT_N_S_soc_S_iomuxc_401f8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_lpuart2_tx_CHILD_IDX 41

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_lpuart2_tx_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_lpuart2_tx_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_lpuart2_tx_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_lpuart2_tx_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_lpuart2_tx_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_lpuart2_tx_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_lpuart2_tx_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_lpuart2_tx_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_lpuart2_tx_ORD 216

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_lpuart2_tx_REQUIRES_ORDS \
	13, /* /soc/iomuxc@401f8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_lpuart2_tx_SUPPORTS_ORDS \
	218, /* /soc/iomuxc@401f8000/pinctrl/pinmux_lpuart2/group0 */ \
	220, /* /soc/iomuxc@401f8000/pinctrl/pinmux_lpuart2_sleep/group1 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_lpuart2_tx_EXISTS 1
#define DT_N_NODELABEL_iomuxc_gpio_ad_b1_08_lpuart2_tx DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_lpuart2_tx

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_lpuart2_tx_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_lpuart2_tx_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_lpuart2_tx_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_lpuart2_tx_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_lpuart2_tx_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_lpuart2_tx_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_lpuart2_tx_P_pinmux {1075806492 /* 0x401f811c */, 2 /* 0x2 */, 1075807188 /* 0x401f83d4 */, 0 /* 0x0 */, 1075806864 /* 0x401f8290 */}
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_lpuart2_tx_P_pinmux_IDX_0 1075806492
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_lpuart2_tx_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_lpuart2_tx_P_pinmux_IDX_1 2
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_lpuart2_tx_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_lpuart2_tx_P_pinmux_IDX_2 1075807188
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_lpuart2_tx_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_lpuart2_tx_P_pinmux_IDX_3 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_lpuart2_tx_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_lpuart2_tx_P_pinmux_IDX_4 1075806864
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_lpuart2_tx_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_lpuart2_tx_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_lpuart2_tx, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_lpuart2_tx, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_lpuart2_tx, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_lpuart2_tx, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_lpuart2_tx, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_lpuart2_tx_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_lpuart2_tx, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_lpuart2_tx, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_lpuart2_tx, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_lpuart2_tx, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_lpuart2_tx, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_lpuart2_tx_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_lpuart2_tx, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_lpuart2_tx, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_lpuart2_tx, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_lpuart2_tx, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_lpuart2_tx, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_lpuart2_tx_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_lpuart2_tx, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_lpuart2_tx, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_lpuart2_tx, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_lpuart2_tx, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_lpuart2_tx, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_lpuart2_tx_P_pinmux_LEN 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_lpuart2_tx_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_lpuart2_tx_P_pin_pue 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_lpuart2_tx_P_pin_pue_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_lpuart2_tx_P_pin_pdrv 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_lpuart2_tx_P_pin_pdrv_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_lpuart2_tx_P_pin_lpsr 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_lpuart2_tx_P_pin_lpsr_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_lpuart2_tx_P_pin_snvs 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_lpuart2_tx_P_pin_snvs_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B1_09_LPUART2_RX
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_lpuart2_rx
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_lpuart2_rx_PATH "/soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B1_09_LPUART2_RX"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_lpuart2_rx_FULL_NAME "IOMUXC_GPIO_AD_B1_09_LPUART2_RX"

/* Node parent (/soc/iomuxc@401f8000) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_lpuart2_rx_PARENT DT_N_S_soc_S_iomuxc_401f8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_lpuart2_rx_CHILD_IDX 43

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_lpuart2_rx_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_lpuart2_rx_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_lpuart2_rx_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_lpuart2_rx_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_lpuart2_rx_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_lpuart2_rx_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_lpuart2_rx_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_lpuart2_rx_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_lpuart2_rx_ORD 217

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_lpuart2_rx_REQUIRES_ORDS \
	13, /* /soc/iomuxc@401f8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_lpuart2_rx_SUPPORTS_ORDS \
	218, /* /soc/iomuxc@401f8000/pinctrl/pinmux_lpuart2/group0 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_lpuart2_rx_EXISTS 1
#define DT_N_NODELABEL_iomuxc_gpio_ad_b1_09_lpuart2_rx DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_lpuart2_rx

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_lpuart2_rx_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_lpuart2_rx_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_lpuart2_rx_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_lpuart2_rx_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_lpuart2_rx_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_lpuart2_rx_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_lpuart2_rx_P_pinmux {1075806496 /* 0x401f8120 */, 2 /* 0x2 */, 1075807184 /* 0x401f83d0 */, 0 /* 0x0 */, 1075806868 /* 0x401f8294 */}
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_lpuart2_rx_P_pinmux_IDX_0 1075806496
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_lpuart2_rx_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_lpuart2_rx_P_pinmux_IDX_1 2
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_lpuart2_rx_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_lpuart2_rx_P_pinmux_IDX_2 1075807184
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_lpuart2_rx_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_lpuart2_rx_P_pinmux_IDX_3 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_lpuart2_rx_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_lpuart2_rx_P_pinmux_IDX_4 1075806868
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_lpuart2_rx_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_lpuart2_rx_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_lpuart2_rx, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_lpuart2_rx, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_lpuart2_rx, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_lpuart2_rx, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_lpuart2_rx, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_lpuart2_rx_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_lpuart2_rx, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_lpuart2_rx, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_lpuart2_rx, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_lpuart2_rx, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_lpuart2_rx, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_lpuart2_rx_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_lpuart2_rx, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_lpuart2_rx, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_lpuart2_rx, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_lpuart2_rx, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_lpuart2_rx, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_lpuart2_rx_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_lpuart2_rx, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_lpuart2_rx, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_lpuart2_rx, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_lpuart2_rx, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_lpuart2_rx, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_lpuart2_rx_P_pinmux_LEN 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_lpuart2_rx_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_lpuart2_rx_P_pin_pue 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_lpuart2_rx_P_pin_pue_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_lpuart2_rx_P_pin_pdrv 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_lpuart2_rx_P_pin_pdrv_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_lpuart2_rx_P_pin_lpsr 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_lpuart2_rx_P_pin_lpsr_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_lpuart2_rx_P_pin_snvs 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_lpuart2_rx_P_pin_snvs_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/pinctrl/pinmux_lpuart2/group0
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0_PATH "/soc/iomuxc@401f8000/pinctrl/pinmux_lpuart2/group0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0_FULL_NAME "group0"

/* Node parent (/soc/iomuxc@401f8000/pinctrl/pinmux_lpuart2) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0_PARENT DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0_ORD 218

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0_REQUIRES_ORDS \
	128, /* /soc/iomuxc@401f8000/pinctrl/pinmux_lpuart2 */ \
	216, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B1_08_LPUART2_TX */ \
	217, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B1_09_LPUART2_RX */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0_P_pinmux_IDX_0 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_lpuart2_rx
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0_P_pinmux_IDX_0_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_lpuart2_rx
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0_P_pinmux_IDX_1 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_lpuart2_tx
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0_P_pinmux_IDX_1_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_lpuart2_tx
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0, pinmux, 1)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0, pinmux, 1)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0, pinmux, 1, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0, pinmux, 1, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0_P_pinmux_LEN 2
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0_P_drive_strength "r0-6"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0_P_drive_strength_STRING_UNQUOTED r0-6
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0_P_drive_strength_STRING_TOKEN r0_6
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0_P_drive_strength_STRING_UPPER_TOKEN R0_6
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0_P_drive_strength_ENUM_IDX 6
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0_P_drive_strength_ENUM_TOKEN r0_6
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0_P_drive_strength_ENUM_UPPER_TOKEN R0_6
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0, drive_strength, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0, drive_strength, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0, drive_strength, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0, drive_strength, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0, drive_strength, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0, drive_strength, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0, drive_strength, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0, drive_strength, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0, drive_strength, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0, drive_strength, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0, drive_strength, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0, drive_strength, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0, drive_strength, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0, drive_strength, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0, drive_strength, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0, drive_strength, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0_P_bias_pull_up_value "47k"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0_P_bias_pull_up_value_STRING_UNQUOTED 47k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0_P_bias_pull_up_value_STRING_TOKEN 47k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0_P_bias_pull_up_value_STRING_UPPER_TOKEN 47K
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0_P_bias_pull_up_value_ENUM_IDX 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0_P_bias_pull_up_value_ENUM_TOKEN 47k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0_P_bias_pull_up_value_ENUM_UPPER_TOKEN 47K
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0_P_bias_pull_up_value_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0, bias_pull_up_value, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0, bias_pull_up_value, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0, bias_pull_up_value, 2)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0_P_bias_pull_up_value_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0, bias_pull_up_value, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0, bias_pull_up_value, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0, bias_pull_up_value, 2)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0_P_bias_pull_up_value_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0, bias_pull_up_value, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0, bias_pull_up_value, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0, bias_pull_up_value, 2, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0_P_bias_pull_up_value_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0, bias_pull_up_value, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0, bias_pull_up_value, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0, bias_pull_up_value, 2, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0_P_bias_pull_up_value_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0_P_bias_pull_down_value "100k"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0_P_bias_pull_down_value_STRING_UNQUOTED 100k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0_P_bias_pull_down_value_STRING_TOKEN 100k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0_P_bias_pull_down_value_STRING_UPPER_TOKEN 100K
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0_P_bias_pull_down_value_ENUM_IDX 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0_P_bias_pull_down_value_ENUM_TOKEN 100k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0_P_bias_pull_down_value_ENUM_UPPER_TOKEN 100K
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0_P_bias_pull_down_value_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0, bias_pull_down_value, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0, bias_pull_down_value, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0, bias_pull_down_value, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0, bias_pull_down_value, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0_P_bias_pull_down_value_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0, bias_pull_down_value, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0, bias_pull_down_value, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0, bias_pull_down_value, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0, bias_pull_down_value, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0_P_bias_pull_down_value_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0, bias_pull_down_value, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0, bias_pull_down_value, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0, bias_pull_down_value, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0, bias_pull_down_value, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0_P_bias_pull_down_value_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0, bias_pull_down_value, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0, bias_pull_down_value, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0, bias_pull_down_value, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0, bias_pull_down_value, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0_P_bias_pull_down_value_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0_P_slew_rate "slow"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0_P_slew_rate_STRING_UNQUOTED slow
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0_P_slew_rate_STRING_TOKEN slow
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0_P_slew_rate_STRING_UPPER_TOKEN SLOW
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0_P_slew_rate_ENUM_TOKEN slow
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0_P_slew_rate_ENUM_UPPER_TOKEN SLOW
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0, slew_rate, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0, slew_rate, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0, slew_rate, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0, slew_rate, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0, slew_rate, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0, slew_rate, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0, slew_rate, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0, slew_rate, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0, slew_rate, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0, slew_rate, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0, slew_rate, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0, slew_rate, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0, slew_rate, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0_P_nxp_speed "100-mhz"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0_P_nxp_speed_STRING_UNQUOTED 100-mhz
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0_P_nxp_speed_STRING_TOKEN 100_mhz
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0_P_nxp_speed_STRING_UPPER_TOKEN 100_MHZ
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0_P_nxp_speed_ENUM_IDX 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0_P_nxp_speed_ENUM_TOKEN 100_mhz
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0_P_nxp_speed_ENUM_UPPER_TOKEN 100_MHZ
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0_P_nxp_speed_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0, nxp_speed, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0, nxp_speed, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0, nxp_speed, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0, nxp_speed, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0, nxp_speed, 4) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0, nxp_speed, 5) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0, nxp_speed, 6)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0_P_nxp_speed_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0, nxp_speed, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0, nxp_speed, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0, nxp_speed, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0, nxp_speed, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0, nxp_speed, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0, nxp_speed, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0, nxp_speed, 6)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0_P_nxp_speed_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0, nxp_speed, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0, nxp_speed, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0, nxp_speed, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0, nxp_speed, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0, nxp_speed, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0, nxp_speed, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0, nxp_speed, 6, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0_P_nxp_speed_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0, nxp_speed, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0, nxp_speed, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0, nxp_speed, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0, nxp_speed, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0, nxp_speed, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0, nxp_speed, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0, nxp_speed, 6, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0_P_nxp_speed_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0_P_bias_disable 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0_P_bias_pull_up 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0_P_bias_pull_down 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0_P_drive_open_drain 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0_P_input_enable 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0_P_input_enable_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0_P_input_schmitt_enable 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0_P_input_schmitt_enable_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/pinctrl/pinmux_lpuart2_sleep/group0
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0_PATH "/soc/iomuxc@401f8000/pinctrl/pinmux_lpuart2_sleep/group0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0_FULL_NAME "group0"

/* Node parent (/soc/iomuxc@401f8000/pinctrl/pinmux_lpuart2_sleep) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0_PARENT DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0_ORD 219

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0_REQUIRES_ORDS \
	45, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B1_09_GPIO1_IO25 */ \
	129, /* /soc/iomuxc@401f8000/pinctrl/pinmux_lpuart2_sleep */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0_P_pinmux_IDX_0 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_gpio1_io25
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0_P_pinmux_IDX_0_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_gpio1_io25
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0, pinmux, 0)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0, pinmux, 0)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0, pinmux, 0, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0, pinmux, 0, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0_P_pinmux_LEN 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0_P_drive_strength "r0-6"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0_P_drive_strength_STRING_UNQUOTED r0-6
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0_P_drive_strength_STRING_TOKEN r0_6
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0_P_drive_strength_STRING_UPPER_TOKEN R0_6
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0_P_drive_strength_ENUM_IDX 6
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0_P_drive_strength_ENUM_TOKEN r0_6
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0_P_drive_strength_ENUM_UPPER_TOKEN R0_6
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0, drive_strength, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0, drive_strength, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0, drive_strength, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0, drive_strength, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0, drive_strength, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0, drive_strength, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0, drive_strength, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0, drive_strength, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0, drive_strength, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0, drive_strength, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0, drive_strength, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0, drive_strength, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0, drive_strength, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0, drive_strength, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0, drive_strength, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0, drive_strength, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0_P_bias_pull_up_value "100k"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0_P_bias_pull_up_value_STRING_UNQUOTED 100k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0_P_bias_pull_up_value_STRING_TOKEN 100k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0_P_bias_pull_up_value_STRING_UPPER_TOKEN 100K
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0_P_bias_pull_up_value_ENUM_IDX 2
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0_P_bias_pull_up_value_ENUM_TOKEN 100k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0_P_bias_pull_up_value_ENUM_UPPER_TOKEN 100K
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0_P_bias_pull_up_value_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0, bias_pull_up_value, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0, bias_pull_up_value, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0, bias_pull_up_value, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0, bias_pull_up_value, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0_P_bias_pull_up_value_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0, bias_pull_up_value, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0, bias_pull_up_value, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0, bias_pull_up_value, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0, bias_pull_up_value, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0_P_bias_pull_up_value_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0, bias_pull_up_value, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0, bias_pull_up_value, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0, bias_pull_up_value, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0, bias_pull_up_value, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0_P_bias_pull_up_value_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0, bias_pull_up_value, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0, bias_pull_up_value, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0, bias_pull_up_value, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0, bias_pull_up_value, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0_P_bias_pull_up_value_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0_P_bias_pull_down_value "100k"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0_P_bias_pull_down_value_STRING_UNQUOTED 100k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0_P_bias_pull_down_value_STRING_TOKEN 100k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0_P_bias_pull_down_value_STRING_UPPER_TOKEN 100K
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0_P_bias_pull_down_value_ENUM_IDX 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0_P_bias_pull_down_value_ENUM_TOKEN 100k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0_P_bias_pull_down_value_ENUM_UPPER_TOKEN 100K
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0_P_bias_pull_down_value_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0, bias_pull_down_value, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0, bias_pull_down_value, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0, bias_pull_down_value, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0, bias_pull_down_value, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0_P_bias_pull_down_value_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0, bias_pull_down_value, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0, bias_pull_down_value, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0, bias_pull_down_value, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0, bias_pull_down_value, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0_P_bias_pull_down_value_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0, bias_pull_down_value, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0, bias_pull_down_value, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0, bias_pull_down_value, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0, bias_pull_down_value, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0_P_bias_pull_down_value_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0, bias_pull_down_value, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0, bias_pull_down_value, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0, bias_pull_down_value, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0, bias_pull_down_value, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0_P_bias_pull_down_value_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0_P_slew_rate "slow"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0_P_slew_rate_STRING_UNQUOTED slow
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0_P_slew_rate_STRING_TOKEN slow
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0_P_slew_rate_STRING_UPPER_TOKEN SLOW
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0_P_slew_rate_ENUM_TOKEN slow
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0_P_slew_rate_ENUM_UPPER_TOKEN SLOW
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0, slew_rate, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0, slew_rate, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0, slew_rate, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0, slew_rate, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0, slew_rate, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0, slew_rate, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0, slew_rate, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0, slew_rate, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0, slew_rate, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0, slew_rate, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0, slew_rate, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0, slew_rate, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0, slew_rate, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0_P_nxp_speed "100-mhz"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0_P_nxp_speed_STRING_UNQUOTED 100-mhz
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0_P_nxp_speed_STRING_TOKEN 100_mhz
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0_P_nxp_speed_STRING_UPPER_TOKEN 100_MHZ
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0_P_nxp_speed_ENUM_IDX 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0_P_nxp_speed_ENUM_TOKEN 100_mhz
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0_P_nxp_speed_ENUM_UPPER_TOKEN 100_MHZ
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0_P_nxp_speed_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0, nxp_speed, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0, nxp_speed, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0, nxp_speed, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0, nxp_speed, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0, nxp_speed, 4) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0, nxp_speed, 5) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0, nxp_speed, 6)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0_P_nxp_speed_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0, nxp_speed, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0, nxp_speed, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0, nxp_speed, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0, nxp_speed, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0, nxp_speed, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0, nxp_speed, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0, nxp_speed, 6)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0_P_nxp_speed_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0, nxp_speed, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0, nxp_speed, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0, nxp_speed, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0, nxp_speed, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0, nxp_speed, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0, nxp_speed, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0, nxp_speed, 6, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0_P_nxp_speed_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0, nxp_speed, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0, nxp_speed, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0, nxp_speed, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0, nxp_speed, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0, nxp_speed, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0, nxp_speed, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0, nxp_speed, 6, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0_P_nxp_speed_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0_P_bias_disable 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0_P_bias_pull_up 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0_P_bias_pull_down 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0_P_drive_open_drain 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0_P_input_enable 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0_P_input_enable_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0_P_input_schmitt_enable 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0_P_input_schmitt_enable_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/pinctrl/pinmux_lpuart2_sleep/group1
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1_PATH "/soc/iomuxc@401f8000/pinctrl/pinmux_lpuart2_sleep/group1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1_FULL_NAME "group1"

/* Node parent (/soc/iomuxc@401f8000/pinctrl/pinmux_lpuart2_sleep) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1_PARENT DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1_CHILD_IDX 1

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1_ORD 220

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1_REQUIRES_ORDS \
	129, /* /soc/iomuxc@401f8000/pinctrl/pinmux_lpuart2_sleep */ \
	216, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B1_08_LPUART2_TX */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1_P_pinmux_IDX_0 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_lpuart2_tx
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1_P_pinmux_IDX_0_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_lpuart2_tx
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1, pinmux, 0)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1, pinmux, 0)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1, pinmux, 0, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1, pinmux, 0, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1_P_pinmux_LEN 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1_P_drive_strength "r0-6"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1_P_drive_strength_STRING_UNQUOTED r0-6
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1_P_drive_strength_STRING_TOKEN r0_6
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1_P_drive_strength_STRING_UPPER_TOKEN R0_6
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1_P_drive_strength_ENUM_IDX 6
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1_P_drive_strength_ENUM_TOKEN r0_6
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1_P_drive_strength_ENUM_UPPER_TOKEN R0_6
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1, drive_strength, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1, drive_strength, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1, drive_strength, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1, drive_strength, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1, drive_strength, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1, drive_strength, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1, drive_strength, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1, drive_strength, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1, drive_strength, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1, drive_strength, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1, drive_strength, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1, drive_strength, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1, drive_strength, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1, drive_strength, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1, drive_strength, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1, drive_strength, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1_P_bias_pull_up_value "47k"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1_P_bias_pull_up_value_STRING_UNQUOTED 47k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1_P_bias_pull_up_value_STRING_TOKEN 47k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1_P_bias_pull_up_value_STRING_UPPER_TOKEN 47K
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1_P_bias_pull_up_value_ENUM_IDX 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1_P_bias_pull_up_value_ENUM_TOKEN 47k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1_P_bias_pull_up_value_ENUM_UPPER_TOKEN 47K
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1_P_bias_pull_up_value_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1, bias_pull_up_value, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1, bias_pull_up_value, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1, bias_pull_up_value, 2)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1_P_bias_pull_up_value_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1, bias_pull_up_value, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1, bias_pull_up_value, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1, bias_pull_up_value, 2)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1_P_bias_pull_up_value_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1, bias_pull_up_value, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1, bias_pull_up_value, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1, bias_pull_up_value, 2, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1_P_bias_pull_up_value_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1, bias_pull_up_value, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1, bias_pull_up_value, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1, bias_pull_up_value, 2, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1_P_bias_pull_up_value_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1_P_bias_pull_down_value "100k"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1_P_bias_pull_down_value_STRING_UNQUOTED 100k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1_P_bias_pull_down_value_STRING_TOKEN 100k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1_P_bias_pull_down_value_STRING_UPPER_TOKEN 100K
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1_P_bias_pull_down_value_ENUM_IDX 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1_P_bias_pull_down_value_ENUM_TOKEN 100k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1_P_bias_pull_down_value_ENUM_UPPER_TOKEN 100K
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1_P_bias_pull_down_value_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1, bias_pull_down_value, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1, bias_pull_down_value, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1, bias_pull_down_value, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1, bias_pull_down_value, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1_P_bias_pull_down_value_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1, bias_pull_down_value, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1, bias_pull_down_value, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1, bias_pull_down_value, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1, bias_pull_down_value, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1_P_bias_pull_down_value_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1, bias_pull_down_value, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1, bias_pull_down_value, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1, bias_pull_down_value, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1, bias_pull_down_value, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1_P_bias_pull_down_value_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1, bias_pull_down_value, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1, bias_pull_down_value, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1, bias_pull_down_value, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1, bias_pull_down_value, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1_P_bias_pull_down_value_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1_P_slew_rate "slow"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1_P_slew_rate_STRING_UNQUOTED slow
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1_P_slew_rate_STRING_TOKEN slow
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1_P_slew_rate_STRING_UPPER_TOKEN SLOW
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1_P_slew_rate_ENUM_TOKEN slow
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1_P_slew_rate_ENUM_UPPER_TOKEN SLOW
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1, slew_rate, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1, slew_rate, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1, slew_rate, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1, slew_rate, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1, slew_rate, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1, slew_rate, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1, slew_rate, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1, slew_rate, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1, slew_rate, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1, slew_rate, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1, slew_rate, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1, slew_rate, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1, slew_rate, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1_P_nxp_speed "100-mhz"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1_P_nxp_speed_STRING_UNQUOTED 100-mhz
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1_P_nxp_speed_STRING_TOKEN 100_mhz
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1_P_nxp_speed_STRING_UPPER_TOKEN 100_MHZ
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1_P_nxp_speed_ENUM_IDX 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1_P_nxp_speed_ENUM_TOKEN 100_mhz
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1_P_nxp_speed_ENUM_UPPER_TOKEN 100_MHZ
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1_P_nxp_speed_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1, nxp_speed, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1, nxp_speed, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1, nxp_speed, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1, nxp_speed, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1, nxp_speed, 4) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1, nxp_speed, 5) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1, nxp_speed, 6)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1_P_nxp_speed_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1, nxp_speed, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1, nxp_speed, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1, nxp_speed, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1, nxp_speed, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1, nxp_speed, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1, nxp_speed, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1, nxp_speed, 6)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1_P_nxp_speed_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1, nxp_speed, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1, nxp_speed, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1, nxp_speed, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1, nxp_speed, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1, nxp_speed, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1, nxp_speed, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1, nxp_speed, 6, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1_P_nxp_speed_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1, nxp_speed, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1, nxp_speed, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1, nxp_speed, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1, nxp_speed, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1, nxp_speed, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1, nxp_speed, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1, nxp_speed, 6, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1_P_nxp_speed_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1_P_bias_disable 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1_P_bias_pull_up 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1_P_bias_pull_down 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1_P_drive_open_drain 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1_P_input_enable 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1_P_input_enable_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1_P_input_schmitt_enable 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1_P_input_schmitt_enable_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_28_SAI3_MCLK
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_sai3_mclk
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_sai3_mclk_PATH "/soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_28_SAI3_MCLK"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_sai3_mclk_FULL_NAME "IOMUXC_GPIO_EMC_28_SAI3_MCLK"

/* Node parent (/soc/iomuxc@401f8000) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_sai3_mclk_PARENT DT_N_S_soc_S_iomuxc_401f8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_sai3_mclk_CHILD_IDX 83

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_sai3_mclk_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_sai3_mclk_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_sai3_mclk_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_sai3_mclk_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_sai3_mclk_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_sai3_mclk_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_sai3_mclk_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_sai3_mclk_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_sai3_mclk_ORD 221

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_sai3_mclk_REQUIRES_ORDS \
	13, /* /soc/iomuxc@401f8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_sai3_mclk_SUPPORTS_ORDS \
	226, /* /soc/iomuxc@401f8000/pinctrl/pinmux_sai3/group0 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_sai3_mclk_EXISTS 1
#define DT_N_NODELABEL_iomuxc_gpio_emc_28_sai3_mclk DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_sai3_mclk

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_sai3_mclk_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_sai3_mclk_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_sai3_mclk_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_sai3_mclk_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_sai3_mclk_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_sai3_mclk_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_sai3_mclk_P_pinmux {1075806340 /* 0x401f8084 */, 3 /* 0x3 */, 1075807340 /* 0x401f846c */, 2 /* 0x2 */, 1075806712 /* 0x401f81f8 */}
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_sai3_mclk_P_pinmux_IDX_0 1075806340
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_sai3_mclk_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_sai3_mclk_P_pinmux_IDX_1 3
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_sai3_mclk_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_sai3_mclk_P_pinmux_IDX_2 1075807340
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_sai3_mclk_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_sai3_mclk_P_pinmux_IDX_3 2
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_sai3_mclk_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_sai3_mclk_P_pinmux_IDX_4 1075806712
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_sai3_mclk_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_sai3_mclk_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_sai3_mclk, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_sai3_mclk, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_sai3_mclk, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_sai3_mclk, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_sai3_mclk, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_sai3_mclk_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_sai3_mclk, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_sai3_mclk, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_sai3_mclk, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_sai3_mclk, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_sai3_mclk, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_sai3_mclk_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_sai3_mclk, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_sai3_mclk, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_sai3_mclk, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_sai3_mclk, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_sai3_mclk, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_sai3_mclk_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_sai3_mclk, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_sai3_mclk, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_sai3_mclk, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_sai3_mclk, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_sai3_mclk, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_sai3_mclk_P_pinmux_LEN 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_sai3_mclk_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_sai3_mclk_P_pin_pue 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_sai3_mclk_P_pin_pue_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_sai3_mclk_P_pin_pdrv 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_sai3_mclk_P_pin_pdrv_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_sai3_mclk_P_pin_lpsr 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_sai3_mclk_P_pin_lpsr_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_sai3_mclk_P_pin_snvs 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_sai3_mclk_P_pin_snvs_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B1_06_SAI3_TX_BCLK
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_sai3_tx_bclk
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_sai3_tx_bclk_PATH "/soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B1_06_SAI3_TX_BCLK"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_sai3_tx_bclk_FULL_NAME "IOMUXC_GPIO_SD_B1_06_SAI3_TX_BCLK"

/* Node parent (/soc/iomuxc@401f8000) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_sai3_tx_bclk_PARENT DT_N_S_soc_S_iomuxc_401f8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_sai3_tx_bclk_CHILD_IDX 123

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_sai3_tx_bclk_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_sai3_tx_bclk_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_sai3_tx_bclk_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_sai3_tx_bclk_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_sai3_tx_bclk_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_sai3_tx_bclk_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_sai3_tx_bclk_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_sai3_tx_bclk_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_sai3_tx_bclk_ORD 222

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_sai3_tx_bclk_REQUIRES_ORDS \
	13, /* /soc/iomuxc@401f8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_sai3_tx_bclk_SUPPORTS_ORDS \
	226, /* /soc/iomuxc@401f8000/pinctrl/pinmux_sai3/group0 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_sai3_tx_bclk_EXISTS 1
#define DT_N_NODELABEL_iomuxc_gpio_sd_b1_06_sai3_tx_bclk DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_sai3_tx_bclk

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_sai3_tx_bclk_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_sai3_tx_bclk_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_sai3_tx_bclk_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_sai3_tx_bclk_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_sai3_tx_bclk_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_sai3_tx_bclk_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_sai3_tx_bclk_P_pinmux {1075806576 /* 0x401f8170 */, 3 /* 0x3 */, 1075807356 /* 0x401f847c */, 0 /* 0x0 */, 1075806948 /* 0x401f82e4 */}
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_sai3_tx_bclk_P_pinmux_IDX_0 1075806576
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_sai3_tx_bclk_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_sai3_tx_bclk_P_pinmux_IDX_1 3
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_sai3_tx_bclk_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_sai3_tx_bclk_P_pinmux_IDX_2 1075807356
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_sai3_tx_bclk_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_sai3_tx_bclk_P_pinmux_IDX_3 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_sai3_tx_bclk_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_sai3_tx_bclk_P_pinmux_IDX_4 1075806948
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_sai3_tx_bclk_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_sai3_tx_bclk_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_sai3_tx_bclk, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_sai3_tx_bclk, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_sai3_tx_bclk, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_sai3_tx_bclk, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_sai3_tx_bclk, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_sai3_tx_bclk_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_sai3_tx_bclk, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_sai3_tx_bclk, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_sai3_tx_bclk, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_sai3_tx_bclk, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_sai3_tx_bclk, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_sai3_tx_bclk_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_sai3_tx_bclk, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_sai3_tx_bclk, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_sai3_tx_bclk, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_sai3_tx_bclk, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_sai3_tx_bclk, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_sai3_tx_bclk_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_sai3_tx_bclk, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_sai3_tx_bclk, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_sai3_tx_bclk, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_sai3_tx_bclk, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_sai3_tx_bclk, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_sai3_tx_bclk_P_pinmux_LEN 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_sai3_tx_bclk_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_sai3_tx_bclk_P_pin_pue 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_sai3_tx_bclk_P_pin_pue_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_sai3_tx_bclk_P_pin_pdrv 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_sai3_tx_bclk_P_pin_pdrv_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_sai3_tx_bclk_P_pin_lpsr 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_sai3_tx_bclk_P_pin_lpsr_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_sai3_tx_bclk_P_pin_snvs 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_sai3_tx_bclk_P_pin_snvs_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B1_07_SAI3_TX_SYNC
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_sai3_tx_sync
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_sai3_tx_sync_PATH "/soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B1_07_SAI3_TX_SYNC"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_sai3_tx_sync_FULL_NAME "IOMUXC_GPIO_SD_B1_07_SAI3_TX_SYNC"

/* Node parent (/soc/iomuxc@401f8000) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_sai3_tx_sync_PARENT DT_N_S_soc_S_iomuxc_401f8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_sai3_tx_sync_CHILD_IDX 125

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_sai3_tx_sync_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_sai3_tx_sync_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_sai3_tx_sync_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_sai3_tx_sync_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_sai3_tx_sync_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_sai3_tx_sync_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_sai3_tx_sync_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_sai3_tx_sync_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_sai3_tx_sync_ORD 223

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_sai3_tx_sync_REQUIRES_ORDS \
	13, /* /soc/iomuxc@401f8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_sai3_tx_sync_SUPPORTS_ORDS \
	226, /* /soc/iomuxc@401f8000/pinctrl/pinmux_sai3/group0 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_sai3_tx_sync_EXISTS 1
#define DT_N_NODELABEL_iomuxc_gpio_sd_b1_07_sai3_tx_sync DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_sai3_tx_sync

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_sai3_tx_sync_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_sai3_tx_sync_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_sai3_tx_sync_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_sai3_tx_sync_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_sai3_tx_sync_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_sai3_tx_sync_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_sai3_tx_sync_P_pinmux {1075806580 /* 0x401f8174 */, 3 /* 0x3 */, 1075807360 /* 0x401f8480 */, 0 /* 0x0 */, 1075806952 /* 0x401f82e8 */}
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_sai3_tx_sync_P_pinmux_IDX_0 1075806580
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_sai3_tx_sync_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_sai3_tx_sync_P_pinmux_IDX_1 3
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_sai3_tx_sync_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_sai3_tx_sync_P_pinmux_IDX_2 1075807360
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_sai3_tx_sync_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_sai3_tx_sync_P_pinmux_IDX_3 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_sai3_tx_sync_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_sai3_tx_sync_P_pinmux_IDX_4 1075806952
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_sai3_tx_sync_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_sai3_tx_sync_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_sai3_tx_sync, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_sai3_tx_sync, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_sai3_tx_sync, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_sai3_tx_sync, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_sai3_tx_sync, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_sai3_tx_sync_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_sai3_tx_sync, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_sai3_tx_sync, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_sai3_tx_sync, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_sai3_tx_sync, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_sai3_tx_sync, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_sai3_tx_sync_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_sai3_tx_sync, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_sai3_tx_sync, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_sai3_tx_sync, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_sai3_tx_sync, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_sai3_tx_sync, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_sai3_tx_sync_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_sai3_tx_sync, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_sai3_tx_sync, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_sai3_tx_sync, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_sai3_tx_sync, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_sai3_tx_sync, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_sai3_tx_sync_P_pinmux_LEN 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_sai3_tx_sync_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_sai3_tx_sync_P_pin_pue 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_sai3_tx_sync_P_pin_pue_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_sai3_tx_sync_P_pin_pdrv 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_sai3_tx_sync_P_pin_pdrv_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_sai3_tx_sync_P_pin_lpsr 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_sai3_tx_sync_P_pin_lpsr_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_sai3_tx_sync_P_pin_snvs 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_sai3_tx_sync_P_pin_snvs_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B1_08_SAI3_TX_DATA
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_sai3_tx_data
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_sai3_tx_data_PATH "/soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B1_08_SAI3_TX_DATA"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_sai3_tx_data_FULL_NAME "IOMUXC_GPIO_SD_B1_08_SAI3_TX_DATA"

/* Node parent (/soc/iomuxc@401f8000) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_sai3_tx_data_PARENT DT_N_S_soc_S_iomuxc_401f8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_sai3_tx_data_CHILD_IDX 127

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_sai3_tx_data_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_sai3_tx_data_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_sai3_tx_data_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_sai3_tx_data_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_sai3_tx_data_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_sai3_tx_data_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_sai3_tx_data_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_sai3_tx_data_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_sai3_tx_data_ORD 224

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_sai3_tx_data_REQUIRES_ORDS \
	13, /* /soc/iomuxc@401f8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_sai3_tx_data_SUPPORTS_ORDS \
	226, /* /soc/iomuxc@401f8000/pinctrl/pinmux_sai3/group0 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_sai3_tx_data_EXISTS 1
#define DT_N_NODELABEL_iomuxc_gpio_sd_b1_08_sai3_tx_data DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_sai3_tx_data

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_sai3_tx_data_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_sai3_tx_data_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_sai3_tx_data_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_sai3_tx_data_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_sai3_tx_data_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_sai3_tx_data_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_sai3_tx_data_P_pinmux {1075806584 /* 0x401f8178 */, 3 /* 0x3 */, 0 /* 0x0 */, 0 /* 0x0 */, 1075806956 /* 0x401f82ec */}
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_sai3_tx_data_P_pinmux_IDX_0 1075806584
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_sai3_tx_data_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_sai3_tx_data_P_pinmux_IDX_1 3
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_sai3_tx_data_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_sai3_tx_data_P_pinmux_IDX_2 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_sai3_tx_data_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_sai3_tx_data_P_pinmux_IDX_3 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_sai3_tx_data_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_sai3_tx_data_P_pinmux_IDX_4 1075806956
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_sai3_tx_data_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_sai3_tx_data_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_sai3_tx_data, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_sai3_tx_data, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_sai3_tx_data, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_sai3_tx_data, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_sai3_tx_data, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_sai3_tx_data_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_sai3_tx_data, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_sai3_tx_data, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_sai3_tx_data, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_sai3_tx_data, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_sai3_tx_data, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_sai3_tx_data_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_sai3_tx_data, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_sai3_tx_data, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_sai3_tx_data, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_sai3_tx_data, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_sai3_tx_data, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_sai3_tx_data_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_sai3_tx_data, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_sai3_tx_data, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_sai3_tx_data, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_sai3_tx_data, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_sai3_tx_data, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_sai3_tx_data_P_pinmux_LEN 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_sai3_tx_data_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_sai3_tx_data_P_pin_pue 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_sai3_tx_data_P_pin_pue_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_sai3_tx_data_P_pin_pdrv 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_sai3_tx_data_P_pin_pdrv_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_sai3_tx_data_P_pin_lpsr 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_sai3_tx_data_P_pin_lpsr_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_sai3_tx_data_P_pin_snvs 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_sai3_tx_data_P_pin_snvs_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B1_11_SAI3_RX_DATA
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_sai3_rx_data
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_sai3_rx_data_PATH "/soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B1_11_SAI3_RX_DATA"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_sai3_rx_data_FULL_NAME "IOMUXC_GPIO_SD_B1_11_SAI3_RX_DATA"

/* Node parent (/soc/iomuxc@401f8000) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_sai3_rx_data_PARENT DT_N_S_soc_S_iomuxc_401f8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_sai3_rx_data_CHILD_IDX 131

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_sai3_rx_data_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_sai3_rx_data_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_sai3_rx_data_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_sai3_rx_data_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_sai3_rx_data_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_sai3_rx_data_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_sai3_rx_data_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_sai3_rx_data_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_sai3_rx_data_ORD 225

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_sai3_rx_data_REQUIRES_ORDS \
	13, /* /soc/iomuxc@401f8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_sai3_rx_data_SUPPORTS_ORDS \
	226, /* /soc/iomuxc@401f8000/pinctrl/pinmux_sai3/group0 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_sai3_rx_data_EXISTS 1
#define DT_N_NODELABEL_iomuxc_gpio_sd_b1_11_sai3_rx_data DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_sai3_rx_data

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_sai3_rx_data_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_sai3_rx_data_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_sai3_rx_data_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_sai3_rx_data_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_sai3_rx_data_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_sai3_rx_data_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_sai3_rx_data_P_pinmux {1075806596 /* 0x401f8184 */, 3 /* 0x3 */, 1075807348 /* 0x401f8474 */, 0 /* 0x0 */, 1075806968 /* 0x401f82f8 */}
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_sai3_rx_data_P_pinmux_IDX_0 1075806596
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_sai3_rx_data_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_sai3_rx_data_P_pinmux_IDX_1 3
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_sai3_rx_data_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_sai3_rx_data_P_pinmux_IDX_2 1075807348
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_sai3_rx_data_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_sai3_rx_data_P_pinmux_IDX_3 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_sai3_rx_data_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_sai3_rx_data_P_pinmux_IDX_4 1075806968
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_sai3_rx_data_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_sai3_rx_data_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_sai3_rx_data, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_sai3_rx_data, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_sai3_rx_data, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_sai3_rx_data, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_sai3_rx_data, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_sai3_rx_data_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_sai3_rx_data, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_sai3_rx_data, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_sai3_rx_data, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_sai3_rx_data, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_sai3_rx_data, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_sai3_rx_data_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_sai3_rx_data, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_sai3_rx_data, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_sai3_rx_data, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_sai3_rx_data, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_sai3_rx_data, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_sai3_rx_data_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_sai3_rx_data, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_sai3_rx_data, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_sai3_rx_data, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_sai3_rx_data, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_sai3_rx_data, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_sai3_rx_data_P_pinmux_LEN 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_sai3_rx_data_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_sai3_rx_data_P_pin_pue 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_sai3_rx_data_P_pin_pue_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_sai3_rx_data_P_pin_pdrv 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_sai3_rx_data_P_pin_pdrv_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_sai3_rx_data_P_pin_lpsr 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_sai3_rx_data_P_pin_lpsr_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_sai3_rx_data_P_pin_snvs 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_sai3_rx_data_P_pin_snvs_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/pinctrl/pinmux_sai3/group0
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0_PATH "/soc/iomuxc@401f8000/pinctrl/pinmux_sai3/group0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0_FULL_NAME "group0"

/* Node parent (/soc/iomuxc@401f8000/pinctrl/pinmux_sai3) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0_PARENT DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0_ORD 226

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0_REQUIRES_ORDS \
	118, /* /soc/iomuxc@401f8000/pinctrl/pinmux_sai3 */ \
	221, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_28_SAI3_MCLK */ \
	222, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B1_06_SAI3_TX_BCLK */ \
	223, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B1_07_SAI3_TX_SYNC */ \
	224, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B1_08_SAI3_TX_DATA */ \
	225, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B1_11_SAI3_RX_DATA */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0_P_pinmux_IDX_0 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_sai3_tx_bclk
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0_P_pinmux_IDX_0_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_sai3_tx_bclk
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0_P_pinmux_IDX_1 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_sai3_tx_sync
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0_P_pinmux_IDX_1_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_sai3_tx_sync
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0_P_pinmux_IDX_2 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_sai3_tx_data
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0_P_pinmux_IDX_2_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_sai3_tx_data
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0_P_pinmux_IDX_3 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_sai3_rx_data
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0_P_pinmux_IDX_3_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_sai3_rx_data
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0_P_pinmux_IDX_4 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_sai3_mclk
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0_P_pinmux_IDX_4_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_sai3_mclk
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0_P_pinmux_LEN 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0_P_drive_strength "r0-6"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0_P_drive_strength_STRING_UNQUOTED r0-6
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0_P_drive_strength_STRING_TOKEN r0_6
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0_P_drive_strength_STRING_UPPER_TOKEN R0_6
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0_P_drive_strength_ENUM_IDX 6
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0_P_drive_strength_ENUM_TOKEN r0_6
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0_P_drive_strength_ENUM_UPPER_TOKEN R0_6
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0, drive_strength, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0, drive_strength, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0, drive_strength, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0, drive_strength, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0, drive_strength, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0, drive_strength, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0, drive_strength, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0, drive_strength, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0, drive_strength, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0, drive_strength, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0, drive_strength, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0, drive_strength, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0, drive_strength, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0, drive_strength, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0, drive_strength, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0, drive_strength, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0_P_bias_pull_up_value "47k"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0_P_bias_pull_up_value_STRING_UNQUOTED 47k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0_P_bias_pull_up_value_STRING_TOKEN 47k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0_P_bias_pull_up_value_STRING_UPPER_TOKEN 47K
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0_P_bias_pull_up_value_ENUM_IDX 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0_P_bias_pull_up_value_ENUM_TOKEN 47k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0_P_bias_pull_up_value_ENUM_UPPER_TOKEN 47K
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0_P_bias_pull_up_value_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0, bias_pull_up_value, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0, bias_pull_up_value, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0, bias_pull_up_value, 2)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0_P_bias_pull_up_value_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0, bias_pull_up_value, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0, bias_pull_up_value, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0, bias_pull_up_value, 2)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0_P_bias_pull_up_value_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0, bias_pull_up_value, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0, bias_pull_up_value, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0, bias_pull_up_value, 2, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0_P_bias_pull_up_value_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0, bias_pull_up_value, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0, bias_pull_up_value, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0, bias_pull_up_value, 2, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0_P_bias_pull_up_value_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0_P_bias_pull_down_value "100k"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0_P_bias_pull_down_value_STRING_UNQUOTED 100k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0_P_bias_pull_down_value_STRING_TOKEN 100k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0_P_bias_pull_down_value_STRING_UPPER_TOKEN 100K
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0_P_bias_pull_down_value_ENUM_IDX 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0_P_bias_pull_down_value_ENUM_TOKEN 100k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0_P_bias_pull_down_value_ENUM_UPPER_TOKEN 100K
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0_P_bias_pull_down_value_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0, bias_pull_down_value, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0, bias_pull_down_value, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0, bias_pull_down_value, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0, bias_pull_down_value, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0_P_bias_pull_down_value_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0, bias_pull_down_value, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0, bias_pull_down_value, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0, bias_pull_down_value, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0, bias_pull_down_value, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0_P_bias_pull_down_value_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0, bias_pull_down_value, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0, bias_pull_down_value, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0, bias_pull_down_value, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0, bias_pull_down_value, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0_P_bias_pull_down_value_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0, bias_pull_down_value, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0, bias_pull_down_value, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0, bias_pull_down_value, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0, bias_pull_down_value, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0_P_bias_pull_down_value_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0_P_slew_rate "slow"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0_P_slew_rate_STRING_UNQUOTED slow
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0_P_slew_rate_STRING_TOKEN slow
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0_P_slew_rate_STRING_UPPER_TOKEN SLOW
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0_P_slew_rate_ENUM_TOKEN slow
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0_P_slew_rate_ENUM_UPPER_TOKEN SLOW
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0, slew_rate, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0, slew_rate, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0, slew_rate, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0, slew_rate, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0, slew_rate, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0, slew_rate, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0, slew_rate, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0, slew_rate, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0, slew_rate, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0, slew_rate, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0, slew_rate, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0, slew_rate, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0, slew_rate, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0_P_nxp_speed "100-mhz"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0_P_nxp_speed_STRING_UNQUOTED 100-mhz
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0_P_nxp_speed_STRING_TOKEN 100_mhz
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0_P_nxp_speed_STRING_UPPER_TOKEN 100_MHZ
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0_P_nxp_speed_ENUM_IDX 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0_P_nxp_speed_ENUM_TOKEN 100_mhz
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0_P_nxp_speed_ENUM_UPPER_TOKEN 100_MHZ
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0_P_nxp_speed_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0, nxp_speed, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0, nxp_speed, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0, nxp_speed, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0, nxp_speed, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0, nxp_speed, 4) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0, nxp_speed, 5) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0, nxp_speed, 6)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0_P_nxp_speed_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0, nxp_speed, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0, nxp_speed, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0, nxp_speed, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0, nxp_speed, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0, nxp_speed, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0, nxp_speed, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0, nxp_speed, 6)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0_P_nxp_speed_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0, nxp_speed, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0, nxp_speed, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0, nxp_speed, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0, nxp_speed, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0, nxp_speed, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0, nxp_speed, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0, nxp_speed, 6, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0_P_nxp_speed_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0, nxp_speed, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0, nxp_speed, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0, nxp_speed, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0, nxp_speed, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0, nxp_speed, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0, nxp_speed, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0, nxp_speed, 6, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0_P_nxp_speed_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0_P_bias_disable 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0_P_bias_pull_up 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0_P_bias_pull_down 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0_P_drive_open_drain 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0_P_input_enable 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0_P_input_enable_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0_P_input_schmitt_enable 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0_P_input_schmitt_enable_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B0_03_USDHC1_CLK
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_usdhc1_clk
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_usdhc1_clk_PATH "/soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B0_03_USDHC1_CLK"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_usdhc1_clk_FULL_NAME "IOMUXC_GPIO_SD_B0_03_USDHC1_CLK"

/* Node parent (/soc/iomuxc@401f8000) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_usdhc1_clk_PARENT DT_N_S_soc_S_iomuxc_401f8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_usdhc1_clk_CHILD_IDX 106

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_usdhc1_clk_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_usdhc1_clk_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_usdhc1_clk_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_usdhc1_clk_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_usdhc1_clk_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_usdhc1_clk_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_usdhc1_clk_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_usdhc1_clk_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_usdhc1_clk_ORD 227

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_usdhc1_clk_REQUIRES_ORDS \
	13, /* /soc/iomuxc@401f8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_usdhc1_clk_SUPPORTS_ORDS \
	229, /* /soc/iomuxc@401f8000/pinctrl/pinmux_usdhc1/group0 */ \
	242, /* /soc/iomuxc@401f8000/pinctrl/pinmux_usdhc1_fast/group0 */ \
	245, /* /soc/iomuxc@401f8000/pinctrl/pinmux_usdhc1_med/group0 */ \
	248, /* /soc/iomuxc@401f8000/pinctrl/pinmux_usdhc1_slow/group0 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_usdhc1_clk_EXISTS 1
#define DT_N_NODELABEL_iomuxc_gpio_sd_b0_03_usdhc1_clk DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_usdhc1_clk

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_usdhc1_clk_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_usdhc1_clk_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_usdhc1_clk_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_usdhc1_clk_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_usdhc1_clk_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_usdhc1_clk_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_usdhc1_clk_P_pinmux {1075806536 /* 0x401f8148 */, 0 /* 0x0 */, 0 /* 0x0 */, 0 /* 0x0 */, 1075806908 /* 0x401f82bc */}
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_usdhc1_clk_P_pinmux_IDX_0 1075806536
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_usdhc1_clk_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_usdhc1_clk_P_pinmux_IDX_1 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_usdhc1_clk_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_usdhc1_clk_P_pinmux_IDX_2 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_usdhc1_clk_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_usdhc1_clk_P_pinmux_IDX_3 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_usdhc1_clk_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_usdhc1_clk_P_pinmux_IDX_4 1075806908
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_usdhc1_clk_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_usdhc1_clk_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_usdhc1_clk, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_usdhc1_clk, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_usdhc1_clk, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_usdhc1_clk, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_usdhc1_clk, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_usdhc1_clk_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_usdhc1_clk, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_usdhc1_clk, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_usdhc1_clk, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_usdhc1_clk, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_usdhc1_clk, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_usdhc1_clk_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_usdhc1_clk, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_usdhc1_clk, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_usdhc1_clk, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_usdhc1_clk, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_usdhc1_clk, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_usdhc1_clk_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_usdhc1_clk, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_usdhc1_clk, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_usdhc1_clk, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_usdhc1_clk, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_usdhc1_clk, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_usdhc1_clk_P_pinmux_LEN 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_usdhc1_clk_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_usdhc1_clk_P_pin_pue 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_usdhc1_clk_P_pin_pue_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_usdhc1_clk_P_pin_pdrv 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_usdhc1_clk_P_pin_pdrv_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_usdhc1_clk_P_pin_lpsr 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_usdhc1_clk_P_pin_lpsr_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_usdhc1_clk_P_pin_snvs 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_usdhc1_clk_P_pin_snvs_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/pinctrl/pinmux_usdhc1
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_PATH "/soc/iomuxc@401f8000/pinctrl/pinmux_usdhc1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_FULL_NAME "pinmux_usdhc1"

/* Node parent (/soc/iomuxc@401f8000/pinctrl) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_PARENT DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_CHILD_IDX 12

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_ORD 228

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_REQUIRES_ORDS \
	54, /* /soc/iomuxc@401f8000/pinctrl */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_SUPPORTS_ORDS \
	229, /* /soc/iomuxc@401f8000/pinctrl/pinmux_usdhc1/group0 */ \
	236, /* /soc/iomuxc@401f8000/pinctrl/pinmux_usdhc1/group1 */ \
	238, /* /soc/iomuxc@401f8000/pinctrl/pinmux_usdhc1/group2 */ \
	240, /* /soc/iomuxc@401f8000/pinctrl/pinmux_usdhc1/group3 */ \
	314, /* /soc/usdhc@402c0000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_EXISTS 1
#define DT_N_NODELABEL_pinmux_usdhc1 DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /soc/iomuxc@401f8000/pinctrl/pinmux_usdhc1/group0
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0_PATH "/soc/iomuxc@401f8000/pinctrl/pinmux_usdhc1/group0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0_FULL_NAME "group0"

/* Node parent (/soc/iomuxc@401f8000/pinctrl/pinmux_usdhc1) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0_PARENT DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0_ORD 229

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0_REQUIRES_ORDS \
	227, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B0_03_USDHC1_CLK */ \
	228, /* /soc/iomuxc@401f8000/pinctrl/pinmux_usdhc1 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0_P_pinmux_IDX_0 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_usdhc1_clk
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0_P_pinmux_IDX_0_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_usdhc1_clk
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0, pinmux, 0)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0, pinmux, 0)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0, pinmux, 0, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0, pinmux, 0, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0_P_pinmux_LEN 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0_P_drive_strength "r0"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0_P_drive_strength_STRING_UNQUOTED r0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0_P_drive_strength_STRING_TOKEN r0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0_P_drive_strength_STRING_UPPER_TOKEN R0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0_P_drive_strength_ENUM_IDX 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0_P_drive_strength_ENUM_TOKEN r0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0_P_drive_strength_ENUM_UPPER_TOKEN R0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0, drive_strength, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0, drive_strength, 1)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0, drive_strength, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0, drive_strength, 1)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0, drive_strength, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0, drive_strength, 1, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0, drive_strength, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0, drive_strength, 1, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0_P_bias_pull_up_value "47k"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0_P_bias_pull_up_value_STRING_UNQUOTED 47k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0_P_bias_pull_up_value_STRING_TOKEN 47k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0_P_bias_pull_up_value_STRING_UPPER_TOKEN 47K
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0_P_bias_pull_up_value_ENUM_IDX 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0_P_bias_pull_up_value_ENUM_TOKEN 47k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0_P_bias_pull_up_value_ENUM_UPPER_TOKEN 47K
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0_P_bias_pull_up_value_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0, bias_pull_up_value, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0, bias_pull_up_value, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0, bias_pull_up_value, 2)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0_P_bias_pull_up_value_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0, bias_pull_up_value, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0, bias_pull_up_value, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0, bias_pull_up_value, 2)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0_P_bias_pull_up_value_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0, bias_pull_up_value, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0, bias_pull_up_value, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0, bias_pull_up_value, 2, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0_P_bias_pull_up_value_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0, bias_pull_up_value, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0, bias_pull_up_value, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0, bias_pull_up_value, 2, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0_P_bias_pull_up_value_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0_P_bias_pull_down_value "100k"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0_P_bias_pull_down_value_STRING_UNQUOTED 100k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0_P_bias_pull_down_value_STRING_TOKEN 100k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0_P_bias_pull_down_value_STRING_UPPER_TOKEN 100K
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0_P_bias_pull_down_value_ENUM_IDX 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0_P_bias_pull_down_value_ENUM_TOKEN 100k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0_P_bias_pull_down_value_ENUM_UPPER_TOKEN 100K
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0_P_bias_pull_down_value_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0, bias_pull_down_value, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0, bias_pull_down_value, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0, bias_pull_down_value, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0, bias_pull_down_value, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0_P_bias_pull_down_value_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0, bias_pull_down_value, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0, bias_pull_down_value, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0, bias_pull_down_value, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0, bias_pull_down_value, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0_P_bias_pull_down_value_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0, bias_pull_down_value, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0, bias_pull_down_value, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0, bias_pull_down_value, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0, bias_pull_down_value, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0_P_bias_pull_down_value_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0, bias_pull_down_value, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0, bias_pull_down_value, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0, bias_pull_down_value, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0, bias_pull_down_value, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0_P_bias_pull_down_value_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0_P_slew_rate "fast"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0_P_slew_rate_STRING_UNQUOTED fast
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0_P_slew_rate_STRING_TOKEN fast
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0_P_slew_rate_STRING_UPPER_TOKEN FAST
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0_P_slew_rate_ENUM_IDX 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0_P_slew_rate_ENUM_TOKEN fast
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0_P_slew_rate_ENUM_UPPER_TOKEN FAST
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0, slew_rate, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0, slew_rate, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0, slew_rate, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0, slew_rate, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0, slew_rate, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0, slew_rate, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0, slew_rate, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0, slew_rate, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0, slew_rate, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0, slew_rate, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0, slew_rate, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0, slew_rate, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0, slew_rate, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0_P_nxp_speed "100-mhz"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0_P_nxp_speed_STRING_UNQUOTED 100-mhz
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0_P_nxp_speed_STRING_TOKEN 100_mhz
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0_P_nxp_speed_STRING_UPPER_TOKEN 100_MHZ
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0_P_nxp_speed_ENUM_IDX 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0_P_nxp_speed_ENUM_TOKEN 100_mhz
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0_P_nxp_speed_ENUM_UPPER_TOKEN 100_MHZ
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0_P_nxp_speed_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0, nxp_speed, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0, nxp_speed, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0, nxp_speed, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0, nxp_speed, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0, nxp_speed, 4) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0, nxp_speed, 5) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0, nxp_speed, 6)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0_P_nxp_speed_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0, nxp_speed, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0, nxp_speed, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0, nxp_speed, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0, nxp_speed, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0, nxp_speed, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0, nxp_speed, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0, nxp_speed, 6)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0_P_nxp_speed_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0, nxp_speed, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0, nxp_speed, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0, nxp_speed, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0, nxp_speed, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0, nxp_speed, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0, nxp_speed, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0, nxp_speed, 6, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0_P_nxp_speed_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0, nxp_speed, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0, nxp_speed, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0, nxp_speed, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0, nxp_speed, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0, nxp_speed, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0, nxp_speed, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0, nxp_speed, 6, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0_P_nxp_speed_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0_P_bias_disable 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0_P_bias_pull_up 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0_P_bias_pull_down 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0_P_drive_open_drain 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0_P_input_enable 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0_P_input_enable_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0_P_input_schmitt_enable 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0_P_input_schmitt_enable_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B0_00_USDHC1_DATA2
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_usdhc1_data2
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_usdhc1_data2_PATH "/soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B0_00_USDHC1_DATA2"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_usdhc1_data2_FULL_NAME "IOMUXC_GPIO_SD_B0_00_USDHC1_DATA2"

/* Node parent (/soc/iomuxc@401f8000) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_usdhc1_data2_PARENT DT_N_S_soc_S_iomuxc_401f8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_usdhc1_data2_CHILD_IDX 100

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_usdhc1_data2_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_usdhc1_data2_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_usdhc1_data2_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_usdhc1_data2_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_usdhc1_data2_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_usdhc1_data2_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_usdhc1_data2_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_usdhc1_data2_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_usdhc1_data2_ORD 230

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_usdhc1_data2_REQUIRES_ORDS \
	13, /* /soc/iomuxc@401f8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_usdhc1_data2_SUPPORTS_ORDS \
	236, /* /soc/iomuxc@401f8000/pinctrl/pinmux_usdhc1/group1 */ \
	243, /* /soc/iomuxc@401f8000/pinctrl/pinmux_usdhc1_fast/group1 */ \
	246, /* /soc/iomuxc@401f8000/pinctrl/pinmux_usdhc1_med/group1 */ \
	249, /* /soc/iomuxc@401f8000/pinctrl/pinmux_usdhc1_slow/group1 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_usdhc1_data2_EXISTS 1
#define DT_N_NODELABEL_iomuxc_gpio_sd_b0_00_usdhc1_data2 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_usdhc1_data2

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_usdhc1_data2_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_usdhc1_data2_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_usdhc1_data2_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_usdhc1_data2_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_usdhc1_data2_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_usdhc1_data2_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_usdhc1_data2_P_pinmux {1075806524 /* 0x401f813c */, 0 /* 0x0 */, 0 /* 0x0 */, 0 /* 0x0 */, 1075806896 /* 0x401f82b0 */}
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_usdhc1_data2_P_pinmux_IDX_0 1075806524
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_usdhc1_data2_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_usdhc1_data2_P_pinmux_IDX_1 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_usdhc1_data2_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_usdhc1_data2_P_pinmux_IDX_2 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_usdhc1_data2_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_usdhc1_data2_P_pinmux_IDX_3 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_usdhc1_data2_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_usdhc1_data2_P_pinmux_IDX_4 1075806896
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_usdhc1_data2_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_usdhc1_data2_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_usdhc1_data2, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_usdhc1_data2, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_usdhc1_data2, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_usdhc1_data2, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_usdhc1_data2, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_usdhc1_data2_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_usdhc1_data2, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_usdhc1_data2, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_usdhc1_data2, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_usdhc1_data2, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_usdhc1_data2, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_usdhc1_data2_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_usdhc1_data2, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_usdhc1_data2, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_usdhc1_data2, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_usdhc1_data2, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_usdhc1_data2, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_usdhc1_data2_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_usdhc1_data2, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_usdhc1_data2, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_usdhc1_data2, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_usdhc1_data2, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_usdhc1_data2, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_usdhc1_data2_P_pinmux_LEN 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_usdhc1_data2_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_usdhc1_data2_P_pin_pue 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_usdhc1_data2_P_pin_pue_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_usdhc1_data2_P_pin_pdrv 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_usdhc1_data2_P_pin_pdrv_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_usdhc1_data2_P_pin_lpsr 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_usdhc1_data2_P_pin_lpsr_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_usdhc1_data2_P_pin_snvs 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_usdhc1_data2_P_pin_snvs_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B0_01_USDHC1_DATA3
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_usdhc1_data3
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_usdhc1_data3_PATH "/soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B0_01_USDHC1_DATA3"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_usdhc1_data3_FULL_NAME "IOMUXC_GPIO_SD_B0_01_USDHC1_DATA3"

/* Node parent (/soc/iomuxc@401f8000) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_usdhc1_data3_PARENT DT_N_S_soc_S_iomuxc_401f8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_usdhc1_data3_CHILD_IDX 102

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_usdhc1_data3_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_usdhc1_data3_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_usdhc1_data3_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_usdhc1_data3_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_usdhc1_data3_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_usdhc1_data3_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_usdhc1_data3_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_usdhc1_data3_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_usdhc1_data3_ORD 231

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_usdhc1_data3_REQUIRES_ORDS \
	13, /* /soc/iomuxc@401f8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_usdhc1_data3_SUPPORTS_ORDS \
	236, /* /soc/iomuxc@401f8000/pinctrl/pinmux_usdhc1/group1 */ \
	243, /* /soc/iomuxc@401f8000/pinctrl/pinmux_usdhc1_fast/group1 */ \
	246, /* /soc/iomuxc@401f8000/pinctrl/pinmux_usdhc1_med/group1 */ \
	249, /* /soc/iomuxc@401f8000/pinctrl/pinmux_usdhc1_slow/group1 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_usdhc1_data3_EXISTS 1
#define DT_N_NODELABEL_iomuxc_gpio_sd_b0_01_usdhc1_data3 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_usdhc1_data3

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_usdhc1_data3_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_usdhc1_data3_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_usdhc1_data3_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_usdhc1_data3_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_usdhc1_data3_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_usdhc1_data3_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_usdhc1_data3_P_pinmux {1075806528 /* 0x401f8140 */, 0 /* 0x0 */, 0 /* 0x0 */, 0 /* 0x0 */, 1075806900 /* 0x401f82b4 */}
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_usdhc1_data3_P_pinmux_IDX_0 1075806528
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_usdhc1_data3_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_usdhc1_data3_P_pinmux_IDX_1 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_usdhc1_data3_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_usdhc1_data3_P_pinmux_IDX_2 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_usdhc1_data3_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_usdhc1_data3_P_pinmux_IDX_3 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_usdhc1_data3_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_usdhc1_data3_P_pinmux_IDX_4 1075806900
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_usdhc1_data3_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_usdhc1_data3_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_usdhc1_data3, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_usdhc1_data3, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_usdhc1_data3, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_usdhc1_data3, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_usdhc1_data3, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_usdhc1_data3_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_usdhc1_data3, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_usdhc1_data3, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_usdhc1_data3, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_usdhc1_data3, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_usdhc1_data3, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_usdhc1_data3_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_usdhc1_data3, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_usdhc1_data3, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_usdhc1_data3, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_usdhc1_data3, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_usdhc1_data3, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_usdhc1_data3_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_usdhc1_data3, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_usdhc1_data3, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_usdhc1_data3, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_usdhc1_data3, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_usdhc1_data3, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_usdhc1_data3_P_pinmux_LEN 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_usdhc1_data3_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_usdhc1_data3_P_pin_pue 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_usdhc1_data3_P_pin_pue_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_usdhc1_data3_P_pin_pdrv 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_usdhc1_data3_P_pin_pdrv_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_usdhc1_data3_P_pin_lpsr 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_usdhc1_data3_P_pin_lpsr_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_usdhc1_data3_P_pin_snvs 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_usdhc1_data3_P_pin_snvs_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B0_02_USDHC1_CMD
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_usdhc1_cmd
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_usdhc1_cmd_PATH "/soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B0_02_USDHC1_CMD"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_usdhc1_cmd_FULL_NAME "IOMUXC_GPIO_SD_B0_02_USDHC1_CMD"

/* Node parent (/soc/iomuxc@401f8000) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_usdhc1_cmd_PARENT DT_N_S_soc_S_iomuxc_401f8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_usdhc1_cmd_CHILD_IDX 104

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_usdhc1_cmd_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_usdhc1_cmd_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_usdhc1_cmd_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_usdhc1_cmd_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_usdhc1_cmd_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_usdhc1_cmd_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_usdhc1_cmd_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_usdhc1_cmd_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_usdhc1_cmd_ORD 232

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_usdhc1_cmd_REQUIRES_ORDS \
	13, /* /soc/iomuxc@401f8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_usdhc1_cmd_SUPPORTS_ORDS \
	236, /* /soc/iomuxc@401f8000/pinctrl/pinmux_usdhc1/group1 */ \
	243, /* /soc/iomuxc@401f8000/pinctrl/pinmux_usdhc1_fast/group1 */ \
	246, /* /soc/iomuxc@401f8000/pinctrl/pinmux_usdhc1_med/group1 */ \
	249, /* /soc/iomuxc@401f8000/pinctrl/pinmux_usdhc1_slow/group1 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_usdhc1_cmd_EXISTS 1
#define DT_N_NODELABEL_iomuxc_gpio_sd_b0_02_usdhc1_cmd DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_usdhc1_cmd

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_usdhc1_cmd_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_usdhc1_cmd_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_usdhc1_cmd_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_usdhc1_cmd_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_usdhc1_cmd_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_usdhc1_cmd_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_usdhc1_cmd_P_pinmux {1075806532 /* 0x401f8144 */, 0 /* 0x0 */, 0 /* 0x0 */, 0 /* 0x0 */, 1075806904 /* 0x401f82b8 */}
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_usdhc1_cmd_P_pinmux_IDX_0 1075806532
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_usdhc1_cmd_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_usdhc1_cmd_P_pinmux_IDX_1 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_usdhc1_cmd_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_usdhc1_cmd_P_pinmux_IDX_2 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_usdhc1_cmd_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_usdhc1_cmd_P_pinmux_IDX_3 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_usdhc1_cmd_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_usdhc1_cmd_P_pinmux_IDX_4 1075806904
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_usdhc1_cmd_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_usdhc1_cmd_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_usdhc1_cmd, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_usdhc1_cmd, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_usdhc1_cmd, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_usdhc1_cmd, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_usdhc1_cmd, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_usdhc1_cmd_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_usdhc1_cmd, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_usdhc1_cmd, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_usdhc1_cmd, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_usdhc1_cmd, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_usdhc1_cmd, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_usdhc1_cmd_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_usdhc1_cmd, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_usdhc1_cmd, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_usdhc1_cmd, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_usdhc1_cmd, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_usdhc1_cmd, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_usdhc1_cmd_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_usdhc1_cmd, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_usdhc1_cmd, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_usdhc1_cmd, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_usdhc1_cmd, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_usdhc1_cmd, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_usdhc1_cmd_P_pinmux_LEN 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_usdhc1_cmd_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_usdhc1_cmd_P_pin_pue 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_usdhc1_cmd_P_pin_pue_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_usdhc1_cmd_P_pin_pdrv 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_usdhc1_cmd_P_pin_pdrv_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_usdhc1_cmd_P_pin_lpsr 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_usdhc1_cmd_P_pin_lpsr_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_usdhc1_cmd_P_pin_snvs 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_usdhc1_cmd_P_pin_snvs_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B0_04_USDHC1_DATA0
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_usdhc1_data0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_usdhc1_data0_PATH "/soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B0_04_USDHC1_DATA0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_usdhc1_data0_FULL_NAME "IOMUXC_GPIO_SD_B0_04_USDHC1_DATA0"

/* Node parent (/soc/iomuxc@401f8000) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_usdhc1_data0_PARENT DT_N_S_soc_S_iomuxc_401f8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_usdhc1_data0_CHILD_IDX 108

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_usdhc1_data0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_usdhc1_data0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_usdhc1_data0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_usdhc1_data0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_usdhc1_data0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_usdhc1_data0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_usdhc1_data0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_usdhc1_data0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_usdhc1_data0_ORD 233

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_usdhc1_data0_REQUIRES_ORDS \
	13, /* /soc/iomuxc@401f8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_usdhc1_data0_SUPPORTS_ORDS \
	236, /* /soc/iomuxc@401f8000/pinctrl/pinmux_usdhc1/group1 */ \
	243, /* /soc/iomuxc@401f8000/pinctrl/pinmux_usdhc1_fast/group1 */ \
	246, /* /soc/iomuxc@401f8000/pinctrl/pinmux_usdhc1_med/group1 */ \
	249, /* /soc/iomuxc@401f8000/pinctrl/pinmux_usdhc1_slow/group1 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_usdhc1_data0_EXISTS 1
#define DT_N_NODELABEL_iomuxc_gpio_sd_b0_04_usdhc1_data0 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_usdhc1_data0

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_usdhc1_data0_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_usdhc1_data0_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_usdhc1_data0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_usdhc1_data0_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_usdhc1_data0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_usdhc1_data0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_usdhc1_data0_P_pinmux {1075806540 /* 0x401f814c */, 0 /* 0x0 */, 0 /* 0x0 */, 0 /* 0x0 */, 1075806912 /* 0x401f82c0 */}
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_usdhc1_data0_P_pinmux_IDX_0 1075806540
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_usdhc1_data0_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_usdhc1_data0_P_pinmux_IDX_1 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_usdhc1_data0_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_usdhc1_data0_P_pinmux_IDX_2 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_usdhc1_data0_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_usdhc1_data0_P_pinmux_IDX_3 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_usdhc1_data0_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_usdhc1_data0_P_pinmux_IDX_4 1075806912
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_usdhc1_data0_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_usdhc1_data0_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_usdhc1_data0, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_usdhc1_data0, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_usdhc1_data0, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_usdhc1_data0, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_usdhc1_data0, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_usdhc1_data0_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_usdhc1_data0, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_usdhc1_data0, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_usdhc1_data0, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_usdhc1_data0, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_usdhc1_data0, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_usdhc1_data0_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_usdhc1_data0, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_usdhc1_data0, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_usdhc1_data0, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_usdhc1_data0, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_usdhc1_data0, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_usdhc1_data0_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_usdhc1_data0, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_usdhc1_data0, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_usdhc1_data0, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_usdhc1_data0, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_usdhc1_data0, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_usdhc1_data0_P_pinmux_LEN 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_usdhc1_data0_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_usdhc1_data0_P_pin_pue 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_usdhc1_data0_P_pin_pue_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_usdhc1_data0_P_pin_pdrv 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_usdhc1_data0_P_pin_pdrv_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_usdhc1_data0_P_pin_lpsr 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_usdhc1_data0_P_pin_lpsr_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_usdhc1_data0_P_pin_snvs 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_usdhc1_data0_P_pin_snvs_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B0_05_USDHC1_DATA1
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_usdhc1_data1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_usdhc1_data1_PATH "/soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B0_05_USDHC1_DATA1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_usdhc1_data1_FULL_NAME "IOMUXC_GPIO_SD_B0_05_USDHC1_DATA1"

/* Node parent (/soc/iomuxc@401f8000) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_usdhc1_data1_PARENT DT_N_S_soc_S_iomuxc_401f8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_usdhc1_data1_CHILD_IDX 110

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_usdhc1_data1_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_usdhc1_data1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_usdhc1_data1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_usdhc1_data1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_usdhc1_data1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_usdhc1_data1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_usdhc1_data1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_usdhc1_data1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_usdhc1_data1_ORD 234

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_usdhc1_data1_REQUIRES_ORDS \
	13, /* /soc/iomuxc@401f8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_usdhc1_data1_SUPPORTS_ORDS \
	236, /* /soc/iomuxc@401f8000/pinctrl/pinmux_usdhc1/group1 */ \
	243, /* /soc/iomuxc@401f8000/pinctrl/pinmux_usdhc1_fast/group1 */ \
	246, /* /soc/iomuxc@401f8000/pinctrl/pinmux_usdhc1_med/group1 */ \
	249, /* /soc/iomuxc@401f8000/pinctrl/pinmux_usdhc1_slow/group1 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_usdhc1_data1_EXISTS 1
#define DT_N_NODELABEL_iomuxc_gpio_sd_b0_05_usdhc1_data1 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_usdhc1_data1

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_usdhc1_data1_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_usdhc1_data1_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_usdhc1_data1_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_usdhc1_data1_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_usdhc1_data1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_usdhc1_data1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_usdhc1_data1_P_pinmux {1075806544 /* 0x401f8150 */, 0 /* 0x0 */, 0 /* 0x0 */, 0 /* 0x0 */, 1075806916 /* 0x401f82c4 */}
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_usdhc1_data1_P_pinmux_IDX_0 1075806544
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_usdhc1_data1_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_usdhc1_data1_P_pinmux_IDX_1 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_usdhc1_data1_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_usdhc1_data1_P_pinmux_IDX_2 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_usdhc1_data1_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_usdhc1_data1_P_pinmux_IDX_3 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_usdhc1_data1_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_usdhc1_data1_P_pinmux_IDX_4 1075806916
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_usdhc1_data1_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_usdhc1_data1_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_usdhc1_data1, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_usdhc1_data1, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_usdhc1_data1, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_usdhc1_data1, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_usdhc1_data1, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_usdhc1_data1_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_usdhc1_data1, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_usdhc1_data1, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_usdhc1_data1, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_usdhc1_data1, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_usdhc1_data1, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_usdhc1_data1_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_usdhc1_data1, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_usdhc1_data1, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_usdhc1_data1, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_usdhc1_data1, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_usdhc1_data1, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_usdhc1_data1_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_usdhc1_data1, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_usdhc1_data1, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_usdhc1_data1, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_usdhc1_data1, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_usdhc1_data1, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_usdhc1_data1_P_pinmux_LEN 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_usdhc1_data1_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_usdhc1_data1_P_pin_pue 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_usdhc1_data1_P_pin_pue_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_usdhc1_data1_P_pin_pdrv 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_usdhc1_data1_P_pin_pdrv_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_usdhc1_data1_P_pin_lpsr 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_usdhc1_data1_P_pin_lpsr_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_usdhc1_data1_P_pin_snvs 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_usdhc1_data1_P_pin_snvs_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B0_06_GPIO3_IO19
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_06_gpio3_io19
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_06_gpio3_io19_PATH "/soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B0_06_GPIO3_IO19"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_06_gpio3_io19_FULL_NAME "IOMUXC_GPIO_SD_B0_06_GPIO3_IO19"

/* Node parent (/soc/iomuxc@401f8000) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_06_gpio3_io19_PARENT DT_N_S_soc_S_iomuxc_401f8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_06_gpio3_io19_CHILD_IDX 111

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_06_gpio3_io19_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_06_gpio3_io19_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_06_gpio3_io19_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_06_gpio3_io19_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_06_gpio3_io19_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_06_gpio3_io19_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_06_gpio3_io19_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_06_gpio3_io19_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_06_gpio3_io19_ORD 235

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_06_gpio3_io19_REQUIRES_ORDS \
	13, /* /soc/iomuxc@401f8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_06_gpio3_io19_SUPPORTS_ORDS \
	236, /* /soc/iomuxc@401f8000/pinctrl/pinmux_usdhc1/group1 */ \
	313, /* /soc/gpio@401c0000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_06_gpio3_io19_EXISTS 1
#define DT_N_NODELABEL_iomuxc_gpio_sd_b0_06_gpio3_io19 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_06_gpio3_io19

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_06_gpio3_io19_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_06_gpio3_io19_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_06_gpio3_io19_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_06_gpio3_io19_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_06_gpio3_io19_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_06_gpio3_io19_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_06_gpio3_io19_P_pinmux {1075806548 /* 0x401f8154 */, 5 /* 0x5 */, 0 /* 0x0 */, 0 /* 0x0 */, 1075806920 /* 0x401f82c8 */}
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_06_gpio3_io19_P_pinmux_IDX_0 1075806548
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_06_gpio3_io19_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_06_gpio3_io19_P_pinmux_IDX_1 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_06_gpio3_io19_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_06_gpio3_io19_P_pinmux_IDX_2 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_06_gpio3_io19_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_06_gpio3_io19_P_pinmux_IDX_3 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_06_gpio3_io19_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_06_gpio3_io19_P_pinmux_IDX_4 1075806920
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_06_gpio3_io19_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_06_gpio3_io19_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_06_gpio3_io19, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_06_gpio3_io19, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_06_gpio3_io19, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_06_gpio3_io19, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_06_gpio3_io19, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_06_gpio3_io19_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_06_gpio3_io19, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_06_gpio3_io19, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_06_gpio3_io19, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_06_gpio3_io19, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_06_gpio3_io19, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_06_gpio3_io19_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_06_gpio3_io19, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_06_gpio3_io19, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_06_gpio3_io19, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_06_gpio3_io19, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_06_gpio3_io19, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_06_gpio3_io19_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_06_gpio3_io19, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_06_gpio3_io19, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_06_gpio3_io19, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_06_gpio3_io19, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_06_gpio3_io19, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_06_gpio3_io19_P_pinmux_LEN 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_06_gpio3_io19_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_06_gpio3_io19_P_pin_pue 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_06_gpio3_io19_P_pin_pue_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_06_gpio3_io19_P_pin_pdrv 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_06_gpio3_io19_P_pin_pdrv_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_06_gpio3_io19_P_pin_lpsr 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_06_gpio3_io19_P_pin_lpsr_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_06_gpio3_io19_P_pin_snvs 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_06_gpio3_io19_P_pin_snvs_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/pinctrl/pinmux_usdhc1/group1
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1_PATH "/soc/iomuxc@401f8000/pinctrl/pinmux_usdhc1/group1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1_FULL_NAME "group1"

/* Node parent (/soc/iomuxc@401f8000/pinctrl/pinmux_usdhc1) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1_PARENT DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1_CHILD_IDX 1

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1_ORD 236

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1_REQUIRES_ORDS \
	228, /* /soc/iomuxc@401f8000/pinctrl/pinmux_usdhc1 */ \
	230, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B0_00_USDHC1_DATA2 */ \
	231, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B0_01_USDHC1_DATA3 */ \
	232, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B0_02_USDHC1_CMD */ \
	233, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B0_04_USDHC1_DATA0 */ \
	234, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B0_05_USDHC1_DATA1 */ \
	235, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B0_06_GPIO3_IO19 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1_P_pinmux_IDX_0 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_usdhc1_cmd
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1_P_pinmux_IDX_0_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_usdhc1_cmd
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1_P_pinmux_IDX_1 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_usdhc1_data0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1_P_pinmux_IDX_1_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_usdhc1_data0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1_P_pinmux_IDX_2 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_usdhc1_data1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1_P_pinmux_IDX_2_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_usdhc1_data1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1_P_pinmux_IDX_3 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_usdhc1_data2
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1_P_pinmux_IDX_3_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_usdhc1_data2
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1_P_pinmux_IDX_4 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_usdhc1_data3
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1_P_pinmux_IDX_4_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_usdhc1_data3
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1_P_pinmux_IDX_5 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_06_gpio3_io19
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1_P_pinmux_IDX_5_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_06_gpio3_io19
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1_P_pinmux_IDX_5_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1, pinmux, 4) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1, pinmux, 5)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1, pinmux, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1, pinmux, 5)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1, pinmux, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1, pinmux, 5, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1, pinmux, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1, pinmux, 5, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1_P_pinmux_LEN 6
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1_P_drive_strength "r0"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1_P_drive_strength_STRING_UNQUOTED r0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1_P_drive_strength_STRING_TOKEN r0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1_P_drive_strength_STRING_UPPER_TOKEN R0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1_P_drive_strength_ENUM_IDX 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1_P_drive_strength_ENUM_TOKEN r0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1_P_drive_strength_ENUM_UPPER_TOKEN R0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1, drive_strength, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1, drive_strength, 1)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1, drive_strength, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1, drive_strength, 1)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1, drive_strength, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1, drive_strength, 1, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1, drive_strength, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1, drive_strength, 1, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1_P_bias_pull_up_value "47k"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1_P_bias_pull_up_value_STRING_UNQUOTED 47k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1_P_bias_pull_up_value_STRING_TOKEN 47k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1_P_bias_pull_up_value_STRING_UPPER_TOKEN 47K
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1_P_bias_pull_up_value_ENUM_IDX 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1_P_bias_pull_up_value_ENUM_TOKEN 47k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1_P_bias_pull_up_value_ENUM_UPPER_TOKEN 47K
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1_P_bias_pull_up_value_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1, bias_pull_up_value, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1, bias_pull_up_value, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1, bias_pull_up_value, 2)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1_P_bias_pull_up_value_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1, bias_pull_up_value, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1, bias_pull_up_value, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1, bias_pull_up_value, 2)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1_P_bias_pull_up_value_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1, bias_pull_up_value, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1, bias_pull_up_value, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1, bias_pull_up_value, 2, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1_P_bias_pull_up_value_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1, bias_pull_up_value, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1, bias_pull_up_value, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1, bias_pull_up_value, 2, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1_P_bias_pull_up_value_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1_P_bias_pull_down_value "100k"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1_P_bias_pull_down_value_STRING_UNQUOTED 100k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1_P_bias_pull_down_value_STRING_TOKEN 100k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1_P_bias_pull_down_value_STRING_UPPER_TOKEN 100K
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1_P_bias_pull_down_value_ENUM_IDX 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1_P_bias_pull_down_value_ENUM_TOKEN 100k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1_P_bias_pull_down_value_ENUM_UPPER_TOKEN 100K
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1_P_bias_pull_down_value_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1, bias_pull_down_value, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1, bias_pull_down_value, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1, bias_pull_down_value, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1, bias_pull_down_value, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1_P_bias_pull_down_value_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1, bias_pull_down_value, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1, bias_pull_down_value, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1, bias_pull_down_value, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1, bias_pull_down_value, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1_P_bias_pull_down_value_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1, bias_pull_down_value, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1, bias_pull_down_value, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1, bias_pull_down_value, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1, bias_pull_down_value, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1_P_bias_pull_down_value_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1, bias_pull_down_value, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1, bias_pull_down_value, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1, bias_pull_down_value, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1, bias_pull_down_value, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1_P_bias_pull_down_value_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1_P_slew_rate "fast"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1_P_slew_rate_STRING_UNQUOTED fast
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1_P_slew_rate_STRING_TOKEN fast
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1_P_slew_rate_STRING_UPPER_TOKEN FAST
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1_P_slew_rate_ENUM_IDX 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1_P_slew_rate_ENUM_TOKEN fast
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1_P_slew_rate_ENUM_UPPER_TOKEN FAST
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1, slew_rate, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1, slew_rate, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1, slew_rate, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1, slew_rate, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1, slew_rate, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1, slew_rate, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1, slew_rate, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1, slew_rate, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1, slew_rate, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1, slew_rate, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1, slew_rate, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1, slew_rate, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1, slew_rate, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1_P_nxp_speed "100-mhz"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1_P_nxp_speed_STRING_UNQUOTED 100-mhz
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1_P_nxp_speed_STRING_TOKEN 100_mhz
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1_P_nxp_speed_STRING_UPPER_TOKEN 100_MHZ
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1_P_nxp_speed_ENUM_IDX 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1_P_nxp_speed_ENUM_TOKEN 100_mhz
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1_P_nxp_speed_ENUM_UPPER_TOKEN 100_MHZ
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1_P_nxp_speed_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1, nxp_speed, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1, nxp_speed, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1, nxp_speed, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1, nxp_speed, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1, nxp_speed, 4) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1, nxp_speed, 5) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1, nxp_speed, 6)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1_P_nxp_speed_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1, nxp_speed, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1, nxp_speed, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1, nxp_speed, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1, nxp_speed, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1, nxp_speed, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1, nxp_speed, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1, nxp_speed, 6)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1_P_nxp_speed_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1, nxp_speed, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1, nxp_speed, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1, nxp_speed, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1, nxp_speed, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1, nxp_speed, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1, nxp_speed, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1, nxp_speed, 6, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1_P_nxp_speed_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1, nxp_speed, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1, nxp_speed, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1, nxp_speed, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1, nxp_speed, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1, nxp_speed, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1, nxp_speed, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1, nxp_speed, 6, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1_P_nxp_speed_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1_P_bias_disable 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1_P_bias_pull_up 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1_P_bias_pull_down 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1_P_drive_open_drain 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1_P_input_enable 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1_P_input_enable_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1_P_input_schmitt_enable 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1_P_input_schmitt_enable_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B1_07_USDHC1_VSELECT
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_usdhc1_vselect
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_usdhc1_vselect_PATH "/soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B1_07_USDHC1_VSELECT"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_usdhc1_vselect_FULL_NAME "IOMUXC_GPIO_AD_B1_07_USDHC1_VSELECT"

/* Node parent (/soc/iomuxc@401f8000) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_usdhc1_vselect_PARENT DT_N_S_soc_S_iomuxc_401f8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_usdhc1_vselect_CHILD_IDX 39

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_usdhc1_vselect_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_usdhc1_vselect_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_usdhc1_vselect_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_usdhc1_vselect_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_usdhc1_vselect_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_usdhc1_vselect_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_usdhc1_vselect_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_usdhc1_vselect_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_usdhc1_vselect_ORD 237

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_usdhc1_vselect_REQUIRES_ORDS \
	13, /* /soc/iomuxc@401f8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_usdhc1_vselect_SUPPORTS_ORDS \
	238, /* /soc/iomuxc@401f8000/pinctrl/pinmux_usdhc1/group2 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_usdhc1_vselect_EXISTS 1
#define DT_N_NODELABEL_iomuxc_gpio_ad_b1_07_usdhc1_vselect DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_usdhc1_vselect

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_usdhc1_vselect_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_usdhc1_vselect_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_usdhc1_vselect_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_usdhc1_vselect_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_usdhc1_vselect_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_usdhc1_vselect_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_usdhc1_vselect_P_pinmux {1075806488 /* 0x401f8118 */, 0 /* 0x0 */, 0 /* 0x0 */, 0 /* 0x0 */, 1075806860 /* 0x401f828c */}
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_usdhc1_vselect_P_pinmux_IDX_0 1075806488
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_usdhc1_vselect_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_usdhc1_vselect_P_pinmux_IDX_1 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_usdhc1_vselect_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_usdhc1_vselect_P_pinmux_IDX_2 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_usdhc1_vselect_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_usdhc1_vselect_P_pinmux_IDX_3 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_usdhc1_vselect_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_usdhc1_vselect_P_pinmux_IDX_4 1075806860
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_usdhc1_vselect_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_usdhc1_vselect_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_usdhc1_vselect, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_usdhc1_vselect, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_usdhc1_vselect, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_usdhc1_vselect, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_usdhc1_vselect, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_usdhc1_vselect_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_usdhc1_vselect, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_usdhc1_vselect, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_usdhc1_vselect, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_usdhc1_vselect, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_usdhc1_vselect, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_usdhc1_vselect_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_usdhc1_vselect, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_usdhc1_vselect, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_usdhc1_vselect, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_usdhc1_vselect, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_usdhc1_vselect, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_usdhc1_vselect_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_usdhc1_vselect, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_usdhc1_vselect, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_usdhc1_vselect, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_usdhc1_vselect, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_usdhc1_vselect, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_usdhc1_vselect_P_pinmux_LEN 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_usdhc1_vselect_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_usdhc1_vselect_P_pin_pue 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_usdhc1_vselect_P_pin_pue_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_usdhc1_vselect_P_pin_pdrv 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_usdhc1_vselect_P_pin_pdrv_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_usdhc1_vselect_P_pin_lpsr 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_usdhc1_vselect_P_pin_lpsr_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_usdhc1_vselect_P_pin_snvs 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_usdhc1_vselect_P_pin_snvs_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/pinctrl/pinmux_usdhc1/group2
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2_PATH "/soc/iomuxc@401f8000/pinctrl/pinmux_usdhc1/group2"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2_FULL_NAME "group2"

/* Node parent (/soc/iomuxc@401f8000/pinctrl/pinmux_usdhc1) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2_PARENT DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2_CHILD_IDX 2

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2_ORD 238

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2_REQUIRES_ORDS \
	228, /* /soc/iomuxc@401f8000/pinctrl/pinmux_usdhc1 */ \
	237, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B1_07_USDHC1_VSELECT */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2_P_pinmux_IDX_0 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_usdhc1_vselect
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2_P_pinmux_IDX_0_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_usdhc1_vselect
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2, pinmux, 0)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2, pinmux, 0)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2, pinmux, 0, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2, pinmux, 0, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2_P_pinmux_LEN 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2_P_drive_strength "r0-4"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2_P_drive_strength_STRING_UNQUOTED r0-4
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2_P_drive_strength_STRING_TOKEN r0_4
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2_P_drive_strength_STRING_UPPER_TOKEN R0_4
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2_P_drive_strength_ENUM_IDX 4
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2_P_drive_strength_ENUM_TOKEN r0_4
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2_P_drive_strength_ENUM_UPPER_TOKEN R0_4
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2, drive_strength, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2, drive_strength, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2, drive_strength, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2, drive_strength, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2, drive_strength, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2, drive_strength, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2, drive_strength, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2, drive_strength, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2, drive_strength, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2, drive_strength, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2, drive_strength, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2, drive_strength, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2, drive_strength, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2, drive_strength, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2, drive_strength, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2, drive_strength, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2_P_bias_pull_up_value "47k"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2_P_bias_pull_up_value_STRING_UNQUOTED 47k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2_P_bias_pull_up_value_STRING_TOKEN 47k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2_P_bias_pull_up_value_STRING_UPPER_TOKEN 47K
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2_P_bias_pull_up_value_ENUM_IDX 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2_P_bias_pull_up_value_ENUM_TOKEN 47k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2_P_bias_pull_up_value_ENUM_UPPER_TOKEN 47K
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2_P_bias_pull_up_value_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2, bias_pull_up_value, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2, bias_pull_up_value, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2, bias_pull_up_value, 2)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2_P_bias_pull_up_value_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2, bias_pull_up_value, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2, bias_pull_up_value, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2, bias_pull_up_value, 2)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2_P_bias_pull_up_value_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2, bias_pull_up_value, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2, bias_pull_up_value, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2, bias_pull_up_value, 2, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2_P_bias_pull_up_value_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2, bias_pull_up_value, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2, bias_pull_up_value, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2, bias_pull_up_value, 2, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2_P_bias_pull_up_value_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2_P_bias_pull_down_value "100k"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2_P_bias_pull_down_value_STRING_UNQUOTED 100k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2_P_bias_pull_down_value_STRING_TOKEN 100k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2_P_bias_pull_down_value_STRING_UPPER_TOKEN 100K
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2_P_bias_pull_down_value_ENUM_IDX 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2_P_bias_pull_down_value_ENUM_TOKEN 100k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2_P_bias_pull_down_value_ENUM_UPPER_TOKEN 100K
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2_P_bias_pull_down_value_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2, bias_pull_down_value, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2, bias_pull_down_value, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2, bias_pull_down_value, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2, bias_pull_down_value, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2_P_bias_pull_down_value_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2, bias_pull_down_value, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2, bias_pull_down_value, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2, bias_pull_down_value, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2, bias_pull_down_value, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2_P_bias_pull_down_value_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2, bias_pull_down_value, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2, bias_pull_down_value, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2, bias_pull_down_value, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2, bias_pull_down_value, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2_P_bias_pull_down_value_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2, bias_pull_down_value, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2, bias_pull_down_value, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2, bias_pull_down_value, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2, bias_pull_down_value, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2_P_bias_pull_down_value_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2_P_slew_rate "fast"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2_P_slew_rate_STRING_UNQUOTED fast
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2_P_slew_rate_STRING_TOKEN fast
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2_P_slew_rate_STRING_UPPER_TOKEN FAST
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2_P_slew_rate_ENUM_IDX 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2_P_slew_rate_ENUM_TOKEN fast
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2_P_slew_rate_ENUM_UPPER_TOKEN FAST
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2, slew_rate, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2, slew_rate, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2, slew_rate, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2, slew_rate, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2, slew_rate, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2, slew_rate, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2, slew_rate, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2, slew_rate, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2, slew_rate, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2, slew_rate, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2, slew_rate, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2, slew_rate, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2, slew_rate, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2_P_nxp_speed "100-mhz"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2_P_nxp_speed_STRING_UNQUOTED 100-mhz
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2_P_nxp_speed_STRING_TOKEN 100_mhz
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2_P_nxp_speed_STRING_UPPER_TOKEN 100_MHZ
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2_P_nxp_speed_ENUM_IDX 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2_P_nxp_speed_ENUM_TOKEN 100_mhz
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2_P_nxp_speed_ENUM_UPPER_TOKEN 100_MHZ
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2_P_nxp_speed_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2, nxp_speed, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2, nxp_speed, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2, nxp_speed, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2, nxp_speed, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2, nxp_speed, 4) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2, nxp_speed, 5) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2, nxp_speed, 6)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2_P_nxp_speed_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2, nxp_speed, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2, nxp_speed, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2, nxp_speed, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2, nxp_speed, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2, nxp_speed, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2, nxp_speed, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2, nxp_speed, 6)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2_P_nxp_speed_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2, nxp_speed, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2, nxp_speed, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2, nxp_speed, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2, nxp_speed, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2, nxp_speed, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2, nxp_speed, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2, nxp_speed, 6, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2_P_nxp_speed_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2, nxp_speed, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2, nxp_speed, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2, nxp_speed, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2, nxp_speed, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2, nxp_speed, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2, nxp_speed, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2, nxp_speed, 6, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2_P_nxp_speed_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2_P_bias_disable 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2_P_bias_pull_up 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2_P_bias_pull_down 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2_P_drive_open_drain 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2_P_input_enable 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2_P_input_enable_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2_P_input_schmitt_enable 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2_P_input_schmitt_enable_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B1_04_GPIO3_IO24
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_04_gpio3_io24
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_04_gpio3_io24_PATH "/soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B1_04_GPIO3_IO24"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_04_gpio3_io24_FULL_NAME "IOMUXC_GPIO_SD_B1_04_GPIO3_IO24"

/* Node parent (/soc/iomuxc@401f8000) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_04_gpio3_io24_PARENT DT_N_S_soc_S_iomuxc_401f8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_04_gpio3_io24_CHILD_IDX 120

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_04_gpio3_io24_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_04_gpio3_io24_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_04_gpio3_io24_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_04_gpio3_io24_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_04_gpio3_io24_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_04_gpio3_io24_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_04_gpio3_io24_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_04_gpio3_io24_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_04_gpio3_io24_ORD 239

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_04_gpio3_io24_REQUIRES_ORDS \
	13, /* /soc/iomuxc@401f8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_04_gpio3_io24_SUPPORTS_ORDS \
	240, /* /soc/iomuxc@401f8000/pinctrl/pinmux_usdhc1/group3 */ \
	313, /* /soc/gpio@401c0000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_04_gpio3_io24_EXISTS 1
#define DT_N_NODELABEL_iomuxc_gpio_sd_b1_04_gpio3_io24 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_04_gpio3_io24

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_04_gpio3_io24_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_04_gpio3_io24_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_04_gpio3_io24_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_04_gpio3_io24_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_04_gpio3_io24_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_04_gpio3_io24_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_04_gpio3_io24_P_pinmux {1075806568 /* 0x401f8168 */, 5 /* 0x5 */, 0 /* 0x0 */, 0 /* 0x0 */, 1075806940 /* 0x401f82dc */}
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_04_gpio3_io24_P_pinmux_IDX_0 1075806568
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_04_gpio3_io24_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_04_gpio3_io24_P_pinmux_IDX_1 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_04_gpio3_io24_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_04_gpio3_io24_P_pinmux_IDX_2 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_04_gpio3_io24_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_04_gpio3_io24_P_pinmux_IDX_3 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_04_gpio3_io24_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_04_gpio3_io24_P_pinmux_IDX_4 1075806940
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_04_gpio3_io24_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_04_gpio3_io24_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_04_gpio3_io24, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_04_gpio3_io24, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_04_gpio3_io24, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_04_gpio3_io24, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_04_gpio3_io24, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_04_gpio3_io24_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_04_gpio3_io24, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_04_gpio3_io24, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_04_gpio3_io24, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_04_gpio3_io24, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_04_gpio3_io24, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_04_gpio3_io24_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_04_gpio3_io24, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_04_gpio3_io24, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_04_gpio3_io24, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_04_gpio3_io24, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_04_gpio3_io24, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_04_gpio3_io24_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_04_gpio3_io24, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_04_gpio3_io24, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_04_gpio3_io24, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_04_gpio3_io24, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_04_gpio3_io24, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_04_gpio3_io24_P_pinmux_LEN 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_04_gpio3_io24_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_04_gpio3_io24_P_pin_pue 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_04_gpio3_io24_P_pin_pue_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_04_gpio3_io24_P_pin_pdrv 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_04_gpio3_io24_P_pin_pdrv_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_04_gpio3_io24_P_pin_lpsr 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_04_gpio3_io24_P_pin_lpsr_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_04_gpio3_io24_P_pin_snvs 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_04_gpio3_io24_P_pin_snvs_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/pinctrl/pinmux_usdhc1/group3
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3_PATH "/soc/iomuxc@401f8000/pinctrl/pinmux_usdhc1/group3"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3_FULL_NAME "group3"

/* Node parent (/soc/iomuxc@401f8000/pinctrl/pinmux_usdhc1) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3_PARENT DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3_CHILD_IDX 3

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3_ORD 240

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3_REQUIRES_ORDS \
	228, /* /soc/iomuxc@401f8000/pinctrl/pinmux_usdhc1 */ \
	239, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B1_04_GPIO3_IO24 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3_P_pinmux_IDX_0 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_04_gpio3_io24
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3_P_pinmux_IDX_0_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_04_gpio3_io24
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3, pinmux, 0)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3, pinmux, 0)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3, pinmux, 0, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3, pinmux, 0, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3_P_pinmux_LEN 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3_P_drive_strength "r0-6"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3_P_drive_strength_STRING_UNQUOTED r0-6
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3_P_drive_strength_STRING_TOKEN r0_6
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3_P_drive_strength_STRING_UPPER_TOKEN R0_6
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3_P_drive_strength_ENUM_IDX 6
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3_P_drive_strength_ENUM_TOKEN r0_6
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3_P_drive_strength_ENUM_UPPER_TOKEN R0_6
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3, drive_strength, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3, drive_strength, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3, drive_strength, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3, drive_strength, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3, drive_strength, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3, drive_strength, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3, drive_strength, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3, drive_strength, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3, drive_strength, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3, drive_strength, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3, drive_strength, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3, drive_strength, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3, drive_strength, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3, drive_strength, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3, drive_strength, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3, drive_strength, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3_P_bias_pull_up_value "47k"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3_P_bias_pull_up_value_STRING_UNQUOTED 47k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3_P_bias_pull_up_value_STRING_TOKEN 47k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3_P_bias_pull_up_value_STRING_UPPER_TOKEN 47K
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3_P_bias_pull_up_value_ENUM_IDX 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3_P_bias_pull_up_value_ENUM_TOKEN 47k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3_P_bias_pull_up_value_ENUM_UPPER_TOKEN 47K
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3_P_bias_pull_up_value_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3, bias_pull_up_value, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3, bias_pull_up_value, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3, bias_pull_up_value, 2)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3_P_bias_pull_up_value_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3, bias_pull_up_value, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3, bias_pull_up_value, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3, bias_pull_up_value, 2)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3_P_bias_pull_up_value_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3, bias_pull_up_value, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3, bias_pull_up_value, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3, bias_pull_up_value, 2, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3_P_bias_pull_up_value_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3, bias_pull_up_value, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3, bias_pull_up_value, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3, bias_pull_up_value, 2, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3_P_bias_pull_up_value_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3_P_bias_pull_down_value "100k"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3_P_bias_pull_down_value_STRING_UNQUOTED 100k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3_P_bias_pull_down_value_STRING_TOKEN 100k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3_P_bias_pull_down_value_STRING_UPPER_TOKEN 100K
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3_P_bias_pull_down_value_ENUM_IDX 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3_P_bias_pull_down_value_ENUM_TOKEN 100k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3_P_bias_pull_down_value_ENUM_UPPER_TOKEN 100K
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3_P_bias_pull_down_value_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3, bias_pull_down_value, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3, bias_pull_down_value, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3, bias_pull_down_value, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3, bias_pull_down_value, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3_P_bias_pull_down_value_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3, bias_pull_down_value, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3, bias_pull_down_value, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3, bias_pull_down_value, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3, bias_pull_down_value, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3_P_bias_pull_down_value_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3, bias_pull_down_value, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3, bias_pull_down_value, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3, bias_pull_down_value, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3, bias_pull_down_value, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3_P_bias_pull_down_value_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3, bias_pull_down_value, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3, bias_pull_down_value, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3, bias_pull_down_value, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3, bias_pull_down_value, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3_P_bias_pull_down_value_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3_P_slew_rate "slow"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3_P_slew_rate_STRING_UNQUOTED slow
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3_P_slew_rate_STRING_TOKEN slow
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3_P_slew_rate_STRING_UPPER_TOKEN SLOW
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3_P_slew_rate_ENUM_TOKEN slow
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3_P_slew_rate_ENUM_UPPER_TOKEN SLOW
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3, slew_rate, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3, slew_rate, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3, slew_rate, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3, slew_rate, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3, slew_rate, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3, slew_rate, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3, slew_rate, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3, slew_rate, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3, slew_rate, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3, slew_rate, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3, slew_rate, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3, slew_rate, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3, slew_rate, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3_P_nxp_speed "100-mhz"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3_P_nxp_speed_STRING_UNQUOTED 100-mhz
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3_P_nxp_speed_STRING_TOKEN 100_mhz
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3_P_nxp_speed_STRING_UPPER_TOKEN 100_MHZ
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3_P_nxp_speed_ENUM_IDX 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3_P_nxp_speed_ENUM_TOKEN 100_mhz
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3_P_nxp_speed_ENUM_UPPER_TOKEN 100_MHZ
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3_P_nxp_speed_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3, nxp_speed, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3, nxp_speed, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3, nxp_speed, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3, nxp_speed, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3, nxp_speed, 4) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3, nxp_speed, 5) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3, nxp_speed, 6)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3_P_nxp_speed_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3, nxp_speed, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3, nxp_speed, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3, nxp_speed, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3, nxp_speed, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3, nxp_speed, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3, nxp_speed, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3, nxp_speed, 6)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3_P_nxp_speed_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3, nxp_speed, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3, nxp_speed, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3, nxp_speed, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3, nxp_speed, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3, nxp_speed, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3, nxp_speed, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3, nxp_speed, 6, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3_P_nxp_speed_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3, nxp_speed, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3, nxp_speed, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3, nxp_speed, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3, nxp_speed, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3, nxp_speed, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3, nxp_speed, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3, nxp_speed, 6, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3_P_nxp_speed_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3_P_bias_disable 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3_P_bias_pull_up 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3_P_bias_pull_down 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3_P_drive_open_drain 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3_P_input_enable 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3_P_input_enable_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3_P_input_schmitt_enable 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3_P_input_schmitt_enable_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/pinctrl/pinmux_usdhc1_fast
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_PATH "/soc/iomuxc@401f8000/pinctrl/pinmux_usdhc1_fast"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_FULL_NAME "pinmux_usdhc1_fast"

/* Node parent (/soc/iomuxc@401f8000/pinctrl) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_PARENT DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_CHILD_IDX 13

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_ORD 241

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_REQUIRES_ORDS \
	54, /* /soc/iomuxc@401f8000/pinctrl */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_SUPPORTS_ORDS \
	242, /* /soc/iomuxc@401f8000/pinctrl/pinmux_usdhc1_fast/group0 */ \
	243, /* /soc/iomuxc@401f8000/pinctrl/pinmux_usdhc1_fast/group1 */ \
	314, /* /soc/usdhc@402c0000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_EXISTS 1
#define DT_N_NODELABEL_pinmux_usdhc1_fast DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /soc/iomuxc@401f8000/pinctrl/pinmux_usdhc1_fast/group0
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0_PATH "/soc/iomuxc@401f8000/pinctrl/pinmux_usdhc1_fast/group0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0_FULL_NAME "group0"

/* Node parent (/soc/iomuxc@401f8000/pinctrl/pinmux_usdhc1_fast) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0_PARENT DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0_ORD 242

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0_REQUIRES_ORDS \
	227, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B0_03_USDHC1_CLK */ \
	241, /* /soc/iomuxc@401f8000/pinctrl/pinmux_usdhc1_fast */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0_P_pinmux_IDX_0 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_usdhc1_clk
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0_P_pinmux_IDX_0_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_usdhc1_clk
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0, pinmux, 0)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0, pinmux, 0)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0, pinmux, 0, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0, pinmux, 0, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0_P_pinmux_LEN 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0_P_drive_strength "r0-7"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0_P_drive_strength_STRING_UNQUOTED r0-7
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0_P_drive_strength_STRING_TOKEN r0_7
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0_P_drive_strength_STRING_UPPER_TOKEN R0_7
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0_P_drive_strength_ENUM_IDX 7
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0_P_drive_strength_ENUM_TOKEN r0_7
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0_P_drive_strength_ENUM_UPPER_TOKEN R0_7
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0, drive_strength, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0, drive_strength, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0, drive_strength, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0, drive_strength, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0, drive_strength, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0, drive_strength, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0, drive_strength, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0, drive_strength, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0, drive_strength, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0, drive_strength, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0, drive_strength, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0, drive_strength, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0, drive_strength, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0, drive_strength, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0, drive_strength, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0, drive_strength, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0_P_bias_pull_up_value "47k"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0_P_bias_pull_up_value_STRING_UNQUOTED 47k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0_P_bias_pull_up_value_STRING_TOKEN 47k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0_P_bias_pull_up_value_STRING_UPPER_TOKEN 47K
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0_P_bias_pull_up_value_ENUM_IDX 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0_P_bias_pull_up_value_ENUM_TOKEN 47k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0_P_bias_pull_up_value_ENUM_UPPER_TOKEN 47K
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0_P_bias_pull_up_value_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0, bias_pull_up_value, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0, bias_pull_up_value, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0, bias_pull_up_value, 2)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0_P_bias_pull_up_value_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0, bias_pull_up_value, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0, bias_pull_up_value, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0, bias_pull_up_value, 2)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0_P_bias_pull_up_value_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0, bias_pull_up_value, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0, bias_pull_up_value, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0, bias_pull_up_value, 2, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0_P_bias_pull_up_value_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0, bias_pull_up_value, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0, bias_pull_up_value, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0, bias_pull_up_value, 2, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0_P_bias_pull_up_value_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0_P_bias_pull_down_value "100k"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0_P_bias_pull_down_value_STRING_UNQUOTED 100k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0_P_bias_pull_down_value_STRING_TOKEN 100k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0_P_bias_pull_down_value_STRING_UPPER_TOKEN 100K
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0_P_bias_pull_down_value_ENUM_IDX 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0_P_bias_pull_down_value_ENUM_TOKEN 100k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0_P_bias_pull_down_value_ENUM_UPPER_TOKEN 100K
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0_P_bias_pull_down_value_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0, bias_pull_down_value, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0, bias_pull_down_value, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0, bias_pull_down_value, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0, bias_pull_down_value, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0_P_bias_pull_down_value_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0, bias_pull_down_value, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0, bias_pull_down_value, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0, bias_pull_down_value, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0, bias_pull_down_value, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0_P_bias_pull_down_value_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0, bias_pull_down_value, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0, bias_pull_down_value, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0, bias_pull_down_value, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0, bias_pull_down_value, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0_P_bias_pull_down_value_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0, bias_pull_down_value, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0, bias_pull_down_value, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0, bias_pull_down_value, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0, bias_pull_down_value, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0_P_bias_pull_down_value_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0_P_slew_rate "fast"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0_P_slew_rate_STRING_UNQUOTED fast
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0_P_slew_rate_STRING_TOKEN fast
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0_P_slew_rate_STRING_UPPER_TOKEN FAST
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0_P_slew_rate_ENUM_IDX 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0_P_slew_rate_ENUM_TOKEN fast
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0_P_slew_rate_ENUM_UPPER_TOKEN FAST
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0, slew_rate, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0, slew_rate, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0, slew_rate, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0, slew_rate, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0, slew_rate, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0, slew_rate, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0, slew_rate, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0, slew_rate, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0, slew_rate, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0, slew_rate, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0, slew_rate, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0, slew_rate, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0, slew_rate, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0_P_nxp_speed "200-mhz"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0_P_nxp_speed_STRING_UNQUOTED 200-mhz
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0_P_nxp_speed_STRING_TOKEN 200_mhz
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0_P_nxp_speed_STRING_UPPER_TOKEN 200_MHZ
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0_P_nxp_speed_ENUM_IDX 3
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0_P_nxp_speed_ENUM_TOKEN 200_mhz
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0_P_nxp_speed_ENUM_UPPER_TOKEN 200_MHZ
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0_P_nxp_speed_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0, nxp_speed, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0, nxp_speed, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0, nxp_speed, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0, nxp_speed, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0, nxp_speed, 4) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0, nxp_speed, 5) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0, nxp_speed, 6)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0_P_nxp_speed_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0, nxp_speed, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0, nxp_speed, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0, nxp_speed, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0, nxp_speed, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0, nxp_speed, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0, nxp_speed, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0, nxp_speed, 6)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0_P_nxp_speed_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0, nxp_speed, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0, nxp_speed, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0, nxp_speed, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0, nxp_speed, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0, nxp_speed, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0, nxp_speed, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0, nxp_speed, 6, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0_P_nxp_speed_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0, nxp_speed, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0, nxp_speed, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0, nxp_speed, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0, nxp_speed, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0, nxp_speed, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0, nxp_speed, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0, nxp_speed, 6, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0_P_nxp_speed_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0_P_bias_disable 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0_P_bias_pull_up 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0_P_bias_pull_down 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0_P_drive_open_drain 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0_P_input_enable 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0_P_input_enable_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0_P_input_schmitt_enable 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0_P_input_schmitt_enable_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/pinctrl/pinmux_usdhc1_fast/group1
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1_PATH "/soc/iomuxc@401f8000/pinctrl/pinmux_usdhc1_fast/group1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1_FULL_NAME "group1"

/* Node parent (/soc/iomuxc@401f8000/pinctrl/pinmux_usdhc1_fast) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1_PARENT DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1_CHILD_IDX 1

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1_ORD 243

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1_REQUIRES_ORDS \
	230, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B0_00_USDHC1_DATA2 */ \
	231, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B0_01_USDHC1_DATA3 */ \
	232, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B0_02_USDHC1_CMD */ \
	233, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B0_04_USDHC1_DATA0 */ \
	234, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B0_05_USDHC1_DATA1 */ \
	241, /* /soc/iomuxc@401f8000/pinctrl/pinmux_usdhc1_fast */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1_P_pinmux_IDX_0 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_usdhc1_cmd
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1_P_pinmux_IDX_0_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_usdhc1_cmd
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1_P_pinmux_IDX_1 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_usdhc1_data0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1_P_pinmux_IDX_1_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_usdhc1_data0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1_P_pinmux_IDX_2 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_usdhc1_data1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1_P_pinmux_IDX_2_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_usdhc1_data1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1_P_pinmux_IDX_3 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_usdhc1_data2
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1_P_pinmux_IDX_3_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_usdhc1_data2
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1_P_pinmux_IDX_4 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_usdhc1_data3
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1_P_pinmux_IDX_4_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_usdhc1_data3
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1_P_pinmux_LEN 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1_P_drive_strength "r0-7"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1_P_drive_strength_STRING_UNQUOTED r0-7
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1_P_drive_strength_STRING_TOKEN r0_7
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1_P_drive_strength_STRING_UPPER_TOKEN R0_7
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1_P_drive_strength_ENUM_IDX 7
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1_P_drive_strength_ENUM_TOKEN r0_7
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1_P_drive_strength_ENUM_UPPER_TOKEN R0_7
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1, drive_strength, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1, drive_strength, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1, drive_strength, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1, drive_strength, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1, drive_strength, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1, drive_strength, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1, drive_strength, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1, drive_strength, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1, drive_strength, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1, drive_strength, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1, drive_strength, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1, drive_strength, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1, drive_strength, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1, drive_strength, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1, drive_strength, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1, drive_strength, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1_P_bias_pull_up_value "47k"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1_P_bias_pull_up_value_STRING_UNQUOTED 47k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1_P_bias_pull_up_value_STRING_TOKEN 47k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1_P_bias_pull_up_value_STRING_UPPER_TOKEN 47K
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1_P_bias_pull_up_value_ENUM_IDX 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1_P_bias_pull_up_value_ENUM_TOKEN 47k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1_P_bias_pull_up_value_ENUM_UPPER_TOKEN 47K
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1_P_bias_pull_up_value_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1, bias_pull_up_value, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1, bias_pull_up_value, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1, bias_pull_up_value, 2)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1_P_bias_pull_up_value_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1, bias_pull_up_value, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1, bias_pull_up_value, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1, bias_pull_up_value, 2)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1_P_bias_pull_up_value_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1, bias_pull_up_value, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1, bias_pull_up_value, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1, bias_pull_up_value, 2, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1_P_bias_pull_up_value_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1, bias_pull_up_value, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1, bias_pull_up_value, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1, bias_pull_up_value, 2, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1_P_bias_pull_up_value_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1_P_bias_pull_down_value "100k"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1_P_bias_pull_down_value_STRING_UNQUOTED 100k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1_P_bias_pull_down_value_STRING_TOKEN 100k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1_P_bias_pull_down_value_STRING_UPPER_TOKEN 100K
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1_P_bias_pull_down_value_ENUM_IDX 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1_P_bias_pull_down_value_ENUM_TOKEN 100k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1_P_bias_pull_down_value_ENUM_UPPER_TOKEN 100K
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1_P_bias_pull_down_value_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1, bias_pull_down_value, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1, bias_pull_down_value, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1, bias_pull_down_value, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1, bias_pull_down_value, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1_P_bias_pull_down_value_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1, bias_pull_down_value, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1, bias_pull_down_value, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1, bias_pull_down_value, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1, bias_pull_down_value, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1_P_bias_pull_down_value_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1, bias_pull_down_value, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1, bias_pull_down_value, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1, bias_pull_down_value, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1, bias_pull_down_value, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1_P_bias_pull_down_value_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1, bias_pull_down_value, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1, bias_pull_down_value, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1, bias_pull_down_value, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1, bias_pull_down_value, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1_P_bias_pull_down_value_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1_P_slew_rate "fast"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1_P_slew_rate_STRING_UNQUOTED fast
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1_P_slew_rate_STRING_TOKEN fast
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1_P_slew_rate_STRING_UPPER_TOKEN FAST
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1_P_slew_rate_ENUM_IDX 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1_P_slew_rate_ENUM_TOKEN fast
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1_P_slew_rate_ENUM_UPPER_TOKEN FAST
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1, slew_rate, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1, slew_rate, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1, slew_rate, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1, slew_rate, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1, slew_rate, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1, slew_rate, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1, slew_rate, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1, slew_rate, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1, slew_rate, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1, slew_rate, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1, slew_rate, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1, slew_rate, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1, slew_rate, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1_P_nxp_speed "200-mhz"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1_P_nxp_speed_STRING_UNQUOTED 200-mhz
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1_P_nxp_speed_STRING_TOKEN 200_mhz
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1_P_nxp_speed_STRING_UPPER_TOKEN 200_MHZ
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1_P_nxp_speed_ENUM_IDX 3
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1_P_nxp_speed_ENUM_TOKEN 200_mhz
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1_P_nxp_speed_ENUM_UPPER_TOKEN 200_MHZ
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1_P_nxp_speed_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1, nxp_speed, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1, nxp_speed, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1, nxp_speed, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1, nxp_speed, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1, nxp_speed, 4) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1, nxp_speed, 5) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1, nxp_speed, 6)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1_P_nxp_speed_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1, nxp_speed, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1, nxp_speed, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1, nxp_speed, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1, nxp_speed, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1, nxp_speed, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1, nxp_speed, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1, nxp_speed, 6)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1_P_nxp_speed_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1, nxp_speed, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1, nxp_speed, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1, nxp_speed, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1, nxp_speed, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1, nxp_speed, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1, nxp_speed, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1, nxp_speed, 6, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1_P_nxp_speed_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1, nxp_speed, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1, nxp_speed, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1, nxp_speed, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1, nxp_speed, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1, nxp_speed, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1, nxp_speed, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1, nxp_speed, 6, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1_P_nxp_speed_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1_P_bias_disable 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1_P_bias_pull_up 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1_P_bias_pull_down 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1_P_drive_open_drain 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1_P_input_enable 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1_P_input_enable_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1_P_input_schmitt_enable 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1_P_input_schmitt_enable_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/pinctrl/pinmux_usdhc1_med
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_PATH "/soc/iomuxc@401f8000/pinctrl/pinmux_usdhc1_med"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_FULL_NAME "pinmux_usdhc1_med"

/* Node parent (/soc/iomuxc@401f8000/pinctrl) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_PARENT DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_CHILD_IDX 14

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_ORD 244

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_REQUIRES_ORDS \
	54, /* /soc/iomuxc@401f8000/pinctrl */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_SUPPORTS_ORDS \
	245, /* /soc/iomuxc@401f8000/pinctrl/pinmux_usdhc1_med/group0 */ \
	246, /* /soc/iomuxc@401f8000/pinctrl/pinmux_usdhc1_med/group1 */ \
	314, /* /soc/usdhc@402c0000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_EXISTS 1
#define DT_N_NODELABEL_pinmux_usdhc1_med DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /soc/iomuxc@401f8000/pinctrl/pinmux_usdhc1_med/group0
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0_PATH "/soc/iomuxc@401f8000/pinctrl/pinmux_usdhc1_med/group0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0_FULL_NAME "group0"

/* Node parent (/soc/iomuxc@401f8000/pinctrl/pinmux_usdhc1_med) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0_PARENT DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0_ORD 245

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0_REQUIRES_ORDS \
	227, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B0_03_USDHC1_CLK */ \
	244, /* /soc/iomuxc@401f8000/pinctrl/pinmux_usdhc1_med */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0_P_pinmux_IDX_0 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_usdhc1_clk
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0_P_pinmux_IDX_0_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_usdhc1_clk
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0, pinmux, 0)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0, pinmux, 0)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0, pinmux, 0, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0, pinmux, 0, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0_P_pinmux_LEN 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0_P_drive_strength "r0-7"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0_P_drive_strength_STRING_UNQUOTED r0-7
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0_P_drive_strength_STRING_TOKEN r0_7
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0_P_drive_strength_STRING_UPPER_TOKEN R0_7
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0_P_drive_strength_ENUM_IDX 7
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0_P_drive_strength_ENUM_TOKEN r0_7
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0_P_drive_strength_ENUM_UPPER_TOKEN R0_7
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0, drive_strength, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0, drive_strength, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0, drive_strength, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0, drive_strength, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0, drive_strength, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0, drive_strength, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0, drive_strength, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0, drive_strength, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0, drive_strength, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0, drive_strength, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0, drive_strength, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0, drive_strength, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0, drive_strength, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0, drive_strength, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0, drive_strength, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0, drive_strength, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0_P_bias_pull_up_value "47k"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0_P_bias_pull_up_value_STRING_UNQUOTED 47k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0_P_bias_pull_up_value_STRING_TOKEN 47k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0_P_bias_pull_up_value_STRING_UPPER_TOKEN 47K
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0_P_bias_pull_up_value_ENUM_IDX 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0_P_bias_pull_up_value_ENUM_TOKEN 47k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0_P_bias_pull_up_value_ENUM_UPPER_TOKEN 47K
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0_P_bias_pull_up_value_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0, bias_pull_up_value, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0, bias_pull_up_value, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0, bias_pull_up_value, 2)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0_P_bias_pull_up_value_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0, bias_pull_up_value, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0, bias_pull_up_value, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0, bias_pull_up_value, 2)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0_P_bias_pull_up_value_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0, bias_pull_up_value, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0, bias_pull_up_value, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0, bias_pull_up_value, 2, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0_P_bias_pull_up_value_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0, bias_pull_up_value, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0, bias_pull_up_value, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0, bias_pull_up_value, 2, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0_P_bias_pull_up_value_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0_P_bias_pull_down_value "100k"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0_P_bias_pull_down_value_STRING_UNQUOTED 100k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0_P_bias_pull_down_value_STRING_TOKEN 100k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0_P_bias_pull_down_value_STRING_UPPER_TOKEN 100K
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0_P_bias_pull_down_value_ENUM_IDX 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0_P_bias_pull_down_value_ENUM_TOKEN 100k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0_P_bias_pull_down_value_ENUM_UPPER_TOKEN 100K
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0_P_bias_pull_down_value_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0, bias_pull_down_value, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0, bias_pull_down_value, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0, bias_pull_down_value, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0, bias_pull_down_value, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0_P_bias_pull_down_value_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0, bias_pull_down_value, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0, bias_pull_down_value, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0, bias_pull_down_value, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0, bias_pull_down_value, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0_P_bias_pull_down_value_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0, bias_pull_down_value, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0, bias_pull_down_value, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0, bias_pull_down_value, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0, bias_pull_down_value, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0_P_bias_pull_down_value_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0, bias_pull_down_value, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0, bias_pull_down_value, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0, bias_pull_down_value, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0, bias_pull_down_value, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0_P_bias_pull_down_value_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0_P_slew_rate "fast"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0_P_slew_rate_STRING_UNQUOTED fast
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0_P_slew_rate_STRING_TOKEN fast
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0_P_slew_rate_STRING_UPPER_TOKEN FAST
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0_P_slew_rate_ENUM_IDX 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0_P_slew_rate_ENUM_TOKEN fast
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0_P_slew_rate_ENUM_UPPER_TOKEN FAST
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0, slew_rate, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0, slew_rate, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0, slew_rate, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0, slew_rate, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0, slew_rate, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0, slew_rate, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0, slew_rate, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0, slew_rate, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0, slew_rate, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0, slew_rate, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0, slew_rate, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0, slew_rate, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0, slew_rate, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0_P_nxp_speed "100-mhz"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0_P_nxp_speed_STRING_UNQUOTED 100-mhz
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0_P_nxp_speed_STRING_TOKEN 100_mhz
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0_P_nxp_speed_STRING_UPPER_TOKEN 100_MHZ
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0_P_nxp_speed_ENUM_IDX 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0_P_nxp_speed_ENUM_TOKEN 100_mhz
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0_P_nxp_speed_ENUM_UPPER_TOKEN 100_MHZ
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0_P_nxp_speed_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0, nxp_speed, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0, nxp_speed, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0, nxp_speed, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0, nxp_speed, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0, nxp_speed, 4) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0, nxp_speed, 5) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0, nxp_speed, 6)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0_P_nxp_speed_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0, nxp_speed, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0, nxp_speed, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0, nxp_speed, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0, nxp_speed, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0, nxp_speed, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0, nxp_speed, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0, nxp_speed, 6)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0_P_nxp_speed_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0, nxp_speed, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0, nxp_speed, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0, nxp_speed, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0, nxp_speed, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0, nxp_speed, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0, nxp_speed, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0, nxp_speed, 6, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0_P_nxp_speed_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0, nxp_speed, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0, nxp_speed, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0, nxp_speed, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0, nxp_speed, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0, nxp_speed, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0, nxp_speed, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0, nxp_speed, 6, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0_P_nxp_speed_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0_P_bias_disable 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0_P_bias_pull_up 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0_P_bias_pull_down 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0_P_drive_open_drain 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0_P_input_enable 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0_P_input_enable_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0_P_input_schmitt_enable 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0_P_input_schmitt_enable_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/pinctrl/pinmux_usdhc1_med/group1
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1_PATH "/soc/iomuxc@401f8000/pinctrl/pinmux_usdhc1_med/group1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1_FULL_NAME "group1"

/* Node parent (/soc/iomuxc@401f8000/pinctrl/pinmux_usdhc1_med) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1_PARENT DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1_CHILD_IDX 1

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1_ORD 246

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1_REQUIRES_ORDS \
	230, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B0_00_USDHC1_DATA2 */ \
	231, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B0_01_USDHC1_DATA3 */ \
	232, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B0_02_USDHC1_CMD */ \
	233, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B0_04_USDHC1_DATA0 */ \
	234, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B0_05_USDHC1_DATA1 */ \
	244, /* /soc/iomuxc@401f8000/pinctrl/pinmux_usdhc1_med */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1_P_pinmux_IDX_0 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_usdhc1_cmd
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1_P_pinmux_IDX_0_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_usdhc1_cmd
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1_P_pinmux_IDX_1 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_usdhc1_data0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1_P_pinmux_IDX_1_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_usdhc1_data0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1_P_pinmux_IDX_2 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_usdhc1_data1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1_P_pinmux_IDX_2_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_usdhc1_data1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1_P_pinmux_IDX_3 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_usdhc1_data2
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1_P_pinmux_IDX_3_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_usdhc1_data2
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1_P_pinmux_IDX_4 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_usdhc1_data3
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1_P_pinmux_IDX_4_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_usdhc1_data3
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1_P_pinmux_LEN 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1_P_drive_strength "r0-7"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1_P_drive_strength_STRING_UNQUOTED r0-7
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1_P_drive_strength_STRING_TOKEN r0_7
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1_P_drive_strength_STRING_UPPER_TOKEN R0_7
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1_P_drive_strength_ENUM_IDX 7
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1_P_drive_strength_ENUM_TOKEN r0_7
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1_P_drive_strength_ENUM_UPPER_TOKEN R0_7
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1, drive_strength, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1, drive_strength, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1, drive_strength, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1, drive_strength, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1, drive_strength, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1, drive_strength, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1, drive_strength, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1, drive_strength, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1, drive_strength, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1, drive_strength, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1, drive_strength, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1, drive_strength, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1, drive_strength, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1, drive_strength, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1, drive_strength, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1, drive_strength, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1_P_bias_pull_up_value "47k"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1_P_bias_pull_up_value_STRING_UNQUOTED 47k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1_P_bias_pull_up_value_STRING_TOKEN 47k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1_P_bias_pull_up_value_STRING_UPPER_TOKEN 47K
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1_P_bias_pull_up_value_ENUM_IDX 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1_P_bias_pull_up_value_ENUM_TOKEN 47k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1_P_bias_pull_up_value_ENUM_UPPER_TOKEN 47K
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1_P_bias_pull_up_value_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1, bias_pull_up_value, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1, bias_pull_up_value, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1, bias_pull_up_value, 2)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1_P_bias_pull_up_value_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1, bias_pull_up_value, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1, bias_pull_up_value, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1, bias_pull_up_value, 2)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1_P_bias_pull_up_value_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1, bias_pull_up_value, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1, bias_pull_up_value, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1, bias_pull_up_value, 2, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1_P_bias_pull_up_value_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1, bias_pull_up_value, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1, bias_pull_up_value, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1, bias_pull_up_value, 2, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1_P_bias_pull_up_value_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1_P_bias_pull_down_value "100k"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1_P_bias_pull_down_value_STRING_UNQUOTED 100k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1_P_bias_pull_down_value_STRING_TOKEN 100k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1_P_bias_pull_down_value_STRING_UPPER_TOKEN 100K
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1_P_bias_pull_down_value_ENUM_IDX 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1_P_bias_pull_down_value_ENUM_TOKEN 100k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1_P_bias_pull_down_value_ENUM_UPPER_TOKEN 100K
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1_P_bias_pull_down_value_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1, bias_pull_down_value, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1, bias_pull_down_value, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1, bias_pull_down_value, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1, bias_pull_down_value, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1_P_bias_pull_down_value_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1, bias_pull_down_value, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1, bias_pull_down_value, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1, bias_pull_down_value, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1, bias_pull_down_value, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1_P_bias_pull_down_value_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1, bias_pull_down_value, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1, bias_pull_down_value, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1, bias_pull_down_value, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1, bias_pull_down_value, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1_P_bias_pull_down_value_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1, bias_pull_down_value, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1, bias_pull_down_value, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1, bias_pull_down_value, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1, bias_pull_down_value, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1_P_bias_pull_down_value_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1_P_slew_rate "fast"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1_P_slew_rate_STRING_UNQUOTED fast
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1_P_slew_rate_STRING_TOKEN fast
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1_P_slew_rate_STRING_UPPER_TOKEN FAST
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1_P_slew_rate_ENUM_IDX 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1_P_slew_rate_ENUM_TOKEN fast
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1_P_slew_rate_ENUM_UPPER_TOKEN FAST
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1, slew_rate, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1, slew_rate, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1, slew_rate, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1, slew_rate, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1, slew_rate, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1, slew_rate, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1, slew_rate, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1, slew_rate, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1, slew_rate, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1, slew_rate, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1, slew_rate, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1, slew_rate, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1, slew_rate, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1_P_nxp_speed "100-mhz"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1_P_nxp_speed_STRING_UNQUOTED 100-mhz
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1_P_nxp_speed_STRING_TOKEN 100_mhz
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1_P_nxp_speed_STRING_UPPER_TOKEN 100_MHZ
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1_P_nxp_speed_ENUM_IDX 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1_P_nxp_speed_ENUM_TOKEN 100_mhz
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1_P_nxp_speed_ENUM_UPPER_TOKEN 100_MHZ
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1_P_nxp_speed_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1, nxp_speed, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1, nxp_speed, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1, nxp_speed, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1, nxp_speed, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1, nxp_speed, 4) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1, nxp_speed, 5) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1, nxp_speed, 6)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1_P_nxp_speed_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1, nxp_speed, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1, nxp_speed, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1, nxp_speed, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1, nxp_speed, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1, nxp_speed, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1, nxp_speed, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1, nxp_speed, 6)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1_P_nxp_speed_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1, nxp_speed, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1, nxp_speed, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1, nxp_speed, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1, nxp_speed, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1, nxp_speed, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1, nxp_speed, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1, nxp_speed, 6, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1_P_nxp_speed_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1, nxp_speed, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1, nxp_speed, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1, nxp_speed, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1, nxp_speed, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1, nxp_speed, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1, nxp_speed, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1, nxp_speed, 6, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1_P_nxp_speed_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1_P_bias_disable 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1_P_bias_pull_up 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1_P_bias_pull_down 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1_P_drive_open_drain 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1_P_input_enable 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1_P_input_enable_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1_P_input_schmitt_enable 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1_P_input_schmitt_enable_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/pinctrl/pinmux_usdhc1_slow
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_PATH "/soc/iomuxc@401f8000/pinctrl/pinmux_usdhc1_slow"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_FULL_NAME "pinmux_usdhc1_slow"

/* Node parent (/soc/iomuxc@401f8000/pinctrl) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_PARENT DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_CHILD_IDX 15

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_ORD 247

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_REQUIRES_ORDS \
	54, /* /soc/iomuxc@401f8000/pinctrl */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_SUPPORTS_ORDS \
	248, /* /soc/iomuxc@401f8000/pinctrl/pinmux_usdhc1_slow/group0 */ \
	249, /* /soc/iomuxc@401f8000/pinctrl/pinmux_usdhc1_slow/group1 */ \
	314, /* /soc/usdhc@402c0000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_EXISTS 1
#define DT_N_NODELABEL_pinmux_usdhc1_slow DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /soc/iomuxc@401f8000/pinctrl/pinmux_usdhc1_slow/group0
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0_PATH "/soc/iomuxc@401f8000/pinctrl/pinmux_usdhc1_slow/group0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0_FULL_NAME "group0"

/* Node parent (/soc/iomuxc@401f8000/pinctrl/pinmux_usdhc1_slow) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0_PARENT DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0_ORD 248

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0_REQUIRES_ORDS \
	227, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B0_03_USDHC1_CLK */ \
	247, /* /soc/iomuxc@401f8000/pinctrl/pinmux_usdhc1_slow */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0_P_pinmux_IDX_0 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_usdhc1_clk
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0_P_pinmux_IDX_0_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_usdhc1_clk
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0, pinmux, 0)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0, pinmux, 0)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0, pinmux, 0, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0, pinmux, 0, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0_P_pinmux_LEN 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0_P_drive_strength "r0-7"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0_P_drive_strength_STRING_UNQUOTED r0-7
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0_P_drive_strength_STRING_TOKEN r0_7
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0_P_drive_strength_STRING_UPPER_TOKEN R0_7
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0_P_drive_strength_ENUM_IDX 7
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0_P_drive_strength_ENUM_TOKEN r0_7
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0_P_drive_strength_ENUM_UPPER_TOKEN R0_7
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0, drive_strength, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0, drive_strength, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0, drive_strength, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0, drive_strength, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0, drive_strength, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0, drive_strength, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0, drive_strength, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0, drive_strength, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0, drive_strength, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0, drive_strength, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0, drive_strength, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0, drive_strength, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0, drive_strength, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0, drive_strength, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0, drive_strength, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0, drive_strength, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0_P_bias_pull_up_value "47k"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0_P_bias_pull_up_value_STRING_UNQUOTED 47k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0_P_bias_pull_up_value_STRING_TOKEN 47k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0_P_bias_pull_up_value_STRING_UPPER_TOKEN 47K
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0_P_bias_pull_up_value_ENUM_IDX 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0_P_bias_pull_up_value_ENUM_TOKEN 47k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0_P_bias_pull_up_value_ENUM_UPPER_TOKEN 47K
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0_P_bias_pull_up_value_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0, bias_pull_up_value, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0, bias_pull_up_value, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0, bias_pull_up_value, 2)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0_P_bias_pull_up_value_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0, bias_pull_up_value, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0, bias_pull_up_value, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0, bias_pull_up_value, 2)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0_P_bias_pull_up_value_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0, bias_pull_up_value, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0, bias_pull_up_value, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0, bias_pull_up_value, 2, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0_P_bias_pull_up_value_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0, bias_pull_up_value, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0, bias_pull_up_value, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0, bias_pull_up_value, 2, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0_P_bias_pull_up_value_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0_P_bias_pull_down_value "100k"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0_P_bias_pull_down_value_STRING_UNQUOTED 100k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0_P_bias_pull_down_value_STRING_TOKEN 100k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0_P_bias_pull_down_value_STRING_UPPER_TOKEN 100K
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0_P_bias_pull_down_value_ENUM_IDX 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0_P_bias_pull_down_value_ENUM_TOKEN 100k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0_P_bias_pull_down_value_ENUM_UPPER_TOKEN 100K
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0_P_bias_pull_down_value_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0, bias_pull_down_value, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0, bias_pull_down_value, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0, bias_pull_down_value, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0, bias_pull_down_value, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0_P_bias_pull_down_value_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0, bias_pull_down_value, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0, bias_pull_down_value, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0, bias_pull_down_value, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0, bias_pull_down_value, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0_P_bias_pull_down_value_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0, bias_pull_down_value, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0, bias_pull_down_value, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0, bias_pull_down_value, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0, bias_pull_down_value, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0_P_bias_pull_down_value_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0, bias_pull_down_value, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0, bias_pull_down_value, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0, bias_pull_down_value, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0, bias_pull_down_value, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0_P_bias_pull_down_value_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0_P_slew_rate "fast"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0_P_slew_rate_STRING_UNQUOTED fast
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0_P_slew_rate_STRING_TOKEN fast
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0_P_slew_rate_STRING_UPPER_TOKEN FAST
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0_P_slew_rate_ENUM_IDX 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0_P_slew_rate_ENUM_TOKEN fast
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0_P_slew_rate_ENUM_UPPER_TOKEN FAST
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0, slew_rate, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0, slew_rate, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0, slew_rate, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0, slew_rate, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0, slew_rate, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0, slew_rate, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0, slew_rate, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0, slew_rate, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0, slew_rate, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0, slew_rate, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0, slew_rate, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0, slew_rate, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0, slew_rate, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0_P_nxp_speed "50-mhz"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0_P_nxp_speed_STRING_UNQUOTED 50-mhz
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0_P_nxp_speed_STRING_TOKEN 50_mhz
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0_P_nxp_speed_STRING_UPPER_TOKEN 50_MHZ
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0_P_nxp_speed_ENUM_IDX 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0_P_nxp_speed_ENUM_TOKEN 50_mhz
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0_P_nxp_speed_ENUM_UPPER_TOKEN 50_MHZ
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0_P_nxp_speed_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0, nxp_speed, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0, nxp_speed, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0, nxp_speed, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0, nxp_speed, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0, nxp_speed, 4) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0, nxp_speed, 5)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0_P_nxp_speed_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0, nxp_speed, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0, nxp_speed, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0, nxp_speed, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0, nxp_speed, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0, nxp_speed, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0, nxp_speed, 5)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0_P_nxp_speed_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0, nxp_speed, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0, nxp_speed, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0, nxp_speed, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0, nxp_speed, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0, nxp_speed, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0, nxp_speed, 5, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0_P_nxp_speed_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0, nxp_speed, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0, nxp_speed, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0, nxp_speed, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0, nxp_speed, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0, nxp_speed, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0, nxp_speed, 5, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0_P_nxp_speed_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0_P_bias_disable 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0_P_bias_pull_up 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0_P_bias_pull_down 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0_P_drive_open_drain 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0_P_input_enable 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0_P_input_enable_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0_P_input_schmitt_enable 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0_P_input_schmitt_enable_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/pinctrl/pinmux_usdhc1_slow/group1
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1_PATH "/soc/iomuxc@401f8000/pinctrl/pinmux_usdhc1_slow/group1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1_FULL_NAME "group1"

/* Node parent (/soc/iomuxc@401f8000/pinctrl/pinmux_usdhc1_slow) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1_PARENT DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1_CHILD_IDX 1

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1_ORD 249

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1_REQUIRES_ORDS \
	230, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B0_00_USDHC1_DATA2 */ \
	231, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B0_01_USDHC1_DATA3 */ \
	232, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B0_02_USDHC1_CMD */ \
	233, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B0_04_USDHC1_DATA0 */ \
	234, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B0_05_USDHC1_DATA1 */ \
	247, /* /soc/iomuxc@401f8000/pinctrl/pinmux_usdhc1_slow */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1_P_pinmux_IDX_0 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_usdhc1_cmd
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1_P_pinmux_IDX_0_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_usdhc1_cmd
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1_P_pinmux_IDX_1 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_usdhc1_data0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1_P_pinmux_IDX_1_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_usdhc1_data0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1_P_pinmux_IDX_2 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_usdhc1_data1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1_P_pinmux_IDX_2_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_usdhc1_data1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1_P_pinmux_IDX_3 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_usdhc1_data2
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1_P_pinmux_IDX_3_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_usdhc1_data2
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1_P_pinmux_IDX_4 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_usdhc1_data3
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1_P_pinmux_IDX_4_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_usdhc1_data3
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1_P_pinmux_LEN 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1_P_drive_strength "r0-7"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1_P_drive_strength_STRING_UNQUOTED r0-7
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1_P_drive_strength_STRING_TOKEN r0_7
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1_P_drive_strength_STRING_UPPER_TOKEN R0_7
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1_P_drive_strength_ENUM_IDX 7
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1_P_drive_strength_ENUM_TOKEN r0_7
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1_P_drive_strength_ENUM_UPPER_TOKEN R0_7
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1, drive_strength, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1, drive_strength, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1, drive_strength, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1, drive_strength, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1, drive_strength, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1, drive_strength, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1, drive_strength, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1, drive_strength, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1, drive_strength, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1, drive_strength, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1, drive_strength, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1, drive_strength, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1, drive_strength, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1, drive_strength, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1, drive_strength, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1, drive_strength, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1_P_bias_pull_up_value "47k"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1_P_bias_pull_up_value_STRING_UNQUOTED 47k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1_P_bias_pull_up_value_STRING_TOKEN 47k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1_P_bias_pull_up_value_STRING_UPPER_TOKEN 47K
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1_P_bias_pull_up_value_ENUM_IDX 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1_P_bias_pull_up_value_ENUM_TOKEN 47k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1_P_bias_pull_up_value_ENUM_UPPER_TOKEN 47K
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1_P_bias_pull_up_value_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1, bias_pull_up_value, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1, bias_pull_up_value, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1, bias_pull_up_value, 2)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1_P_bias_pull_up_value_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1, bias_pull_up_value, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1, bias_pull_up_value, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1, bias_pull_up_value, 2)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1_P_bias_pull_up_value_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1, bias_pull_up_value, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1, bias_pull_up_value, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1, bias_pull_up_value, 2, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1_P_bias_pull_up_value_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1, bias_pull_up_value, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1, bias_pull_up_value, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1, bias_pull_up_value, 2, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1_P_bias_pull_up_value_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1_P_bias_pull_down_value "100k"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1_P_bias_pull_down_value_STRING_UNQUOTED 100k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1_P_bias_pull_down_value_STRING_TOKEN 100k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1_P_bias_pull_down_value_STRING_UPPER_TOKEN 100K
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1_P_bias_pull_down_value_ENUM_IDX 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1_P_bias_pull_down_value_ENUM_TOKEN 100k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1_P_bias_pull_down_value_ENUM_UPPER_TOKEN 100K
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1_P_bias_pull_down_value_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1, bias_pull_down_value, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1, bias_pull_down_value, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1, bias_pull_down_value, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1, bias_pull_down_value, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1_P_bias_pull_down_value_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1, bias_pull_down_value, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1, bias_pull_down_value, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1, bias_pull_down_value, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1, bias_pull_down_value, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1_P_bias_pull_down_value_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1, bias_pull_down_value, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1, bias_pull_down_value, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1, bias_pull_down_value, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1, bias_pull_down_value, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1_P_bias_pull_down_value_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1, bias_pull_down_value, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1, bias_pull_down_value, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1, bias_pull_down_value, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1, bias_pull_down_value, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1_P_bias_pull_down_value_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1_P_slew_rate "fast"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1_P_slew_rate_STRING_UNQUOTED fast
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1_P_slew_rate_STRING_TOKEN fast
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1_P_slew_rate_STRING_UPPER_TOKEN FAST
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1_P_slew_rate_ENUM_IDX 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1_P_slew_rate_ENUM_TOKEN fast
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1_P_slew_rate_ENUM_UPPER_TOKEN FAST
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1, slew_rate, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1, slew_rate, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1, slew_rate, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1, slew_rate, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1, slew_rate, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1, slew_rate, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1, slew_rate, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1, slew_rate, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1, slew_rate, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1, slew_rate, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1, slew_rate, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1, slew_rate, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1, slew_rate, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1_P_nxp_speed "50-mhz"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1_P_nxp_speed_STRING_UNQUOTED 50-mhz
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1_P_nxp_speed_STRING_TOKEN 50_mhz
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1_P_nxp_speed_STRING_UPPER_TOKEN 50_MHZ
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1_P_nxp_speed_ENUM_IDX 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1_P_nxp_speed_ENUM_TOKEN 50_mhz
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1_P_nxp_speed_ENUM_UPPER_TOKEN 50_MHZ
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1_P_nxp_speed_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1, nxp_speed, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1, nxp_speed, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1, nxp_speed, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1, nxp_speed, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1, nxp_speed, 4) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1, nxp_speed, 5)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1_P_nxp_speed_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1, nxp_speed, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1, nxp_speed, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1, nxp_speed, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1, nxp_speed, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1, nxp_speed, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1, nxp_speed, 5)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1_P_nxp_speed_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1, nxp_speed, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1, nxp_speed, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1, nxp_speed, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1, nxp_speed, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1, nxp_speed, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1, nxp_speed, 5, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1_P_nxp_speed_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1, nxp_speed, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1, nxp_speed, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1, nxp_speed, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1, nxp_speed, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1, nxp_speed, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1, nxp_speed, 5, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1_P_nxp_speed_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1_P_bias_disable 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1_P_bias_pull_up 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1_P_bias_pull_down 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1_P_drive_open_drain 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1_P_input_enable 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1_P_input_enable_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1_P_input_schmitt_enable 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1_P_input_schmitt_enable_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/pinctrl/pinmux_user
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_PATH "/soc/iomuxc@401f8000/pinctrl/pinmux_user"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_FULL_NAME "pinmux_user"

/* Node parent (/soc/iomuxc@401f8000/pinctrl) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_PARENT DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_CHILD_IDX 16

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0, __VA_ARGS__) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_ORD 250

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_REQUIRES_ORDS \
	54, /* /soc/iomuxc@401f8000/pinctrl */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_SUPPORTS_ORDS \
	251, /* /soc/iomuxc@401f8000/pinctrl/pinmux_user/group0 */ \
	252, /* /soc/iomuxc@401f8000/pinctrl/pinmux_user/group1 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_EXISTS 1
#define DT_N_NODELABEL_pinmux_user DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /soc/iomuxc@401f8000/pinctrl/pinmux_user/group0
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0_PATH "/soc/iomuxc@401f8000/pinctrl/pinmux_user/group0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0_FULL_NAME "group0"

/* Node parent (/soc/iomuxc@401f8000/pinctrl/pinmux_user) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0_PARENT DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0_ORD 251

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0_REQUIRES_ORDS \
	16, /* /soc/iomuxc@401f8000/IOMUXC_SNVS_WAKEUP_GPIO5_IO00 */ \
	250, /* /soc/iomuxc@401f8000/pinctrl/pinmux_user */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0_P_pinmux_IDX_0 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_wakeup_gpio5_io00
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0_P_pinmux_IDX_0_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_wakeup_gpio5_io00
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0, pinmux, 0)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0, pinmux, 0)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0, pinmux, 0, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0, pinmux, 0, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0_P_pinmux_LEN 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0_P_drive_strength "r0-4"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0_P_drive_strength_STRING_UNQUOTED r0-4
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0_P_drive_strength_STRING_TOKEN r0_4
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0_P_drive_strength_STRING_UPPER_TOKEN R0_4
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0_P_drive_strength_ENUM_IDX 4
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0_P_drive_strength_ENUM_TOKEN r0_4
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0_P_drive_strength_ENUM_UPPER_TOKEN R0_4
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0, drive_strength, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0, drive_strength, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0, drive_strength, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0, drive_strength, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0, drive_strength, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0, drive_strength, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0, drive_strength, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0, drive_strength, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0, drive_strength, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0, drive_strength, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0, drive_strength, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0, drive_strength, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0, drive_strength, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0, drive_strength, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0, drive_strength, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0, drive_strength, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0_P_bias_pull_up_value "100k"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0_P_bias_pull_up_value_STRING_UNQUOTED 100k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0_P_bias_pull_up_value_STRING_TOKEN 100k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0_P_bias_pull_up_value_STRING_UPPER_TOKEN 100K
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0_P_bias_pull_up_value_ENUM_IDX 2
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0_P_bias_pull_up_value_ENUM_TOKEN 100k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0_P_bias_pull_up_value_ENUM_UPPER_TOKEN 100K
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0_P_bias_pull_up_value_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0, bias_pull_up_value, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0, bias_pull_up_value, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0, bias_pull_up_value, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0, bias_pull_up_value, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0_P_bias_pull_up_value_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0, bias_pull_up_value, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0, bias_pull_up_value, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0, bias_pull_up_value, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0, bias_pull_up_value, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0_P_bias_pull_up_value_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0, bias_pull_up_value, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0, bias_pull_up_value, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0, bias_pull_up_value, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0, bias_pull_up_value, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0_P_bias_pull_up_value_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0, bias_pull_up_value, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0, bias_pull_up_value, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0, bias_pull_up_value, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0, bias_pull_up_value, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0_P_bias_pull_up_value_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0_P_bias_pull_down_value "100k"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0_P_bias_pull_down_value_STRING_UNQUOTED 100k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0_P_bias_pull_down_value_STRING_TOKEN 100k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0_P_bias_pull_down_value_STRING_UPPER_TOKEN 100K
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0_P_bias_pull_down_value_ENUM_IDX 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0_P_bias_pull_down_value_ENUM_TOKEN 100k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0_P_bias_pull_down_value_ENUM_UPPER_TOKEN 100K
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0_P_bias_pull_down_value_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0, bias_pull_down_value, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0, bias_pull_down_value, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0, bias_pull_down_value, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0, bias_pull_down_value, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0_P_bias_pull_down_value_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0, bias_pull_down_value, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0, bias_pull_down_value, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0, bias_pull_down_value, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0, bias_pull_down_value, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0_P_bias_pull_down_value_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0, bias_pull_down_value, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0, bias_pull_down_value, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0, bias_pull_down_value, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0, bias_pull_down_value, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0_P_bias_pull_down_value_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0, bias_pull_down_value, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0, bias_pull_down_value, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0, bias_pull_down_value, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0, bias_pull_down_value, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0_P_bias_pull_down_value_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0_P_slew_rate "slow"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0_P_slew_rate_STRING_UNQUOTED slow
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0_P_slew_rate_STRING_TOKEN slow
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0_P_slew_rate_STRING_UPPER_TOKEN SLOW
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0_P_slew_rate_ENUM_TOKEN slow
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0_P_slew_rate_ENUM_UPPER_TOKEN SLOW
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0, slew_rate, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0, slew_rate, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0, slew_rate, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0, slew_rate, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0, slew_rate, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0, slew_rate, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0, slew_rate, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0, slew_rate, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0, slew_rate, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0, slew_rate, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0, slew_rate, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0, slew_rate, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0, slew_rate, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0_P_bias_disable 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0_P_bias_pull_up 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0_P_bias_pull_down 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0_P_drive_open_drain 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0_P_input_enable 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0_P_input_enable_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0_P_input_schmitt_enable 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0_P_input_schmitt_enable_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/pinctrl/pinmux_user/group1
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1_PATH "/soc/iomuxc@401f8000/pinctrl/pinmux_user/group1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1_FULL_NAME "group1"

/* Node parent (/soc/iomuxc@401f8000/pinctrl/pinmux_user) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1_PARENT DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1_CHILD_IDX 1

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1_ORD 252

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1_REQUIRES_ORDS \
	25, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_AD_B0_05_GPIO1_IO05 */ \
	250, /* /soc/iomuxc@401f8000/pinctrl/pinmux_user */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1_P_pinmux_IDX_0 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_05_gpio1_io05
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1_P_pinmux_IDX_0_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_05_gpio1_io05
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1, pinmux, 0)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1, pinmux, 0)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1, pinmux, 0, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1, pinmux, 0, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1_P_pinmux_LEN 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1_P_drive_strength "r0-6"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1_P_drive_strength_STRING_UNQUOTED r0-6
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1_P_drive_strength_STRING_TOKEN r0_6
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1_P_drive_strength_STRING_UPPER_TOKEN R0_6
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1_P_drive_strength_ENUM_IDX 6
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1_P_drive_strength_ENUM_TOKEN r0_6
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1_P_drive_strength_ENUM_UPPER_TOKEN R0_6
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1_P_drive_strength_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1, drive_strength, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1, drive_strength, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1, drive_strength, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1, drive_strength, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1_P_drive_strength_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1, drive_strength, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1, drive_strength, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1, drive_strength, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1, drive_strength, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1_P_drive_strength_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1, drive_strength, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1, drive_strength, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1, drive_strength, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1, drive_strength, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1_P_drive_strength_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1, drive_strength, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1, drive_strength, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1, drive_strength, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1, drive_strength, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1_P_bias_pull_up_value "47k"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1_P_bias_pull_up_value_STRING_UNQUOTED 47k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1_P_bias_pull_up_value_STRING_TOKEN 47k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1_P_bias_pull_up_value_STRING_UPPER_TOKEN 47K
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1_P_bias_pull_up_value_ENUM_IDX 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1_P_bias_pull_up_value_ENUM_TOKEN 47k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1_P_bias_pull_up_value_ENUM_UPPER_TOKEN 47K
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1_P_bias_pull_up_value_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1, bias_pull_up_value, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1, bias_pull_up_value, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1, bias_pull_up_value, 2)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1_P_bias_pull_up_value_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1, bias_pull_up_value, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1, bias_pull_up_value, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1, bias_pull_up_value, 2)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1_P_bias_pull_up_value_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1, bias_pull_up_value, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1, bias_pull_up_value, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1, bias_pull_up_value, 2, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1_P_bias_pull_up_value_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1, bias_pull_up_value, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1, bias_pull_up_value, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1, bias_pull_up_value, 2, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1_P_bias_pull_up_value_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1_P_bias_pull_down_value "100k"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1_P_bias_pull_down_value_STRING_UNQUOTED 100k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1_P_bias_pull_down_value_STRING_TOKEN 100k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1_P_bias_pull_down_value_STRING_UPPER_TOKEN 100K
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1_P_bias_pull_down_value_ENUM_IDX 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1_P_bias_pull_down_value_ENUM_TOKEN 100k
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1_P_bias_pull_down_value_ENUM_UPPER_TOKEN 100K
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1_P_bias_pull_down_value_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1, bias_pull_down_value, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1, bias_pull_down_value, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1, bias_pull_down_value, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1, bias_pull_down_value, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1_P_bias_pull_down_value_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1, bias_pull_down_value, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1, bias_pull_down_value, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1, bias_pull_down_value, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1, bias_pull_down_value, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1_P_bias_pull_down_value_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1, bias_pull_down_value, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1, bias_pull_down_value, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1, bias_pull_down_value, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1, bias_pull_down_value, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1_P_bias_pull_down_value_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1, bias_pull_down_value, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1, bias_pull_down_value, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1, bias_pull_down_value, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1, bias_pull_down_value, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1_P_bias_pull_down_value_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1_P_slew_rate "slow"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1_P_slew_rate_STRING_UNQUOTED slow
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1_P_slew_rate_STRING_TOKEN slow
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1_P_slew_rate_STRING_UPPER_TOKEN SLOW
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1_P_slew_rate_ENUM_TOKEN slow
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1_P_slew_rate_ENUM_UPPER_TOKEN SLOW
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1, slew_rate, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1, slew_rate, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1, slew_rate, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1, slew_rate, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1, slew_rate, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1, slew_rate, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1, slew_rate, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1, slew_rate, 3)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1, slew_rate, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1, slew_rate, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1, slew_rate, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1, slew_rate, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1, slew_rate, 3, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1_P_nxp_speed "100-mhz"
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1_P_nxp_speed_STRING_UNQUOTED 100-mhz
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1_P_nxp_speed_STRING_TOKEN 100_mhz
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1_P_nxp_speed_STRING_UPPER_TOKEN 100_MHZ
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1_P_nxp_speed_ENUM_IDX 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1_P_nxp_speed_ENUM_TOKEN 100_mhz
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1_P_nxp_speed_ENUM_UPPER_TOKEN 100_MHZ
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1_P_nxp_speed_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1, nxp_speed, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1, nxp_speed, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1, nxp_speed, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1, nxp_speed, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1, nxp_speed, 4) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1, nxp_speed, 5) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1, nxp_speed, 6)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1_P_nxp_speed_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1, nxp_speed, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1, nxp_speed, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1, nxp_speed, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1, nxp_speed, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1, nxp_speed, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1, nxp_speed, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1, nxp_speed, 6)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1_P_nxp_speed_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1, nxp_speed, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1, nxp_speed, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1, nxp_speed, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1, nxp_speed, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1, nxp_speed, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1, nxp_speed, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1, nxp_speed, 6, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1_P_nxp_speed_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1, nxp_speed, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1, nxp_speed, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1, nxp_speed, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1, nxp_speed, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1, nxp_speed, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1, nxp_speed, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1, nxp_speed, 6, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1_P_nxp_speed_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1_P_bias_disable 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1_P_bias_pull_up 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1_P_bias_pull_down 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1_P_drive_open_drain 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1_P_input_enable 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1_P_input_enable_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1_P_input_schmitt_enable 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1_P_input_schmitt_enable_EXISTS 1

/*
 * Devicetree node: /soc/qtmr@401dc000
 *
 * Node identifier: DT_N_S_soc_S_qtmr_401dc000
 *
 * Binding (compatible = nxp,imx-qtmr):
 *   $ZEPHYR_BASE/dts/bindings/counter/nxp,imx-qtmr.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_qtmr_401dc000_PATH "/soc/qtmr@401dc000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_qtmr_401dc000_FULL_NAME "qtmr@401dc000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_qtmr_401dc000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_qtmr_401dc000_CHILD_IDX 7

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_qtmr_401dc000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_qtmr_401dc000_S_timer0) fn(DT_N_S_soc_S_qtmr_401dc000_S_timer1) fn(DT_N_S_soc_S_qtmr_401dc000_S_timer2) fn(DT_N_S_soc_S_qtmr_401dc000_S_timer3)
#define DT_N_S_soc_S_qtmr_401dc000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_qtmr_401dc000_S_timer0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_qtmr_401dc000_S_timer1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_qtmr_401dc000_S_timer2) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_qtmr_401dc000_S_timer3)
#define DT_N_S_soc_S_qtmr_401dc000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_qtmr_401dc000_S_timer0, __VA_ARGS__) fn(DT_N_S_soc_S_qtmr_401dc000_S_timer1, __VA_ARGS__) fn(DT_N_S_soc_S_qtmr_401dc000_S_timer2, __VA_ARGS__) fn(DT_N_S_soc_S_qtmr_401dc000_S_timer3, __VA_ARGS__)
#define DT_N_S_soc_S_qtmr_401dc000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_qtmr_401dc000_S_timer0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_qtmr_401dc000_S_timer1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_qtmr_401dc000_S_timer2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_qtmr_401dc000_S_timer3, __VA_ARGS__)
#define DT_N_S_soc_S_qtmr_401dc000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_qtmr_401dc000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_qtmr_401dc000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_qtmr_401dc000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_qtmr_401dc000_ORD 253

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_qtmr_401dc000_REQUIRES_ORDS \
	11, /* /soc */ \
	12, /* /soc/interrupt-controller@e000e100 */ \
	60, /* /soc/ccm@400fc000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_qtmr_401dc000_SUPPORTS_ORDS \
	254, /* /soc/qtmr@401dc000/timer0 */ \
	255, /* /soc/qtmr@401dc000/timer1 */ \
	256, /* /soc/qtmr@401dc000/timer2 */ \
	257, /* /soc/qtmr@401dc000/timer3 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_qtmr_401dc000_EXISTS 1
#define DT_N_INST_0_nxp_imx_qtmr DT_N_S_soc_S_qtmr_401dc000
#define DT_N_NODELABEL_qtmr1     DT_N_S_soc_S_qtmr_401dc000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_qtmr_401dc000_REG_NUM 1
#define DT_N_S_soc_S_qtmr_401dc000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qtmr_401dc000_REG_IDX_0_VAL_ADDRESS 1075691520 /* 0x401dc000 */
#define DT_N_S_soc_S_qtmr_401dc000_REG_IDX_0_VAL_SIZE 122 /* 0x7a */
#define DT_N_S_soc_S_qtmr_401dc000_RANGES_NUM 0
#define DT_N_S_soc_S_qtmr_401dc000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_qtmr_401dc000_IRQ_NUM 1
#define DT_N_S_soc_S_qtmr_401dc000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qtmr_401dc000_IRQ_IDX_0_VAL_irq 133
#define DT_N_S_soc_S_qtmr_401dc000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_qtmr_401dc000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qtmr_401dc000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_qtmr_401dc000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_qtmr_401dc000_COMPAT_MATCHES_nxp_imx_qtmr 1
#define DT_N_S_soc_S_qtmr_401dc000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qtmr_401dc000_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_soc_S_qtmr_401dc000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qtmr_401dc000_COMPAT_MODEL_IDX_0 "imx-qtmr"
#define DT_N_S_soc_S_qtmr_401dc000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_qtmr_401dc000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_qtmr_401dc000_P_reg {1075691520 /* 0x401dc000 */, 122 /* 0x7a */}
#define DT_N_S_soc_S_qtmr_401dc000_P_reg_IDX_0 1075691520
#define DT_N_S_soc_S_qtmr_401dc000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qtmr_401dc000_P_reg_IDX_1 122
#define DT_N_S_soc_S_qtmr_401dc000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_qtmr_401dc000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_qtmr_401dc000, reg, 0) \
	fn(DT_N_S_soc_S_qtmr_401dc000, reg, 1)
#define DT_N_S_soc_S_qtmr_401dc000_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_qtmr_401dc000, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401dc000, reg, 1)
#define DT_N_S_soc_S_qtmr_401dc000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_qtmr_401dc000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qtmr_401dc000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_qtmr_401dc000_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_qtmr_401dc000, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401dc000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_qtmr_401dc000_P_reg_EXISTS 1
#define DT_N_S_soc_S_qtmr_401dc000_P_interrupts {133 /* 0x85 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_qtmr_401dc000_P_interrupts_IDX_0 133
#define DT_N_S_soc_S_qtmr_401dc000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qtmr_401dc000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_qtmr_401dc000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_qtmr_401dc000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_qtmr_401dc000, interrupts, 0) \
	fn(DT_N_S_soc_S_qtmr_401dc000, interrupts, 1)
#define DT_N_S_soc_S_qtmr_401dc000_P_interrupts_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_qtmr_401dc000, interrupts, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401dc000, interrupts, 1)
#define DT_N_S_soc_S_qtmr_401dc000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_qtmr_401dc000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qtmr_401dc000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_qtmr_401dc000_P_interrupts_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_qtmr_401dc000, interrupts, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401dc000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_qtmr_401dc000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_qtmr_401dc000_P_compatible {"nxp,imx-qtmr"}
#define DT_N_S_soc_S_qtmr_401dc000_P_compatible_IDX_0 "nxp,imx-qtmr"
#define DT_N_S_soc_S_qtmr_401dc000_P_compatible_IDX_0_STRING_UNQUOTED nxp,imx-qtmr
#define DT_N_S_soc_S_qtmr_401dc000_P_compatible_IDX_0_STRING_TOKEN nxp_imx_qtmr
#define DT_N_S_soc_S_qtmr_401dc000_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_IMX_QTMR
#define DT_N_S_soc_S_qtmr_401dc000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qtmr_401dc000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_qtmr_401dc000, compatible, 0)
#define DT_N_S_soc_S_qtmr_401dc000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_qtmr_401dc000, compatible, 0)
#define DT_N_S_soc_S_qtmr_401dc000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_qtmr_401dc000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_qtmr_401dc000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_qtmr_401dc000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_qtmr_401dc000_P_compatible_LEN 1
#define DT_N_S_soc_S_qtmr_401dc000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_qtmr_401dc000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qtmr_401dc000_P_clocks_IDX_0_PH DT_N_S_soc_S_ccm_400fc000
#define DT_N_S_soc_S_qtmr_401dc000_P_clocks_IDX_0_VAL_name 3328
#define DT_N_S_soc_S_qtmr_401dc000_P_clocks_IDX_0_VAL_name_EXISTS 1
#define DT_N_S_soc_S_qtmr_401dc000_P_clocks_IDX_0_VAL_offset 0
#define DT_N_S_soc_S_qtmr_401dc000_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_qtmr_401dc000_P_clocks_IDX_0_VAL_bits 0
#define DT_N_S_soc_S_qtmr_401dc000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_qtmr_401dc000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_qtmr_401dc000, clocks, 0)
#define DT_N_S_soc_S_qtmr_401dc000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_qtmr_401dc000, clocks, 0)
#define DT_N_S_soc_S_qtmr_401dc000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_qtmr_401dc000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_qtmr_401dc000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_qtmr_401dc000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_qtmr_401dc000_P_clocks_LEN 1
#define DT_N_S_soc_S_qtmr_401dc000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_qtmr_401dc000_P_wakeup_source 0
#define DT_N_S_soc_S_qtmr_401dc000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/qtmr@401dc000/timer0
 *
 * Node identifier: DT_N_S_soc_S_qtmr_401dc000_S_timer0
 *
 * Binding (compatible = nxp,imx-tmr):
 *   $ZEPHYR_BASE/dts/bindings/counter/nxp,imx-tmr.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_qtmr_401dc000_S_timer0_PATH "/soc/qtmr@401dc000/timer0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_qtmr_401dc000_S_timer0_FULL_NAME "timer0"

/* Node parent (/soc/qtmr@401dc000) identifier: */
#define DT_N_S_soc_S_qtmr_401dc000_S_timer0_PARENT DT_N_S_soc_S_qtmr_401dc000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_qtmr_401dc000_S_timer0_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_qtmr_401dc000_S_timer0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_qtmr_401dc000_S_timer0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_qtmr_401dc000_S_timer0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_qtmr_401dc000_S_timer0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_qtmr_401dc000_S_timer0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_qtmr_401dc000_S_timer0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_qtmr_401dc000_S_timer0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_qtmr_401dc000_S_timer0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_qtmr_401dc000_S_timer0_ORD 254

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_qtmr_401dc000_S_timer0_REQUIRES_ORDS \
	253, /* /soc/qtmr@401dc000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_qtmr_401dc000_S_timer0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_qtmr_401dc000_S_timer0_EXISTS 1
#define DT_N_INST_0_nxp_imx_tmr     DT_N_S_soc_S_qtmr_401dc000_S_timer0
#define DT_N_NODELABEL_qtmr1_timer0 DT_N_S_soc_S_qtmr_401dc000_S_timer0

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_qtmr_401dc000_S_timer0_REG_NUM 0
#define DT_N_S_soc_S_qtmr_401dc000_S_timer0_RANGES_NUM 0
#define DT_N_S_soc_S_qtmr_401dc000_S_timer0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_qtmr_401dc000_S_timer0_IRQ_NUM 0
#define DT_N_S_soc_S_qtmr_401dc000_S_timer0_COMPAT_MATCHES_nxp_imx_tmr 1
#define DT_N_S_soc_S_qtmr_401dc000_S_timer0_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qtmr_401dc000_S_timer0_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_soc_S_qtmr_401dc000_S_timer0_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qtmr_401dc000_S_timer0_COMPAT_MODEL_IDX_0 "imx-tmr"
#define DT_N_S_soc_S_qtmr_401dc000_S_timer0_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_qtmr_401dc000_S_timer0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_qtmr_401dc000_S_timer0_P_channel 0
#define DT_N_S_soc_S_qtmr_401dc000_S_timer0_P_channel_ENUM_IDX 0
#define DT_N_S_soc_S_qtmr_401dc000_S_timer0_P_channel_EXISTS 1
#define DT_N_S_soc_S_qtmr_401dc000_S_timer0_P_status "disabled"
#define DT_N_S_soc_S_qtmr_401dc000_S_timer0_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_qtmr_401dc000_S_timer0_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_qtmr_401dc000_S_timer0_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_qtmr_401dc000_S_timer0_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_qtmr_401dc000_S_timer0_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_qtmr_401dc000_S_timer0_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_qtmr_401dc000_S_timer0_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_qtmr_401dc000_S_timer0, status, 0) \
	fn(DT_N_S_soc_S_qtmr_401dc000_S_timer0, status, 1) \
	fn(DT_N_S_soc_S_qtmr_401dc000_S_timer0, status, 2) \
	fn(DT_N_S_soc_S_qtmr_401dc000_S_timer0, status, 3) \
	fn(DT_N_S_soc_S_qtmr_401dc000_S_timer0, status, 4) \
	fn(DT_N_S_soc_S_qtmr_401dc000_S_timer0, status, 5) \
	fn(DT_N_S_soc_S_qtmr_401dc000_S_timer0, status, 6) \
	fn(DT_N_S_soc_S_qtmr_401dc000_S_timer0, status, 7)
#define DT_N_S_soc_S_qtmr_401dc000_S_timer0_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_qtmr_401dc000_S_timer0, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401dc000_S_timer0, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401dc000_S_timer0, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401dc000_S_timer0, status, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401dc000_S_timer0, status, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401dc000_S_timer0, status, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401dc000_S_timer0, status, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401dc000_S_timer0, status, 7)
#define DT_N_S_soc_S_qtmr_401dc000_S_timer0_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_qtmr_401dc000_S_timer0, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qtmr_401dc000_S_timer0, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qtmr_401dc000_S_timer0, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qtmr_401dc000_S_timer0, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qtmr_401dc000_S_timer0, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qtmr_401dc000_S_timer0, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qtmr_401dc000_S_timer0, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qtmr_401dc000_S_timer0, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_qtmr_401dc000_S_timer0_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_qtmr_401dc000_S_timer0, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401dc000_S_timer0, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401dc000_S_timer0, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401dc000_S_timer0, status, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401dc000_S_timer0, status, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401dc000_S_timer0, status, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401dc000_S_timer0, status, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401dc000_S_timer0, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_qtmr_401dc000_S_timer0_P_status_EXISTS 1
#define DT_N_S_soc_S_qtmr_401dc000_S_timer0_P_compatible {"nxp,imx-tmr"}
#define DT_N_S_soc_S_qtmr_401dc000_S_timer0_P_compatible_IDX_0 "nxp,imx-tmr"
#define DT_N_S_soc_S_qtmr_401dc000_S_timer0_P_compatible_IDX_0_STRING_UNQUOTED nxp,imx-tmr
#define DT_N_S_soc_S_qtmr_401dc000_S_timer0_P_compatible_IDX_0_STRING_TOKEN nxp_imx_tmr
#define DT_N_S_soc_S_qtmr_401dc000_S_timer0_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_IMX_TMR
#define DT_N_S_soc_S_qtmr_401dc000_S_timer0_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qtmr_401dc000_S_timer0_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_qtmr_401dc000_S_timer0, compatible, 0)
#define DT_N_S_soc_S_qtmr_401dc000_S_timer0_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_qtmr_401dc000_S_timer0, compatible, 0)
#define DT_N_S_soc_S_qtmr_401dc000_S_timer0_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_qtmr_401dc000_S_timer0, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_qtmr_401dc000_S_timer0_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_qtmr_401dc000_S_timer0, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_qtmr_401dc000_S_timer0_P_compatible_LEN 1
#define DT_N_S_soc_S_qtmr_401dc000_S_timer0_P_compatible_EXISTS 1
#define DT_N_S_soc_S_qtmr_401dc000_S_timer0_P_wakeup_source 0
#define DT_N_S_soc_S_qtmr_401dc000_S_timer0_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/qtmr@401dc000/timer1
 *
 * Node identifier: DT_N_S_soc_S_qtmr_401dc000_S_timer1
 *
 * Binding (compatible = nxp,imx-tmr):
 *   $ZEPHYR_BASE/dts/bindings/counter/nxp,imx-tmr.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_qtmr_401dc000_S_timer1_PATH "/soc/qtmr@401dc000/timer1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_qtmr_401dc000_S_timer1_FULL_NAME "timer1"

/* Node parent (/soc/qtmr@401dc000) identifier: */
#define DT_N_S_soc_S_qtmr_401dc000_S_timer1_PARENT DT_N_S_soc_S_qtmr_401dc000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_qtmr_401dc000_S_timer1_CHILD_IDX 1

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_qtmr_401dc000_S_timer1_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_qtmr_401dc000_S_timer1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_qtmr_401dc000_S_timer1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_qtmr_401dc000_S_timer1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_qtmr_401dc000_S_timer1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_qtmr_401dc000_S_timer1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_qtmr_401dc000_S_timer1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_qtmr_401dc000_S_timer1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_qtmr_401dc000_S_timer1_ORD 255

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_qtmr_401dc000_S_timer1_REQUIRES_ORDS \
	253, /* /soc/qtmr@401dc000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_qtmr_401dc000_S_timer1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_qtmr_401dc000_S_timer1_EXISTS 1
#define DT_N_INST_1_nxp_imx_tmr     DT_N_S_soc_S_qtmr_401dc000_S_timer1
#define DT_N_NODELABEL_qtmr1_timer1 DT_N_S_soc_S_qtmr_401dc000_S_timer1

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_qtmr_401dc000_S_timer1_REG_NUM 0
#define DT_N_S_soc_S_qtmr_401dc000_S_timer1_RANGES_NUM 0
#define DT_N_S_soc_S_qtmr_401dc000_S_timer1_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_qtmr_401dc000_S_timer1_IRQ_NUM 0
#define DT_N_S_soc_S_qtmr_401dc000_S_timer1_COMPAT_MATCHES_nxp_imx_tmr 1
#define DT_N_S_soc_S_qtmr_401dc000_S_timer1_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qtmr_401dc000_S_timer1_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_soc_S_qtmr_401dc000_S_timer1_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qtmr_401dc000_S_timer1_COMPAT_MODEL_IDX_0 "imx-tmr"
#define DT_N_S_soc_S_qtmr_401dc000_S_timer1_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_qtmr_401dc000_S_timer1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_qtmr_401dc000_S_timer1_P_channel 1
#define DT_N_S_soc_S_qtmr_401dc000_S_timer1_P_channel_ENUM_IDX 1
#define DT_N_S_soc_S_qtmr_401dc000_S_timer1_P_channel_EXISTS 1
#define DT_N_S_soc_S_qtmr_401dc000_S_timer1_P_status "disabled"
#define DT_N_S_soc_S_qtmr_401dc000_S_timer1_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_qtmr_401dc000_S_timer1_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_qtmr_401dc000_S_timer1_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_qtmr_401dc000_S_timer1_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_qtmr_401dc000_S_timer1_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_qtmr_401dc000_S_timer1_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_qtmr_401dc000_S_timer1_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_qtmr_401dc000_S_timer1, status, 0) \
	fn(DT_N_S_soc_S_qtmr_401dc000_S_timer1, status, 1) \
	fn(DT_N_S_soc_S_qtmr_401dc000_S_timer1, status, 2) \
	fn(DT_N_S_soc_S_qtmr_401dc000_S_timer1, status, 3) \
	fn(DT_N_S_soc_S_qtmr_401dc000_S_timer1, status, 4) \
	fn(DT_N_S_soc_S_qtmr_401dc000_S_timer1, status, 5) \
	fn(DT_N_S_soc_S_qtmr_401dc000_S_timer1, status, 6) \
	fn(DT_N_S_soc_S_qtmr_401dc000_S_timer1, status, 7)
#define DT_N_S_soc_S_qtmr_401dc000_S_timer1_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_qtmr_401dc000_S_timer1, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401dc000_S_timer1, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401dc000_S_timer1, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401dc000_S_timer1, status, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401dc000_S_timer1, status, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401dc000_S_timer1, status, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401dc000_S_timer1, status, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401dc000_S_timer1, status, 7)
#define DT_N_S_soc_S_qtmr_401dc000_S_timer1_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_qtmr_401dc000_S_timer1, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qtmr_401dc000_S_timer1, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qtmr_401dc000_S_timer1, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qtmr_401dc000_S_timer1, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qtmr_401dc000_S_timer1, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qtmr_401dc000_S_timer1, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qtmr_401dc000_S_timer1, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qtmr_401dc000_S_timer1, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_qtmr_401dc000_S_timer1_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_qtmr_401dc000_S_timer1, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401dc000_S_timer1, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401dc000_S_timer1, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401dc000_S_timer1, status, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401dc000_S_timer1, status, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401dc000_S_timer1, status, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401dc000_S_timer1, status, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401dc000_S_timer1, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_qtmr_401dc000_S_timer1_P_status_EXISTS 1
#define DT_N_S_soc_S_qtmr_401dc000_S_timer1_P_compatible {"nxp,imx-tmr"}
#define DT_N_S_soc_S_qtmr_401dc000_S_timer1_P_compatible_IDX_0 "nxp,imx-tmr"
#define DT_N_S_soc_S_qtmr_401dc000_S_timer1_P_compatible_IDX_0_STRING_UNQUOTED nxp,imx-tmr
#define DT_N_S_soc_S_qtmr_401dc000_S_timer1_P_compatible_IDX_0_STRING_TOKEN nxp_imx_tmr
#define DT_N_S_soc_S_qtmr_401dc000_S_timer1_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_IMX_TMR
#define DT_N_S_soc_S_qtmr_401dc000_S_timer1_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qtmr_401dc000_S_timer1_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_qtmr_401dc000_S_timer1, compatible, 0)
#define DT_N_S_soc_S_qtmr_401dc000_S_timer1_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_qtmr_401dc000_S_timer1, compatible, 0)
#define DT_N_S_soc_S_qtmr_401dc000_S_timer1_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_qtmr_401dc000_S_timer1, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_qtmr_401dc000_S_timer1_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_qtmr_401dc000_S_timer1, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_qtmr_401dc000_S_timer1_P_compatible_LEN 1
#define DT_N_S_soc_S_qtmr_401dc000_S_timer1_P_compatible_EXISTS 1
#define DT_N_S_soc_S_qtmr_401dc000_S_timer1_P_wakeup_source 0
#define DT_N_S_soc_S_qtmr_401dc000_S_timer1_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/qtmr@401dc000/timer2
 *
 * Node identifier: DT_N_S_soc_S_qtmr_401dc000_S_timer2
 *
 * Binding (compatible = nxp,imx-tmr):
 *   $ZEPHYR_BASE/dts/bindings/counter/nxp,imx-tmr.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_qtmr_401dc000_S_timer2_PATH "/soc/qtmr@401dc000/timer2"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_qtmr_401dc000_S_timer2_FULL_NAME "timer2"

/* Node parent (/soc/qtmr@401dc000) identifier: */
#define DT_N_S_soc_S_qtmr_401dc000_S_timer2_PARENT DT_N_S_soc_S_qtmr_401dc000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_qtmr_401dc000_S_timer2_CHILD_IDX 2

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_qtmr_401dc000_S_timer2_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_qtmr_401dc000_S_timer2_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_qtmr_401dc000_S_timer2_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_qtmr_401dc000_S_timer2_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_qtmr_401dc000_S_timer2_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_qtmr_401dc000_S_timer2_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_qtmr_401dc000_S_timer2_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_qtmr_401dc000_S_timer2_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_qtmr_401dc000_S_timer2_ORD 256

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_qtmr_401dc000_S_timer2_REQUIRES_ORDS \
	253, /* /soc/qtmr@401dc000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_qtmr_401dc000_S_timer2_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_qtmr_401dc000_S_timer2_EXISTS 1
#define DT_N_INST_2_nxp_imx_tmr     DT_N_S_soc_S_qtmr_401dc000_S_timer2
#define DT_N_NODELABEL_qtmr1_timer2 DT_N_S_soc_S_qtmr_401dc000_S_timer2

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_qtmr_401dc000_S_timer2_REG_NUM 0
#define DT_N_S_soc_S_qtmr_401dc000_S_timer2_RANGES_NUM 0
#define DT_N_S_soc_S_qtmr_401dc000_S_timer2_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_qtmr_401dc000_S_timer2_IRQ_NUM 0
#define DT_N_S_soc_S_qtmr_401dc000_S_timer2_COMPAT_MATCHES_nxp_imx_tmr 1
#define DT_N_S_soc_S_qtmr_401dc000_S_timer2_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qtmr_401dc000_S_timer2_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_soc_S_qtmr_401dc000_S_timer2_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qtmr_401dc000_S_timer2_COMPAT_MODEL_IDX_0 "imx-tmr"
#define DT_N_S_soc_S_qtmr_401dc000_S_timer2_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_qtmr_401dc000_S_timer2_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_qtmr_401dc000_S_timer2_P_channel 2
#define DT_N_S_soc_S_qtmr_401dc000_S_timer2_P_channel_ENUM_IDX 2
#define DT_N_S_soc_S_qtmr_401dc000_S_timer2_P_channel_EXISTS 1
#define DT_N_S_soc_S_qtmr_401dc000_S_timer2_P_status "disabled"
#define DT_N_S_soc_S_qtmr_401dc000_S_timer2_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_qtmr_401dc000_S_timer2_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_qtmr_401dc000_S_timer2_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_qtmr_401dc000_S_timer2_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_qtmr_401dc000_S_timer2_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_qtmr_401dc000_S_timer2_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_qtmr_401dc000_S_timer2_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_qtmr_401dc000_S_timer2, status, 0) \
	fn(DT_N_S_soc_S_qtmr_401dc000_S_timer2, status, 1) \
	fn(DT_N_S_soc_S_qtmr_401dc000_S_timer2, status, 2) \
	fn(DT_N_S_soc_S_qtmr_401dc000_S_timer2, status, 3) \
	fn(DT_N_S_soc_S_qtmr_401dc000_S_timer2, status, 4) \
	fn(DT_N_S_soc_S_qtmr_401dc000_S_timer2, status, 5) \
	fn(DT_N_S_soc_S_qtmr_401dc000_S_timer2, status, 6) \
	fn(DT_N_S_soc_S_qtmr_401dc000_S_timer2, status, 7)
#define DT_N_S_soc_S_qtmr_401dc000_S_timer2_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_qtmr_401dc000_S_timer2, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401dc000_S_timer2, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401dc000_S_timer2, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401dc000_S_timer2, status, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401dc000_S_timer2, status, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401dc000_S_timer2, status, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401dc000_S_timer2, status, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401dc000_S_timer2, status, 7)
#define DT_N_S_soc_S_qtmr_401dc000_S_timer2_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_qtmr_401dc000_S_timer2, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qtmr_401dc000_S_timer2, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qtmr_401dc000_S_timer2, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qtmr_401dc000_S_timer2, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qtmr_401dc000_S_timer2, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qtmr_401dc000_S_timer2, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qtmr_401dc000_S_timer2, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qtmr_401dc000_S_timer2, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_qtmr_401dc000_S_timer2_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_qtmr_401dc000_S_timer2, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401dc000_S_timer2, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401dc000_S_timer2, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401dc000_S_timer2, status, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401dc000_S_timer2, status, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401dc000_S_timer2, status, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401dc000_S_timer2, status, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401dc000_S_timer2, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_qtmr_401dc000_S_timer2_P_status_EXISTS 1
#define DT_N_S_soc_S_qtmr_401dc000_S_timer2_P_compatible {"nxp,imx-tmr"}
#define DT_N_S_soc_S_qtmr_401dc000_S_timer2_P_compatible_IDX_0 "nxp,imx-tmr"
#define DT_N_S_soc_S_qtmr_401dc000_S_timer2_P_compatible_IDX_0_STRING_UNQUOTED nxp,imx-tmr
#define DT_N_S_soc_S_qtmr_401dc000_S_timer2_P_compatible_IDX_0_STRING_TOKEN nxp_imx_tmr
#define DT_N_S_soc_S_qtmr_401dc000_S_timer2_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_IMX_TMR
#define DT_N_S_soc_S_qtmr_401dc000_S_timer2_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qtmr_401dc000_S_timer2_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_qtmr_401dc000_S_timer2, compatible, 0)
#define DT_N_S_soc_S_qtmr_401dc000_S_timer2_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_qtmr_401dc000_S_timer2, compatible, 0)
#define DT_N_S_soc_S_qtmr_401dc000_S_timer2_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_qtmr_401dc000_S_timer2, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_qtmr_401dc000_S_timer2_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_qtmr_401dc000_S_timer2, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_qtmr_401dc000_S_timer2_P_compatible_LEN 1
#define DT_N_S_soc_S_qtmr_401dc000_S_timer2_P_compatible_EXISTS 1
#define DT_N_S_soc_S_qtmr_401dc000_S_timer2_P_wakeup_source 0
#define DT_N_S_soc_S_qtmr_401dc000_S_timer2_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/qtmr@401dc000/timer3
 *
 * Node identifier: DT_N_S_soc_S_qtmr_401dc000_S_timer3
 *
 * Binding (compatible = nxp,imx-tmr):
 *   $ZEPHYR_BASE/dts/bindings/counter/nxp,imx-tmr.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_qtmr_401dc000_S_timer3_PATH "/soc/qtmr@401dc000/timer3"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_qtmr_401dc000_S_timer3_FULL_NAME "timer3"

/* Node parent (/soc/qtmr@401dc000) identifier: */
#define DT_N_S_soc_S_qtmr_401dc000_S_timer3_PARENT DT_N_S_soc_S_qtmr_401dc000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_qtmr_401dc000_S_timer3_CHILD_IDX 3

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_qtmr_401dc000_S_timer3_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_qtmr_401dc000_S_timer3_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_qtmr_401dc000_S_timer3_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_qtmr_401dc000_S_timer3_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_qtmr_401dc000_S_timer3_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_qtmr_401dc000_S_timer3_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_qtmr_401dc000_S_timer3_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_qtmr_401dc000_S_timer3_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_qtmr_401dc000_S_timer3_ORD 257

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_qtmr_401dc000_S_timer3_REQUIRES_ORDS \
	253, /* /soc/qtmr@401dc000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_qtmr_401dc000_S_timer3_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_qtmr_401dc000_S_timer3_EXISTS 1
#define DT_N_INST_3_nxp_imx_tmr     DT_N_S_soc_S_qtmr_401dc000_S_timer3
#define DT_N_NODELABEL_qtmr1_timer3 DT_N_S_soc_S_qtmr_401dc000_S_timer3

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_qtmr_401dc000_S_timer3_REG_NUM 0
#define DT_N_S_soc_S_qtmr_401dc000_S_timer3_RANGES_NUM 0
#define DT_N_S_soc_S_qtmr_401dc000_S_timer3_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_qtmr_401dc000_S_timer3_IRQ_NUM 0
#define DT_N_S_soc_S_qtmr_401dc000_S_timer3_COMPAT_MATCHES_nxp_imx_tmr 1
#define DT_N_S_soc_S_qtmr_401dc000_S_timer3_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qtmr_401dc000_S_timer3_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_soc_S_qtmr_401dc000_S_timer3_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qtmr_401dc000_S_timer3_COMPAT_MODEL_IDX_0 "imx-tmr"
#define DT_N_S_soc_S_qtmr_401dc000_S_timer3_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_qtmr_401dc000_S_timer3_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_qtmr_401dc000_S_timer3_P_channel 3
#define DT_N_S_soc_S_qtmr_401dc000_S_timer3_P_channel_ENUM_IDX 3
#define DT_N_S_soc_S_qtmr_401dc000_S_timer3_P_channel_EXISTS 1
#define DT_N_S_soc_S_qtmr_401dc000_S_timer3_P_status "disabled"
#define DT_N_S_soc_S_qtmr_401dc000_S_timer3_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_qtmr_401dc000_S_timer3_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_qtmr_401dc000_S_timer3_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_qtmr_401dc000_S_timer3_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_qtmr_401dc000_S_timer3_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_qtmr_401dc000_S_timer3_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_qtmr_401dc000_S_timer3_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_qtmr_401dc000_S_timer3, status, 0) \
	fn(DT_N_S_soc_S_qtmr_401dc000_S_timer3, status, 1) \
	fn(DT_N_S_soc_S_qtmr_401dc000_S_timer3, status, 2) \
	fn(DT_N_S_soc_S_qtmr_401dc000_S_timer3, status, 3) \
	fn(DT_N_S_soc_S_qtmr_401dc000_S_timer3, status, 4) \
	fn(DT_N_S_soc_S_qtmr_401dc000_S_timer3, status, 5) \
	fn(DT_N_S_soc_S_qtmr_401dc000_S_timer3, status, 6) \
	fn(DT_N_S_soc_S_qtmr_401dc000_S_timer3, status, 7)
#define DT_N_S_soc_S_qtmr_401dc000_S_timer3_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_qtmr_401dc000_S_timer3, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401dc000_S_timer3, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401dc000_S_timer3, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401dc000_S_timer3, status, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401dc000_S_timer3, status, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401dc000_S_timer3, status, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401dc000_S_timer3, status, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401dc000_S_timer3, status, 7)
#define DT_N_S_soc_S_qtmr_401dc000_S_timer3_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_qtmr_401dc000_S_timer3, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qtmr_401dc000_S_timer3, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qtmr_401dc000_S_timer3, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qtmr_401dc000_S_timer3, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qtmr_401dc000_S_timer3, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qtmr_401dc000_S_timer3, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qtmr_401dc000_S_timer3, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qtmr_401dc000_S_timer3, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_qtmr_401dc000_S_timer3_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_qtmr_401dc000_S_timer3, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401dc000_S_timer3, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401dc000_S_timer3, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401dc000_S_timer3, status, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401dc000_S_timer3, status, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401dc000_S_timer3, status, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401dc000_S_timer3, status, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401dc000_S_timer3, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_qtmr_401dc000_S_timer3_P_status_EXISTS 1
#define DT_N_S_soc_S_qtmr_401dc000_S_timer3_P_compatible {"nxp,imx-tmr"}
#define DT_N_S_soc_S_qtmr_401dc000_S_timer3_P_compatible_IDX_0 "nxp,imx-tmr"
#define DT_N_S_soc_S_qtmr_401dc000_S_timer3_P_compatible_IDX_0_STRING_UNQUOTED nxp,imx-tmr
#define DT_N_S_soc_S_qtmr_401dc000_S_timer3_P_compatible_IDX_0_STRING_TOKEN nxp_imx_tmr
#define DT_N_S_soc_S_qtmr_401dc000_S_timer3_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_IMX_TMR
#define DT_N_S_soc_S_qtmr_401dc000_S_timer3_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qtmr_401dc000_S_timer3_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_qtmr_401dc000_S_timer3, compatible, 0)
#define DT_N_S_soc_S_qtmr_401dc000_S_timer3_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_qtmr_401dc000_S_timer3, compatible, 0)
#define DT_N_S_soc_S_qtmr_401dc000_S_timer3_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_qtmr_401dc000_S_timer3, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_qtmr_401dc000_S_timer3_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_qtmr_401dc000_S_timer3, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_qtmr_401dc000_S_timer3_P_compatible_LEN 1
#define DT_N_S_soc_S_qtmr_401dc000_S_timer3_P_compatible_EXISTS 1
#define DT_N_S_soc_S_qtmr_401dc000_S_timer3_P_wakeup_source 0
#define DT_N_S_soc_S_qtmr_401dc000_S_timer3_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/qtmr@401e0000
 *
 * Node identifier: DT_N_S_soc_S_qtmr_401e0000
 *
 * Binding (compatible = nxp,imx-qtmr):
 *   $ZEPHYR_BASE/dts/bindings/counter/nxp,imx-qtmr.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_qtmr_401e0000_PATH "/soc/qtmr@401e0000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_qtmr_401e0000_FULL_NAME "qtmr@401e0000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_qtmr_401e0000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_qtmr_401e0000_CHILD_IDX 8

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_qtmr_401e0000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_qtmr_401e0000_S_timer0) fn(DT_N_S_soc_S_qtmr_401e0000_S_timer1) fn(DT_N_S_soc_S_qtmr_401e0000_S_timer2) fn(DT_N_S_soc_S_qtmr_401e0000_S_timer3)
#define DT_N_S_soc_S_qtmr_401e0000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_qtmr_401e0000_S_timer0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_qtmr_401e0000_S_timer1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_qtmr_401e0000_S_timer2) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_qtmr_401e0000_S_timer3)
#define DT_N_S_soc_S_qtmr_401e0000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_qtmr_401e0000_S_timer0, __VA_ARGS__) fn(DT_N_S_soc_S_qtmr_401e0000_S_timer1, __VA_ARGS__) fn(DT_N_S_soc_S_qtmr_401e0000_S_timer2, __VA_ARGS__) fn(DT_N_S_soc_S_qtmr_401e0000_S_timer3, __VA_ARGS__)
#define DT_N_S_soc_S_qtmr_401e0000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_qtmr_401e0000_S_timer0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_qtmr_401e0000_S_timer1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_qtmr_401e0000_S_timer2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_qtmr_401e0000_S_timer3, __VA_ARGS__)
#define DT_N_S_soc_S_qtmr_401e0000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_qtmr_401e0000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_qtmr_401e0000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_qtmr_401e0000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_qtmr_401e0000_ORD 258

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_qtmr_401e0000_REQUIRES_ORDS \
	11, /* /soc */ \
	12, /* /soc/interrupt-controller@e000e100 */ \
	60, /* /soc/ccm@400fc000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_qtmr_401e0000_SUPPORTS_ORDS \
	259, /* /soc/qtmr@401e0000/timer0 */ \
	260, /* /soc/qtmr@401e0000/timer1 */ \
	261, /* /soc/qtmr@401e0000/timer2 */ \
	262, /* /soc/qtmr@401e0000/timer3 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_qtmr_401e0000_EXISTS 1
#define DT_N_INST_1_nxp_imx_qtmr DT_N_S_soc_S_qtmr_401e0000
#define DT_N_NODELABEL_qtmr2     DT_N_S_soc_S_qtmr_401e0000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_qtmr_401e0000_REG_NUM 1
#define DT_N_S_soc_S_qtmr_401e0000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qtmr_401e0000_REG_IDX_0_VAL_ADDRESS 1075707904 /* 0x401e0000 */
#define DT_N_S_soc_S_qtmr_401e0000_REG_IDX_0_VAL_SIZE 122 /* 0x7a */
#define DT_N_S_soc_S_qtmr_401e0000_RANGES_NUM 0
#define DT_N_S_soc_S_qtmr_401e0000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_qtmr_401e0000_IRQ_NUM 1
#define DT_N_S_soc_S_qtmr_401e0000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qtmr_401e0000_IRQ_IDX_0_VAL_irq 134
#define DT_N_S_soc_S_qtmr_401e0000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_qtmr_401e0000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qtmr_401e0000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_qtmr_401e0000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_qtmr_401e0000_COMPAT_MATCHES_nxp_imx_qtmr 1
#define DT_N_S_soc_S_qtmr_401e0000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qtmr_401e0000_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_soc_S_qtmr_401e0000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qtmr_401e0000_COMPAT_MODEL_IDX_0 "imx-qtmr"
#define DT_N_S_soc_S_qtmr_401e0000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_qtmr_401e0000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_qtmr_401e0000_P_reg {1075707904 /* 0x401e0000 */, 122 /* 0x7a */}
#define DT_N_S_soc_S_qtmr_401e0000_P_reg_IDX_0 1075707904
#define DT_N_S_soc_S_qtmr_401e0000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qtmr_401e0000_P_reg_IDX_1 122
#define DT_N_S_soc_S_qtmr_401e0000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_qtmr_401e0000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_qtmr_401e0000, reg, 0) \
	fn(DT_N_S_soc_S_qtmr_401e0000, reg, 1)
#define DT_N_S_soc_S_qtmr_401e0000_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_qtmr_401e0000, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e0000, reg, 1)
#define DT_N_S_soc_S_qtmr_401e0000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_qtmr_401e0000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qtmr_401e0000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_qtmr_401e0000_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_qtmr_401e0000, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e0000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_qtmr_401e0000_P_reg_EXISTS 1
#define DT_N_S_soc_S_qtmr_401e0000_P_interrupts {134 /* 0x86 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_qtmr_401e0000_P_interrupts_IDX_0 134
#define DT_N_S_soc_S_qtmr_401e0000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qtmr_401e0000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_qtmr_401e0000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_qtmr_401e0000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_qtmr_401e0000, interrupts, 0) \
	fn(DT_N_S_soc_S_qtmr_401e0000, interrupts, 1)
#define DT_N_S_soc_S_qtmr_401e0000_P_interrupts_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_qtmr_401e0000, interrupts, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e0000, interrupts, 1)
#define DT_N_S_soc_S_qtmr_401e0000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_qtmr_401e0000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qtmr_401e0000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_qtmr_401e0000_P_interrupts_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_qtmr_401e0000, interrupts, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e0000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_qtmr_401e0000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_qtmr_401e0000_P_compatible {"nxp,imx-qtmr"}
#define DT_N_S_soc_S_qtmr_401e0000_P_compatible_IDX_0 "nxp,imx-qtmr"
#define DT_N_S_soc_S_qtmr_401e0000_P_compatible_IDX_0_STRING_UNQUOTED nxp,imx-qtmr
#define DT_N_S_soc_S_qtmr_401e0000_P_compatible_IDX_0_STRING_TOKEN nxp_imx_qtmr
#define DT_N_S_soc_S_qtmr_401e0000_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_IMX_QTMR
#define DT_N_S_soc_S_qtmr_401e0000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qtmr_401e0000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_qtmr_401e0000, compatible, 0)
#define DT_N_S_soc_S_qtmr_401e0000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_qtmr_401e0000, compatible, 0)
#define DT_N_S_soc_S_qtmr_401e0000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_qtmr_401e0000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_qtmr_401e0000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_qtmr_401e0000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_qtmr_401e0000_P_compatible_LEN 1
#define DT_N_S_soc_S_qtmr_401e0000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_qtmr_401e0000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qtmr_401e0000_P_clocks_IDX_0_PH DT_N_S_soc_S_ccm_400fc000
#define DT_N_S_soc_S_qtmr_401e0000_P_clocks_IDX_0_VAL_name 3328
#define DT_N_S_soc_S_qtmr_401e0000_P_clocks_IDX_0_VAL_name_EXISTS 1
#define DT_N_S_soc_S_qtmr_401e0000_P_clocks_IDX_0_VAL_offset 0
#define DT_N_S_soc_S_qtmr_401e0000_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_qtmr_401e0000_P_clocks_IDX_0_VAL_bits 0
#define DT_N_S_soc_S_qtmr_401e0000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_qtmr_401e0000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_qtmr_401e0000, clocks, 0)
#define DT_N_S_soc_S_qtmr_401e0000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_qtmr_401e0000, clocks, 0)
#define DT_N_S_soc_S_qtmr_401e0000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_qtmr_401e0000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_qtmr_401e0000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_qtmr_401e0000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_qtmr_401e0000_P_clocks_LEN 1
#define DT_N_S_soc_S_qtmr_401e0000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_qtmr_401e0000_P_wakeup_source 0
#define DT_N_S_soc_S_qtmr_401e0000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/qtmr@401e0000/timer0
 *
 * Node identifier: DT_N_S_soc_S_qtmr_401e0000_S_timer0
 *
 * Binding (compatible = nxp,imx-tmr):
 *   $ZEPHYR_BASE/dts/bindings/counter/nxp,imx-tmr.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_qtmr_401e0000_S_timer0_PATH "/soc/qtmr@401e0000/timer0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_qtmr_401e0000_S_timer0_FULL_NAME "timer0"

/* Node parent (/soc/qtmr@401e0000) identifier: */
#define DT_N_S_soc_S_qtmr_401e0000_S_timer0_PARENT DT_N_S_soc_S_qtmr_401e0000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_qtmr_401e0000_S_timer0_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_qtmr_401e0000_S_timer0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_qtmr_401e0000_S_timer0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_qtmr_401e0000_S_timer0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_qtmr_401e0000_S_timer0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_qtmr_401e0000_S_timer0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_qtmr_401e0000_S_timer0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_qtmr_401e0000_S_timer0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_qtmr_401e0000_S_timer0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_qtmr_401e0000_S_timer0_ORD 259

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_qtmr_401e0000_S_timer0_REQUIRES_ORDS \
	258, /* /soc/qtmr@401e0000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_qtmr_401e0000_S_timer0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_qtmr_401e0000_S_timer0_EXISTS 1
#define DT_N_INST_4_nxp_imx_tmr     DT_N_S_soc_S_qtmr_401e0000_S_timer0
#define DT_N_NODELABEL_qtmr2_timer0 DT_N_S_soc_S_qtmr_401e0000_S_timer0

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_qtmr_401e0000_S_timer0_REG_NUM 0
#define DT_N_S_soc_S_qtmr_401e0000_S_timer0_RANGES_NUM 0
#define DT_N_S_soc_S_qtmr_401e0000_S_timer0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_qtmr_401e0000_S_timer0_IRQ_NUM 0
#define DT_N_S_soc_S_qtmr_401e0000_S_timer0_COMPAT_MATCHES_nxp_imx_tmr 1
#define DT_N_S_soc_S_qtmr_401e0000_S_timer0_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qtmr_401e0000_S_timer0_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_soc_S_qtmr_401e0000_S_timer0_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qtmr_401e0000_S_timer0_COMPAT_MODEL_IDX_0 "imx-tmr"
#define DT_N_S_soc_S_qtmr_401e0000_S_timer0_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_qtmr_401e0000_S_timer0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_qtmr_401e0000_S_timer0_P_channel 0
#define DT_N_S_soc_S_qtmr_401e0000_S_timer0_P_channel_ENUM_IDX 0
#define DT_N_S_soc_S_qtmr_401e0000_S_timer0_P_channel_EXISTS 1
#define DT_N_S_soc_S_qtmr_401e0000_S_timer0_P_status "disabled"
#define DT_N_S_soc_S_qtmr_401e0000_S_timer0_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_qtmr_401e0000_S_timer0_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_qtmr_401e0000_S_timer0_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_qtmr_401e0000_S_timer0_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_qtmr_401e0000_S_timer0_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_qtmr_401e0000_S_timer0_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_qtmr_401e0000_S_timer0_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_qtmr_401e0000_S_timer0, status, 0) \
	fn(DT_N_S_soc_S_qtmr_401e0000_S_timer0, status, 1) \
	fn(DT_N_S_soc_S_qtmr_401e0000_S_timer0, status, 2) \
	fn(DT_N_S_soc_S_qtmr_401e0000_S_timer0, status, 3) \
	fn(DT_N_S_soc_S_qtmr_401e0000_S_timer0, status, 4) \
	fn(DT_N_S_soc_S_qtmr_401e0000_S_timer0, status, 5) \
	fn(DT_N_S_soc_S_qtmr_401e0000_S_timer0, status, 6) \
	fn(DT_N_S_soc_S_qtmr_401e0000_S_timer0, status, 7)
#define DT_N_S_soc_S_qtmr_401e0000_S_timer0_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_qtmr_401e0000_S_timer0, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e0000_S_timer0, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e0000_S_timer0, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e0000_S_timer0, status, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e0000_S_timer0, status, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e0000_S_timer0, status, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e0000_S_timer0, status, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e0000_S_timer0, status, 7)
#define DT_N_S_soc_S_qtmr_401e0000_S_timer0_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_qtmr_401e0000_S_timer0, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qtmr_401e0000_S_timer0, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qtmr_401e0000_S_timer0, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qtmr_401e0000_S_timer0, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qtmr_401e0000_S_timer0, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qtmr_401e0000_S_timer0, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qtmr_401e0000_S_timer0, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qtmr_401e0000_S_timer0, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_qtmr_401e0000_S_timer0_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_qtmr_401e0000_S_timer0, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e0000_S_timer0, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e0000_S_timer0, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e0000_S_timer0, status, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e0000_S_timer0, status, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e0000_S_timer0, status, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e0000_S_timer0, status, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e0000_S_timer0, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_qtmr_401e0000_S_timer0_P_status_EXISTS 1
#define DT_N_S_soc_S_qtmr_401e0000_S_timer0_P_compatible {"nxp,imx-tmr"}
#define DT_N_S_soc_S_qtmr_401e0000_S_timer0_P_compatible_IDX_0 "nxp,imx-tmr"
#define DT_N_S_soc_S_qtmr_401e0000_S_timer0_P_compatible_IDX_0_STRING_UNQUOTED nxp,imx-tmr
#define DT_N_S_soc_S_qtmr_401e0000_S_timer0_P_compatible_IDX_0_STRING_TOKEN nxp_imx_tmr
#define DT_N_S_soc_S_qtmr_401e0000_S_timer0_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_IMX_TMR
#define DT_N_S_soc_S_qtmr_401e0000_S_timer0_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qtmr_401e0000_S_timer0_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_qtmr_401e0000_S_timer0, compatible, 0)
#define DT_N_S_soc_S_qtmr_401e0000_S_timer0_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_qtmr_401e0000_S_timer0, compatible, 0)
#define DT_N_S_soc_S_qtmr_401e0000_S_timer0_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_qtmr_401e0000_S_timer0, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_qtmr_401e0000_S_timer0_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_qtmr_401e0000_S_timer0, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_qtmr_401e0000_S_timer0_P_compatible_LEN 1
#define DT_N_S_soc_S_qtmr_401e0000_S_timer0_P_compatible_EXISTS 1
#define DT_N_S_soc_S_qtmr_401e0000_S_timer0_P_wakeup_source 0
#define DT_N_S_soc_S_qtmr_401e0000_S_timer0_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/qtmr@401e0000/timer1
 *
 * Node identifier: DT_N_S_soc_S_qtmr_401e0000_S_timer1
 *
 * Binding (compatible = nxp,imx-tmr):
 *   $ZEPHYR_BASE/dts/bindings/counter/nxp,imx-tmr.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_qtmr_401e0000_S_timer1_PATH "/soc/qtmr@401e0000/timer1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_qtmr_401e0000_S_timer1_FULL_NAME "timer1"

/* Node parent (/soc/qtmr@401e0000) identifier: */
#define DT_N_S_soc_S_qtmr_401e0000_S_timer1_PARENT DT_N_S_soc_S_qtmr_401e0000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_qtmr_401e0000_S_timer1_CHILD_IDX 1

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_qtmr_401e0000_S_timer1_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_qtmr_401e0000_S_timer1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_qtmr_401e0000_S_timer1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_qtmr_401e0000_S_timer1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_qtmr_401e0000_S_timer1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_qtmr_401e0000_S_timer1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_qtmr_401e0000_S_timer1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_qtmr_401e0000_S_timer1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_qtmr_401e0000_S_timer1_ORD 260

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_qtmr_401e0000_S_timer1_REQUIRES_ORDS \
	258, /* /soc/qtmr@401e0000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_qtmr_401e0000_S_timer1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_qtmr_401e0000_S_timer1_EXISTS 1
#define DT_N_INST_5_nxp_imx_tmr     DT_N_S_soc_S_qtmr_401e0000_S_timer1
#define DT_N_NODELABEL_qtmr2_timer1 DT_N_S_soc_S_qtmr_401e0000_S_timer1

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_qtmr_401e0000_S_timer1_REG_NUM 0
#define DT_N_S_soc_S_qtmr_401e0000_S_timer1_RANGES_NUM 0
#define DT_N_S_soc_S_qtmr_401e0000_S_timer1_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_qtmr_401e0000_S_timer1_IRQ_NUM 0
#define DT_N_S_soc_S_qtmr_401e0000_S_timer1_COMPAT_MATCHES_nxp_imx_tmr 1
#define DT_N_S_soc_S_qtmr_401e0000_S_timer1_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qtmr_401e0000_S_timer1_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_soc_S_qtmr_401e0000_S_timer1_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qtmr_401e0000_S_timer1_COMPAT_MODEL_IDX_0 "imx-tmr"
#define DT_N_S_soc_S_qtmr_401e0000_S_timer1_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_qtmr_401e0000_S_timer1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_qtmr_401e0000_S_timer1_P_channel 1
#define DT_N_S_soc_S_qtmr_401e0000_S_timer1_P_channel_ENUM_IDX 1
#define DT_N_S_soc_S_qtmr_401e0000_S_timer1_P_channel_EXISTS 1
#define DT_N_S_soc_S_qtmr_401e0000_S_timer1_P_status "disabled"
#define DT_N_S_soc_S_qtmr_401e0000_S_timer1_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_qtmr_401e0000_S_timer1_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_qtmr_401e0000_S_timer1_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_qtmr_401e0000_S_timer1_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_qtmr_401e0000_S_timer1_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_qtmr_401e0000_S_timer1_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_qtmr_401e0000_S_timer1_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_qtmr_401e0000_S_timer1, status, 0) \
	fn(DT_N_S_soc_S_qtmr_401e0000_S_timer1, status, 1) \
	fn(DT_N_S_soc_S_qtmr_401e0000_S_timer1, status, 2) \
	fn(DT_N_S_soc_S_qtmr_401e0000_S_timer1, status, 3) \
	fn(DT_N_S_soc_S_qtmr_401e0000_S_timer1, status, 4) \
	fn(DT_N_S_soc_S_qtmr_401e0000_S_timer1, status, 5) \
	fn(DT_N_S_soc_S_qtmr_401e0000_S_timer1, status, 6) \
	fn(DT_N_S_soc_S_qtmr_401e0000_S_timer1, status, 7)
#define DT_N_S_soc_S_qtmr_401e0000_S_timer1_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_qtmr_401e0000_S_timer1, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e0000_S_timer1, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e0000_S_timer1, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e0000_S_timer1, status, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e0000_S_timer1, status, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e0000_S_timer1, status, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e0000_S_timer1, status, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e0000_S_timer1, status, 7)
#define DT_N_S_soc_S_qtmr_401e0000_S_timer1_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_qtmr_401e0000_S_timer1, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qtmr_401e0000_S_timer1, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qtmr_401e0000_S_timer1, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qtmr_401e0000_S_timer1, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qtmr_401e0000_S_timer1, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qtmr_401e0000_S_timer1, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qtmr_401e0000_S_timer1, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qtmr_401e0000_S_timer1, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_qtmr_401e0000_S_timer1_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_qtmr_401e0000_S_timer1, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e0000_S_timer1, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e0000_S_timer1, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e0000_S_timer1, status, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e0000_S_timer1, status, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e0000_S_timer1, status, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e0000_S_timer1, status, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e0000_S_timer1, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_qtmr_401e0000_S_timer1_P_status_EXISTS 1
#define DT_N_S_soc_S_qtmr_401e0000_S_timer1_P_compatible {"nxp,imx-tmr"}
#define DT_N_S_soc_S_qtmr_401e0000_S_timer1_P_compatible_IDX_0 "nxp,imx-tmr"
#define DT_N_S_soc_S_qtmr_401e0000_S_timer1_P_compatible_IDX_0_STRING_UNQUOTED nxp,imx-tmr
#define DT_N_S_soc_S_qtmr_401e0000_S_timer1_P_compatible_IDX_0_STRING_TOKEN nxp_imx_tmr
#define DT_N_S_soc_S_qtmr_401e0000_S_timer1_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_IMX_TMR
#define DT_N_S_soc_S_qtmr_401e0000_S_timer1_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qtmr_401e0000_S_timer1_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_qtmr_401e0000_S_timer1, compatible, 0)
#define DT_N_S_soc_S_qtmr_401e0000_S_timer1_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_qtmr_401e0000_S_timer1, compatible, 0)
#define DT_N_S_soc_S_qtmr_401e0000_S_timer1_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_qtmr_401e0000_S_timer1, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_qtmr_401e0000_S_timer1_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_qtmr_401e0000_S_timer1, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_qtmr_401e0000_S_timer1_P_compatible_LEN 1
#define DT_N_S_soc_S_qtmr_401e0000_S_timer1_P_compatible_EXISTS 1
#define DT_N_S_soc_S_qtmr_401e0000_S_timer1_P_wakeup_source 0
#define DT_N_S_soc_S_qtmr_401e0000_S_timer1_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/qtmr@401e0000/timer2
 *
 * Node identifier: DT_N_S_soc_S_qtmr_401e0000_S_timer2
 *
 * Binding (compatible = nxp,imx-tmr):
 *   $ZEPHYR_BASE/dts/bindings/counter/nxp,imx-tmr.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_qtmr_401e0000_S_timer2_PATH "/soc/qtmr@401e0000/timer2"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_qtmr_401e0000_S_timer2_FULL_NAME "timer2"

/* Node parent (/soc/qtmr@401e0000) identifier: */
#define DT_N_S_soc_S_qtmr_401e0000_S_timer2_PARENT DT_N_S_soc_S_qtmr_401e0000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_qtmr_401e0000_S_timer2_CHILD_IDX 2

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_qtmr_401e0000_S_timer2_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_qtmr_401e0000_S_timer2_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_qtmr_401e0000_S_timer2_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_qtmr_401e0000_S_timer2_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_qtmr_401e0000_S_timer2_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_qtmr_401e0000_S_timer2_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_qtmr_401e0000_S_timer2_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_qtmr_401e0000_S_timer2_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_qtmr_401e0000_S_timer2_ORD 261

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_qtmr_401e0000_S_timer2_REQUIRES_ORDS \
	258, /* /soc/qtmr@401e0000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_qtmr_401e0000_S_timer2_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_qtmr_401e0000_S_timer2_EXISTS 1
#define DT_N_INST_6_nxp_imx_tmr     DT_N_S_soc_S_qtmr_401e0000_S_timer2
#define DT_N_NODELABEL_qtmr2_timer2 DT_N_S_soc_S_qtmr_401e0000_S_timer2

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_qtmr_401e0000_S_timer2_REG_NUM 0
#define DT_N_S_soc_S_qtmr_401e0000_S_timer2_RANGES_NUM 0
#define DT_N_S_soc_S_qtmr_401e0000_S_timer2_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_qtmr_401e0000_S_timer2_IRQ_NUM 0
#define DT_N_S_soc_S_qtmr_401e0000_S_timer2_COMPAT_MATCHES_nxp_imx_tmr 1
#define DT_N_S_soc_S_qtmr_401e0000_S_timer2_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qtmr_401e0000_S_timer2_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_soc_S_qtmr_401e0000_S_timer2_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qtmr_401e0000_S_timer2_COMPAT_MODEL_IDX_0 "imx-tmr"
#define DT_N_S_soc_S_qtmr_401e0000_S_timer2_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_qtmr_401e0000_S_timer2_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_qtmr_401e0000_S_timer2_P_channel 2
#define DT_N_S_soc_S_qtmr_401e0000_S_timer2_P_channel_ENUM_IDX 2
#define DT_N_S_soc_S_qtmr_401e0000_S_timer2_P_channel_EXISTS 1
#define DT_N_S_soc_S_qtmr_401e0000_S_timer2_P_status "disabled"
#define DT_N_S_soc_S_qtmr_401e0000_S_timer2_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_qtmr_401e0000_S_timer2_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_qtmr_401e0000_S_timer2_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_qtmr_401e0000_S_timer2_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_qtmr_401e0000_S_timer2_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_qtmr_401e0000_S_timer2_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_qtmr_401e0000_S_timer2_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_qtmr_401e0000_S_timer2, status, 0) \
	fn(DT_N_S_soc_S_qtmr_401e0000_S_timer2, status, 1) \
	fn(DT_N_S_soc_S_qtmr_401e0000_S_timer2, status, 2) \
	fn(DT_N_S_soc_S_qtmr_401e0000_S_timer2, status, 3) \
	fn(DT_N_S_soc_S_qtmr_401e0000_S_timer2, status, 4) \
	fn(DT_N_S_soc_S_qtmr_401e0000_S_timer2, status, 5) \
	fn(DT_N_S_soc_S_qtmr_401e0000_S_timer2, status, 6) \
	fn(DT_N_S_soc_S_qtmr_401e0000_S_timer2, status, 7)
#define DT_N_S_soc_S_qtmr_401e0000_S_timer2_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_qtmr_401e0000_S_timer2, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e0000_S_timer2, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e0000_S_timer2, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e0000_S_timer2, status, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e0000_S_timer2, status, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e0000_S_timer2, status, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e0000_S_timer2, status, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e0000_S_timer2, status, 7)
#define DT_N_S_soc_S_qtmr_401e0000_S_timer2_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_qtmr_401e0000_S_timer2, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qtmr_401e0000_S_timer2, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qtmr_401e0000_S_timer2, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qtmr_401e0000_S_timer2, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qtmr_401e0000_S_timer2, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qtmr_401e0000_S_timer2, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qtmr_401e0000_S_timer2, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qtmr_401e0000_S_timer2, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_qtmr_401e0000_S_timer2_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_qtmr_401e0000_S_timer2, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e0000_S_timer2, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e0000_S_timer2, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e0000_S_timer2, status, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e0000_S_timer2, status, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e0000_S_timer2, status, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e0000_S_timer2, status, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e0000_S_timer2, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_qtmr_401e0000_S_timer2_P_status_EXISTS 1
#define DT_N_S_soc_S_qtmr_401e0000_S_timer2_P_compatible {"nxp,imx-tmr"}
#define DT_N_S_soc_S_qtmr_401e0000_S_timer2_P_compatible_IDX_0 "nxp,imx-tmr"
#define DT_N_S_soc_S_qtmr_401e0000_S_timer2_P_compatible_IDX_0_STRING_UNQUOTED nxp,imx-tmr
#define DT_N_S_soc_S_qtmr_401e0000_S_timer2_P_compatible_IDX_0_STRING_TOKEN nxp_imx_tmr
#define DT_N_S_soc_S_qtmr_401e0000_S_timer2_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_IMX_TMR
#define DT_N_S_soc_S_qtmr_401e0000_S_timer2_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qtmr_401e0000_S_timer2_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_qtmr_401e0000_S_timer2, compatible, 0)
#define DT_N_S_soc_S_qtmr_401e0000_S_timer2_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_qtmr_401e0000_S_timer2, compatible, 0)
#define DT_N_S_soc_S_qtmr_401e0000_S_timer2_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_qtmr_401e0000_S_timer2, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_qtmr_401e0000_S_timer2_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_qtmr_401e0000_S_timer2, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_qtmr_401e0000_S_timer2_P_compatible_LEN 1
#define DT_N_S_soc_S_qtmr_401e0000_S_timer2_P_compatible_EXISTS 1
#define DT_N_S_soc_S_qtmr_401e0000_S_timer2_P_wakeup_source 0
#define DT_N_S_soc_S_qtmr_401e0000_S_timer2_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/qtmr@401e0000/timer3
 *
 * Node identifier: DT_N_S_soc_S_qtmr_401e0000_S_timer3
 *
 * Binding (compatible = nxp,imx-tmr):
 *   $ZEPHYR_BASE/dts/bindings/counter/nxp,imx-tmr.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_qtmr_401e0000_S_timer3_PATH "/soc/qtmr@401e0000/timer3"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_qtmr_401e0000_S_timer3_FULL_NAME "timer3"

/* Node parent (/soc/qtmr@401e0000) identifier: */
#define DT_N_S_soc_S_qtmr_401e0000_S_timer3_PARENT DT_N_S_soc_S_qtmr_401e0000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_qtmr_401e0000_S_timer3_CHILD_IDX 3

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_qtmr_401e0000_S_timer3_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_qtmr_401e0000_S_timer3_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_qtmr_401e0000_S_timer3_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_qtmr_401e0000_S_timer3_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_qtmr_401e0000_S_timer3_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_qtmr_401e0000_S_timer3_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_qtmr_401e0000_S_timer3_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_qtmr_401e0000_S_timer3_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_qtmr_401e0000_S_timer3_ORD 262

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_qtmr_401e0000_S_timer3_REQUIRES_ORDS \
	258, /* /soc/qtmr@401e0000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_qtmr_401e0000_S_timer3_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_qtmr_401e0000_S_timer3_EXISTS 1
#define DT_N_INST_7_nxp_imx_tmr     DT_N_S_soc_S_qtmr_401e0000_S_timer3
#define DT_N_NODELABEL_qtmr2_timer3 DT_N_S_soc_S_qtmr_401e0000_S_timer3

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_qtmr_401e0000_S_timer3_REG_NUM 0
#define DT_N_S_soc_S_qtmr_401e0000_S_timer3_RANGES_NUM 0
#define DT_N_S_soc_S_qtmr_401e0000_S_timer3_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_qtmr_401e0000_S_timer3_IRQ_NUM 0
#define DT_N_S_soc_S_qtmr_401e0000_S_timer3_COMPAT_MATCHES_nxp_imx_tmr 1
#define DT_N_S_soc_S_qtmr_401e0000_S_timer3_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qtmr_401e0000_S_timer3_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_soc_S_qtmr_401e0000_S_timer3_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qtmr_401e0000_S_timer3_COMPAT_MODEL_IDX_0 "imx-tmr"
#define DT_N_S_soc_S_qtmr_401e0000_S_timer3_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_qtmr_401e0000_S_timer3_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_qtmr_401e0000_S_timer3_P_channel 3
#define DT_N_S_soc_S_qtmr_401e0000_S_timer3_P_channel_ENUM_IDX 3
#define DT_N_S_soc_S_qtmr_401e0000_S_timer3_P_channel_EXISTS 1
#define DT_N_S_soc_S_qtmr_401e0000_S_timer3_P_status "disabled"
#define DT_N_S_soc_S_qtmr_401e0000_S_timer3_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_qtmr_401e0000_S_timer3_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_qtmr_401e0000_S_timer3_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_qtmr_401e0000_S_timer3_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_qtmr_401e0000_S_timer3_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_qtmr_401e0000_S_timer3_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_qtmr_401e0000_S_timer3_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_qtmr_401e0000_S_timer3, status, 0) \
	fn(DT_N_S_soc_S_qtmr_401e0000_S_timer3, status, 1) \
	fn(DT_N_S_soc_S_qtmr_401e0000_S_timer3, status, 2) \
	fn(DT_N_S_soc_S_qtmr_401e0000_S_timer3, status, 3) \
	fn(DT_N_S_soc_S_qtmr_401e0000_S_timer3, status, 4) \
	fn(DT_N_S_soc_S_qtmr_401e0000_S_timer3, status, 5) \
	fn(DT_N_S_soc_S_qtmr_401e0000_S_timer3, status, 6) \
	fn(DT_N_S_soc_S_qtmr_401e0000_S_timer3, status, 7)
#define DT_N_S_soc_S_qtmr_401e0000_S_timer3_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_qtmr_401e0000_S_timer3, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e0000_S_timer3, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e0000_S_timer3, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e0000_S_timer3, status, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e0000_S_timer3, status, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e0000_S_timer3, status, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e0000_S_timer3, status, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e0000_S_timer3, status, 7)
#define DT_N_S_soc_S_qtmr_401e0000_S_timer3_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_qtmr_401e0000_S_timer3, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qtmr_401e0000_S_timer3, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qtmr_401e0000_S_timer3, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qtmr_401e0000_S_timer3, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qtmr_401e0000_S_timer3, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qtmr_401e0000_S_timer3, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qtmr_401e0000_S_timer3, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qtmr_401e0000_S_timer3, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_qtmr_401e0000_S_timer3_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_qtmr_401e0000_S_timer3, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e0000_S_timer3, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e0000_S_timer3, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e0000_S_timer3, status, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e0000_S_timer3, status, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e0000_S_timer3, status, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e0000_S_timer3, status, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e0000_S_timer3, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_qtmr_401e0000_S_timer3_P_status_EXISTS 1
#define DT_N_S_soc_S_qtmr_401e0000_S_timer3_P_compatible {"nxp,imx-tmr"}
#define DT_N_S_soc_S_qtmr_401e0000_S_timer3_P_compatible_IDX_0 "nxp,imx-tmr"
#define DT_N_S_soc_S_qtmr_401e0000_S_timer3_P_compatible_IDX_0_STRING_UNQUOTED nxp,imx-tmr
#define DT_N_S_soc_S_qtmr_401e0000_S_timer3_P_compatible_IDX_0_STRING_TOKEN nxp_imx_tmr
#define DT_N_S_soc_S_qtmr_401e0000_S_timer3_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_IMX_TMR
#define DT_N_S_soc_S_qtmr_401e0000_S_timer3_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qtmr_401e0000_S_timer3_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_qtmr_401e0000_S_timer3, compatible, 0)
#define DT_N_S_soc_S_qtmr_401e0000_S_timer3_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_qtmr_401e0000_S_timer3, compatible, 0)
#define DT_N_S_soc_S_qtmr_401e0000_S_timer3_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_qtmr_401e0000_S_timer3, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_qtmr_401e0000_S_timer3_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_qtmr_401e0000_S_timer3, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_qtmr_401e0000_S_timer3_P_compatible_LEN 1
#define DT_N_S_soc_S_qtmr_401e0000_S_timer3_P_compatible_EXISTS 1
#define DT_N_S_soc_S_qtmr_401e0000_S_timer3_P_wakeup_source 0
#define DT_N_S_soc_S_qtmr_401e0000_S_timer3_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/qtmr@401e4000
 *
 * Node identifier: DT_N_S_soc_S_qtmr_401e4000
 *
 * Binding (compatible = nxp,imx-qtmr):
 *   $ZEPHYR_BASE/dts/bindings/counter/nxp,imx-qtmr.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_qtmr_401e4000_PATH "/soc/qtmr@401e4000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_qtmr_401e4000_FULL_NAME "qtmr@401e4000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_qtmr_401e4000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_qtmr_401e4000_CHILD_IDX 9

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_qtmr_401e4000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_qtmr_401e4000_S_timer0) fn(DT_N_S_soc_S_qtmr_401e4000_S_timer1) fn(DT_N_S_soc_S_qtmr_401e4000_S_timer2) fn(DT_N_S_soc_S_qtmr_401e4000_S_timer3)
#define DT_N_S_soc_S_qtmr_401e4000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_qtmr_401e4000_S_timer0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_qtmr_401e4000_S_timer1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_qtmr_401e4000_S_timer2) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_qtmr_401e4000_S_timer3)
#define DT_N_S_soc_S_qtmr_401e4000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_qtmr_401e4000_S_timer0, __VA_ARGS__) fn(DT_N_S_soc_S_qtmr_401e4000_S_timer1, __VA_ARGS__) fn(DT_N_S_soc_S_qtmr_401e4000_S_timer2, __VA_ARGS__) fn(DT_N_S_soc_S_qtmr_401e4000_S_timer3, __VA_ARGS__)
#define DT_N_S_soc_S_qtmr_401e4000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_qtmr_401e4000_S_timer0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_qtmr_401e4000_S_timer1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_qtmr_401e4000_S_timer2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_qtmr_401e4000_S_timer3, __VA_ARGS__)
#define DT_N_S_soc_S_qtmr_401e4000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_qtmr_401e4000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_qtmr_401e4000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_qtmr_401e4000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_qtmr_401e4000_ORD 263

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_qtmr_401e4000_REQUIRES_ORDS \
	11, /* /soc */ \
	12, /* /soc/interrupt-controller@e000e100 */ \
	60, /* /soc/ccm@400fc000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_qtmr_401e4000_SUPPORTS_ORDS \
	264, /* /soc/qtmr@401e4000/timer0 */ \
	265, /* /soc/qtmr@401e4000/timer1 */ \
	266, /* /soc/qtmr@401e4000/timer2 */ \
	267, /* /soc/qtmr@401e4000/timer3 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_qtmr_401e4000_EXISTS 1
#define DT_N_INST_2_nxp_imx_qtmr DT_N_S_soc_S_qtmr_401e4000
#define DT_N_NODELABEL_qtmr3     DT_N_S_soc_S_qtmr_401e4000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_qtmr_401e4000_REG_NUM 1
#define DT_N_S_soc_S_qtmr_401e4000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qtmr_401e4000_REG_IDX_0_VAL_ADDRESS 1075724288 /* 0x401e4000 */
#define DT_N_S_soc_S_qtmr_401e4000_REG_IDX_0_VAL_SIZE 122 /* 0x7a */
#define DT_N_S_soc_S_qtmr_401e4000_RANGES_NUM 0
#define DT_N_S_soc_S_qtmr_401e4000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_qtmr_401e4000_IRQ_NUM 1
#define DT_N_S_soc_S_qtmr_401e4000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qtmr_401e4000_IRQ_IDX_0_VAL_irq 135
#define DT_N_S_soc_S_qtmr_401e4000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_qtmr_401e4000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qtmr_401e4000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_qtmr_401e4000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_qtmr_401e4000_COMPAT_MATCHES_nxp_imx_qtmr 1
#define DT_N_S_soc_S_qtmr_401e4000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qtmr_401e4000_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_soc_S_qtmr_401e4000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qtmr_401e4000_COMPAT_MODEL_IDX_0 "imx-qtmr"
#define DT_N_S_soc_S_qtmr_401e4000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_qtmr_401e4000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_qtmr_401e4000_P_reg {1075724288 /* 0x401e4000 */, 122 /* 0x7a */}
#define DT_N_S_soc_S_qtmr_401e4000_P_reg_IDX_0 1075724288
#define DT_N_S_soc_S_qtmr_401e4000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qtmr_401e4000_P_reg_IDX_1 122
#define DT_N_S_soc_S_qtmr_401e4000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_qtmr_401e4000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_qtmr_401e4000, reg, 0) \
	fn(DT_N_S_soc_S_qtmr_401e4000, reg, 1)
#define DT_N_S_soc_S_qtmr_401e4000_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_qtmr_401e4000, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e4000, reg, 1)
#define DT_N_S_soc_S_qtmr_401e4000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_qtmr_401e4000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qtmr_401e4000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_qtmr_401e4000_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_qtmr_401e4000, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e4000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_qtmr_401e4000_P_reg_EXISTS 1
#define DT_N_S_soc_S_qtmr_401e4000_P_interrupts {135 /* 0x87 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_qtmr_401e4000_P_interrupts_IDX_0 135
#define DT_N_S_soc_S_qtmr_401e4000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qtmr_401e4000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_qtmr_401e4000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_qtmr_401e4000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_qtmr_401e4000, interrupts, 0) \
	fn(DT_N_S_soc_S_qtmr_401e4000, interrupts, 1)
#define DT_N_S_soc_S_qtmr_401e4000_P_interrupts_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_qtmr_401e4000, interrupts, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e4000, interrupts, 1)
#define DT_N_S_soc_S_qtmr_401e4000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_qtmr_401e4000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qtmr_401e4000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_qtmr_401e4000_P_interrupts_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_qtmr_401e4000, interrupts, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e4000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_qtmr_401e4000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_qtmr_401e4000_P_compatible {"nxp,imx-qtmr"}
#define DT_N_S_soc_S_qtmr_401e4000_P_compatible_IDX_0 "nxp,imx-qtmr"
#define DT_N_S_soc_S_qtmr_401e4000_P_compatible_IDX_0_STRING_UNQUOTED nxp,imx-qtmr
#define DT_N_S_soc_S_qtmr_401e4000_P_compatible_IDX_0_STRING_TOKEN nxp_imx_qtmr
#define DT_N_S_soc_S_qtmr_401e4000_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_IMX_QTMR
#define DT_N_S_soc_S_qtmr_401e4000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qtmr_401e4000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_qtmr_401e4000, compatible, 0)
#define DT_N_S_soc_S_qtmr_401e4000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_qtmr_401e4000, compatible, 0)
#define DT_N_S_soc_S_qtmr_401e4000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_qtmr_401e4000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_qtmr_401e4000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_qtmr_401e4000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_qtmr_401e4000_P_compatible_LEN 1
#define DT_N_S_soc_S_qtmr_401e4000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_qtmr_401e4000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qtmr_401e4000_P_clocks_IDX_0_PH DT_N_S_soc_S_ccm_400fc000
#define DT_N_S_soc_S_qtmr_401e4000_P_clocks_IDX_0_VAL_name 3328
#define DT_N_S_soc_S_qtmr_401e4000_P_clocks_IDX_0_VAL_name_EXISTS 1
#define DT_N_S_soc_S_qtmr_401e4000_P_clocks_IDX_0_VAL_offset 0
#define DT_N_S_soc_S_qtmr_401e4000_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_qtmr_401e4000_P_clocks_IDX_0_VAL_bits 0
#define DT_N_S_soc_S_qtmr_401e4000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_qtmr_401e4000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_qtmr_401e4000, clocks, 0)
#define DT_N_S_soc_S_qtmr_401e4000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_qtmr_401e4000, clocks, 0)
#define DT_N_S_soc_S_qtmr_401e4000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_qtmr_401e4000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_qtmr_401e4000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_qtmr_401e4000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_qtmr_401e4000_P_clocks_LEN 1
#define DT_N_S_soc_S_qtmr_401e4000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_qtmr_401e4000_P_wakeup_source 0
#define DT_N_S_soc_S_qtmr_401e4000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/qtmr@401e4000/timer0
 *
 * Node identifier: DT_N_S_soc_S_qtmr_401e4000_S_timer0
 *
 * Binding (compatible = nxp,imx-tmr):
 *   $ZEPHYR_BASE/dts/bindings/counter/nxp,imx-tmr.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_qtmr_401e4000_S_timer0_PATH "/soc/qtmr@401e4000/timer0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_qtmr_401e4000_S_timer0_FULL_NAME "timer0"

/* Node parent (/soc/qtmr@401e4000) identifier: */
#define DT_N_S_soc_S_qtmr_401e4000_S_timer0_PARENT DT_N_S_soc_S_qtmr_401e4000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_qtmr_401e4000_S_timer0_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_qtmr_401e4000_S_timer0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_qtmr_401e4000_S_timer0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_qtmr_401e4000_S_timer0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_qtmr_401e4000_S_timer0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_qtmr_401e4000_S_timer0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_qtmr_401e4000_S_timer0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_qtmr_401e4000_S_timer0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_qtmr_401e4000_S_timer0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_qtmr_401e4000_S_timer0_ORD 264

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_qtmr_401e4000_S_timer0_REQUIRES_ORDS \
	263, /* /soc/qtmr@401e4000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_qtmr_401e4000_S_timer0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_qtmr_401e4000_S_timer0_EXISTS 1
#define DT_N_INST_8_nxp_imx_tmr     DT_N_S_soc_S_qtmr_401e4000_S_timer0
#define DT_N_NODELABEL_qtmr3_timer0 DT_N_S_soc_S_qtmr_401e4000_S_timer0

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_qtmr_401e4000_S_timer0_REG_NUM 0
#define DT_N_S_soc_S_qtmr_401e4000_S_timer0_RANGES_NUM 0
#define DT_N_S_soc_S_qtmr_401e4000_S_timer0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_qtmr_401e4000_S_timer0_IRQ_NUM 0
#define DT_N_S_soc_S_qtmr_401e4000_S_timer0_COMPAT_MATCHES_nxp_imx_tmr 1
#define DT_N_S_soc_S_qtmr_401e4000_S_timer0_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qtmr_401e4000_S_timer0_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_soc_S_qtmr_401e4000_S_timer0_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qtmr_401e4000_S_timer0_COMPAT_MODEL_IDX_0 "imx-tmr"
#define DT_N_S_soc_S_qtmr_401e4000_S_timer0_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_qtmr_401e4000_S_timer0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_qtmr_401e4000_S_timer0_P_channel 0
#define DT_N_S_soc_S_qtmr_401e4000_S_timer0_P_channel_ENUM_IDX 0
#define DT_N_S_soc_S_qtmr_401e4000_S_timer0_P_channel_EXISTS 1
#define DT_N_S_soc_S_qtmr_401e4000_S_timer0_P_status "disabled"
#define DT_N_S_soc_S_qtmr_401e4000_S_timer0_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_qtmr_401e4000_S_timer0_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_qtmr_401e4000_S_timer0_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_qtmr_401e4000_S_timer0_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_qtmr_401e4000_S_timer0_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_qtmr_401e4000_S_timer0_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_qtmr_401e4000_S_timer0_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_qtmr_401e4000_S_timer0, status, 0) \
	fn(DT_N_S_soc_S_qtmr_401e4000_S_timer0, status, 1) \
	fn(DT_N_S_soc_S_qtmr_401e4000_S_timer0, status, 2) \
	fn(DT_N_S_soc_S_qtmr_401e4000_S_timer0, status, 3) \
	fn(DT_N_S_soc_S_qtmr_401e4000_S_timer0, status, 4) \
	fn(DT_N_S_soc_S_qtmr_401e4000_S_timer0, status, 5) \
	fn(DT_N_S_soc_S_qtmr_401e4000_S_timer0, status, 6) \
	fn(DT_N_S_soc_S_qtmr_401e4000_S_timer0, status, 7)
#define DT_N_S_soc_S_qtmr_401e4000_S_timer0_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_qtmr_401e4000_S_timer0, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e4000_S_timer0, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e4000_S_timer0, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e4000_S_timer0, status, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e4000_S_timer0, status, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e4000_S_timer0, status, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e4000_S_timer0, status, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e4000_S_timer0, status, 7)
#define DT_N_S_soc_S_qtmr_401e4000_S_timer0_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_qtmr_401e4000_S_timer0, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qtmr_401e4000_S_timer0, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qtmr_401e4000_S_timer0, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qtmr_401e4000_S_timer0, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qtmr_401e4000_S_timer0, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qtmr_401e4000_S_timer0, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qtmr_401e4000_S_timer0, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qtmr_401e4000_S_timer0, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_qtmr_401e4000_S_timer0_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_qtmr_401e4000_S_timer0, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e4000_S_timer0, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e4000_S_timer0, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e4000_S_timer0, status, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e4000_S_timer0, status, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e4000_S_timer0, status, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e4000_S_timer0, status, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e4000_S_timer0, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_qtmr_401e4000_S_timer0_P_status_EXISTS 1
#define DT_N_S_soc_S_qtmr_401e4000_S_timer0_P_compatible {"nxp,imx-tmr"}
#define DT_N_S_soc_S_qtmr_401e4000_S_timer0_P_compatible_IDX_0 "nxp,imx-tmr"
#define DT_N_S_soc_S_qtmr_401e4000_S_timer0_P_compatible_IDX_0_STRING_UNQUOTED nxp,imx-tmr
#define DT_N_S_soc_S_qtmr_401e4000_S_timer0_P_compatible_IDX_0_STRING_TOKEN nxp_imx_tmr
#define DT_N_S_soc_S_qtmr_401e4000_S_timer0_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_IMX_TMR
#define DT_N_S_soc_S_qtmr_401e4000_S_timer0_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qtmr_401e4000_S_timer0_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_qtmr_401e4000_S_timer0, compatible, 0)
#define DT_N_S_soc_S_qtmr_401e4000_S_timer0_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_qtmr_401e4000_S_timer0, compatible, 0)
#define DT_N_S_soc_S_qtmr_401e4000_S_timer0_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_qtmr_401e4000_S_timer0, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_qtmr_401e4000_S_timer0_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_qtmr_401e4000_S_timer0, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_qtmr_401e4000_S_timer0_P_compatible_LEN 1
#define DT_N_S_soc_S_qtmr_401e4000_S_timer0_P_compatible_EXISTS 1
#define DT_N_S_soc_S_qtmr_401e4000_S_timer0_P_wakeup_source 0
#define DT_N_S_soc_S_qtmr_401e4000_S_timer0_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/qtmr@401e4000/timer1
 *
 * Node identifier: DT_N_S_soc_S_qtmr_401e4000_S_timer1
 *
 * Binding (compatible = nxp,imx-tmr):
 *   $ZEPHYR_BASE/dts/bindings/counter/nxp,imx-tmr.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_qtmr_401e4000_S_timer1_PATH "/soc/qtmr@401e4000/timer1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_qtmr_401e4000_S_timer1_FULL_NAME "timer1"

/* Node parent (/soc/qtmr@401e4000) identifier: */
#define DT_N_S_soc_S_qtmr_401e4000_S_timer1_PARENT DT_N_S_soc_S_qtmr_401e4000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_qtmr_401e4000_S_timer1_CHILD_IDX 1

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_qtmr_401e4000_S_timer1_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_qtmr_401e4000_S_timer1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_qtmr_401e4000_S_timer1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_qtmr_401e4000_S_timer1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_qtmr_401e4000_S_timer1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_qtmr_401e4000_S_timer1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_qtmr_401e4000_S_timer1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_qtmr_401e4000_S_timer1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_qtmr_401e4000_S_timer1_ORD 265

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_qtmr_401e4000_S_timer1_REQUIRES_ORDS \
	263, /* /soc/qtmr@401e4000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_qtmr_401e4000_S_timer1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_qtmr_401e4000_S_timer1_EXISTS 1
#define DT_N_INST_9_nxp_imx_tmr     DT_N_S_soc_S_qtmr_401e4000_S_timer1
#define DT_N_NODELABEL_qtmr3_timer1 DT_N_S_soc_S_qtmr_401e4000_S_timer1

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_qtmr_401e4000_S_timer1_REG_NUM 0
#define DT_N_S_soc_S_qtmr_401e4000_S_timer1_RANGES_NUM 0
#define DT_N_S_soc_S_qtmr_401e4000_S_timer1_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_qtmr_401e4000_S_timer1_IRQ_NUM 0
#define DT_N_S_soc_S_qtmr_401e4000_S_timer1_COMPAT_MATCHES_nxp_imx_tmr 1
#define DT_N_S_soc_S_qtmr_401e4000_S_timer1_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qtmr_401e4000_S_timer1_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_soc_S_qtmr_401e4000_S_timer1_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qtmr_401e4000_S_timer1_COMPAT_MODEL_IDX_0 "imx-tmr"
#define DT_N_S_soc_S_qtmr_401e4000_S_timer1_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_qtmr_401e4000_S_timer1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_qtmr_401e4000_S_timer1_P_channel 1
#define DT_N_S_soc_S_qtmr_401e4000_S_timer1_P_channel_ENUM_IDX 1
#define DT_N_S_soc_S_qtmr_401e4000_S_timer1_P_channel_EXISTS 1
#define DT_N_S_soc_S_qtmr_401e4000_S_timer1_P_status "disabled"
#define DT_N_S_soc_S_qtmr_401e4000_S_timer1_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_qtmr_401e4000_S_timer1_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_qtmr_401e4000_S_timer1_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_qtmr_401e4000_S_timer1_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_qtmr_401e4000_S_timer1_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_qtmr_401e4000_S_timer1_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_qtmr_401e4000_S_timer1_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_qtmr_401e4000_S_timer1, status, 0) \
	fn(DT_N_S_soc_S_qtmr_401e4000_S_timer1, status, 1) \
	fn(DT_N_S_soc_S_qtmr_401e4000_S_timer1, status, 2) \
	fn(DT_N_S_soc_S_qtmr_401e4000_S_timer1, status, 3) \
	fn(DT_N_S_soc_S_qtmr_401e4000_S_timer1, status, 4) \
	fn(DT_N_S_soc_S_qtmr_401e4000_S_timer1, status, 5) \
	fn(DT_N_S_soc_S_qtmr_401e4000_S_timer1, status, 6) \
	fn(DT_N_S_soc_S_qtmr_401e4000_S_timer1, status, 7)
#define DT_N_S_soc_S_qtmr_401e4000_S_timer1_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_qtmr_401e4000_S_timer1, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e4000_S_timer1, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e4000_S_timer1, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e4000_S_timer1, status, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e4000_S_timer1, status, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e4000_S_timer1, status, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e4000_S_timer1, status, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e4000_S_timer1, status, 7)
#define DT_N_S_soc_S_qtmr_401e4000_S_timer1_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_qtmr_401e4000_S_timer1, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qtmr_401e4000_S_timer1, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qtmr_401e4000_S_timer1, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qtmr_401e4000_S_timer1, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qtmr_401e4000_S_timer1, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qtmr_401e4000_S_timer1, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qtmr_401e4000_S_timer1, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qtmr_401e4000_S_timer1, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_qtmr_401e4000_S_timer1_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_qtmr_401e4000_S_timer1, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e4000_S_timer1, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e4000_S_timer1, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e4000_S_timer1, status, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e4000_S_timer1, status, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e4000_S_timer1, status, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e4000_S_timer1, status, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e4000_S_timer1, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_qtmr_401e4000_S_timer1_P_status_EXISTS 1
#define DT_N_S_soc_S_qtmr_401e4000_S_timer1_P_compatible {"nxp,imx-tmr"}
#define DT_N_S_soc_S_qtmr_401e4000_S_timer1_P_compatible_IDX_0 "nxp,imx-tmr"
#define DT_N_S_soc_S_qtmr_401e4000_S_timer1_P_compatible_IDX_0_STRING_UNQUOTED nxp,imx-tmr
#define DT_N_S_soc_S_qtmr_401e4000_S_timer1_P_compatible_IDX_0_STRING_TOKEN nxp_imx_tmr
#define DT_N_S_soc_S_qtmr_401e4000_S_timer1_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_IMX_TMR
#define DT_N_S_soc_S_qtmr_401e4000_S_timer1_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qtmr_401e4000_S_timer1_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_qtmr_401e4000_S_timer1, compatible, 0)
#define DT_N_S_soc_S_qtmr_401e4000_S_timer1_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_qtmr_401e4000_S_timer1, compatible, 0)
#define DT_N_S_soc_S_qtmr_401e4000_S_timer1_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_qtmr_401e4000_S_timer1, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_qtmr_401e4000_S_timer1_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_qtmr_401e4000_S_timer1, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_qtmr_401e4000_S_timer1_P_compatible_LEN 1
#define DT_N_S_soc_S_qtmr_401e4000_S_timer1_P_compatible_EXISTS 1
#define DT_N_S_soc_S_qtmr_401e4000_S_timer1_P_wakeup_source 0
#define DT_N_S_soc_S_qtmr_401e4000_S_timer1_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/qtmr@401e4000/timer2
 *
 * Node identifier: DT_N_S_soc_S_qtmr_401e4000_S_timer2
 *
 * Binding (compatible = nxp,imx-tmr):
 *   $ZEPHYR_BASE/dts/bindings/counter/nxp,imx-tmr.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_qtmr_401e4000_S_timer2_PATH "/soc/qtmr@401e4000/timer2"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_qtmr_401e4000_S_timer2_FULL_NAME "timer2"

/* Node parent (/soc/qtmr@401e4000) identifier: */
#define DT_N_S_soc_S_qtmr_401e4000_S_timer2_PARENT DT_N_S_soc_S_qtmr_401e4000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_qtmr_401e4000_S_timer2_CHILD_IDX 2

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_qtmr_401e4000_S_timer2_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_qtmr_401e4000_S_timer2_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_qtmr_401e4000_S_timer2_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_qtmr_401e4000_S_timer2_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_qtmr_401e4000_S_timer2_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_qtmr_401e4000_S_timer2_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_qtmr_401e4000_S_timer2_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_qtmr_401e4000_S_timer2_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_qtmr_401e4000_S_timer2_ORD 266

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_qtmr_401e4000_S_timer2_REQUIRES_ORDS \
	263, /* /soc/qtmr@401e4000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_qtmr_401e4000_S_timer2_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_qtmr_401e4000_S_timer2_EXISTS 1
#define DT_N_INST_10_nxp_imx_tmr    DT_N_S_soc_S_qtmr_401e4000_S_timer2
#define DT_N_NODELABEL_qtmr3_timer2 DT_N_S_soc_S_qtmr_401e4000_S_timer2

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_qtmr_401e4000_S_timer2_REG_NUM 0
#define DT_N_S_soc_S_qtmr_401e4000_S_timer2_RANGES_NUM 0
#define DT_N_S_soc_S_qtmr_401e4000_S_timer2_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_qtmr_401e4000_S_timer2_IRQ_NUM 0
#define DT_N_S_soc_S_qtmr_401e4000_S_timer2_COMPAT_MATCHES_nxp_imx_tmr 1
#define DT_N_S_soc_S_qtmr_401e4000_S_timer2_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qtmr_401e4000_S_timer2_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_soc_S_qtmr_401e4000_S_timer2_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qtmr_401e4000_S_timer2_COMPAT_MODEL_IDX_0 "imx-tmr"
#define DT_N_S_soc_S_qtmr_401e4000_S_timer2_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_qtmr_401e4000_S_timer2_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_qtmr_401e4000_S_timer2_P_channel 2
#define DT_N_S_soc_S_qtmr_401e4000_S_timer2_P_channel_ENUM_IDX 2
#define DT_N_S_soc_S_qtmr_401e4000_S_timer2_P_channel_EXISTS 1
#define DT_N_S_soc_S_qtmr_401e4000_S_timer2_P_status "disabled"
#define DT_N_S_soc_S_qtmr_401e4000_S_timer2_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_qtmr_401e4000_S_timer2_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_qtmr_401e4000_S_timer2_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_qtmr_401e4000_S_timer2_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_qtmr_401e4000_S_timer2_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_qtmr_401e4000_S_timer2_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_qtmr_401e4000_S_timer2_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_qtmr_401e4000_S_timer2, status, 0) \
	fn(DT_N_S_soc_S_qtmr_401e4000_S_timer2, status, 1) \
	fn(DT_N_S_soc_S_qtmr_401e4000_S_timer2, status, 2) \
	fn(DT_N_S_soc_S_qtmr_401e4000_S_timer2, status, 3) \
	fn(DT_N_S_soc_S_qtmr_401e4000_S_timer2, status, 4) \
	fn(DT_N_S_soc_S_qtmr_401e4000_S_timer2, status, 5) \
	fn(DT_N_S_soc_S_qtmr_401e4000_S_timer2, status, 6) \
	fn(DT_N_S_soc_S_qtmr_401e4000_S_timer2, status, 7)
#define DT_N_S_soc_S_qtmr_401e4000_S_timer2_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_qtmr_401e4000_S_timer2, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e4000_S_timer2, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e4000_S_timer2, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e4000_S_timer2, status, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e4000_S_timer2, status, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e4000_S_timer2, status, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e4000_S_timer2, status, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e4000_S_timer2, status, 7)
#define DT_N_S_soc_S_qtmr_401e4000_S_timer2_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_qtmr_401e4000_S_timer2, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qtmr_401e4000_S_timer2, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qtmr_401e4000_S_timer2, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qtmr_401e4000_S_timer2, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qtmr_401e4000_S_timer2, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qtmr_401e4000_S_timer2, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qtmr_401e4000_S_timer2, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qtmr_401e4000_S_timer2, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_qtmr_401e4000_S_timer2_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_qtmr_401e4000_S_timer2, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e4000_S_timer2, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e4000_S_timer2, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e4000_S_timer2, status, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e4000_S_timer2, status, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e4000_S_timer2, status, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e4000_S_timer2, status, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e4000_S_timer2, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_qtmr_401e4000_S_timer2_P_status_EXISTS 1
#define DT_N_S_soc_S_qtmr_401e4000_S_timer2_P_compatible {"nxp,imx-tmr"}
#define DT_N_S_soc_S_qtmr_401e4000_S_timer2_P_compatible_IDX_0 "nxp,imx-tmr"
#define DT_N_S_soc_S_qtmr_401e4000_S_timer2_P_compatible_IDX_0_STRING_UNQUOTED nxp,imx-tmr
#define DT_N_S_soc_S_qtmr_401e4000_S_timer2_P_compatible_IDX_0_STRING_TOKEN nxp_imx_tmr
#define DT_N_S_soc_S_qtmr_401e4000_S_timer2_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_IMX_TMR
#define DT_N_S_soc_S_qtmr_401e4000_S_timer2_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qtmr_401e4000_S_timer2_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_qtmr_401e4000_S_timer2, compatible, 0)
#define DT_N_S_soc_S_qtmr_401e4000_S_timer2_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_qtmr_401e4000_S_timer2, compatible, 0)
#define DT_N_S_soc_S_qtmr_401e4000_S_timer2_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_qtmr_401e4000_S_timer2, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_qtmr_401e4000_S_timer2_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_qtmr_401e4000_S_timer2, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_qtmr_401e4000_S_timer2_P_compatible_LEN 1
#define DT_N_S_soc_S_qtmr_401e4000_S_timer2_P_compatible_EXISTS 1
#define DT_N_S_soc_S_qtmr_401e4000_S_timer2_P_wakeup_source 0
#define DT_N_S_soc_S_qtmr_401e4000_S_timer2_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/qtmr@401e4000/timer3
 *
 * Node identifier: DT_N_S_soc_S_qtmr_401e4000_S_timer3
 *
 * Binding (compatible = nxp,imx-tmr):
 *   $ZEPHYR_BASE/dts/bindings/counter/nxp,imx-tmr.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_qtmr_401e4000_S_timer3_PATH "/soc/qtmr@401e4000/timer3"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_qtmr_401e4000_S_timer3_FULL_NAME "timer3"

/* Node parent (/soc/qtmr@401e4000) identifier: */
#define DT_N_S_soc_S_qtmr_401e4000_S_timer3_PARENT DT_N_S_soc_S_qtmr_401e4000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_qtmr_401e4000_S_timer3_CHILD_IDX 3

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_qtmr_401e4000_S_timer3_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_qtmr_401e4000_S_timer3_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_qtmr_401e4000_S_timer3_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_qtmr_401e4000_S_timer3_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_qtmr_401e4000_S_timer3_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_qtmr_401e4000_S_timer3_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_qtmr_401e4000_S_timer3_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_qtmr_401e4000_S_timer3_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_qtmr_401e4000_S_timer3_ORD 267

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_qtmr_401e4000_S_timer3_REQUIRES_ORDS \
	263, /* /soc/qtmr@401e4000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_qtmr_401e4000_S_timer3_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_qtmr_401e4000_S_timer3_EXISTS 1
#define DT_N_INST_11_nxp_imx_tmr    DT_N_S_soc_S_qtmr_401e4000_S_timer3
#define DT_N_NODELABEL_qtmr3_timer3 DT_N_S_soc_S_qtmr_401e4000_S_timer3

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_qtmr_401e4000_S_timer3_REG_NUM 0
#define DT_N_S_soc_S_qtmr_401e4000_S_timer3_RANGES_NUM 0
#define DT_N_S_soc_S_qtmr_401e4000_S_timer3_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_qtmr_401e4000_S_timer3_IRQ_NUM 0
#define DT_N_S_soc_S_qtmr_401e4000_S_timer3_COMPAT_MATCHES_nxp_imx_tmr 1
#define DT_N_S_soc_S_qtmr_401e4000_S_timer3_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qtmr_401e4000_S_timer3_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_soc_S_qtmr_401e4000_S_timer3_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qtmr_401e4000_S_timer3_COMPAT_MODEL_IDX_0 "imx-tmr"
#define DT_N_S_soc_S_qtmr_401e4000_S_timer3_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_qtmr_401e4000_S_timer3_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_qtmr_401e4000_S_timer3_P_channel 3
#define DT_N_S_soc_S_qtmr_401e4000_S_timer3_P_channel_ENUM_IDX 3
#define DT_N_S_soc_S_qtmr_401e4000_S_timer3_P_channel_EXISTS 1
#define DT_N_S_soc_S_qtmr_401e4000_S_timer3_P_status "disabled"
#define DT_N_S_soc_S_qtmr_401e4000_S_timer3_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_qtmr_401e4000_S_timer3_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_qtmr_401e4000_S_timer3_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_qtmr_401e4000_S_timer3_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_qtmr_401e4000_S_timer3_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_qtmr_401e4000_S_timer3_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_qtmr_401e4000_S_timer3_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_qtmr_401e4000_S_timer3, status, 0) \
	fn(DT_N_S_soc_S_qtmr_401e4000_S_timer3, status, 1) \
	fn(DT_N_S_soc_S_qtmr_401e4000_S_timer3, status, 2) \
	fn(DT_N_S_soc_S_qtmr_401e4000_S_timer3, status, 3) \
	fn(DT_N_S_soc_S_qtmr_401e4000_S_timer3, status, 4) \
	fn(DT_N_S_soc_S_qtmr_401e4000_S_timer3, status, 5) \
	fn(DT_N_S_soc_S_qtmr_401e4000_S_timer3, status, 6) \
	fn(DT_N_S_soc_S_qtmr_401e4000_S_timer3, status, 7)
#define DT_N_S_soc_S_qtmr_401e4000_S_timer3_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_qtmr_401e4000_S_timer3, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e4000_S_timer3, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e4000_S_timer3, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e4000_S_timer3, status, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e4000_S_timer3, status, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e4000_S_timer3, status, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e4000_S_timer3, status, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e4000_S_timer3, status, 7)
#define DT_N_S_soc_S_qtmr_401e4000_S_timer3_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_qtmr_401e4000_S_timer3, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qtmr_401e4000_S_timer3, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qtmr_401e4000_S_timer3, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qtmr_401e4000_S_timer3, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qtmr_401e4000_S_timer3, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qtmr_401e4000_S_timer3, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qtmr_401e4000_S_timer3, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qtmr_401e4000_S_timer3, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_qtmr_401e4000_S_timer3_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_qtmr_401e4000_S_timer3, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e4000_S_timer3, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e4000_S_timer3, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e4000_S_timer3, status, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e4000_S_timer3, status, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e4000_S_timer3, status, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e4000_S_timer3, status, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e4000_S_timer3, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_qtmr_401e4000_S_timer3_P_status_EXISTS 1
#define DT_N_S_soc_S_qtmr_401e4000_S_timer3_P_compatible {"nxp,imx-tmr"}
#define DT_N_S_soc_S_qtmr_401e4000_S_timer3_P_compatible_IDX_0 "nxp,imx-tmr"
#define DT_N_S_soc_S_qtmr_401e4000_S_timer3_P_compatible_IDX_0_STRING_UNQUOTED nxp,imx-tmr
#define DT_N_S_soc_S_qtmr_401e4000_S_timer3_P_compatible_IDX_0_STRING_TOKEN nxp_imx_tmr
#define DT_N_S_soc_S_qtmr_401e4000_S_timer3_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_IMX_TMR
#define DT_N_S_soc_S_qtmr_401e4000_S_timer3_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qtmr_401e4000_S_timer3_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_qtmr_401e4000_S_timer3, compatible, 0)
#define DT_N_S_soc_S_qtmr_401e4000_S_timer3_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_qtmr_401e4000_S_timer3, compatible, 0)
#define DT_N_S_soc_S_qtmr_401e4000_S_timer3_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_qtmr_401e4000_S_timer3, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_qtmr_401e4000_S_timer3_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_qtmr_401e4000_S_timer3, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_qtmr_401e4000_S_timer3_P_compatible_LEN 1
#define DT_N_S_soc_S_qtmr_401e4000_S_timer3_P_compatible_EXISTS 1
#define DT_N_S_soc_S_qtmr_401e4000_S_timer3_P_wakeup_source 0
#define DT_N_S_soc_S_qtmr_401e4000_S_timer3_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/qtmr@401e8000
 *
 * Node identifier: DT_N_S_soc_S_qtmr_401e8000
 *
 * Binding (compatible = nxp,imx-qtmr):
 *   $ZEPHYR_BASE/dts/bindings/counter/nxp,imx-qtmr.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_qtmr_401e8000_PATH "/soc/qtmr@401e8000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_qtmr_401e8000_FULL_NAME "qtmr@401e8000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_qtmr_401e8000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_qtmr_401e8000_CHILD_IDX 10

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_qtmr_401e8000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_qtmr_401e8000_S_timer0) fn(DT_N_S_soc_S_qtmr_401e8000_S_timer1) fn(DT_N_S_soc_S_qtmr_401e8000_S_timer2) fn(DT_N_S_soc_S_qtmr_401e8000_S_timer3)
#define DT_N_S_soc_S_qtmr_401e8000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_qtmr_401e8000_S_timer0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_qtmr_401e8000_S_timer1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_qtmr_401e8000_S_timer2) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_qtmr_401e8000_S_timer3)
#define DT_N_S_soc_S_qtmr_401e8000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_qtmr_401e8000_S_timer0, __VA_ARGS__) fn(DT_N_S_soc_S_qtmr_401e8000_S_timer1, __VA_ARGS__) fn(DT_N_S_soc_S_qtmr_401e8000_S_timer2, __VA_ARGS__) fn(DT_N_S_soc_S_qtmr_401e8000_S_timer3, __VA_ARGS__)
#define DT_N_S_soc_S_qtmr_401e8000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_qtmr_401e8000_S_timer0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_qtmr_401e8000_S_timer1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_qtmr_401e8000_S_timer2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_qtmr_401e8000_S_timer3, __VA_ARGS__)
#define DT_N_S_soc_S_qtmr_401e8000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_qtmr_401e8000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_qtmr_401e8000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_qtmr_401e8000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_qtmr_401e8000_ORD 268

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_qtmr_401e8000_REQUIRES_ORDS \
	11, /* /soc */ \
	12, /* /soc/interrupt-controller@e000e100 */ \
	60, /* /soc/ccm@400fc000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_qtmr_401e8000_SUPPORTS_ORDS \
	269, /* /soc/qtmr@401e8000/timer0 */ \
	270, /* /soc/qtmr@401e8000/timer1 */ \
	271, /* /soc/qtmr@401e8000/timer2 */ \
	272, /* /soc/qtmr@401e8000/timer3 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_qtmr_401e8000_EXISTS 1
#define DT_N_INST_3_nxp_imx_qtmr DT_N_S_soc_S_qtmr_401e8000
#define DT_N_NODELABEL_qtmr4     DT_N_S_soc_S_qtmr_401e8000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_qtmr_401e8000_REG_NUM 1
#define DT_N_S_soc_S_qtmr_401e8000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qtmr_401e8000_REG_IDX_0_VAL_ADDRESS 1075740672 /* 0x401e8000 */
#define DT_N_S_soc_S_qtmr_401e8000_REG_IDX_0_VAL_SIZE 122 /* 0x7a */
#define DT_N_S_soc_S_qtmr_401e8000_RANGES_NUM 0
#define DT_N_S_soc_S_qtmr_401e8000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_qtmr_401e8000_IRQ_NUM 1
#define DT_N_S_soc_S_qtmr_401e8000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qtmr_401e8000_IRQ_IDX_0_VAL_irq 136
#define DT_N_S_soc_S_qtmr_401e8000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_qtmr_401e8000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qtmr_401e8000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_qtmr_401e8000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_qtmr_401e8000_COMPAT_MATCHES_nxp_imx_qtmr 1
#define DT_N_S_soc_S_qtmr_401e8000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qtmr_401e8000_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_soc_S_qtmr_401e8000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qtmr_401e8000_COMPAT_MODEL_IDX_0 "imx-qtmr"
#define DT_N_S_soc_S_qtmr_401e8000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_qtmr_401e8000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_qtmr_401e8000_P_reg {1075740672 /* 0x401e8000 */, 122 /* 0x7a */}
#define DT_N_S_soc_S_qtmr_401e8000_P_reg_IDX_0 1075740672
#define DT_N_S_soc_S_qtmr_401e8000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qtmr_401e8000_P_reg_IDX_1 122
#define DT_N_S_soc_S_qtmr_401e8000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_qtmr_401e8000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_qtmr_401e8000, reg, 0) \
	fn(DT_N_S_soc_S_qtmr_401e8000, reg, 1)
#define DT_N_S_soc_S_qtmr_401e8000_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_qtmr_401e8000, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e8000, reg, 1)
#define DT_N_S_soc_S_qtmr_401e8000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_qtmr_401e8000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qtmr_401e8000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_qtmr_401e8000_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_qtmr_401e8000, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e8000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_qtmr_401e8000_P_reg_EXISTS 1
#define DT_N_S_soc_S_qtmr_401e8000_P_interrupts {136 /* 0x88 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_qtmr_401e8000_P_interrupts_IDX_0 136
#define DT_N_S_soc_S_qtmr_401e8000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qtmr_401e8000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_qtmr_401e8000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_qtmr_401e8000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_qtmr_401e8000, interrupts, 0) \
	fn(DT_N_S_soc_S_qtmr_401e8000, interrupts, 1)
#define DT_N_S_soc_S_qtmr_401e8000_P_interrupts_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_qtmr_401e8000, interrupts, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e8000, interrupts, 1)
#define DT_N_S_soc_S_qtmr_401e8000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_qtmr_401e8000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qtmr_401e8000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_qtmr_401e8000_P_interrupts_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_qtmr_401e8000, interrupts, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e8000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_qtmr_401e8000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_qtmr_401e8000_P_compatible {"nxp,imx-qtmr"}
#define DT_N_S_soc_S_qtmr_401e8000_P_compatible_IDX_0 "nxp,imx-qtmr"
#define DT_N_S_soc_S_qtmr_401e8000_P_compatible_IDX_0_STRING_UNQUOTED nxp,imx-qtmr
#define DT_N_S_soc_S_qtmr_401e8000_P_compatible_IDX_0_STRING_TOKEN nxp_imx_qtmr
#define DT_N_S_soc_S_qtmr_401e8000_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_IMX_QTMR
#define DT_N_S_soc_S_qtmr_401e8000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qtmr_401e8000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_qtmr_401e8000, compatible, 0)
#define DT_N_S_soc_S_qtmr_401e8000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_qtmr_401e8000, compatible, 0)
#define DT_N_S_soc_S_qtmr_401e8000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_qtmr_401e8000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_qtmr_401e8000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_qtmr_401e8000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_qtmr_401e8000_P_compatible_LEN 1
#define DT_N_S_soc_S_qtmr_401e8000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_qtmr_401e8000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qtmr_401e8000_P_clocks_IDX_0_PH DT_N_S_soc_S_ccm_400fc000
#define DT_N_S_soc_S_qtmr_401e8000_P_clocks_IDX_0_VAL_name 3328
#define DT_N_S_soc_S_qtmr_401e8000_P_clocks_IDX_0_VAL_name_EXISTS 1
#define DT_N_S_soc_S_qtmr_401e8000_P_clocks_IDX_0_VAL_offset 0
#define DT_N_S_soc_S_qtmr_401e8000_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_qtmr_401e8000_P_clocks_IDX_0_VAL_bits 0
#define DT_N_S_soc_S_qtmr_401e8000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_qtmr_401e8000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_qtmr_401e8000, clocks, 0)
#define DT_N_S_soc_S_qtmr_401e8000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_qtmr_401e8000, clocks, 0)
#define DT_N_S_soc_S_qtmr_401e8000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_qtmr_401e8000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_qtmr_401e8000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_qtmr_401e8000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_qtmr_401e8000_P_clocks_LEN 1
#define DT_N_S_soc_S_qtmr_401e8000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_qtmr_401e8000_P_wakeup_source 0
#define DT_N_S_soc_S_qtmr_401e8000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/qtmr@401e8000/timer0
 *
 * Node identifier: DT_N_S_soc_S_qtmr_401e8000_S_timer0
 *
 * Binding (compatible = nxp,imx-tmr):
 *   $ZEPHYR_BASE/dts/bindings/counter/nxp,imx-tmr.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_qtmr_401e8000_S_timer0_PATH "/soc/qtmr@401e8000/timer0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_qtmr_401e8000_S_timer0_FULL_NAME "timer0"

/* Node parent (/soc/qtmr@401e8000) identifier: */
#define DT_N_S_soc_S_qtmr_401e8000_S_timer0_PARENT DT_N_S_soc_S_qtmr_401e8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_qtmr_401e8000_S_timer0_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_qtmr_401e8000_S_timer0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_qtmr_401e8000_S_timer0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_qtmr_401e8000_S_timer0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_qtmr_401e8000_S_timer0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_qtmr_401e8000_S_timer0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_qtmr_401e8000_S_timer0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_qtmr_401e8000_S_timer0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_qtmr_401e8000_S_timer0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_qtmr_401e8000_S_timer0_ORD 269

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_qtmr_401e8000_S_timer0_REQUIRES_ORDS \
	268, /* /soc/qtmr@401e8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_qtmr_401e8000_S_timer0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_qtmr_401e8000_S_timer0_EXISTS 1
#define DT_N_INST_12_nxp_imx_tmr    DT_N_S_soc_S_qtmr_401e8000_S_timer0
#define DT_N_NODELABEL_qtmr4_timer0 DT_N_S_soc_S_qtmr_401e8000_S_timer0

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_qtmr_401e8000_S_timer0_REG_NUM 0
#define DT_N_S_soc_S_qtmr_401e8000_S_timer0_RANGES_NUM 0
#define DT_N_S_soc_S_qtmr_401e8000_S_timer0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_qtmr_401e8000_S_timer0_IRQ_NUM 0
#define DT_N_S_soc_S_qtmr_401e8000_S_timer0_COMPAT_MATCHES_nxp_imx_tmr 1
#define DT_N_S_soc_S_qtmr_401e8000_S_timer0_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qtmr_401e8000_S_timer0_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_soc_S_qtmr_401e8000_S_timer0_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qtmr_401e8000_S_timer0_COMPAT_MODEL_IDX_0 "imx-tmr"
#define DT_N_S_soc_S_qtmr_401e8000_S_timer0_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_qtmr_401e8000_S_timer0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_qtmr_401e8000_S_timer0_P_channel 0
#define DT_N_S_soc_S_qtmr_401e8000_S_timer0_P_channel_ENUM_IDX 0
#define DT_N_S_soc_S_qtmr_401e8000_S_timer0_P_channel_EXISTS 1
#define DT_N_S_soc_S_qtmr_401e8000_S_timer0_P_status "disabled"
#define DT_N_S_soc_S_qtmr_401e8000_S_timer0_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_qtmr_401e8000_S_timer0_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_qtmr_401e8000_S_timer0_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_qtmr_401e8000_S_timer0_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_qtmr_401e8000_S_timer0_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_qtmr_401e8000_S_timer0_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_qtmr_401e8000_S_timer0_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_qtmr_401e8000_S_timer0, status, 0) \
	fn(DT_N_S_soc_S_qtmr_401e8000_S_timer0, status, 1) \
	fn(DT_N_S_soc_S_qtmr_401e8000_S_timer0, status, 2) \
	fn(DT_N_S_soc_S_qtmr_401e8000_S_timer0, status, 3) \
	fn(DT_N_S_soc_S_qtmr_401e8000_S_timer0, status, 4) \
	fn(DT_N_S_soc_S_qtmr_401e8000_S_timer0, status, 5) \
	fn(DT_N_S_soc_S_qtmr_401e8000_S_timer0, status, 6) \
	fn(DT_N_S_soc_S_qtmr_401e8000_S_timer0, status, 7)
#define DT_N_S_soc_S_qtmr_401e8000_S_timer0_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_qtmr_401e8000_S_timer0, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e8000_S_timer0, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e8000_S_timer0, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e8000_S_timer0, status, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e8000_S_timer0, status, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e8000_S_timer0, status, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e8000_S_timer0, status, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e8000_S_timer0, status, 7)
#define DT_N_S_soc_S_qtmr_401e8000_S_timer0_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_qtmr_401e8000_S_timer0, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qtmr_401e8000_S_timer0, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qtmr_401e8000_S_timer0, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qtmr_401e8000_S_timer0, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qtmr_401e8000_S_timer0, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qtmr_401e8000_S_timer0, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qtmr_401e8000_S_timer0, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qtmr_401e8000_S_timer0, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_qtmr_401e8000_S_timer0_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_qtmr_401e8000_S_timer0, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e8000_S_timer0, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e8000_S_timer0, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e8000_S_timer0, status, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e8000_S_timer0, status, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e8000_S_timer0, status, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e8000_S_timer0, status, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e8000_S_timer0, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_qtmr_401e8000_S_timer0_P_status_EXISTS 1
#define DT_N_S_soc_S_qtmr_401e8000_S_timer0_P_compatible {"nxp,imx-tmr"}
#define DT_N_S_soc_S_qtmr_401e8000_S_timer0_P_compatible_IDX_0 "nxp,imx-tmr"
#define DT_N_S_soc_S_qtmr_401e8000_S_timer0_P_compatible_IDX_0_STRING_UNQUOTED nxp,imx-tmr
#define DT_N_S_soc_S_qtmr_401e8000_S_timer0_P_compatible_IDX_0_STRING_TOKEN nxp_imx_tmr
#define DT_N_S_soc_S_qtmr_401e8000_S_timer0_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_IMX_TMR
#define DT_N_S_soc_S_qtmr_401e8000_S_timer0_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qtmr_401e8000_S_timer0_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_qtmr_401e8000_S_timer0, compatible, 0)
#define DT_N_S_soc_S_qtmr_401e8000_S_timer0_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_qtmr_401e8000_S_timer0, compatible, 0)
#define DT_N_S_soc_S_qtmr_401e8000_S_timer0_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_qtmr_401e8000_S_timer0, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_qtmr_401e8000_S_timer0_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_qtmr_401e8000_S_timer0, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_qtmr_401e8000_S_timer0_P_compatible_LEN 1
#define DT_N_S_soc_S_qtmr_401e8000_S_timer0_P_compatible_EXISTS 1
#define DT_N_S_soc_S_qtmr_401e8000_S_timer0_P_wakeup_source 0
#define DT_N_S_soc_S_qtmr_401e8000_S_timer0_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/qtmr@401e8000/timer1
 *
 * Node identifier: DT_N_S_soc_S_qtmr_401e8000_S_timer1
 *
 * Binding (compatible = nxp,imx-tmr):
 *   $ZEPHYR_BASE/dts/bindings/counter/nxp,imx-tmr.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_qtmr_401e8000_S_timer1_PATH "/soc/qtmr@401e8000/timer1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_qtmr_401e8000_S_timer1_FULL_NAME "timer1"

/* Node parent (/soc/qtmr@401e8000) identifier: */
#define DT_N_S_soc_S_qtmr_401e8000_S_timer1_PARENT DT_N_S_soc_S_qtmr_401e8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_qtmr_401e8000_S_timer1_CHILD_IDX 1

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_qtmr_401e8000_S_timer1_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_qtmr_401e8000_S_timer1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_qtmr_401e8000_S_timer1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_qtmr_401e8000_S_timer1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_qtmr_401e8000_S_timer1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_qtmr_401e8000_S_timer1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_qtmr_401e8000_S_timer1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_qtmr_401e8000_S_timer1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_qtmr_401e8000_S_timer1_ORD 270

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_qtmr_401e8000_S_timer1_REQUIRES_ORDS \
	268, /* /soc/qtmr@401e8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_qtmr_401e8000_S_timer1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_qtmr_401e8000_S_timer1_EXISTS 1
#define DT_N_INST_13_nxp_imx_tmr    DT_N_S_soc_S_qtmr_401e8000_S_timer1
#define DT_N_NODELABEL_qtmr4_timer1 DT_N_S_soc_S_qtmr_401e8000_S_timer1

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_qtmr_401e8000_S_timer1_REG_NUM 0
#define DT_N_S_soc_S_qtmr_401e8000_S_timer1_RANGES_NUM 0
#define DT_N_S_soc_S_qtmr_401e8000_S_timer1_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_qtmr_401e8000_S_timer1_IRQ_NUM 0
#define DT_N_S_soc_S_qtmr_401e8000_S_timer1_COMPAT_MATCHES_nxp_imx_tmr 1
#define DT_N_S_soc_S_qtmr_401e8000_S_timer1_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qtmr_401e8000_S_timer1_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_soc_S_qtmr_401e8000_S_timer1_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qtmr_401e8000_S_timer1_COMPAT_MODEL_IDX_0 "imx-tmr"
#define DT_N_S_soc_S_qtmr_401e8000_S_timer1_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_qtmr_401e8000_S_timer1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_qtmr_401e8000_S_timer1_P_channel 1
#define DT_N_S_soc_S_qtmr_401e8000_S_timer1_P_channel_ENUM_IDX 1
#define DT_N_S_soc_S_qtmr_401e8000_S_timer1_P_channel_EXISTS 1
#define DT_N_S_soc_S_qtmr_401e8000_S_timer1_P_status "disabled"
#define DT_N_S_soc_S_qtmr_401e8000_S_timer1_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_qtmr_401e8000_S_timer1_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_qtmr_401e8000_S_timer1_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_qtmr_401e8000_S_timer1_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_qtmr_401e8000_S_timer1_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_qtmr_401e8000_S_timer1_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_qtmr_401e8000_S_timer1_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_qtmr_401e8000_S_timer1, status, 0) \
	fn(DT_N_S_soc_S_qtmr_401e8000_S_timer1, status, 1) \
	fn(DT_N_S_soc_S_qtmr_401e8000_S_timer1, status, 2) \
	fn(DT_N_S_soc_S_qtmr_401e8000_S_timer1, status, 3) \
	fn(DT_N_S_soc_S_qtmr_401e8000_S_timer1, status, 4) \
	fn(DT_N_S_soc_S_qtmr_401e8000_S_timer1, status, 5) \
	fn(DT_N_S_soc_S_qtmr_401e8000_S_timer1, status, 6) \
	fn(DT_N_S_soc_S_qtmr_401e8000_S_timer1, status, 7)
#define DT_N_S_soc_S_qtmr_401e8000_S_timer1_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_qtmr_401e8000_S_timer1, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e8000_S_timer1, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e8000_S_timer1, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e8000_S_timer1, status, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e8000_S_timer1, status, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e8000_S_timer1, status, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e8000_S_timer1, status, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e8000_S_timer1, status, 7)
#define DT_N_S_soc_S_qtmr_401e8000_S_timer1_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_qtmr_401e8000_S_timer1, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qtmr_401e8000_S_timer1, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qtmr_401e8000_S_timer1, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qtmr_401e8000_S_timer1, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qtmr_401e8000_S_timer1, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qtmr_401e8000_S_timer1, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qtmr_401e8000_S_timer1, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qtmr_401e8000_S_timer1, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_qtmr_401e8000_S_timer1_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_qtmr_401e8000_S_timer1, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e8000_S_timer1, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e8000_S_timer1, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e8000_S_timer1, status, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e8000_S_timer1, status, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e8000_S_timer1, status, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e8000_S_timer1, status, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e8000_S_timer1, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_qtmr_401e8000_S_timer1_P_status_EXISTS 1
#define DT_N_S_soc_S_qtmr_401e8000_S_timer1_P_compatible {"nxp,imx-tmr"}
#define DT_N_S_soc_S_qtmr_401e8000_S_timer1_P_compatible_IDX_0 "nxp,imx-tmr"
#define DT_N_S_soc_S_qtmr_401e8000_S_timer1_P_compatible_IDX_0_STRING_UNQUOTED nxp,imx-tmr
#define DT_N_S_soc_S_qtmr_401e8000_S_timer1_P_compatible_IDX_0_STRING_TOKEN nxp_imx_tmr
#define DT_N_S_soc_S_qtmr_401e8000_S_timer1_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_IMX_TMR
#define DT_N_S_soc_S_qtmr_401e8000_S_timer1_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qtmr_401e8000_S_timer1_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_qtmr_401e8000_S_timer1, compatible, 0)
#define DT_N_S_soc_S_qtmr_401e8000_S_timer1_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_qtmr_401e8000_S_timer1, compatible, 0)
#define DT_N_S_soc_S_qtmr_401e8000_S_timer1_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_qtmr_401e8000_S_timer1, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_qtmr_401e8000_S_timer1_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_qtmr_401e8000_S_timer1, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_qtmr_401e8000_S_timer1_P_compatible_LEN 1
#define DT_N_S_soc_S_qtmr_401e8000_S_timer1_P_compatible_EXISTS 1
#define DT_N_S_soc_S_qtmr_401e8000_S_timer1_P_wakeup_source 0
#define DT_N_S_soc_S_qtmr_401e8000_S_timer1_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/qtmr@401e8000/timer2
 *
 * Node identifier: DT_N_S_soc_S_qtmr_401e8000_S_timer2
 *
 * Binding (compatible = nxp,imx-tmr):
 *   $ZEPHYR_BASE/dts/bindings/counter/nxp,imx-tmr.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_qtmr_401e8000_S_timer2_PATH "/soc/qtmr@401e8000/timer2"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_qtmr_401e8000_S_timer2_FULL_NAME "timer2"

/* Node parent (/soc/qtmr@401e8000) identifier: */
#define DT_N_S_soc_S_qtmr_401e8000_S_timer2_PARENT DT_N_S_soc_S_qtmr_401e8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_qtmr_401e8000_S_timer2_CHILD_IDX 2

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_qtmr_401e8000_S_timer2_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_qtmr_401e8000_S_timer2_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_qtmr_401e8000_S_timer2_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_qtmr_401e8000_S_timer2_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_qtmr_401e8000_S_timer2_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_qtmr_401e8000_S_timer2_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_qtmr_401e8000_S_timer2_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_qtmr_401e8000_S_timer2_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_qtmr_401e8000_S_timer2_ORD 271

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_qtmr_401e8000_S_timer2_REQUIRES_ORDS \
	268, /* /soc/qtmr@401e8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_qtmr_401e8000_S_timer2_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_qtmr_401e8000_S_timer2_EXISTS 1
#define DT_N_INST_14_nxp_imx_tmr    DT_N_S_soc_S_qtmr_401e8000_S_timer2
#define DT_N_NODELABEL_qtmr4_timer2 DT_N_S_soc_S_qtmr_401e8000_S_timer2

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_qtmr_401e8000_S_timer2_REG_NUM 0
#define DT_N_S_soc_S_qtmr_401e8000_S_timer2_RANGES_NUM 0
#define DT_N_S_soc_S_qtmr_401e8000_S_timer2_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_qtmr_401e8000_S_timer2_IRQ_NUM 0
#define DT_N_S_soc_S_qtmr_401e8000_S_timer2_COMPAT_MATCHES_nxp_imx_tmr 1
#define DT_N_S_soc_S_qtmr_401e8000_S_timer2_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qtmr_401e8000_S_timer2_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_soc_S_qtmr_401e8000_S_timer2_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qtmr_401e8000_S_timer2_COMPAT_MODEL_IDX_0 "imx-tmr"
#define DT_N_S_soc_S_qtmr_401e8000_S_timer2_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_qtmr_401e8000_S_timer2_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_qtmr_401e8000_S_timer2_P_channel 2
#define DT_N_S_soc_S_qtmr_401e8000_S_timer2_P_channel_ENUM_IDX 2
#define DT_N_S_soc_S_qtmr_401e8000_S_timer2_P_channel_EXISTS 1
#define DT_N_S_soc_S_qtmr_401e8000_S_timer2_P_status "disabled"
#define DT_N_S_soc_S_qtmr_401e8000_S_timer2_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_qtmr_401e8000_S_timer2_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_qtmr_401e8000_S_timer2_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_qtmr_401e8000_S_timer2_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_qtmr_401e8000_S_timer2_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_qtmr_401e8000_S_timer2_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_qtmr_401e8000_S_timer2_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_qtmr_401e8000_S_timer2, status, 0) \
	fn(DT_N_S_soc_S_qtmr_401e8000_S_timer2, status, 1) \
	fn(DT_N_S_soc_S_qtmr_401e8000_S_timer2, status, 2) \
	fn(DT_N_S_soc_S_qtmr_401e8000_S_timer2, status, 3) \
	fn(DT_N_S_soc_S_qtmr_401e8000_S_timer2, status, 4) \
	fn(DT_N_S_soc_S_qtmr_401e8000_S_timer2, status, 5) \
	fn(DT_N_S_soc_S_qtmr_401e8000_S_timer2, status, 6) \
	fn(DT_N_S_soc_S_qtmr_401e8000_S_timer2, status, 7)
#define DT_N_S_soc_S_qtmr_401e8000_S_timer2_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_qtmr_401e8000_S_timer2, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e8000_S_timer2, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e8000_S_timer2, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e8000_S_timer2, status, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e8000_S_timer2, status, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e8000_S_timer2, status, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e8000_S_timer2, status, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e8000_S_timer2, status, 7)
#define DT_N_S_soc_S_qtmr_401e8000_S_timer2_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_qtmr_401e8000_S_timer2, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qtmr_401e8000_S_timer2, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qtmr_401e8000_S_timer2, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qtmr_401e8000_S_timer2, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qtmr_401e8000_S_timer2, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qtmr_401e8000_S_timer2, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qtmr_401e8000_S_timer2, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qtmr_401e8000_S_timer2, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_qtmr_401e8000_S_timer2_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_qtmr_401e8000_S_timer2, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e8000_S_timer2, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e8000_S_timer2, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e8000_S_timer2, status, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e8000_S_timer2, status, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e8000_S_timer2, status, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e8000_S_timer2, status, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e8000_S_timer2, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_qtmr_401e8000_S_timer2_P_status_EXISTS 1
#define DT_N_S_soc_S_qtmr_401e8000_S_timer2_P_compatible {"nxp,imx-tmr"}
#define DT_N_S_soc_S_qtmr_401e8000_S_timer2_P_compatible_IDX_0 "nxp,imx-tmr"
#define DT_N_S_soc_S_qtmr_401e8000_S_timer2_P_compatible_IDX_0_STRING_UNQUOTED nxp,imx-tmr
#define DT_N_S_soc_S_qtmr_401e8000_S_timer2_P_compatible_IDX_0_STRING_TOKEN nxp_imx_tmr
#define DT_N_S_soc_S_qtmr_401e8000_S_timer2_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_IMX_TMR
#define DT_N_S_soc_S_qtmr_401e8000_S_timer2_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qtmr_401e8000_S_timer2_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_qtmr_401e8000_S_timer2, compatible, 0)
#define DT_N_S_soc_S_qtmr_401e8000_S_timer2_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_qtmr_401e8000_S_timer2, compatible, 0)
#define DT_N_S_soc_S_qtmr_401e8000_S_timer2_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_qtmr_401e8000_S_timer2, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_qtmr_401e8000_S_timer2_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_qtmr_401e8000_S_timer2, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_qtmr_401e8000_S_timer2_P_compatible_LEN 1
#define DT_N_S_soc_S_qtmr_401e8000_S_timer2_P_compatible_EXISTS 1
#define DT_N_S_soc_S_qtmr_401e8000_S_timer2_P_wakeup_source 0
#define DT_N_S_soc_S_qtmr_401e8000_S_timer2_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/qtmr@401e8000/timer3
 *
 * Node identifier: DT_N_S_soc_S_qtmr_401e8000_S_timer3
 *
 * Binding (compatible = nxp,imx-tmr):
 *   $ZEPHYR_BASE/dts/bindings/counter/nxp,imx-tmr.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_qtmr_401e8000_S_timer3_PATH "/soc/qtmr@401e8000/timer3"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_qtmr_401e8000_S_timer3_FULL_NAME "timer3"

/* Node parent (/soc/qtmr@401e8000) identifier: */
#define DT_N_S_soc_S_qtmr_401e8000_S_timer3_PARENT DT_N_S_soc_S_qtmr_401e8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_qtmr_401e8000_S_timer3_CHILD_IDX 3

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_qtmr_401e8000_S_timer3_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_qtmr_401e8000_S_timer3_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_qtmr_401e8000_S_timer3_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_qtmr_401e8000_S_timer3_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_qtmr_401e8000_S_timer3_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_qtmr_401e8000_S_timer3_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_qtmr_401e8000_S_timer3_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_qtmr_401e8000_S_timer3_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_qtmr_401e8000_S_timer3_ORD 272

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_qtmr_401e8000_S_timer3_REQUIRES_ORDS \
	268, /* /soc/qtmr@401e8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_qtmr_401e8000_S_timer3_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_qtmr_401e8000_S_timer3_EXISTS 1
#define DT_N_INST_15_nxp_imx_tmr    DT_N_S_soc_S_qtmr_401e8000_S_timer3
#define DT_N_NODELABEL_qtmr4_timer3 DT_N_S_soc_S_qtmr_401e8000_S_timer3

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_qtmr_401e8000_S_timer3_REG_NUM 0
#define DT_N_S_soc_S_qtmr_401e8000_S_timer3_RANGES_NUM 0
#define DT_N_S_soc_S_qtmr_401e8000_S_timer3_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_qtmr_401e8000_S_timer3_IRQ_NUM 0
#define DT_N_S_soc_S_qtmr_401e8000_S_timer3_COMPAT_MATCHES_nxp_imx_tmr 1
#define DT_N_S_soc_S_qtmr_401e8000_S_timer3_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qtmr_401e8000_S_timer3_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_soc_S_qtmr_401e8000_S_timer3_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qtmr_401e8000_S_timer3_COMPAT_MODEL_IDX_0 "imx-tmr"
#define DT_N_S_soc_S_qtmr_401e8000_S_timer3_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_qtmr_401e8000_S_timer3_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_qtmr_401e8000_S_timer3_P_channel 3
#define DT_N_S_soc_S_qtmr_401e8000_S_timer3_P_channel_ENUM_IDX 3
#define DT_N_S_soc_S_qtmr_401e8000_S_timer3_P_channel_EXISTS 1
#define DT_N_S_soc_S_qtmr_401e8000_S_timer3_P_status "disabled"
#define DT_N_S_soc_S_qtmr_401e8000_S_timer3_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_qtmr_401e8000_S_timer3_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_qtmr_401e8000_S_timer3_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_qtmr_401e8000_S_timer3_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_qtmr_401e8000_S_timer3_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_qtmr_401e8000_S_timer3_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_qtmr_401e8000_S_timer3_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_qtmr_401e8000_S_timer3, status, 0) \
	fn(DT_N_S_soc_S_qtmr_401e8000_S_timer3, status, 1) \
	fn(DT_N_S_soc_S_qtmr_401e8000_S_timer3, status, 2) \
	fn(DT_N_S_soc_S_qtmr_401e8000_S_timer3, status, 3) \
	fn(DT_N_S_soc_S_qtmr_401e8000_S_timer3, status, 4) \
	fn(DT_N_S_soc_S_qtmr_401e8000_S_timer3, status, 5) \
	fn(DT_N_S_soc_S_qtmr_401e8000_S_timer3, status, 6) \
	fn(DT_N_S_soc_S_qtmr_401e8000_S_timer3, status, 7)
#define DT_N_S_soc_S_qtmr_401e8000_S_timer3_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_qtmr_401e8000_S_timer3, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e8000_S_timer3, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e8000_S_timer3, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e8000_S_timer3, status, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e8000_S_timer3, status, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e8000_S_timer3, status, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e8000_S_timer3, status, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e8000_S_timer3, status, 7)
#define DT_N_S_soc_S_qtmr_401e8000_S_timer3_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_qtmr_401e8000_S_timer3, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qtmr_401e8000_S_timer3, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qtmr_401e8000_S_timer3, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qtmr_401e8000_S_timer3, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qtmr_401e8000_S_timer3, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qtmr_401e8000_S_timer3, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qtmr_401e8000_S_timer3, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qtmr_401e8000_S_timer3, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_qtmr_401e8000_S_timer3_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_qtmr_401e8000_S_timer3, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e8000_S_timer3, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e8000_S_timer3, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e8000_S_timer3, status, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e8000_S_timer3, status, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e8000_S_timer3, status, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e8000_S_timer3, status, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qtmr_401e8000_S_timer3, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_qtmr_401e8000_S_timer3_P_status_EXISTS 1
#define DT_N_S_soc_S_qtmr_401e8000_S_timer3_P_compatible {"nxp,imx-tmr"}
#define DT_N_S_soc_S_qtmr_401e8000_S_timer3_P_compatible_IDX_0 "nxp,imx-tmr"
#define DT_N_S_soc_S_qtmr_401e8000_S_timer3_P_compatible_IDX_0_STRING_UNQUOTED nxp,imx-tmr
#define DT_N_S_soc_S_qtmr_401e8000_S_timer3_P_compatible_IDX_0_STRING_TOKEN nxp_imx_tmr
#define DT_N_S_soc_S_qtmr_401e8000_S_timer3_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_IMX_TMR
#define DT_N_S_soc_S_qtmr_401e8000_S_timer3_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qtmr_401e8000_S_timer3_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_qtmr_401e8000_S_timer3, compatible, 0)
#define DT_N_S_soc_S_qtmr_401e8000_S_timer3_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_qtmr_401e8000_S_timer3, compatible, 0)
#define DT_N_S_soc_S_qtmr_401e8000_S_timer3_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_qtmr_401e8000_S_timer3, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_qtmr_401e8000_S_timer3_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_qtmr_401e8000_S_timer3, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_qtmr_401e8000_S_timer3_P_compatible_LEN 1
#define DT_N_S_soc_S_qtmr_401e8000_S_timer3_P_compatible_EXISTS 1
#define DT_N_S_soc_S_qtmr_401e8000_S_timer3_P_wakeup_source 0
#define DT_N_S_soc_S_qtmr_401e8000_S_timer3_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/snvs@400d4000
 *
 * Node identifier: DT_N_S_soc_S_snvs_400d4000
 */

/* Node's full path: */
#define DT_N_S_soc_S_snvs_400d4000_PATH "/soc/snvs@400d4000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_snvs_400d4000_FULL_NAME "snvs@400d4000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_snvs_400d4000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_snvs_400d4000_CHILD_IDX 12

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_snvs_400d4000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_snvs_400d4000_S_rtc)
#define DT_N_S_soc_S_snvs_400d4000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_snvs_400d4000_S_rtc)
#define DT_N_S_soc_S_snvs_400d4000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_snvs_400d4000_S_rtc, __VA_ARGS__)
#define DT_N_S_soc_S_snvs_400d4000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_snvs_400d4000_S_rtc, __VA_ARGS__)
#define DT_N_S_soc_S_snvs_400d4000_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_snvs_400d4000_S_rtc)
#define DT_N_S_soc_S_snvs_400d4000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_snvs_400d4000_S_rtc)
#define DT_N_S_soc_S_snvs_400d4000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_snvs_400d4000_S_rtc, __VA_ARGS__)
#define DT_N_S_soc_S_snvs_400d4000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_snvs_400d4000_S_rtc, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_snvs_400d4000_ORD 273

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_snvs_400d4000_REQUIRES_ORDS \
	11, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_snvs_400d4000_SUPPORTS_ORDS \
	274, /* /soc/snvs@400d4000/rtc */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_snvs_400d4000_EXISTS 1
#define DT_N_INST_0_nxp_imx_snvs DT_N_S_soc_S_snvs_400d4000
#define DT_N_NODELABEL_snvs      DT_N_S_soc_S_snvs_400d4000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_snvs_400d4000_REG_NUM 1
#define DT_N_S_soc_S_snvs_400d4000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_snvs_400d4000_REG_IDX_0_VAL_ADDRESS 1074610176 /* 0x400d4000 */
#define DT_N_S_soc_S_snvs_400d4000_REG_IDX_0_VAL_SIZE 16384 /* 0x4000 */
#define DT_N_S_soc_S_snvs_400d4000_RANGES_NUM 0
#define DT_N_S_soc_S_snvs_400d4000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_snvs_400d4000_IRQ_NUM 0
#define DT_N_S_soc_S_snvs_400d4000_COMPAT_MATCHES_nxp_imx_snvs 1
#define DT_N_S_soc_S_snvs_400d4000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_snvs_400d4000_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_soc_S_snvs_400d4000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_snvs_400d4000_COMPAT_MODEL_IDX_0 "imx-snvs"
#define DT_N_S_soc_S_snvs_400d4000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_snvs_400d4000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_snvs_400d4000_P_compatible {"nxp,imx-snvs"}
#define DT_N_S_soc_S_snvs_400d4000_P_compatible_IDX_0 "nxp,imx-snvs"
#define DT_N_S_soc_S_snvs_400d4000_P_compatible_IDX_0_STRING_UNQUOTED nxp,imx-snvs
#define DT_N_S_soc_S_snvs_400d4000_P_compatible_IDX_0_STRING_TOKEN nxp_imx_snvs
#define DT_N_S_soc_S_snvs_400d4000_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_IMX_SNVS
#define DT_N_S_soc_S_snvs_400d4000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_snvs_400d4000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_snvs_400d4000, compatible, 0)
#define DT_N_S_soc_S_snvs_400d4000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_snvs_400d4000, compatible, 0)
#define DT_N_S_soc_S_snvs_400d4000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_snvs_400d4000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_snvs_400d4000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_snvs_400d4000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_snvs_400d4000_P_compatible_LEN 1
#define DT_N_S_soc_S_snvs_400d4000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_snvs_400d4000_P_reg {1074610176 /* 0x400d4000 */, 16384 /* 0x4000 */}
#define DT_N_S_soc_S_snvs_400d4000_P_reg_IDX_0 1074610176
#define DT_N_S_soc_S_snvs_400d4000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_snvs_400d4000_P_reg_IDX_1 16384
#define DT_N_S_soc_S_snvs_400d4000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_snvs_400d4000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_snvs_400d4000, reg, 0) \
	fn(DT_N_S_soc_S_snvs_400d4000, reg, 1)
#define DT_N_S_soc_S_snvs_400d4000_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_snvs_400d4000, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_snvs_400d4000, reg, 1)
#define DT_N_S_soc_S_snvs_400d4000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_snvs_400d4000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_snvs_400d4000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_snvs_400d4000_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_snvs_400d4000, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_snvs_400d4000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_snvs_400d4000_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/snvs@400d4000/rtc
 *
 * Node identifier: DT_N_S_soc_S_snvs_400d4000_S_rtc
 *
 * Binding (compatible = nxp,imx-snvs-rtc):
 *   $ZEPHYR_BASE/dts/bindings/rtc/nxp,imx-snvs-rtc.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_snvs_400d4000_S_rtc_PATH "/soc/snvs@400d4000/rtc"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_snvs_400d4000_S_rtc_FULL_NAME "rtc"

/* Node parent (/soc/snvs@400d4000) identifier: */
#define DT_N_S_soc_S_snvs_400d4000_S_rtc_PARENT DT_N_S_soc_S_snvs_400d4000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_snvs_400d4000_S_rtc_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_snvs_400d4000_S_rtc_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_snvs_400d4000_S_rtc_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_snvs_400d4000_S_rtc_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_snvs_400d4000_S_rtc_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_snvs_400d4000_S_rtc_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_snvs_400d4000_S_rtc_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_snvs_400d4000_S_rtc_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_snvs_400d4000_S_rtc_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_snvs_400d4000_S_rtc_ORD 274

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_snvs_400d4000_S_rtc_REQUIRES_ORDS \
	12, /* /soc/interrupt-controller@e000e100 */ \
	273, /* /soc/snvs@400d4000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_snvs_400d4000_S_rtc_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_snvs_400d4000_S_rtc_EXISTS 1
#define DT_N_INST_0_nxp_imx_snvs_rtc DT_N_S_soc_S_snvs_400d4000_S_rtc
#define DT_N_NODELABEL_snvs_rtc      DT_N_S_soc_S_snvs_400d4000_S_rtc

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_snvs_400d4000_S_rtc_REG_NUM 0
#define DT_N_S_soc_S_snvs_400d4000_S_rtc_RANGES_NUM 0
#define DT_N_S_soc_S_snvs_400d4000_S_rtc_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_snvs_400d4000_S_rtc_IRQ_NUM 1
#define DT_N_S_soc_S_snvs_400d4000_S_rtc_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_snvs_400d4000_S_rtc_IRQ_IDX_0_VAL_irq 46
#define DT_N_S_soc_S_snvs_400d4000_S_rtc_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_snvs_400d4000_S_rtc_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_snvs_400d4000_S_rtc_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_snvs_400d4000_S_rtc_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_snvs_400d4000_S_rtc_COMPAT_MATCHES_nxp_imx_snvs_rtc 1
#define DT_N_S_soc_S_snvs_400d4000_S_rtc_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_snvs_400d4000_S_rtc_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_soc_S_snvs_400d4000_S_rtc_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_snvs_400d4000_S_rtc_COMPAT_MODEL_IDX_0 "imx-snvs-rtc"
#define DT_N_S_soc_S_snvs_400d4000_S_rtc_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_snvs_400d4000_S_rtc_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_snvs_400d4000_S_rtc_P_interrupts {46 /* 0x2e */, 0 /* 0x0 */}
#define DT_N_S_soc_S_snvs_400d4000_S_rtc_P_interrupts_IDX_0 46
#define DT_N_S_soc_S_snvs_400d4000_S_rtc_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_snvs_400d4000_S_rtc_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_snvs_400d4000_S_rtc_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_snvs_400d4000_S_rtc_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_snvs_400d4000_S_rtc, interrupts, 0) \
	fn(DT_N_S_soc_S_snvs_400d4000_S_rtc, interrupts, 1)
#define DT_N_S_soc_S_snvs_400d4000_S_rtc_P_interrupts_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_snvs_400d4000_S_rtc, interrupts, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_snvs_400d4000_S_rtc, interrupts, 1)
#define DT_N_S_soc_S_snvs_400d4000_S_rtc_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_snvs_400d4000_S_rtc, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_snvs_400d4000_S_rtc, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_snvs_400d4000_S_rtc_P_interrupts_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_snvs_400d4000_S_rtc, interrupts, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_snvs_400d4000_S_rtc, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_snvs_400d4000_S_rtc_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_snvs_400d4000_S_rtc_P_compatible {"nxp,imx-snvs-rtc"}
#define DT_N_S_soc_S_snvs_400d4000_S_rtc_P_compatible_IDX_0 "nxp,imx-snvs-rtc"
#define DT_N_S_soc_S_snvs_400d4000_S_rtc_P_compatible_IDX_0_STRING_UNQUOTED nxp,imx-snvs-rtc
#define DT_N_S_soc_S_snvs_400d4000_S_rtc_P_compatible_IDX_0_STRING_TOKEN nxp_imx_snvs_rtc
#define DT_N_S_soc_S_snvs_400d4000_S_rtc_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_IMX_SNVS_RTC
#define DT_N_S_soc_S_snvs_400d4000_S_rtc_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_snvs_400d4000_S_rtc_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_snvs_400d4000_S_rtc, compatible, 0)
#define DT_N_S_soc_S_snvs_400d4000_S_rtc_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_snvs_400d4000_S_rtc, compatible, 0)
#define DT_N_S_soc_S_snvs_400d4000_S_rtc_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_snvs_400d4000_S_rtc, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_snvs_400d4000_S_rtc_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_snvs_400d4000_S_rtc, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_snvs_400d4000_S_rtc_P_compatible_LEN 1
#define DT_N_S_soc_S_snvs_400d4000_S_rtc_P_compatible_EXISTS 1
#define DT_N_S_soc_S_snvs_400d4000_S_rtc_P_wakeup_source 0
#define DT_N_S_soc_S_snvs_400d4000_S_rtc_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/spi@402a8000
 *
 * Node identifier: DT_N_S_soc_S_spi_402a8000
 *
 * Binding (compatible = nxp,imx-flexspi):
 *   $ZEPHYR_BASE/dts/bindings/spi/nxp,imx-flexspi.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_402a8000_PATH "/soc/spi@402a8000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_402a8000_FULL_NAME "spi@402a8000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_spi_402a8000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_spi_402a8000_CHILD_IDX 3

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_spi_402a8000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0)
#define DT_N_S_soc_S_spi_402a8000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0)
#define DT_N_S_soc_S_spi_402a8000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_402a8000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_402a8000_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0)
#define DT_N_S_soc_S_spi_402a8000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0)
#define DT_N_S_soc_S_spi_402a8000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_402a8000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_402a8000_ORD 275

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_402a8000_REQUIRES_ORDS \
	11, /* /soc */ \
	12, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_402a8000_SUPPORTS_ORDS \
	276, /* /soc/spi@402a8000/is25wp064@0 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_402a8000_EXISTS 1
#define DT_N_INST_0_nxp_imx_flexspi DT_N_S_soc_S_spi_402a8000
#define DT_N_NODELABEL_flexspi      DT_N_S_soc_S_spi_402a8000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_spi_402a8000_REG_NUM 2
#define DT_N_S_soc_S_spi_402a8000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_402a8000_REG_IDX_0_VAL_ADDRESS 1076527104 /* 0x402a8000 */
#define DT_N_S_soc_S_spi_402a8000_REG_IDX_0_VAL_SIZE 16384 /* 0x4000 */
#define DT_N_S_soc_S_spi_402a8000_REG_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_402a8000_REG_IDX_1_VAL_ADDRESS 1610612736 /* 0x60000000 */
#define DT_N_S_soc_S_spi_402a8000_REG_IDX_1_VAL_SIZE 8388608 /* 0x800000 */
#define DT_N_S_soc_S_spi_402a8000_RANGES_NUM 0
#define DT_N_S_soc_S_spi_402a8000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_spi_402a8000_IRQ_NUM 1
#define DT_N_S_soc_S_spi_402a8000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_402a8000_IRQ_IDX_0_VAL_irq 108
#define DT_N_S_soc_S_spi_402a8000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_spi_402a8000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_402a8000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_spi_402a8000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_spi_402a8000_COMPAT_MATCHES_nxp_imx_flexspi 1
#define DT_N_S_soc_S_spi_402a8000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_402a8000_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_soc_S_spi_402a8000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_402a8000_COMPAT_MODEL_IDX_0 "imx-flexspi"
#define DT_N_S_soc_S_spi_402a8000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_spi_402a8000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_spi_402a8000_P_reg {1076527104 /* 0x402a8000 */, 16384 /* 0x4000 */, 1610612736 /* 0x60000000 */, 8388608 /* 0x800000 */}
#define DT_N_S_soc_S_spi_402a8000_P_reg_IDX_0 1076527104
#define DT_N_S_soc_S_spi_402a8000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_402a8000_P_reg_IDX_1 16384
#define DT_N_S_soc_S_spi_402a8000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_402a8000_P_reg_IDX_2 1610612736
#define DT_N_S_soc_S_spi_402a8000_P_reg_IDX_2_EXISTS 1
#define DT_N_S_soc_S_spi_402a8000_P_reg_IDX_3 8388608
#define DT_N_S_soc_S_spi_402a8000_P_reg_IDX_3_EXISTS 1
#define DT_N_S_soc_S_spi_402a8000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_402a8000, reg, 0) \
	fn(DT_N_S_soc_S_spi_402a8000, reg, 1) \
	fn(DT_N_S_soc_S_spi_402a8000, reg, 2) \
	fn(DT_N_S_soc_S_spi_402a8000, reg, 3)
#define DT_N_S_soc_S_spi_402a8000_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_402a8000, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_402a8000, reg, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_402a8000, reg, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_402a8000, reg, 3)
#define DT_N_S_soc_S_spi_402a8000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_402a8000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_402a8000, reg, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_402a8000, reg, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_402a8000, reg, 3, __VA_ARGS__)
#define DT_N_S_soc_S_spi_402a8000_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_402a8000, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_402a8000, reg, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_402a8000, reg, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_402a8000, reg, 3, __VA_ARGS__)
#define DT_N_S_soc_S_spi_402a8000_P_reg_EXISTS 1
#define DT_N_S_soc_S_spi_402a8000_P_interrupts {108 /* 0x6c */, 0 /* 0x0 */}
#define DT_N_S_soc_S_spi_402a8000_P_interrupts_IDX_0 108
#define DT_N_S_soc_S_spi_402a8000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_402a8000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_spi_402a8000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_402a8000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_402a8000, interrupts, 0) \
	fn(DT_N_S_soc_S_spi_402a8000, interrupts, 1)
#define DT_N_S_soc_S_spi_402a8000_P_interrupts_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_402a8000, interrupts, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_402a8000, interrupts, 1)
#define DT_N_S_soc_S_spi_402a8000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_402a8000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_402a8000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_402a8000_P_interrupts_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_402a8000, interrupts, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_402a8000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_402a8000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_spi_402a8000_P_ahb_bufferable 1
#define DT_N_S_soc_S_spi_402a8000_P_ahb_bufferable_EXISTS 1
#define DT_N_S_soc_S_spi_402a8000_P_ahb_cacheable 1
#define DT_N_S_soc_S_spi_402a8000_P_ahb_cacheable_EXISTS 1
#define DT_N_S_soc_S_spi_402a8000_P_ahb_prefetch 0
#define DT_N_S_soc_S_spi_402a8000_P_ahb_prefetch_EXISTS 1
#define DT_N_S_soc_S_spi_402a8000_P_ahb_read_addr_opt 0
#define DT_N_S_soc_S_spi_402a8000_P_ahb_read_addr_opt_EXISTS 1
#define DT_N_S_soc_S_spi_402a8000_P_combination_mode 0
#define DT_N_S_soc_S_spi_402a8000_P_combination_mode_EXISTS 1
#define DT_N_S_soc_S_spi_402a8000_P_sck_differential_clock 0
#define DT_N_S_soc_S_spi_402a8000_P_sck_differential_clock_EXISTS 1
#define DT_N_S_soc_S_spi_402a8000_P_rx_clock_source 0
#define DT_N_S_soc_S_spi_402a8000_P_rx_clock_source_ENUM_IDX 0
#define DT_N_S_soc_S_spi_402a8000_P_rx_clock_source_EXISTS 1
#define DT_N_S_soc_S_spi_402a8000_P_status "okay"
#define DT_N_S_soc_S_spi_402a8000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_spi_402a8000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_spi_402a8000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_spi_402a8000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_spi_402a8000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_spi_402a8000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_spi_402a8000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_402a8000, status, 0) \
	fn(DT_N_S_soc_S_spi_402a8000, status, 1) \
	fn(DT_N_S_soc_S_spi_402a8000, status, 2) \
	fn(DT_N_S_soc_S_spi_402a8000, status, 3)
#define DT_N_S_soc_S_spi_402a8000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_402a8000, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_402a8000, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_402a8000, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_402a8000, status, 3)
#define DT_N_S_soc_S_spi_402a8000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_402a8000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_402a8000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_402a8000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_402a8000, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_spi_402a8000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_402a8000, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_402a8000, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_402a8000, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_402a8000, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_spi_402a8000_P_status_EXISTS 1
#define DT_N_S_soc_S_spi_402a8000_P_compatible {"nxp,imx-flexspi"}
#define DT_N_S_soc_S_spi_402a8000_P_compatible_IDX_0 "nxp,imx-flexspi"
#define DT_N_S_soc_S_spi_402a8000_P_compatible_IDX_0_STRING_UNQUOTED nxp,imx-flexspi
#define DT_N_S_soc_S_spi_402a8000_P_compatible_IDX_0_STRING_TOKEN nxp_imx_flexspi
#define DT_N_S_soc_S_spi_402a8000_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_IMX_FLEXSPI
#define DT_N_S_soc_S_spi_402a8000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_402a8000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_402a8000, compatible, 0)
#define DT_N_S_soc_S_spi_402a8000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_402a8000, compatible, 0)
#define DT_N_S_soc_S_spi_402a8000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_402a8000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_402a8000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_402a8000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_402a8000_P_compatible_LEN 1
#define DT_N_S_soc_S_spi_402a8000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_spi_402a8000_P_wakeup_source 0
#define DT_N_S_soc_S_spi_402a8000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/spi@402a8000/is25wp064@0
 *
 * Node identifier: DT_N_S_soc_S_spi_402a8000_S_is25wp064_0
 *
 * Binding (compatible = nxp,imx-flexspi-nor):
 *   $ZEPHYR_BASE/dts/bindings/mtd/nxp,imx-flexspi-nor.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_PATH "/soc/spi@402a8000/is25wp064@0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_FULL_NAME "is25wp064@0"

/* Node parent (/soc/spi@402a8000) identifier: */
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_PARENT DT_N_S_soc_S_spi_402a8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions)
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions)
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions, __VA_ARGS__)
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions, __VA_ARGS__)
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions)
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions)
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions, __VA_ARGS__)
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_ORD 276

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_REQUIRES_ORDS \
	275, /* /soc/spi@402a8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_SUPPORTS_ORDS \
	277, /* /soc/spi@402a8000/is25wp064@0/partitions */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_EXISTS 1
#define DT_N_INST_0_nxp_imx_flexspi_nor DT_N_S_soc_S_spi_402a8000_S_is25wp064_0
#define DT_N_NODELABEL_is25wp064        DT_N_S_soc_S_spi_402a8000_S_is25wp064_0

/* Bus info (controller: '/soc/spi@402a8000', type: '['spi']') */
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_BUS_spi 1
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_BUS DT_N_S_soc_S_spi_402a8000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_REG_NUM 1
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_REG_IDX_0_VAL_ADDRESS 0 /* 0x0 */
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_RANGES_NUM 0
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_IRQ_NUM 0
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_COMPAT_MATCHES_nxp_imx_flexspi_nor 1
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_COMPAT_MODEL_IDX_0 "imx-flexspi-nor"
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_P_cs_interval_unit 1
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_P_cs_interval_unit_ENUM_IDX 0
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_P_cs_interval_unit_EXISTS 1
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_P_cs_interval 0
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_P_cs_interval_EXISTS 1
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_P_cs_setup_time 3
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_P_cs_setup_time_EXISTS 1
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_P_cs_hold_time 3
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_P_cs_hold_time_EXISTS 1
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_P_data_valid_time 0
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_P_data_valid_time_EXISTS 1
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_P_column_space 0
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_P_column_space_EXISTS 1
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_P_word_addressable 0
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_P_word_addressable_EXISTS 1
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_P_ahb_write_wait_unit 2
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_P_ahb_write_wait_unit_ENUM_IDX 0
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_P_ahb_write_wait_unit_EXISTS 1
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_P_ahb_write_wait_interval 0
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_P_ahb_write_wait_interval_EXISTS 1
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_P_reg {0 /* 0x0 */}
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_P_reg_IDX_0 0
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0, reg, 0)
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0, reg, 0)
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0, reg, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0, reg, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_P_reg_EXISTS 1
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_P_spi_max_frequency 133000000
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_P_spi_max_frequency_EXISTS 1
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_P_duplex 0
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_P_duplex_ENUM_IDX 0
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_P_duplex_EXISTS 1
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_P_frame_format 0
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_P_frame_format_ENUM_IDX 0
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_P_frame_format_EXISTS 1
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_P_status "okay"
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0, status, 0) \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0, status, 1) \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0, status, 2) \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0, status, 3)
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0, status, 3)
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_P_status_EXISTS 1
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_P_compatible {"nxp,imx-flexspi-nor"}
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_P_compatible_IDX_0 "nxp,imx-flexspi-nor"
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_P_compatible_IDX_0_STRING_UNQUOTED nxp,imx-flexspi-nor
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_P_compatible_IDX_0_STRING_TOKEN nxp_imx_flexspi_nor
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_IMX_FLEXSPI_NOR
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0, compatible, 0)
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0, compatible, 0)
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_P_compatible_LEN 1
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_P_compatible_EXISTS 1
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_P_wakeup_source 0
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_P_jedec_id {157 /* 0x9d */, 112 /* 0x70 */, 23 /* 0x17 */}
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_P_jedec_id_IDX_0 157
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_P_jedec_id_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_P_jedec_id_IDX_1 112
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_P_jedec_id_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_P_jedec_id_IDX_2 23
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_P_jedec_id_IDX_2_EXISTS 1
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_P_jedec_id_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0, jedec_id, 0) \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0, jedec_id, 1) \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0, jedec_id, 2)
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_P_jedec_id_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0, jedec_id, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0, jedec_id, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0, jedec_id, 2)
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_P_jedec_id_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0, jedec_id, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0, jedec_id, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0, jedec_id, 2, __VA_ARGS__)
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_P_jedec_id_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0, jedec_id, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0, jedec_id, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0, jedec_id, 2, __VA_ARGS__)
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_P_jedec_id_LEN 3
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_P_jedec_id_EXISTS 1
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_P_size 67108864
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_P_size_EXISTS 1
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_P_erase_block_size 4096
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_P_erase_block_size_EXISTS 1
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_P_write_block_size 1
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_P_write_block_size_EXISTS 1

/*
 * Devicetree node: /soc/spi@402a8000/is25wp064@0/partitions
 *
 * Node identifier: DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions
 *
 * Binding (compatible = fixed-partitions):
 *   $ZEPHYR_BASE/dts/bindings/mtd/fixed-partitions.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_PATH "/soc/spi@402a8000/is25wp064@0/partitions"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_FULL_NAME "partitions"

/* Node parent (/soc/spi@402a8000/is25wp064@0) identifier: */
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_PARENT DT_N_S_soc_S_spi_402a8000_S_is25wp064_0

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_0) fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_10000) fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_310000) fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_610000) fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_630000)
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_10000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_310000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_610000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_630000)
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_0, __VA_ARGS__) fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_10000, __VA_ARGS__) fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_310000, __VA_ARGS__) fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_610000, __VA_ARGS__) fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_630000, __VA_ARGS__)
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_10000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_310000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_610000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_630000, __VA_ARGS__)
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_0) fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_10000) fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_310000) fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_610000) fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_630000)
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_10000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_310000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_610000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_630000)
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_0, __VA_ARGS__) fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_10000, __VA_ARGS__) fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_310000, __VA_ARGS__) fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_610000, __VA_ARGS__) fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_630000, __VA_ARGS__)
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_10000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_310000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_610000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_630000, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_ORD 277

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_REQUIRES_ORDS \
	276, /* /soc/spi@402a8000/is25wp064@0 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_SUPPORTS_ORDS \
	278, /* /soc/spi@402a8000/is25wp064@0/partitions/partition@0 */ \
	279, /* /soc/spi@402a8000/is25wp064@0/partitions/partition@10000 */ \
	280, /* /soc/spi@402a8000/is25wp064@0/partitions/partition@310000 */ \
	281, /* /soc/spi@402a8000/is25wp064@0/partitions/partition@610000 */ \
	282, /* /soc/spi@402a8000/is25wp064@0/partitions/partition@630000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_EXISTS 1
#define DT_N_INST_0_fixed_partitions DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_REG_NUM 0
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_RANGES_NUM 0
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_IRQ_NUM 0
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_COMPAT_MATCHES_fixed_partitions 1
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /soc/spi@402a8000/is25wp064@0/partitions/partition@0
 *
 * Node identifier: DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_0_PATH "/soc/spi@402a8000/is25wp064@0/partitions/partition@0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_0_FULL_NAME "partition@0"

/* Node parent (/soc/spi@402a8000/is25wp064@0/partitions) identifier: */
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_0_PARENT DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_0_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_0_ORD 278

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_0_REQUIRES_ORDS \
	277, /* /soc/spi@402a8000/is25wp064@0/partitions */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_0_EXISTS 1
#define DT_N_NODELABEL_boot_partition DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_0

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_0_REG_NUM 1
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_0_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_0_REG_IDX_0_VAL_ADDRESS 0 /* 0x0 */
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_0_REG_IDX_0_VAL_SIZE 65536 /* 0x10000 */
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_0_RANGES_NUM 0
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_0_IRQ_NUM 0
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_0_PINCTRL_NUM 0

/* fixed-partitions identifier: */
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_0_PARTITION_ID 0

/* Generic property macros: */
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_0_P_label "mcuboot"
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_0_P_label_STRING_UNQUOTED mcuboot
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_0_P_label_STRING_TOKEN mcuboot
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_0_P_label_STRING_UPPER_TOKEN MCUBOOT
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_0_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_0, label, 0) \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_0, label, 1) \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_0, label, 2) \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_0, label, 3) \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_0, label, 4) \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_0, label, 5) \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_0, label, 6)
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_0_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_0, label, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_0, label, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_0, label, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_0, label, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_0, label, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_0, label, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_0, label, 6)
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_0_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_0, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_0, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_0, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_0, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_0, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_0, label, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_0, label, 6, __VA_ARGS__)
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_0_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_0, label, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_0, label, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_0, label, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_0, label, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_0, label, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_0, label, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_0, label, 6, __VA_ARGS__)
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_0_P_label_EXISTS 1
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_0_P_read_only 0
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_0_P_read_only_EXISTS 1
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_0_P_reg {0 /* 0x0 */, 65536 /* 0x10000 */}
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_0_P_reg_IDX_0 0
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_0_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_0_P_reg_IDX_1 65536
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_0_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_0_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_0, reg, 0) \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_0, reg, 1)
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_0_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_0, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_0, reg, 1)
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_0_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_0, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_0, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_0_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_0, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_0, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_0_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/spi@402a8000/is25wp064@0/partitions/partition@10000
 *
 * Node identifier: DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_10000
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_10000_PATH "/soc/spi@402a8000/is25wp064@0/partitions/partition@10000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_10000_FULL_NAME "partition@10000"

/* Node parent (/soc/spi@402a8000/is25wp064@0/partitions) identifier: */
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_10000_PARENT DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_10000_CHILD_IDX 1

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_10000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_10000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_10000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_10000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_10000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_10000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_10000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_10000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_10000_ORD 279

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_10000_REQUIRES_ORDS \
	277, /* /soc/spi@402a8000/is25wp064@0/partitions */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_10000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_10000_EXISTS 1
#define DT_N_NODELABEL_slot0_partition DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_10000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_10000_REG_NUM 1
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_10000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_10000_REG_IDX_0_VAL_ADDRESS 65536 /* 0x10000 */
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_10000_REG_IDX_0_VAL_SIZE 3145728 /* 0x300000 */
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_10000_RANGES_NUM 0
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_10000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_10000_IRQ_NUM 0
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_10000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_10000_PINCTRL_NUM 0

/* fixed-partitions identifier: */
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_10000_PARTITION_ID 1

/* Generic property macros: */
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_10000_P_label "image-0"
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_10000_P_label_STRING_UNQUOTED image-0
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_10000_P_label_STRING_TOKEN image_0
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_10000_P_label_STRING_UPPER_TOKEN IMAGE_0
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_10000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_10000, label, 0) \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_10000, label, 1) \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_10000, label, 2) \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_10000, label, 3) \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_10000, label, 4) \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_10000, label, 5) \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_10000, label, 6)
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_10000_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_10000, label, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_10000, label, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_10000, label, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_10000, label, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_10000, label, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_10000, label, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_10000, label, 6)
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_10000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_10000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_10000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_10000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_10000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_10000, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_10000, label, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_10000, label, 6, __VA_ARGS__)
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_10000_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_10000, label, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_10000, label, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_10000, label, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_10000, label, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_10000, label, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_10000, label, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_10000, label, 6, __VA_ARGS__)
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_10000_P_label_EXISTS 1
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_10000_P_read_only 0
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_10000_P_read_only_EXISTS 1
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_10000_P_reg {65536 /* 0x10000 */, 3145728 /* 0x300000 */}
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_10000_P_reg_IDX_0 65536
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_10000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_10000_P_reg_IDX_1 3145728
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_10000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_10000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_10000, reg, 0) \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_10000, reg, 1)
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_10000_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_10000, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_10000, reg, 1)
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_10000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_10000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_10000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_10000_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_10000, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_10000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_10000_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/spi@402a8000/is25wp064@0/partitions/partition@310000
 *
 * Node identifier: DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_310000
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_310000_PATH "/soc/spi@402a8000/is25wp064@0/partitions/partition@310000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_310000_FULL_NAME "partition@310000"

/* Node parent (/soc/spi@402a8000/is25wp064@0/partitions) identifier: */
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_310000_PARENT DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_310000_CHILD_IDX 2

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_310000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_310000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_310000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_310000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_310000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_310000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_310000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_310000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_310000_ORD 280

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_310000_REQUIRES_ORDS \
	277, /* /soc/spi@402a8000/is25wp064@0/partitions */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_310000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_310000_EXISTS 1
#define DT_N_NODELABEL_slot1_partition DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_310000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_310000_REG_NUM 1
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_310000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_310000_REG_IDX_0_VAL_ADDRESS 3211264 /* 0x310000 */
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_310000_REG_IDX_0_VAL_SIZE 3145728 /* 0x300000 */
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_310000_RANGES_NUM 0
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_310000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_310000_IRQ_NUM 0
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_310000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_310000_PINCTRL_NUM 0

/* fixed-partitions identifier: */
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_310000_PARTITION_ID 2

/* Generic property macros: */
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_310000_P_label "image-1"
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_310000_P_label_STRING_UNQUOTED image-1
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_310000_P_label_STRING_TOKEN image_1
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_310000_P_label_STRING_UPPER_TOKEN IMAGE_1
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_310000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_310000, label, 0) \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_310000, label, 1) \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_310000, label, 2) \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_310000, label, 3) \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_310000, label, 4) \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_310000, label, 5) \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_310000, label, 6)
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_310000_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_310000, label, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_310000, label, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_310000, label, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_310000, label, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_310000, label, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_310000, label, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_310000, label, 6)
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_310000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_310000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_310000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_310000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_310000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_310000, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_310000, label, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_310000, label, 6, __VA_ARGS__)
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_310000_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_310000, label, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_310000, label, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_310000, label, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_310000, label, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_310000, label, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_310000, label, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_310000, label, 6, __VA_ARGS__)
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_310000_P_label_EXISTS 1
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_310000_P_read_only 0
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_310000_P_read_only_EXISTS 1
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_310000_P_reg {3211264 /* 0x310000 */, 3145728 /* 0x300000 */}
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_310000_P_reg_IDX_0 3211264
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_310000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_310000_P_reg_IDX_1 3145728
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_310000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_310000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_310000, reg, 0) \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_310000, reg, 1)
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_310000_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_310000, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_310000, reg, 1)
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_310000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_310000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_310000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_310000_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_310000, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_310000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_310000_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/spi@402a8000/is25wp064@0/partitions/partition@610000
 *
 * Node identifier: DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_610000
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_610000_PATH "/soc/spi@402a8000/is25wp064@0/partitions/partition@610000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_610000_FULL_NAME "partition@610000"

/* Node parent (/soc/spi@402a8000/is25wp064@0/partitions) identifier: */
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_610000_PARENT DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_610000_CHILD_IDX 3

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_610000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_610000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_610000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_610000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_610000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_610000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_610000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_610000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_610000_ORD 281

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_610000_REQUIRES_ORDS \
	277, /* /soc/spi@402a8000/is25wp064@0/partitions */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_610000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_610000_EXISTS 1
#define DT_N_NODELABEL_scratch_partition DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_610000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_610000_REG_NUM 1
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_610000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_610000_REG_IDX_0_VAL_ADDRESS 6356992 /* 0x610000 */
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_610000_REG_IDX_0_VAL_SIZE 131072 /* 0x20000 */
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_610000_RANGES_NUM 0
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_610000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_610000_IRQ_NUM 0
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_610000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_610000_PINCTRL_NUM 0

/* fixed-partitions identifier: */
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_610000_PARTITION_ID 3

/* Generic property macros: */
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_610000_P_label "image-scratch"
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_610000_P_label_STRING_UNQUOTED image-scratch
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_610000_P_label_STRING_TOKEN image_scratch
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_610000_P_label_STRING_UPPER_TOKEN IMAGE_SCRATCH
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_610000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_610000, label, 0) \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_610000, label, 1) \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_610000, label, 2) \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_610000, label, 3) \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_610000, label, 4) \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_610000, label, 5) \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_610000, label, 6) \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_610000, label, 7) \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_610000, label, 8) \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_610000, label, 9) \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_610000, label, 10) \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_610000, label, 11) \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_610000, label, 12)
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_610000_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_610000, label, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_610000, label, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_610000, label, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_610000, label, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_610000, label, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_610000, label, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_610000, label, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_610000, label, 7) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_610000, label, 8) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_610000, label, 9) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_610000, label, 10) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_610000, label, 11) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_610000, label, 12)
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_610000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_610000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_610000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_610000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_610000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_610000, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_610000, label, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_610000, label, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_610000, label, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_610000, label, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_610000, label, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_610000, label, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_610000, label, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_610000, label, 12, __VA_ARGS__)
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_610000_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_610000, label, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_610000, label, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_610000, label, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_610000, label, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_610000, label, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_610000, label, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_610000, label, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_610000, label, 7, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_610000, label, 8, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_610000, label, 9, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_610000, label, 10, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_610000, label, 11, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_610000, label, 12, __VA_ARGS__)
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_610000_P_label_EXISTS 1
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_610000_P_read_only 0
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_610000_P_read_only_EXISTS 1
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_610000_P_reg {6356992 /* 0x610000 */, 131072 /* 0x20000 */}
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_610000_P_reg_IDX_0 6356992
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_610000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_610000_P_reg_IDX_1 131072
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_610000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_610000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_610000, reg, 0) \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_610000, reg, 1)
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_610000_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_610000, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_610000, reg, 1)
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_610000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_610000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_610000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_610000_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_610000, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_610000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_610000_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/spi@402a8000/is25wp064@0/partitions/partition@630000
 *
 * Node identifier: DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_630000
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_630000_PATH "/soc/spi@402a8000/is25wp064@0/partitions/partition@630000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_630000_FULL_NAME "partition@630000"

/* Node parent (/soc/spi@402a8000/is25wp064@0/partitions) identifier: */
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_630000_PARENT DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_630000_CHILD_IDX 4

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_630000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_630000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_630000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_630000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_630000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_630000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_630000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_630000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_630000_ORD 282

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_630000_REQUIRES_ORDS \
	277, /* /soc/spi@402a8000/is25wp064@0/partitions */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_630000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_630000_EXISTS 1
#define DT_N_NODELABEL_storage_partition DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_630000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_630000_REG_NUM 1
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_630000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_630000_REG_IDX_0_VAL_ADDRESS 6488064 /* 0x630000 */
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_630000_REG_IDX_0_VAL_SIZE 1900544 /* 0x1d0000 */
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_630000_RANGES_NUM 0
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_630000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_630000_IRQ_NUM 0
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_630000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_630000_PINCTRL_NUM 0

/* fixed-partitions identifier: */
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_630000_PARTITION_ID 4

/* Generic property macros: */
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_630000_P_label "storage"
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_630000_P_label_STRING_UNQUOTED storage
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_630000_P_label_STRING_TOKEN storage
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_630000_P_label_STRING_UPPER_TOKEN STORAGE
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_630000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_630000, label, 0) \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_630000, label, 1) \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_630000, label, 2) \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_630000, label, 3) \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_630000, label, 4) \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_630000, label, 5) \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_630000, label, 6)
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_630000_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_630000, label, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_630000, label, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_630000, label, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_630000, label, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_630000, label, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_630000, label, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_630000, label, 6)
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_630000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_630000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_630000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_630000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_630000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_630000, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_630000, label, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_630000, label, 6, __VA_ARGS__)
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_630000_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_630000, label, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_630000, label, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_630000, label, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_630000, label, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_630000, label, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_630000, label, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_630000, label, 6, __VA_ARGS__)
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_630000_P_label_EXISTS 1
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_630000_P_read_only 0
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_630000_P_read_only_EXISTS 1
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_630000_P_reg {6488064 /* 0x630000 */, 1900544 /* 0x1d0000 */}
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_630000_P_reg_IDX_0 6488064
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_630000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_630000_P_reg_IDX_1 1900544
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_630000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_630000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_630000, reg, 0) \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_630000, reg, 1)
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_630000_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_630000, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_630000, reg, 1)
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_630000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_630000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_630000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_630000_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_630000, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_630000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_630000_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/spi@40394000
 *
 * Node identifier: DT_N_S_soc_S_spi_40394000
 *
 * Binding (compatible = nxp,imx-lpspi):
 *   $ZEPHYR_BASE/dts/bindings/spi/nxp,imx-lpspi.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_40394000_PATH "/soc/spi@40394000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_40394000_FULL_NAME "spi@40394000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_spi_40394000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_spi_40394000_CHILD_IDX 23

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_spi_40394000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_spi_40394000_S_slow_0) fn(DT_N_S_soc_S_spi_40394000_S_fast_0)
#define DT_N_S_soc_S_spi_40394000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40394000_S_slow_0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40394000_S_fast_0)
#define DT_N_S_soc_S_spi_40394000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40394000_S_slow_0, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40394000_S_fast_0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40394000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40394000_S_slow_0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40394000_S_fast_0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40394000_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_spi_40394000_S_slow_0) fn(DT_N_S_soc_S_spi_40394000_S_fast_0)
#define DT_N_S_soc_S_spi_40394000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40394000_S_slow_0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40394000_S_fast_0)
#define DT_N_S_soc_S_spi_40394000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40394000_S_slow_0, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40394000_S_fast_0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40394000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40394000_S_slow_0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40394000_S_fast_0, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_40394000_ORD 283

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_40394000_REQUIRES_ORDS \
	11, /* /soc */ \
	12, /* /soc/interrupt-controller@e000e100 */ \
	60, /* /soc/ccm@400fc000 */ \
	114, /* /soc/dma-controller@400e8000 */ \
	209, /* /soc/iomuxc@401f8000/pinctrl/pinmux_lpspi1 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_40394000_SUPPORTS_ORDS \
	284, /* /soc/spi@40394000/fast@0 */ \
	285, /* /soc/spi@40394000/slow@0 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_40394000_EXISTS 1
#define DT_N_INST_0_nxp_imx_lpspi DT_N_S_soc_S_spi_40394000
#define DT_N_NODELABEL_lpspi1     DT_N_S_soc_S_spi_40394000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_spi_40394000_REG_NUM 1
#define DT_N_S_soc_S_spi_40394000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40394000_REG_IDX_0_VAL_ADDRESS 1077493760 /* 0x40394000 */
#define DT_N_S_soc_S_spi_40394000_REG_IDX_0_VAL_SIZE 16384 /* 0x4000 */
#define DT_N_S_soc_S_spi_40394000_RANGES_NUM 0
#define DT_N_S_soc_S_spi_40394000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_spi_40394000_IRQ_NUM 1
#define DT_N_S_soc_S_spi_40394000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40394000_IRQ_IDX_0_VAL_irq 32
#define DT_N_S_soc_S_spi_40394000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_spi_40394000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40394000_IRQ_IDX_0_VAL_priority 3
#define DT_N_S_soc_S_spi_40394000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_spi_40394000_COMPAT_MATCHES_nxp_imx_lpspi 1
#define DT_N_S_soc_S_spi_40394000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40394000_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_soc_S_spi_40394000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40394000_COMPAT_MODEL_IDX_0 "imx-lpspi"
#define DT_N_S_soc_S_spi_40394000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_spi_40394000_PINCTRL_NUM 1
#define DT_N_S_soc_S_spi_40394000_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40394000_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_spi_40394000_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_spi_40394000_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_spi_40394000_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_spi_40394000_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1

/* Generic property macros: */
#define DT_N_S_soc_S_spi_40394000_P_reg {1077493760 /* 0x40394000 */, 16384 /* 0x4000 */}
#define DT_N_S_soc_S_spi_40394000_P_reg_IDX_0 1077493760
#define DT_N_S_soc_S_spi_40394000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40394000_P_reg_IDX_1 16384
#define DT_N_S_soc_S_spi_40394000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40394000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40394000, reg, 0) \
	fn(DT_N_S_soc_S_spi_40394000, reg, 1)
#define DT_N_S_soc_S_spi_40394000_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40394000, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40394000, reg, 1)
#define DT_N_S_soc_S_spi_40394000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40394000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40394000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40394000_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40394000, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40394000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40394000_P_reg_EXISTS 1
#define DT_N_S_soc_S_spi_40394000_P_interrupts {32 /* 0x20 */, 3 /* 0x3 */}
#define DT_N_S_soc_S_spi_40394000_P_interrupts_IDX_0 32
#define DT_N_S_soc_S_spi_40394000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40394000_P_interrupts_IDX_1 3
#define DT_N_S_soc_S_spi_40394000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40394000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40394000, interrupts, 0) \
	fn(DT_N_S_soc_S_spi_40394000, interrupts, 1)
#define DT_N_S_soc_S_spi_40394000_P_interrupts_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40394000, interrupts, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40394000, interrupts, 1)
#define DT_N_S_soc_S_spi_40394000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40394000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40394000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40394000_P_interrupts_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40394000, interrupts, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40394000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40394000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_spi_40394000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40394000_P_clocks_IDX_0_PH DT_N_S_soc_S_ccm_400fc000
#define DT_N_S_soc_S_spi_40394000_P_clocks_IDX_0_VAL_name 1280
#define DT_N_S_soc_S_spi_40394000_P_clocks_IDX_0_VAL_name_EXISTS 1
#define DT_N_S_soc_S_spi_40394000_P_clocks_IDX_0_VAL_offset 108
#define DT_N_S_soc_S_spi_40394000_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_spi_40394000_P_clocks_IDX_0_VAL_bits 0
#define DT_N_S_soc_S_spi_40394000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_spi_40394000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40394000, clocks, 0)
#define DT_N_S_soc_S_spi_40394000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40394000, clocks, 0)
#define DT_N_S_soc_S_spi_40394000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40394000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40394000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40394000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40394000_P_clocks_LEN 1
#define DT_N_S_soc_S_spi_40394000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_spi_40394000_P_status "okay"
#define DT_N_S_soc_S_spi_40394000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_spi_40394000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_spi_40394000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_spi_40394000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_spi_40394000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_spi_40394000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_spi_40394000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40394000, status, 0) \
	fn(DT_N_S_soc_S_spi_40394000, status, 1) \
	fn(DT_N_S_soc_S_spi_40394000, status, 2) \
	fn(DT_N_S_soc_S_spi_40394000, status, 3)
#define DT_N_S_soc_S_spi_40394000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40394000, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40394000, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40394000, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40394000, status, 3)
#define DT_N_S_soc_S_spi_40394000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40394000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40394000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40394000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40394000, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40394000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40394000, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40394000, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40394000, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40394000, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40394000_P_status_EXISTS 1
#define DT_N_S_soc_S_spi_40394000_P_compatible {"nxp,imx-lpspi"}
#define DT_N_S_soc_S_spi_40394000_P_compatible_IDX_0 "nxp,imx-lpspi"
#define DT_N_S_soc_S_spi_40394000_P_compatible_IDX_0_STRING_UNQUOTED nxp,imx-lpspi
#define DT_N_S_soc_S_spi_40394000_P_compatible_IDX_0_STRING_TOKEN nxp_imx_lpspi
#define DT_N_S_soc_S_spi_40394000_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_IMX_LPSPI
#define DT_N_S_soc_S_spi_40394000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40394000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40394000, compatible, 0)
#define DT_N_S_soc_S_spi_40394000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40394000, compatible, 0)
#define DT_N_S_soc_S_spi_40394000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40394000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40394000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40394000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40394000_P_compatible_LEN 1
#define DT_N_S_soc_S_spi_40394000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_spi_40394000_P_dmas_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40394000_P_dmas_IDX_0_PH DT_N_S_soc_S_dma_controller_400e8000
#define DT_N_S_soc_S_spi_40394000_P_dmas_IDX_0_VAL_mux 0
#define DT_N_S_soc_S_spi_40394000_P_dmas_IDX_0_VAL_mux_EXISTS 1
#define DT_N_S_soc_S_spi_40394000_P_dmas_IDX_0_VAL_source 13
#define DT_N_S_soc_S_spi_40394000_P_dmas_IDX_0_VAL_source_EXISTS 1
#define DT_N_S_soc_S_spi_40394000_P_dmas_IDX_0_NAME "rx"
#define DT_N_S_soc_S_spi_40394000_P_dmas_NAME_rx_PH DT_N_S_soc_S_dma_controller_400e8000
#define DT_N_S_soc_S_spi_40394000_P_dmas_NAME_rx_EXISTS 1
#define DT_N_S_soc_S_spi_40394000_P_dmas_NAME_rx_VAL_mux DT_N_S_soc_S_spi_40394000_P_dmas_IDX_0_VAL_mux
#define DT_N_S_soc_S_spi_40394000_P_dmas_NAME_rx_VAL_mux_EXISTS 1
#define DT_N_S_soc_S_spi_40394000_P_dmas_NAME_rx_VAL_source DT_N_S_soc_S_spi_40394000_P_dmas_IDX_0_VAL_source
#define DT_N_S_soc_S_spi_40394000_P_dmas_NAME_rx_VAL_source_EXISTS 1
#define DT_N_S_soc_S_spi_40394000_P_dmas_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40394000_P_dmas_IDX_1_PH DT_N_S_soc_S_dma_controller_400e8000
#define DT_N_S_soc_S_spi_40394000_P_dmas_IDX_1_VAL_mux 1
#define DT_N_S_soc_S_spi_40394000_P_dmas_IDX_1_VAL_mux_EXISTS 1
#define DT_N_S_soc_S_spi_40394000_P_dmas_IDX_1_VAL_source 14
#define DT_N_S_soc_S_spi_40394000_P_dmas_IDX_1_VAL_source_EXISTS 1
#define DT_N_S_soc_S_spi_40394000_P_dmas_IDX_1_NAME "tx"
#define DT_N_S_soc_S_spi_40394000_P_dmas_NAME_tx_PH DT_N_S_soc_S_dma_controller_400e8000
#define DT_N_S_soc_S_spi_40394000_P_dmas_NAME_tx_EXISTS 1
#define DT_N_S_soc_S_spi_40394000_P_dmas_NAME_tx_VAL_mux DT_N_S_soc_S_spi_40394000_P_dmas_IDX_1_VAL_mux
#define DT_N_S_soc_S_spi_40394000_P_dmas_NAME_tx_VAL_mux_EXISTS 1
#define DT_N_S_soc_S_spi_40394000_P_dmas_NAME_tx_VAL_source DT_N_S_soc_S_spi_40394000_P_dmas_IDX_1_VAL_source
#define DT_N_S_soc_S_spi_40394000_P_dmas_NAME_tx_VAL_source_EXISTS 1
#define DT_N_S_soc_S_spi_40394000_P_dmas_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40394000, dmas, 0) \
	fn(DT_N_S_soc_S_spi_40394000, dmas, 1)
#define DT_N_S_soc_S_spi_40394000_P_dmas_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40394000, dmas, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40394000, dmas, 1)
#define DT_N_S_soc_S_spi_40394000_P_dmas_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40394000, dmas, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40394000, dmas, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40394000_P_dmas_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40394000, dmas, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40394000, dmas, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40394000_P_dmas_LEN 2
#define DT_N_S_soc_S_spi_40394000_P_dmas_EXISTS 1
#define DT_N_S_soc_S_spi_40394000_P_dma_names {"rx", "tx"}
#define DT_N_S_soc_S_spi_40394000_P_dma_names_IDX_0 "rx"
#define DT_N_S_soc_S_spi_40394000_P_dma_names_IDX_0_STRING_UNQUOTED rx
#define DT_N_S_soc_S_spi_40394000_P_dma_names_IDX_0_STRING_TOKEN rx
#define DT_N_S_soc_S_spi_40394000_P_dma_names_IDX_0_STRING_UPPER_TOKEN RX
#define DT_N_S_soc_S_spi_40394000_P_dma_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40394000_P_dma_names_IDX_1 "tx"
#define DT_N_S_soc_S_spi_40394000_P_dma_names_IDX_1_STRING_UNQUOTED tx
#define DT_N_S_soc_S_spi_40394000_P_dma_names_IDX_1_STRING_TOKEN tx
#define DT_N_S_soc_S_spi_40394000_P_dma_names_IDX_1_STRING_UPPER_TOKEN TX
#define DT_N_S_soc_S_spi_40394000_P_dma_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40394000_P_dma_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40394000, dma_names, 0) \
	fn(DT_N_S_soc_S_spi_40394000, dma_names, 1)
#define DT_N_S_soc_S_spi_40394000_P_dma_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40394000, dma_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40394000, dma_names, 1)
#define DT_N_S_soc_S_spi_40394000_P_dma_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40394000, dma_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40394000, dma_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40394000_P_dma_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40394000, dma_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40394000, dma_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40394000_P_dma_names_LEN 2
#define DT_N_S_soc_S_spi_40394000_P_dma_names_EXISTS 1
#define DT_N_S_soc_S_spi_40394000_P_wakeup_source 0
#define DT_N_S_soc_S_spi_40394000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_spi_40394000_P_pinctrl_0_IDX_0 DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1
#define DT_N_S_soc_S_spi_40394000_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1
#define DT_N_S_soc_S_spi_40394000_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40394000_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40394000, pinctrl_0, 0)
#define DT_N_S_soc_S_spi_40394000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40394000, pinctrl_0, 0)
#define DT_N_S_soc_S_spi_40394000_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40394000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40394000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40394000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40394000_P_pinctrl_0_LEN 1
#define DT_N_S_soc_S_spi_40394000_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_spi_40394000_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_spi_40394000_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_spi_40394000_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_spi_40394000_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_spi_40394000_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_spi_40394000_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40394000_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40394000, pinctrl_names, 0)
#define DT_N_S_soc_S_spi_40394000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40394000, pinctrl_names, 0)
#define DT_N_S_soc_S_spi_40394000_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40394000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40394000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40394000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40394000_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_spi_40394000_P_pinctrl_names_EXISTS 1

/*
 * Devicetree node: /soc/spi@40394000/fast@0
 *
 * Node identifier: DT_N_S_soc_S_spi_40394000_S_fast_0
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_40394000_S_fast_0_PATH "/soc/spi@40394000/fast@0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_40394000_S_fast_0_FULL_NAME "fast@0"

/* Node parent (/soc/spi@40394000) identifier: */
#define DT_N_S_soc_S_spi_40394000_S_fast_0_PARENT DT_N_S_soc_S_spi_40394000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_spi_40394000_S_fast_0_CHILD_IDX 1

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_spi_40394000_S_fast_0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_spi_40394000_S_fast_0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_40394000_S_fast_0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_40394000_S_fast_0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_spi_40394000_S_fast_0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_spi_40394000_S_fast_0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_40394000_S_fast_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_40394000_S_fast_0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_40394000_S_fast_0_ORD 284

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_40394000_S_fast_0_REQUIRES_ORDS \
	283, /* /soc/spi@40394000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_40394000_S_fast_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_40394000_S_fast_0_EXISTS 1
#define DT_N_INST_0_test_spi_loopback_fast DT_N_S_soc_S_spi_40394000_S_fast_0

/* Bus info (controller: '/soc/spi@40394000', type: '['spi']') */
#define DT_N_S_soc_S_spi_40394000_S_fast_0_BUS_spi 1
#define DT_N_S_soc_S_spi_40394000_S_fast_0_BUS DT_N_S_soc_S_spi_40394000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_spi_40394000_S_fast_0_REG_NUM 1
#define DT_N_S_soc_S_spi_40394000_S_fast_0_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40394000_S_fast_0_REG_IDX_0_VAL_ADDRESS 0 /* 0x0 */
#define DT_N_S_soc_S_spi_40394000_S_fast_0_RANGES_NUM 0
#define DT_N_S_soc_S_spi_40394000_S_fast_0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_spi_40394000_S_fast_0_IRQ_NUM 0
#define DT_N_S_soc_S_spi_40394000_S_fast_0_COMPAT_MATCHES_test_spi_loopback_fast 1
#define DT_N_S_soc_S_spi_40394000_S_fast_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_spi_40394000_S_fast_0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_spi_40394000_S_fast_0_P_compatible {"test-spi-loopback-fast"}
#define DT_N_S_soc_S_spi_40394000_S_fast_0_P_compatible_IDX_0 "test-spi-loopback-fast"
#define DT_N_S_soc_S_spi_40394000_S_fast_0_P_compatible_IDX_0_STRING_UNQUOTED test-spi-loopback-fast
#define DT_N_S_soc_S_spi_40394000_S_fast_0_P_compatible_IDX_0_STRING_TOKEN test_spi_loopback_fast
#define DT_N_S_soc_S_spi_40394000_S_fast_0_P_compatible_IDX_0_STRING_UPPER_TOKEN TEST_SPI_LOOPBACK_FAST
#define DT_N_S_soc_S_spi_40394000_S_fast_0_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40394000_S_fast_0_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40394000_S_fast_0, compatible, 0)
#define DT_N_S_soc_S_spi_40394000_S_fast_0_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40394000_S_fast_0, compatible, 0)
#define DT_N_S_soc_S_spi_40394000_S_fast_0_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40394000_S_fast_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40394000_S_fast_0_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40394000_S_fast_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40394000_S_fast_0_P_compatible_LEN 1
#define DT_N_S_soc_S_spi_40394000_S_fast_0_P_compatible_EXISTS 1
#define DT_N_S_soc_S_spi_40394000_S_fast_0_P_reg {0 /* 0x0 */}
#define DT_N_S_soc_S_spi_40394000_S_fast_0_P_reg_IDX_0 0
#define DT_N_S_soc_S_spi_40394000_S_fast_0_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40394000_S_fast_0_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40394000_S_fast_0, reg, 0)
#define DT_N_S_soc_S_spi_40394000_S_fast_0_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40394000_S_fast_0, reg, 0)
#define DT_N_S_soc_S_spi_40394000_S_fast_0_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40394000_S_fast_0, reg, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40394000_S_fast_0_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40394000_S_fast_0, reg, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40394000_S_fast_0_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/spi@40394000/slow@0
 *
 * Node identifier: DT_N_S_soc_S_spi_40394000_S_slow_0
 *
 * Binding (compatible = test):
 *   /Users/julius/Documents/devel/spi_basic_setup/zephyr_spi_basic_setup/dts/bindings/test.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_40394000_S_slow_0_PATH "/soc/spi@40394000/slow@0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_40394000_S_slow_0_FULL_NAME "slow@0"

/* Node parent (/soc/spi@40394000) identifier: */
#define DT_N_S_soc_S_spi_40394000_S_slow_0_PARENT DT_N_S_soc_S_spi_40394000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_spi_40394000_S_slow_0_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_spi_40394000_S_slow_0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_spi_40394000_S_slow_0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_40394000_S_slow_0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_40394000_S_slow_0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_spi_40394000_S_slow_0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_spi_40394000_S_slow_0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_40394000_S_slow_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_40394000_S_slow_0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_40394000_S_slow_0_ORD 285

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_40394000_S_slow_0_REQUIRES_ORDS \
	283, /* /soc/spi@40394000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_40394000_S_slow_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_40394000_S_slow_0_EXISTS 1
#define DT_N_INST_0_test DT_N_S_soc_S_spi_40394000_S_slow_0

/* Bus info (controller: '/soc/spi@40394000', type: '['spi']') */
#define DT_N_S_soc_S_spi_40394000_S_slow_0_BUS_spi 1
#define DT_N_S_soc_S_spi_40394000_S_slow_0_BUS DT_N_S_soc_S_spi_40394000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_spi_40394000_S_slow_0_REG_NUM 1
#define DT_N_S_soc_S_spi_40394000_S_slow_0_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40394000_S_slow_0_REG_IDX_0_VAL_ADDRESS 0 /* 0x0 */
#define DT_N_S_soc_S_spi_40394000_S_slow_0_RANGES_NUM 0
#define DT_N_S_soc_S_spi_40394000_S_slow_0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_spi_40394000_S_slow_0_IRQ_NUM 0
#define DT_N_S_soc_S_spi_40394000_S_slow_0_COMPAT_MATCHES_test 1
#define DT_N_S_soc_S_spi_40394000_S_slow_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_spi_40394000_S_slow_0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_spi_40394000_S_slow_0_P_reg {0 /* 0x0 */}
#define DT_N_S_soc_S_spi_40394000_S_slow_0_P_reg_IDX_0 0
#define DT_N_S_soc_S_spi_40394000_S_slow_0_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40394000_S_slow_0_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40394000_S_slow_0, reg, 0)
#define DT_N_S_soc_S_spi_40394000_S_slow_0_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40394000_S_slow_0, reg, 0)
#define DT_N_S_soc_S_spi_40394000_S_slow_0_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40394000_S_slow_0, reg, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40394000_S_slow_0_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40394000_S_slow_0, reg, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40394000_S_slow_0_P_reg_EXISTS 1
#define DT_N_S_soc_S_spi_40394000_S_slow_0_P_spi_max_frequency 500000
#define DT_N_S_soc_S_spi_40394000_S_slow_0_P_spi_max_frequency_EXISTS 1
#define DT_N_S_soc_S_spi_40394000_S_slow_0_P_duplex 0
#define DT_N_S_soc_S_spi_40394000_S_slow_0_P_duplex_ENUM_IDX 0
#define DT_N_S_soc_S_spi_40394000_S_slow_0_P_duplex_EXISTS 1
#define DT_N_S_soc_S_spi_40394000_S_slow_0_P_frame_format 0
#define DT_N_S_soc_S_spi_40394000_S_slow_0_P_frame_format_ENUM_IDX 0
#define DT_N_S_soc_S_spi_40394000_S_slow_0_P_frame_format_EXISTS 1
#define DT_N_S_soc_S_spi_40394000_S_slow_0_P_compatible {"test"}
#define DT_N_S_soc_S_spi_40394000_S_slow_0_P_compatible_IDX_0 "test"
#define DT_N_S_soc_S_spi_40394000_S_slow_0_P_compatible_IDX_0_STRING_UNQUOTED test
#define DT_N_S_soc_S_spi_40394000_S_slow_0_P_compatible_IDX_0_STRING_TOKEN test
#define DT_N_S_soc_S_spi_40394000_S_slow_0_P_compatible_IDX_0_STRING_UPPER_TOKEN TEST
#define DT_N_S_soc_S_spi_40394000_S_slow_0_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40394000_S_slow_0_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40394000_S_slow_0, compatible, 0)
#define DT_N_S_soc_S_spi_40394000_S_slow_0_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40394000_S_slow_0, compatible, 0)
#define DT_N_S_soc_S_spi_40394000_S_slow_0_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40394000_S_slow_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40394000_S_slow_0_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40394000_S_slow_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40394000_S_slow_0_P_compatible_LEN 1
#define DT_N_S_soc_S_spi_40394000_S_slow_0_P_compatible_EXISTS 1
#define DT_N_S_soc_S_spi_40394000_S_slow_0_P_wakeup_source 0
#define DT_N_S_soc_S_spi_40394000_S_slow_0_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_32_GPIO3_IO00
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_32_gpio3_io00
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_32_gpio3_io00_PATH "/soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_32_GPIO3_IO00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_32_gpio3_io00_FULL_NAME "IOMUXC_GPIO_EMC_32_GPIO3_IO00"

/* Node parent (/soc/iomuxc@401f8000) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_32_gpio3_io00_PARENT DT_N_S_soc_S_iomuxc_401f8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_32_gpio3_io00_CHILD_IDX 87

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_32_gpio3_io00_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_32_gpio3_io00_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_32_gpio3_io00_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_32_gpio3_io00_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_32_gpio3_io00_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_32_gpio3_io00_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_32_gpio3_io00_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_32_gpio3_io00_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_32_gpio3_io00_ORD 286

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_32_gpio3_io00_REQUIRES_ORDS \
	13, /* /soc/iomuxc@401f8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_32_gpio3_io00_SUPPORTS_ORDS \
	313, /* /soc/gpio@401c0000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_32_gpio3_io00_EXISTS 1
#define DT_N_NODELABEL_iomuxc_gpio_emc_32_gpio3_io00 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_32_gpio3_io00

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_32_gpio3_io00_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_32_gpio3_io00_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_32_gpio3_io00_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_32_gpio3_io00_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_32_gpio3_io00_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_32_gpio3_io00_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_32_gpio3_io00_P_pinmux {1075806356 /* 0x401f8094 */, 5 /* 0x5 */, 0 /* 0x0 */, 0 /* 0x0 */, 1075806728 /* 0x401f8208 */}
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_32_gpio3_io00_P_pinmux_IDX_0 1075806356
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_32_gpio3_io00_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_32_gpio3_io00_P_pinmux_IDX_1 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_32_gpio3_io00_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_32_gpio3_io00_P_pinmux_IDX_2 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_32_gpio3_io00_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_32_gpio3_io00_P_pinmux_IDX_3 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_32_gpio3_io00_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_32_gpio3_io00_P_pinmux_IDX_4 1075806728
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_32_gpio3_io00_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_32_gpio3_io00_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_32_gpio3_io00, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_32_gpio3_io00, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_32_gpio3_io00, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_32_gpio3_io00, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_32_gpio3_io00, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_32_gpio3_io00_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_32_gpio3_io00, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_32_gpio3_io00, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_32_gpio3_io00, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_32_gpio3_io00, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_32_gpio3_io00, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_32_gpio3_io00_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_32_gpio3_io00, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_32_gpio3_io00, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_32_gpio3_io00, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_32_gpio3_io00, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_32_gpio3_io00, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_32_gpio3_io00_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_32_gpio3_io00, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_32_gpio3_io00, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_32_gpio3_io00, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_32_gpio3_io00, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_32_gpio3_io00, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_32_gpio3_io00_P_pinmux_LEN 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_32_gpio3_io00_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_32_gpio3_io00_P_pin_pue 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_32_gpio3_io00_P_pin_pue_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_32_gpio3_io00_P_pin_pdrv 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_32_gpio3_io00_P_pin_pdrv_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_32_gpio3_io00_P_pin_lpsr 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_32_gpio3_io00_P_pin_lpsr_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_32_gpio3_io00_P_pin_snvs 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_32_gpio3_io00_P_pin_snvs_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_33_GPIO3_IO01
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_33_gpio3_io01
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_33_gpio3_io01_PATH "/soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_33_GPIO3_IO01"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_33_gpio3_io01_FULL_NAME "IOMUXC_GPIO_EMC_33_GPIO3_IO01"

/* Node parent (/soc/iomuxc@401f8000) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_33_gpio3_io01_PARENT DT_N_S_soc_S_iomuxc_401f8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_33_gpio3_io01_CHILD_IDX 88

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_33_gpio3_io01_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_33_gpio3_io01_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_33_gpio3_io01_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_33_gpio3_io01_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_33_gpio3_io01_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_33_gpio3_io01_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_33_gpio3_io01_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_33_gpio3_io01_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_33_gpio3_io01_ORD 287

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_33_gpio3_io01_REQUIRES_ORDS \
	13, /* /soc/iomuxc@401f8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_33_gpio3_io01_SUPPORTS_ORDS \
	313, /* /soc/gpio@401c0000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_33_gpio3_io01_EXISTS 1
#define DT_N_NODELABEL_iomuxc_gpio_emc_33_gpio3_io01 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_33_gpio3_io01

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_33_gpio3_io01_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_33_gpio3_io01_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_33_gpio3_io01_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_33_gpio3_io01_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_33_gpio3_io01_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_33_gpio3_io01_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_33_gpio3_io01_P_pinmux {1075806360 /* 0x401f8098 */, 5 /* 0x5 */, 0 /* 0x0 */, 0 /* 0x0 */, 1075806732 /* 0x401f820c */}
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_33_gpio3_io01_P_pinmux_IDX_0 1075806360
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_33_gpio3_io01_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_33_gpio3_io01_P_pinmux_IDX_1 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_33_gpio3_io01_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_33_gpio3_io01_P_pinmux_IDX_2 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_33_gpio3_io01_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_33_gpio3_io01_P_pinmux_IDX_3 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_33_gpio3_io01_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_33_gpio3_io01_P_pinmux_IDX_4 1075806732
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_33_gpio3_io01_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_33_gpio3_io01_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_33_gpio3_io01, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_33_gpio3_io01, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_33_gpio3_io01, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_33_gpio3_io01, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_33_gpio3_io01, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_33_gpio3_io01_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_33_gpio3_io01, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_33_gpio3_io01, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_33_gpio3_io01, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_33_gpio3_io01, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_33_gpio3_io01, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_33_gpio3_io01_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_33_gpio3_io01, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_33_gpio3_io01, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_33_gpio3_io01, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_33_gpio3_io01, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_33_gpio3_io01, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_33_gpio3_io01_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_33_gpio3_io01, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_33_gpio3_io01, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_33_gpio3_io01, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_33_gpio3_io01, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_33_gpio3_io01, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_33_gpio3_io01_P_pinmux_LEN 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_33_gpio3_io01_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_33_gpio3_io01_P_pin_pue 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_33_gpio3_io01_P_pin_pue_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_33_gpio3_io01_P_pin_pdrv 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_33_gpio3_io01_P_pin_pdrv_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_33_gpio3_io01_P_pin_lpsr 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_33_gpio3_io01_P_pin_lpsr_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_33_gpio3_io01_P_pin_snvs 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_33_gpio3_io01_P_pin_snvs_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_34_GPIO3_IO02
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_34_gpio3_io02
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_34_gpio3_io02_PATH "/soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_34_GPIO3_IO02"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_34_gpio3_io02_FULL_NAME "IOMUXC_GPIO_EMC_34_GPIO3_IO02"

/* Node parent (/soc/iomuxc@401f8000) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_34_gpio3_io02_PARENT DT_N_S_soc_S_iomuxc_401f8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_34_gpio3_io02_CHILD_IDX 89

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_34_gpio3_io02_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_34_gpio3_io02_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_34_gpio3_io02_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_34_gpio3_io02_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_34_gpio3_io02_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_34_gpio3_io02_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_34_gpio3_io02_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_34_gpio3_io02_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_34_gpio3_io02_ORD 288

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_34_gpio3_io02_REQUIRES_ORDS \
	13, /* /soc/iomuxc@401f8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_34_gpio3_io02_SUPPORTS_ORDS \
	313, /* /soc/gpio@401c0000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_34_gpio3_io02_EXISTS 1
#define DT_N_NODELABEL_iomuxc_gpio_emc_34_gpio3_io02 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_34_gpio3_io02

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_34_gpio3_io02_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_34_gpio3_io02_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_34_gpio3_io02_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_34_gpio3_io02_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_34_gpio3_io02_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_34_gpio3_io02_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_34_gpio3_io02_P_pinmux {1075806364 /* 0x401f809c */, 5 /* 0x5 */, 0 /* 0x0 */, 0 /* 0x0 */, 1075806736 /* 0x401f8210 */}
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_34_gpio3_io02_P_pinmux_IDX_0 1075806364
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_34_gpio3_io02_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_34_gpio3_io02_P_pinmux_IDX_1 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_34_gpio3_io02_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_34_gpio3_io02_P_pinmux_IDX_2 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_34_gpio3_io02_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_34_gpio3_io02_P_pinmux_IDX_3 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_34_gpio3_io02_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_34_gpio3_io02_P_pinmux_IDX_4 1075806736
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_34_gpio3_io02_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_34_gpio3_io02_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_34_gpio3_io02, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_34_gpio3_io02, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_34_gpio3_io02, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_34_gpio3_io02, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_34_gpio3_io02, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_34_gpio3_io02_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_34_gpio3_io02, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_34_gpio3_io02, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_34_gpio3_io02, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_34_gpio3_io02, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_34_gpio3_io02, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_34_gpio3_io02_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_34_gpio3_io02, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_34_gpio3_io02, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_34_gpio3_io02, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_34_gpio3_io02, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_34_gpio3_io02, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_34_gpio3_io02_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_34_gpio3_io02, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_34_gpio3_io02, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_34_gpio3_io02, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_34_gpio3_io02, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_34_gpio3_io02, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_34_gpio3_io02_P_pinmux_LEN 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_34_gpio3_io02_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_34_gpio3_io02_P_pin_pue 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_34_gpio3_io02_P_pin_pue_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_34_gpio3_io02_P_pin_pdrv 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_34_gpio3_io02_P_pin_pdrv_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_34_gpio3_io02_P_pin_lpsr 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_34_gpio3_io02_P_pin_lpsr_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_34_gpio3_io02_P_pin_snvs 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_34_gpio3_io02_P_pin_snvs_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_35_GPIO3_IO03
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_35_gpio3_io03
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_35_gpio3_io03_PATH "/soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_35_GPIO3_IO03"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_35_gpio3_io03_FULL_NAME "IOMUXC_GPIO_EMC_35_GPIO3_IO03"

/* Node parent (/soc/iomuxc@401f8000) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_35_gpio3_io03_PARENT DT_N_S_soc_S_iomuxc_401f8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_35_gpio3_io03_CHILD_IDX 90

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_35_gpio3_io03_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_35_gpio3_io03_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_35_gpio3_io03_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_35_gpio3_io03_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_35_gpio3_io03_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_35_gpio3_io03_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_35_gpio3_io03_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_35_gpio3_io03_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_35_gpio3_io03_ORD 289

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_35_gpio3_io03_REQUIRES_ORDS \
	13, /* /soc/iomuxc@401f8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_35_gpio3_io03_SUPPORTS_ORDS \
	313, /* /soc/gpio@401c0000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_35_gpio3_io03_EXISTS 1
#define DT_N_NODELABEL_iomuxc_gpio_emc_35_gpio3_io03 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_35_gpio3_io03

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_35_gpio3_io03_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_35_gpio3_io03_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_35_gpio3_io03_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_35_gpio3_io03_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_35_gpio3_io03_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_35_gpio3_io03_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_35_gpio3_io03_P_pinmux {1075806368 /* 0x401f80a0 */, 5 /* 0x5 */, 0 /* 0x0 */, 0 /* 0x0 */, 1075806740 /* 0x401f8214 */}
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_35_gpio3_io03_P_pinmux_IDX_0 1075806368
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_35_gpio3_io03_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_35_gpio3_io03_P_pinmux_IDX_1 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_35_gpio3_io03_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_35_gpio3_io03_P_pinmux_IDX_2 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_35_gpio3_io03_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_35_gpio3_io03_P_pinmux_IDX_3 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_35_gpio3_io03_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_35_gpio3_io03_P_pinmux_IDX_4 1075806740
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_35_gpio3_io03_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_35_gpio3_io03_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_35_gpio3_io03, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_35_gpio3_io03, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_35_gpio3_io03, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_35_gpio3_io03, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_35_gpio3_io03, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_35_gpio3_io03_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_35_gpio3_io03, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_35_gpio3_io03, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_35_gpio3_io03, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_35_gpio3_io03, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_35_gpio3_io03, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_35_gpio3_io03_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_35_gpio3_io03, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_35_gpio3_io03, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_35_gpio3_io03, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_35_gpio3_io03, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_35_gpio3_io03, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_35_gpio3_io03_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_35_gpio3_io03, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_35_gpio3_io03, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_35_gpio3_io03, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_35_gpio3_io03, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_35_gpio3_io03, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_35_gpio3_io03_P_pinmux_LEN 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_35_gpio3_io03_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_35_gpio3_io03_P_pin_pue 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_35_gpio3_io03_P_pin_pue_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_35_gpio3_io03_P_pin_pdrv 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_35_gpio3_io03_P_pin_pdrv_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_35_gpio3_io03_P_pin_lpsr 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_35_gpio3_io03_P_pin_lpsr_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_35_gpio3_io03_P_pin_snvs 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_35_gpio3_io03_P_pin_snvs_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_36_GPIO3_IO04
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_36_gpio3_io04
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_36_gpio3_io04_PATH "/soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_36_GPIO3_IO04"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_36_gpio3_io04_FULL_NAME "IOMUXC_GPIO_EMC_36_GPIO3_IO04"

/* Node parent (/soc/iomuxc@401f8000) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_36_gpio3_io04_PARENT DT_N_S_soc_S_iomuxc_401f8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_36_gpio3_io04_CHILD_IDX 91

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_36_gpio3_io04_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_36_gpio3_io04_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_36_gpio3_io04_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_36_gpio3_io04_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_36_gpio3_io04_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_36_gpio3_io04_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_36_gpio3_io04_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_36_gpio3_io04_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_36_gpio3_io04_ORD 290

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_36_gpio3_io04_REQUIRES_ORDS \
	13, /* /soc/iomuxc@401f8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_36_gpio3_io04_SUPPORTS_ORDS \
	313, /* /soc/gpio@401c0000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_36_gpio3_io04_EXISTS 1
#define DT_N_NODELABEL_iomuxc_gpio_emc_36_gpio3_io04 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_36_gpio3_io04

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_36_gpio3_io04_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_36_gpio3_io04_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_36_gpio3_io04_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_36_gpio3_io04_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_36_gpio3_io04_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_36_gpio3_io04_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_36_gpio3_io04_P_pinmux {1075806372 /* 0x401f80a4 */, 5 /* 0x5 */, 0 /* 0x0 */, 0 /* 0x0 */, 1075806744 /* 0x401f8218 */}
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_36_gpio3_io04_P_pinmux_IDX_0 1075806372
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_36_gpio3_io04_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_36_gpio3_io04_P_pinmux_IDX_1 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_36_gpio3_io04_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_36_gpio3_io04_P_pinmux_IDX_2 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_36_gpio3_io04_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_36_gpio3_io04_P_pinmux_IDX_3 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_36_gpio3_io04_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_36_gpio3_io04_P_pinmux_IDX_4 1075806744
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_36_gpio3_io04_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_36_gpio3_io04_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_36_gpio3_io04, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_36_gpio3_io04, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_36_gpio3_io04, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_36_gpio3_io04, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_36_gpio3_io04, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_36_gpio3_io04_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_36_gpio3_io04, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_36_gpio3_io04, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_36_gpio3_io04, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_36_gpio3_io04, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_36_gpio3_io04, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_36_gpio3_io04_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_36_gpio3_io04, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_36_gpio3_io04, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_36_gpio3_io04, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_36_gpio3_io04, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_36_gpio3_io04, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_36_gpio3_io04_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_36_gpio3_io04, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_36_gpio3_io04, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_36_gpio3_io04, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_36_gpio3_io04, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_36_gpio3_io04, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_36_gpio3_io04_P_pinmux_LEN 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_36_gpio3_io04_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_36_gpio3_io04_P_pin_pue 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_36_gpio3_io04_P_pin_pue_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_36_gpio3_io04_P_pin_pdrv 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_36_gpio3_io04_P_pin_pdrv_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_36_gpio3_io04_P_pin_lpsr 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_36_gpio3_io04_P_pin_lpsr_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_36_gpio3_io04_P_pin_snvs 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_36_gpio3_io04_P_pin_snvs_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_37_GPIO3_IO05
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_37_gpio3_io05
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_37_gpio3_io05_PATH "/soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_37_GPIO3_IO05"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_37_gpio3_io05_FULL_NAME "IOMUXC_GPIO_EMC_37_GPIO3_IO05"

/* Node parent (/soc/iomuxc@401f8000) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_37_gpio3_io05_PARENT DT_N_S_soc_S_iomuxc_401f8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_37_gpio3_io05_CHILD_IDX 92

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_37_gpio3_io05_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_37_gpio3_io05_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_37_gpio3_io05_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_37_gpio3_io05_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_37_gpio3_io05_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_37_gpio3_io05_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_37_gpio3_io05_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_37_gpio3_io05_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_37_gpio3_io05_ORD 291

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_37_gpio3_io05_REQUIRES_ORDS \
	13, /* /soc/iomuxc@401f8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_37_gpio3_io05_SUPPORTS_ORDS \
	313, /* /soc/gpio@401c0000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_37_gpio3_io05_EXISTS 1
#define DT_N_NODELABEL_iomuxc_gpio_emc_37_gpio3_io05 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_37_gpio3_io05

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_37_gpio3_io05_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_37_gpio3_io05_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_37_gpio3_io05_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_37_gpio3_io05_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_37_gpio3_io05_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_37_gpio3_io05_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_37_gpio3_io05_P_pinmux {1075806376 /* 0x401f80a8 */, 5 /* 0x5 */, 0 /* 0x0 */, 0 /* 0x0 */, 1075806748 /* 0x401f821c */}
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_37_gpio3_io05_P_pinmux_IDX_0 1075806376
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_37_gpio3_io05_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_37_gpio3_io05_P_pinmux_IDX_1 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_37_gpio3_io05_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_37_gpio3_io05_P_pinmux_IDX_2 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_37_gpio3_io05_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_37_gpio3_io05_P_pinmux_IDX_3 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_37_gpio3_io05_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_37_gpio3_io05_P_pinmux_IDX_4 1075806748
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_37_gpio3_io05_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_37_gpio3_io05_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_37_gpio3_io05, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_37_gpio3_io05, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_37_gpio3_io05, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_37_gpio3_io05, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_37_gpio3_io05, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_37_gpio3_io05_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_37_gpio3_io05, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_37_gpio3_io05, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_37_gpio3_io05, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_37_gpio3_io05, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_37_gpio3_io05, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_37_gpio3_io05_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_37_gpio3_io05, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_37_gpio3_io05, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_37_gpio3_io05, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_37_gpio3_io05, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_37_gpio3_io05, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_37_gpio3_io05_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_37_gpio3_io05, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_37_gpio3_io05, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_37_gpio3_io05, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_37_gpio3_io05, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_37_gpio3_io05, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_37_gpio3_io05_P_pinmux_LEN 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_37_gpio3_io05_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_37_gpio3_io05_P_pin_pue 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_37_gpio3_io05_P_pin_pue_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_37_gpio3_io05_P_pin_pdrv 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_37_gpio3_io05_P_pin_pdrv_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_37_gpio3_io05_P_pin_lpsr 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_37_gpio3_io05_P_pin_lpsr_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_37_gpio3_io05_P_pin_snvs 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_37_gpio3_io05_P_pin_snvs_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_38_GPIO3_IO06
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_38_gpio3_io06
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_38_gpio3_io06_PATH "/soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_38_GPIO3_IO06"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_38_gpio3_io06_FULL_NAME "IOMUXC_GPIO_EMC_38_GPIO3_IO06"

/* Node parent (/soc/iomuxc@401f8000) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_38_gpio3_io06_PARENT DT_N_S_soc_S_iomuxc_401f8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_38_gpio3_io06_CHILD_IDX 93

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_38_gpio3_io06_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_38_gpio3_io06_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_38_gpio3_io06_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_38_gpio3_io06_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_38_gpio3_io06_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_38_gpio3_io06_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_38_gpio3_io06_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_38_gpio3_io06_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_38_gpio3_io06_ORD 292

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_38_gpio3_io06_REQUIRES_ORDS \
	13, /* /soc/iomuxc@401f8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_38_gpio3_io06_SUPPORTS_ORDS \
	313, /* /soc/gpio@401c0000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_38_gpio3_io06_EXISTS 1
#define DT_N_NODELABEL_iomuxc_gpio_emc_38_gpio3_io06 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_38_gpio3_io06

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_38_gpio3_io06_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_38_gpio3_io06_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_38_gpio3_io06_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_38_gpio3_io06_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_38_gpio3_io06_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_38_gpio3_io06_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_38_gpio3_io06_P_pinmux {1075806380 /* 0x401f80ac */, 5 /* 0x5 */, 0 /* 0x0 */, 0 /* 0x0 */, 1075806752 /* 0x401f8220 */}
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_38_gpio3_io06_P_pinmux_IDX_0 1075806380
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_38_gpio3_io06_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_38_gpio3_io06_P_pinmux_IDX_1 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_38_gpio3_io06_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_38_gpio3_io06_P_pinmux_IDX_2 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_38_gpio3_io06_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_38_gpio3_io06_P_pinmux_IDX_3 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_38_gpio3_io06_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_38_gpio3_io06_P_pinmux_IDX_4 1075806752
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_38_gpio3_io06_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_38_gpio3_io06_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_38_gpio3_io06, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_38_gpio3_io06, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_38_gpio3_io06, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_38_gpio3_io06, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_38_gpio3_io06, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_38_gpio3_io06_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_38_gpio3_io06, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_38_gpio3_io06, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_38_gpio3_io06, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_38_gpio3_io06, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_38_gpio3_io06, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_38_gpio3_io06_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_38_gpio3_io06, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_38_gpio3_io06, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_38_gpio3_io06, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_38_gpio3_io06, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_38_gpio3_io06, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_38_gpio3_io06_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_38_gpio3_io06, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_38_gpio3_io06, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_38_gpio3_io06, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_38_gpio3_io06, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_38_gpio3_io06, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_38_gpio3_io06_P_pinmux_LEN 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_38_gpio3_io06_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_38_gpio3_io06_P_pin_pue 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_38_gpio3_io06_P_pin_pue_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_38_gpio3_io06_P_pin_pdrv 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_38_gpio3_io06_P_pin_pdrv_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_38_gpio3_io06_P_pin_lpsr 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_38_gpio3_io06_P_pin_lpsr_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_38_gpio3_io06_P_pin_snvs 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_38_gpio3_io06_P_pin_snvs_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_39_GPIO3_IO07
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_39_gpio3_io07
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_39_gpio3_io07_PATH "/soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_39_GPIO3_IO07"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_39_gpio3_io07_FULL_NAME "IOMUXC_GPIO_EMC_39_GPIO3_IO07"

/* Node parent (/soc/iomuxc@401f8000) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_39_gpio3_io07_PARENT DT_N_S_soc_S_iomuxc_401f8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_39_gpio3_io07_CHILD_IDX 94

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_39_gpio3_io07_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_39_gpio3_io07_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_39_gpio3_io07_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_39_gpio3_io07_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_39_gpio3_io07_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_39_gpio3_io07_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_39_gpio3_io07_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_39_gpio3_io07_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_39_gpio3_io07_ORD 293

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_39_gpio3_io07_REQUIRES_ORDS \
	13, /* /soc/iomuxc@401f8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_39_gpio3_io07_SUPPORTS_ORDS \
	313, /* /soc/gpio@401c0000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_39_gpio3_io07_EXISTS 1
#define DT_N_NODELABEL_iomuxc_gpio_emc_39_gpio3_io07 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_39_gpio3_io07

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_39_gpio3_io07_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_39_gpio3_io07_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_39_gpio3_io07_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_39_gpio3_io07_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_39_gpio3_io07_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_39_gpio3_io07_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_39_gpio3_io07_P_pinmux {1075806384 /* 0x401f80b0 */, 5 /* 0x5 */, 0 /* 0x0 */, 0 /* 0x0 */, 1075806756 /* 0x401f8224 */}
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_39_gpio3_io07_P_pinmux_IDX_0 1075806384
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_39_gpio3_io07_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_39_gpio3_io07_P_pinmux_IDX_1 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_39_gpio3_io07_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_39_gpio3_io07_P_pinmux_IDX_2 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_39_gpio3_io07_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_39_gpio3_io07_P_pinmux_IDX_3 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_39_gpio3_io07_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_39_gpio3_io07_P_pinmux_IDX_4 1075806756
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_39_gpio3_io07_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_39_gpio3_io07_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_39_gpio3_io07, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_39_gpio3_io07, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_39_gpio3_io07, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_39_gpio3_io07, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_39_gpio3_io07, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_39_gpio3_io07_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_39_gpio3_io07, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_39_gpio3_io07, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_39_gpio3_io07, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_39_gpio3_io07, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_39_gpio3_io07, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_39_gpio3_io07_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_39_gpio3_io07, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_39_gpio3_io07, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_39_gpio3_io07, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_39_gpio3_io07, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_39_gpio3_io07, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_39_gpio3_io07_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_39_gpio3_io07, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_39_gpio3_io07, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_39_gpio3_io07, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_39_gpio3_io07, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_39_gpio3_io07, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_39_gpio3_io07_P_pinmux_LEN 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_39_gpio3_io07_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_39_gpio3_io07_P_pin_pue 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_39_gpio3_io07_P_pin_pue_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_39_gpio3_io07_P_pin_pdrv 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_39_gpio3_io07_P_pin_pdrv_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_39_gpio3_io07_P_pin_lpsr 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_39_gpio3_io07_P_pin_lpsr_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_39_gpio3_io07_P_pin_snvs 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_39_gpio3_io07_P_pin_snvs_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_40_GPIO3_IO08
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_gpio3_io08
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_gpio3_io08_PATH "/soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_40_GPIO3_IO08"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_gpio3_io08_FULL_NAME "IOMUXC_GPIO_EMC_40_GPIO3_IO08"

/* Node parent (/soc/iomuxc@401f8000) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_gpio3_io08_PARENT DT_N_S_soc_S_iomuxc_401f8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_gpio3_io08_CHILD_IDX 96

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_gpio3_io08_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_gpio3_io08_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_gpio3_io08_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_gpio3_io08_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_gpio3_io08_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_gpio3_io08_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_gpio3_io08_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_gpio3_io08_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_gpio3_io08_ORD 294

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_gpio3_io08_REQUIRES_ORDS \
	13, /* /soc/iomuxc@401f8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_gpio3_io08_SUPPORTS_ORDS \
	313, /* /soc/gpio@401c0000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_gpio3_io08_EXISTS 1
#define DT_N_NODELABEL_iomuxc_gpio_emc_40_gpio3_io08 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_gpio3_io08

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_gpio3_io08_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_gpio3_io08_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_gpio3_io08_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_gpio3_io08_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_gpio3_io08_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_gpio3_io08_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_gpio3_io08_P_pinmux {1075806388 /* 0x401f80b4 */, 5 /* 0x5 */, 0 /* 0x0 */, 0 /* 0x0 */, 1075806760 /* 0x401f8228 */}
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_gpio3_io08_P_pinmux_IDX_0 1075806388
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_gpio3_io08_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_gpio3_io08_P_pinmux_IDX_1 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_gpio3_io08_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_gpio3_io08_P_pinmux_IDX_2 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_gpio3_io08_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_gpio3_io08_P_pinmux_IDX_3 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_gpio3_io08_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_gpio3_io08_P_pinmux_IDX_4 1075806760
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_gpio3_io08_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_gpio3_io08_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_gpio3_io08, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_gpio3_io08, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_gpio3_io08, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_gpio3_io08, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_gpio3_io08, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_gpio3_io08_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_gpio3_io08, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_gpio3_io08, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_gpio3_io08, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_gpio3_io08, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_gpio3_io08, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_gpio3_io08_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_gpio3_io08, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_gpio3_io08, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_gpio3_io08, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_gpio3_io08, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_gpio3_io08, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_gpio3_io08_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_gpio3_io08, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_gpio3_io08, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_gpio3_io08, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_gpio3_io08, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_gpio3_io08, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_gpio3_io08_P_pinmux_LEN 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_gpio3_io08_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_gpio3_io08_P_pin_pue 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_gpio3_io08_P_pin_pue_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_gpio3_io08_P_pin_pdrv 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_gpio3_io08_P_pin_pdrv_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_gpio3_io08_P_pin_lpsr 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_gpio3_io08_P_pin_lpsr_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_gpio3_io08_P_pin_snvs 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_gpio3_io08_P_pin_snvs_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_41_GPIO3_IO09
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_gpio3_io09
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_gpio3_io09_PATH "/soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_41_GPIO3_IO09"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_gpio3_io09_FULL_NAME "IOMUXC_GPIO_EMC_41_GPIO3_IO09"

/* Node parent (/soc/iomuxc@401f8000) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_gpio3_io09_PARENT DT_N_S_soc_S_iomuxc_401f8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_gpio3_io09_CHILD_IDX 98

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_gpio3_io09_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_gpio3_io09_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_gpio3_io09_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_gpio3_io09_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_gpio3_io09_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_gpio3_io09_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_gpio3_io09_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_gpio3_io09_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_gpio3_io09_ORD 295

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_gpio3_io09_REQUIRES_ORDS \
	13, /* /soc/iomuxc@401f8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_gpio3_io09_SUPPORTS_ORDS \
	313, /* /soc/gpio@401c0000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_gpio3_io09_EXISTS 1
#define DT_N_NODELABEL_iomuxc_gpio_emc_41_gpio3_io09 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_gpio3_io09

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_gpio3_io09_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_gpio3_io09_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_gpio3_io09_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_gpio3_io09_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_gpio3_io09_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_gpio3_io09_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_gpio3_io09_P_pinmux {1075806392 /* 0x401f80b8 */, 5 /* 0x5 */, 0 /* 0x0 */, 0 /* 0x0 */, 1075806764 /* 0x401f822c */}
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_gpio3_io09_P_pinmux_IDX_0 1075806392
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_gpio3_io09_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_gpio3_io09_P_pinmux_IDX_1 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_gpio3_io09_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_gpio3_io09_P_pinmux_IDX_2 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_gpio3_io09_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_gpio3_io09_P_pinmux_IDX_3 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_gpio3_io09_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_gpio3_io09_P_pinmux_IDX_4 1075806764
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_gpio3_io09_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_gpio3_io09_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_gpio3_io09, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_gpio3_io09, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_gpio3_io09, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_gpio3_io09, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_gpio3_io09, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_gpio3_io09_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_gpio3_io09, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_gpio3_io09, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_gpio3_io09, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_gpio3_io09, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_gpio3_io09, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_gpio3_io09_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_gpio3_io09, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_gpio3_io09, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_gpio3_io09, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_gpio3_io09, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_gpio3_io09, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_gpio3_io09_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_gpio3_io09, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_gpio3_io09, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_gpio3_io09, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_gpio3_io09, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_gpio3_io09, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_gpio3_io09_P_pinmux_LEN 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_gpio3_io09_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_gpio3_io09_P_pin_pue 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_gpio3_io09_P_pin_pue_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_gpio3_io09_P_pin_pdrv 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_gpio3_io09_P_pin_pdrv_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_gpio3_io09_P_pin_lpsr 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_gpio3_io09_P_pin_lpsr_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_gpio3_io09_P_pin_snvs 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_gpio3_io09_P_pin_snvs_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B0_00_GPIO3_IO13
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_gpio3_io13
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_gpio3_io13_PATH "/soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B0_00_GPIO3_IO13"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_gpio3_io13_FULL_NAME "IOMUXC_GPIO_SD_B0_00_GPIO3_IO13"

/* Node parent (/soc/iomuxc@401f8000) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_gpio3_io13_PARENT DT_N_S_soc_S_iomuxc_401f8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_gpio3_io13_CHILD_IDX 99

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_gpio3_io13_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_gpio3_io13_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_gpio3_io13_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_gpio3_io13_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_gpio3_io13_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_gpio3_io13_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_gpio3_io13_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_gpio3_io13_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_gpio3_io13_ORD 296

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_gpio3_io13_REQUIRES_ORDS \
	13, /* /soc/iomuxc@401f8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_gpio3_io13_SUPPORTS_ORDS \
	313, /* /soc/gpio@401c0000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_gpio3_io13_EXISTS 1
#define DT_N_NODELABEL_iomuxc_gpio_sd_b0_00_gpio3_io13 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_gpio3_io13

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_gpio3_io13_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_gpio3_io13_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_gpio3_io13_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_gpio3_io13_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_gpio3_io13_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_gpio3_io13_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_gpio3_io13_P_pinmux {1075806524 /* 0x401f813c */, 5 /* 0x5 */, 0 /* 0x0 */, 0 /* 0x0 */, 1075806896 /* 0x401f82b0 */}
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_gpio3_io13_P_pinmux_IDX_0 1075806524
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_gpio3_io13_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_gpio3_io13_P_pinmux_IDX_1 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_gpio3_io13_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_gpio3_io13_P_pinmux_IDX_2 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_gpio3_io13_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_gpio3_io13_P_pinmux_IDX_3 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_gpio3_io13_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_gpio3_io13_P_pinmux_IDX_4 1075806896
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_gpio3_io13_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_gpio3_io13_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_gpio3_io13, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_gpio3_io13, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_gpio3_io13, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_gpio3_io13, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_gpio3_io13, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_gpio3_io13_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_gpio3_io13, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_gpio3_io13, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_gpio3_io13, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_gpio3_io13, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_gpio3_io13, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_gpio3_io13_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_gpio3_io13, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_gpio3_io13, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_gpio3_io13, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_gpio3_io13, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_gpio3_io13, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_gpio3_io13_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_gpio3_io13, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_gpio3_io13, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_gpio3_io13, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_gpio3_io13, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_gpio3_io13, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_gpio3_io13_P_pinmux_LEN 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_gpio3_io13_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_gpio3_io13_P_pin_pue 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_gpio3_io13_P_pin_pue_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_gpio3_io13_P_pin_pdrv 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_gpio3_io13_P_pin_pdrv_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_gpio3_io13_P_pin_lpsr 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_gpio3_io13_P_pin_lpsr_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_gpio3_io13_P_pin_snvs 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_gpio3_io13_P_pin_snvs_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B0_01_GPIO3_IO14
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_gpio3_io14
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_gpio3_io14_PATH "/soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B0_01_GPIO3_IO14"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_gpio3_io14_FULL_NAME "IOMUXC_GPIO_SD_B0_01_GPIO3_IO14"

/* Node parent (/soc/iomuxc@401f8000) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_gpio3_io14_PARENT DT_N_S_soc_S_iomuxc_401f8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_gpio3_io14_CHILD_IDX 101

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_gpio3_io14_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_gpio3_io14_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_gpio3_io14_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_gpio3_io14_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_gpio3_io14_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_gpio3_io14_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_gpio3_io14_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_gpio3_io14_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_gpio3_io14_ORD 297

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_gpio3_io14_REQUIRES_ORDS \
	13, /* /soc/iomuxc@401f8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_gpio3_io14_SUPPORTS_ORDS \
	313, /* /soc/gpio@401c0000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_gpio3_io14_EXISTS 1
#define DT_N_NODELABEL_iomuxc_gpio_sd_b0_01_gpio3_io14 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_gpio3_io14

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_gpio3_io14_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_gpio3_io14_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_gpio3_io14_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_gpio3_io14_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_gpio3_io14_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_gpio3_io14_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_gpio3_io14_P_pinmux {1075806528 /* 0x401f8140 */, 5 /* 0x5 */, 0 /* 0x0 */, 0 /* 0x0 */, 1075806900 /* 0x401f82b4 */}
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_gpio3_io14_P_pinmux_IDX_0 1075806528
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_gpio3_io14_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_gpio3_io14_P_pinmux_IDX_1 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_gpio3_io14_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_gpio3_io14_P_pinmux_IDX_2 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_gpio3_io14_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_gpio3_io14_P_pinmux_IDX_3 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_gpio3_io14_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_gpio3_io14_P_pinmux_IDX_4 1075806900
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_gpio3_io14_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_gpio3_io14_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_gpio3_io14, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_gpio3_io14, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_gpio3_io14, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_gpio3_io14, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_gpio3_io14, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_gpio3_io14_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_gpio3_io14, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_gpio3_io14, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_gpio3_io14, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_gpio3_io14, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_gpio3_io14, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_gpio3_io14_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_gpio3_io14, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_gpio3_io14, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_gpio3_io14, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_gpio3_io14, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_gpio3_io14, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_gpio3_io14_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_gpio3_io14, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_gpio3_io14, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_gpio3_io14, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_gpio3_io14, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_gpio3_io14, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_gpio3_io14_P_pinmux_LEN 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_gpio3_io14_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_gpio3_io14_P_pin_pue 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_gpio3_io14_P_pin_pue_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_gpio3_io14_P_pin_pdrv 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_gpio3_io14_P_pin_pdrv_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_gpio3_io14_P_pin_lpsr 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_gpio3_io14_P_pin_lpsr_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_gpio3_io14_P_pin_snvs 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_gpio3_io14_P_pin_snvs_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B0_02_GPIO3_IO15
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_gpio3_io15
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_gpio3_io15_PATH "/soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B0_02_GPIO3_IO15"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_gpio3_io15_FULL_NAME "IOMUXC_GPIO_SD_B0_02_GPIO3_IO15"

/* Node parent (/soc/iomuxc@401f8000) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_gpio3_io15_PARENT DT_N_S_soc_S_iomuxc_401f8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_gpio3_io15_CHILD_IDX 103

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_gpio3_io15_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_gpio3_io15_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_gpio3_io15_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_gpio3_io15_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_gpio3_io15_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_gpio3_io15_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_gpio3_io15_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_gpio3_io15_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_gpio3_io15_ORD 298

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_gpio3_io15_REQUIRES_ORDS \
	13, /* /soc/iomuxc@401f8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_gpio3_io15_SUPPORTS_ORDS \
	313, /* /soc/gpio@401c0000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_gpio3_io15_EXISTS 1
#define DT_N_NODELABEL_iomuxc_gpio_sd_b0_02_gpio3_io15 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_gpio3_io15

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_gpio3_io15_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_gpio3_io15_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_gpio3_io15_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_gpio3_io15_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_gpio3_io15_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_gpio3_io15_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_gpio3_io15_P_pinmux {1075806532 /* 0x401f8144 */, 5 /* 0x5 */, 0 /* 0x0 */, 0 /* 0x0 */, 1075806904 /* 0x401f82b8 */}
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_gpio3_io15_P_pinmux_IDX_0 1075806532
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_gpio3_io15_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_gpio3_io15_P_pinmux_IDX_1 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_gpio3_io15_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_gpio3_io15_P_pinmux_IDX_2 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_gpio3_io15_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_gpio3_io15_P_pinmux_IDX_3 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_gpio3_io15_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_gpio3_io15_P_pinmux_IDX_4 1075806904
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_gpio3_io15_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_gpio3_io15_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_gpio3_io15, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_gpio3_io15, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_gpio3_io15, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_gpio3_io15, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_gpio3_io15, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_gpio3_io15_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_gpio3_io15, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_gpio3_io15, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_gpio3_io15, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_gpio3_io15, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_gpio3_io15, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_gpio3_io15_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_gpio3_io15, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_gpio3_io15, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_gpio3_io15, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_gpio3_io15, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_gpio3_io15, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_gpio3_io15_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_gpio3_io15, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_gpio3_io15, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_gpio3_io15, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_gpio3_io15, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_gpio3_io15, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_gpio3_io15_P_pinmux_LEN 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_gpio3_io15_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_gpio3_io15_P_pin_pue 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_gpio3_io15_P_pin_pue_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_gpio3_io15_P_pin_pdrv 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_gpio3_io15_P_pin_pdrv_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_gpio3_io15_P_pin_lpsr 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_gpio3_io15_P_pin_lpsr_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_gpio3_io15_P_pin_snvs 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_gpio3_io15_P_pin_snvs_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B0_03_GPIO3_IO16
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_gpio3_io16
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_gpio3_io16_PATH "/soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B0_03_GPIO3_IO16"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_gpio3_io16_FULL_NAME "IOMUXC_GPIO_SD_B0_03_GPIO3_IO16"

/* Node parent (/soc/iomuxc@401f8000) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_gpio3_io16_PARENT DT_N_S_soc_S_iomuxc_401f8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_gpio3_io16_CHILD_IDX 105

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_gpio3_io16_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_gpio3_io16_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_gpio3_io16_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_gpio3_io16_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_gpio3_io16_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_gpio3_io16_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_gpio3_io16_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_gpio3_io16_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_gpio3_io16_ORD 299

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_gpio3_io16_REQUIRES_ORDS \
	13, /* /soc/iomuxc@401f8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_gpio3_io16_SUPPORTS_ORDS \
	313, /* /soc/gpio@401c0000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_gpio3_io16_EXISTS 1
#define DT_N_NODELABEL_iomuxc_gpio_sd_b0_03_gpio3_io16 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_gpio3_io16

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_gpio3_io16_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_gpio3_io16_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_gpio3_io16_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_gpio3_io16_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_gpio3_io16_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_gpio3_io16_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_gpio3_io16_P_pinmux {1075806536 /* 0x401f8148 */, 5 /* 0x5 */, 0 /* 0x0 */, 0 /* 0x0 */, 1075806908 /* 0x401f82bc */}
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_gpio3_io16_P_pinmux_IDX_0 1075806536
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_gpio3_io16_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_gpio3_io16_P_pinmux_IDX_1 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_gpio3_io16_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_gpio3_io16_P_pinmux_IDX_2 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_gpio3_io16_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_gpio3_io16_P_pinmux_IDX_3 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_gpio3_io16_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_gpio3_io16_P_pinmux_IDX_4 1075806908
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_gpio3_io16_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_gpio3_io16_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_gpio3_io16, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_gpio3_io16, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_gpio3_io16, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_gpio3_io16, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_gpio3_io16, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_gpio3_io16_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_gpio3_io16, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_gpio3_io16, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_gpio3_io16, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_gpio3_io16, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_gpio3_io16, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_gpio3_io16_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_gpio3_io16, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_gpio3_io16, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_gpio3_io16, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_gpio3_io16, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_gpio3_io16, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_gpio3_io16_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_gpio3_io16, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_gpio3_io16, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_gpio3_io16, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_gpio3_io16, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_gpio3_io16, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_gpio3_io16_P_pinmux_LEN 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_gpio3_io16_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_gpio3_io16_P_pin_pue 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_gpio3_io16_P_pin_pue_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_gpio3_io16_P_pin_pdrv 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_gpio3_io16_P_pin_pdrv_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_gpio3_io16_P_pin_lpsr 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_gpio3_io16_P_pin_lpsr_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_gpio3_io16_P_pin_snvs 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_gpio3_io16_P_pin_snvs_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B0_04_GPIO3_IO17
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_gpio3_io17
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_gpio3_io17_PATH "/soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B0_04_GPIO3_IO17"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_gpio3_io17_FULL_NAME "IOMUXC_GPIO_SD_B0_04_GPIO3_IO17"

/* Node parent (/soc/iomuxc@401f8000) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_gpio3_io17_PARENT DT_N_S_soc_S_iomuxc_401f8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_gpio3_io17_CHILD_IDX 107

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_gpio3_io17_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_gpio3_io17_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_gpio3_io17_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_gpio3_io17_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_gpio3_io17_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_gpio3_io17_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_gpio3_io17_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_gpio3_io17_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_gpio3_io17_ORD 300

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_gpio3_io17_REQUIRES_ORDS \
	13, /* /soc/iomuxc@401f8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_gpio3_io17_SUPPORTS_ORDS \
	313, /* /soc/gpio@401c0000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_gpio3_io17_EXISTS 1
#define DT_N_NODELABEL_iomuxc_gpio_sd_b0_04_gpio3_io17 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_gpio3_io17

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_gpio3_io17_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_gpio3_io17_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_gpio3_io17_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_gpio3_io17_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_gpio3_io17_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_gpio3_io17_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_gpio3_io17_P_pinmux {1075806540 /* 0x401f814c */, 5 /* 0x5 */, 0 /* 0x0 */, 0 /* 0x0 */, 1075806912 /* 0x401f82c0 */}
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_gpio3_io17_P_pinmux_IDX_0 1075806540
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_gpio3_io17_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_gpio3_io17_P_pinmux_IDX_1 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_gpio3_io17_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_gpio3_io17_P_pinmux_IDX_2 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_gpio3_io17_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_gpio3_io17_P_pinmux_IDX_3 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_gpio3_io17_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_gpio3_io17_P_pinmux_IDX_4 1075806912
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_gpio3_io17_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_gpio3_io17_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_gpio3_io17, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_gpio3_io17, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_gpio3_io17, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_gpio3_io17, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_gpio3_io17, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_gpio3_io17_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_gpio3_io17, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_gpio3_io17, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_gpio3_io17, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_gpio3_io17, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_gpio3_io17, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_gpio3_io17_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_gpio3_io17, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_gpio3_io17, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_gpio3_io17, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_gpio3_io17, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_gpio3_io17, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_gpio3_io17_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_gpio3_io17, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_gpio3_io17, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_gpio3_io17, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_gpio3_io17, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_gpio3_io17, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_gpio3_io17_P_pinmux_LEN 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_gpio3_io17_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_gpio3_io17_P_pin_pue 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_gpio3_io17_P_pin_pue_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_gpio3_io17_P_pin_pdrv 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_gpio3_io17_P_pin_pdrv_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_gpio3_io17_P_pin_lpsr 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_gpio3_io17_P_pin_lpsr_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_gpio3_io17_P_pin_snvs 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_gpio3_io17_P_pin_snvs_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B0_05_GPIO3_IO18
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_gpio3_io18
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_gpio3_io18_PATH "/soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B0_05_GPIO3_IO18"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_gpio3_io18_FULL_NAME "IOMUXC_GPIO_SD_B0_05_GPIO3_IO18"

/* Node parent (/soc/iomuxc@401f8000) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_gpio3_io18_PARENT DT_N_S_soc_S_iomuxc_401f8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_gpio3_io18_CHILD_IDX 109

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_gpio3_io18_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_gpio3_io18_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_gpio3_io18_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_gpio3_io18_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_gpio3_io18_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_gpio3_io18_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_gpio3_io18_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_gpio3_io18_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_gpio3_io18_ORD 301

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_gpio3_io18_REQUIRES_ORDS \
	13, /* /soc/iomuxc@401f8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_gpio3_io18_SUPPORTS_ORDS \
	313, /* /soc/gpio@401c0000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_gpio3_io18_EXISTS 1
#define DT_N_NODELABEL_iomuxc_gpio_sd_b0_05_gpio3_io18 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_gpio3_io18

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_gpio3_io18_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_gpio3_io18_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_gpio3_io18_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_gpio3_io18_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_gpio3_io18_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_gpio3_io18_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_gpio3_io18_P_pinmux {1075806544 /* 0x401f8150 */, 5 /* 0x5 */, 0 /* 0x0 */, 0 /* 0x0 */, 1075806916 /* 0x401f82c4 */}
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_gpio3_io18_P_pinmux_IDX_0 1075806544
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_gpio3_io18_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_gpio3_io18_P_pinmux_IDX_1 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_gpio3_io18_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_gpio3_io18_P_pinmux_IDX_2 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_gpio3_io18_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_gpio3_io18_P_pinmux_IDX_3 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_gpio3_io18_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_gpio3_io18_P_pinmux_IDX_4 1075806916
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_gpio3_io18_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_gpio3_io18_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_gpio3_io18, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_gpio3_io18, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_gpio3_io18, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_gpio3_io18, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_gpio3_io18, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_gpio3_io18_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_gpio3_io18, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_gpio3_io18, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_gpio3_io18, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_gpio3_io18, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_gpio3_io18, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_gpio3_io18_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_gpio3_io18, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_gpio3_io18, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_gpio3_io18, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_gpio3_io18, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_gpio3_io18, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_gpio3_io18_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_gpio3_io18, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_gpio3_io18, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_gpio3_io18, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_gpio3_io18, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_gpio3_io18, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_gpio3_io18_P_pinmux_LEN 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_gpio3_io18_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_gpio3_io18_P_pin_pue 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_gpio3_io18_P_pin_pue_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_gpio3_io18_P_pin_pdrv 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_gpio3_io18_P_pin_pdrv_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_gpio3_io18_P_pin_lpsr 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_gpio3_io18_P_pin_lpsr_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_gpio3_io18_P_pin_snvs 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_gpio3_io18_P_pin_snvs_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B1_00_GPIO3_IO20
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_gpio3_io20
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_gpio3_io20_PATH "/soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B1_00_GPIO3_IO20"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_gpio3_io20_FULL_NAME "IOMUXC_GPIO_SD_B1_00_GPIO3_IO20"

/* Node parent (/soc/iomuxc@401f8000) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_gpio3_io20_PARENT DT_N_S_soc_S_iomuxc_401f8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_gpio3_io20_CHILD_IDX 113

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_gpio3_io20_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_gpio3_io20_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_gpio3_io20_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_gpio3_io20_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_gpio3_io20_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_gpio3_io20_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_gpio3_io20_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_gpio3_io20_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_gpio3_io20_ORD 302

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_gpio3_io20_REQUIRES_ORDS \
	13, /* /soc/iomuxc@401f8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_gpio3_io20_SUPPORTS_ORDS \
	313, /* /soc/gpio@401c0000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_gpio3_io20_EXISTS 1
#define DT_N_NODELABEL_iomuxc_gpio_sd_b1_00_gpio3_io20 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_gpio3_io20

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_gpio3_io20_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_gpio3_io20_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_gpio3_io20_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_gpio3_io20_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_gpio3_io20_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_gpio3_io20_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_gpio3_io20_P_pinmux {1075806552 /* 0x401f8158 */, 5 /* 0x5 */, 0 /* 0x0 */, 0 /* 0x0 */, 1075806924 /* 0x401f82cc */}
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_gpio3_io20_P_pinmux_IDX_0 1075806552
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_gpio3_io20_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_gpio3_io20_P_pinmux_IDX_1 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_gpio3_io20_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_gpio3_io20_P_pinmux_IDX_2 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_gpio3_io20_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_gpio3_io20_P_pinmux_IDX_3 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_gpio3_io20_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_gpio3_io20_P_pinmux_IDX_4 1075806924
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_gpio3_io20_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_gpio3_io20_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_gpio3_io20, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_gpio3_io20, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_gpio3_io20, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_gpio3_io20, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_gpio3_io20, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_gpio3_io20_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_gpio3_io20, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_gpio3_io20, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_gpio3_io20, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_gpio3_io20, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_gpio3_io20, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_gpio3_io20_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_gpio3_io20, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_gpio3_io20, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_gpio3_io20, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_gpio3_io20, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_gpio3_io20, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_gpio3_io20_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_gpio3_io20, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_gpio3_io20, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_gpio3_io20, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_gpio3_io20, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_gpio3_io20, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_gpio3_io20_P_pinmux_LEN 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_gpio3_io20_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_gpio3_io20_P_pin_pue 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_gpio3_io20_P_pin_pue_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_gpio3_io20_P_pin_pdrv 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_gpio3_io20_P_pin_pdrv_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_gpio3_io20_P_pin_lpsr 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_gpio3_io20_P_pin_lpsr_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_gpio3_io20_P_pin_snvs 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_gpio3_io20_P_pin_snvs_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B1_01_GPIO3_IO21
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_gpio3_io21
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_gpio3_io21_PATH "/soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B1_01_GPIO3_IO21"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_gpio3_io21_FULL_NAME "IOMUXC_GPIO_SD_B1_01_GPIO3_IO21"

/* Node parent (/soc/iomuxc@401f8000) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_gpio3_io21_PARENT DT_N_S_soc_S_iomuxc_401f8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_gpio3_io21_CHILD_IDX 115

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_gpio3_io21_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_gpio3_io21_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_gpio3_io21_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_gpio3_io21_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_gpio3_io21_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_gpio3_io21_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_gpio3_io21_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_gpio3_io21_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_gpio3_io21_ORD 303

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_gpio3_io21_REQUIRES_ORDS \
	13, /* /soc/iomuxc@401f8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_gpio3_io21_SUPPORTS_ORDS \
	313, /* /soc/gpio@401c0000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_gpio3_io21_EXISTS 1
#define DT_N_NODELABEL_iomuxc_gpio_sd_b1_01_gpio3_io21 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_gpio3_io21

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_gpio3_io21_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_gpio3_io21_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_gpio3_io21_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_gpio3_io21_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_gpio3_io21_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_gpio3_io21_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_gpio3_io21_P_pinmux {1075806556 /* 0x401f815c */, 5 /* 0x5 */, 0 /* 0x0 */, 0 /* 0x0 */, 1075806928 /* 0x401f82d0 */}
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_gpio3_io21_P_pinmux_IDX_0 1075806556
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_gpio3_io21_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_gpio3_io21_P_pinmux_IDX_1 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_gpio3_io21_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_gpio3_io21_P_pinmux_IDX_2 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_gpio3_io21_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_gpio3_io21_P_pinmux_IDX_3 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_gpio3_io21_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_gpio3_io21_P_pinmux_IDX_4 1075806928
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_gpio3_io21_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_gpio3_io21_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_gpio3_io21, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_gpio3_io21, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_gpio3_io21, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_gpio3_io21, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_gpio3_io21, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_gpio3_io21_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_gpio3_io21, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_gpio3_io21, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_gpio3_io21, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_gpio3_io21, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_gpio3_io21, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_gpio3_io21_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_gpio3_io21, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_gpio3_io21, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_gpio3_io21, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_gpio3_io21, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_gpio3_io21, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_gpio3_io21_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_gpio3_io21, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_gpio3_io21, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_gpio3_io21, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_gpio3_io21, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_gpio3_io21, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_gpio3_io21_P_pinmux_LEN 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_gpio3_io21_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_gpio3_io21_P_pin_pue 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_gpio3_io21_P_pin_pue_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_gpio3_io21_P_pin_pdrv 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_gpio3_io21_P_pin_pdrv_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_gpio3_io21_P_pin_lpsr 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_gpio3_io21_P_pin_lpsr_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_gpio3_io21_P_pin_snvs 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_gpio3_io21_P_pin_snvs_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B1_02_GPIO3_IO22
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_gpio3_io22
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_gpio3_io22_PATH "/soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B1_02_GPIO3_IO22"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_gpio3_io22_FULL_NAME "IOMUXC_GPIO_SD_B1_02_GPIO3_IO22"

/* Node parent (/soc/iomuxc@401f8000) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_gpio3_io22_PARENT DT_N_S_soc_S_iomuxc_401f8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_gpio3_io22_CHILD_IDX 116

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_gpio3_io22_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_gpio3_io22_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_gpio3_io22_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_gpio3_io22_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_gpio3_io22_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_gpio3_io22_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_gpio3_io22_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_gpio3_io22_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_gpio3_io22_ORD 304

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_gpio3_io22_REQUIRES_ORDS \
	13, /* /soc/iomuxc@401f8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_gpio3_io22_SUPPORTS_ORDS \
	313, /* /soc/gpio@401c0000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_gpio3_io22_EXISTS 1
#define DT_N_NODELABEL_iomuxc_gpio_sd_b1_02_gpio3_io22 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_gpio3_io22

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_gpio3_io22_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_gpio3_io22_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_gpio3_io22_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_gpio3_io22_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_gpio3_io22_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_gpio3_io22_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_gpio3_io22_P_pinmux {1075806560 /* 0x401f8160 */, 5 /* 0x5 */, 0 /* 0x0 */, 0 /* 0x0 */, 1075806932 /* 0x401f82d4 */}
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_gpio3_io22_P_pinmux_IDX_0 1075806560
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_gpio3_io22_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_gpio3_io22_P_pinmux_IDX_1 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_gpio3_io22_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_gpio3_io22_P_pinmux_IDX_2 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_gpio3_io22_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_gpio3_io22_P_pinmux_IDX_3 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_gpio3_io22_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_gpio3_io22_P_pinmux_IDX_4 1075806932
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_gpio3_io22_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_gpio3_io22_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_gpio3_io22, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_gpio3_io22, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_gpio3_io22, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_gpio3_io22, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_gpio3_io22, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_gpio3_io22_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_gpio3_io22, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_gpio3_io22, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_gpio3_io22, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_gpio3_io22, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_gpio3_io22, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_gpio3_io22_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_gpio3_io22, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_gpio3_io22, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_gpio3_io22, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_gpio3_io22, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_gpio3_io22, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_gpio3_io22_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_gpio3_io22, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_gpio3_io22, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_gpio3_io22, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_gpio3_io22, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_gpio3_io22, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_gpio3_io22_P_pinmux_LEN 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_gpio3_io22_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_gpio3_io22_P_pin_pue 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_gpio3_io22_P_pin_pue_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_gpio3_io22_P_pin_pdrv 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_gpio3_io22_P_pin_pdrv_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_gpio3_io22_P_pin_lpsr 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_gpio3_io22_P_pin_lpsr_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_gpio3_io22_P_pin_snvs 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_gpio3_io22_P_pin_snvs_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B1_03_GPIO3_IO23
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_gpio3_io23
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_gpio3_io23_PATH "/soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B1_03_GPIO3_IO23"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_gpio3_io23_FULL_NAME "IOMUXC_GPIO_SD_B1_03_GPIO3_IO23"

/* Node parent (/soc/iomuxc@401f8000) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_gpio3_io23_PARENT DT_N_S_soc_S_iomuxc_401f8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_gpio3_io23_CHILD_IDX 118

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_gpio3_io23_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_gpio3_io23_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_gpio3_io23_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_gpio3_io23_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_gpio3_io23_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_gpio3_io23_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_gpio3_io23_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_gpio3_io23_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_gpio3_io23_ORD 305

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_gpio3_io23_REQUIRES_ORDS \
	13, /* /soc/iomuxc@401f8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_gpio3_io23_SUPPORTS_ORDS \
	313, /* /soc/gpio@401c0000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_gpio3_io23_EXISTS 1
#define DT_N_NODELABEL_iomuxc_gpio_sd_b1_03_gpio3_io23 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_gpio3_io23

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_gpio3_io23_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_gpio3_io23_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_gpio3_io23_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_gpio3_io23_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_gpio3_io23_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_gpio3_io23_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_gpio3_io23_P_pinmux {1075806564 /* 0x401f8164 */, 5 /* 0x5 */, 0 /* 0x0 */, 0 /* 0x0 */, 1075806936 /* 0x401f82d8 */}
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_gpio3_io23_P_pinmux_IDX_0 1075806564
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_gpio3_io23_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_gpio3_io23_P_pinmux_IDX_1 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_gpio3_io23_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_gpio3_io23_P_pinmux_IDX_2 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_gpio3_io23_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_gpio3_io23_P_pinmux_IDX_3 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_gpio3_io23_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_gpio3_io23_P_pinmux_IDX_4 1075806936
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_gpio3_io23_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_gpio3_io23_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_gpio3_io23, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_gpio3_io23, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_gpio3_io23, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_gpio3_io23, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_gpio3_io23, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_gpio3_io23_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_gpio3_io23, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_gpio3_io23, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_gpio3_io23, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_gpio3_io23, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_gpio3_io23, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_gpio3_io23_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_gpio3_io23, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_gpio3_io23, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_gpio3_io23, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_gpio3_io23, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_gpio3_io23, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_gpio3_io23_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_gpio3_io23, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_gpio3_io23, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_gpio3_io23, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_gpio3_io23, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_gpio3_io23, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_gpio3_io23_P_pinmux_LEN 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_gpio3_io23_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_gpio3_io23_P_pin_pue 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_gpio3_io23_P_pin_pue_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_gpio3_io23_P_pin_pdrv 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_gpio3_io23_P_pin_pdrv_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_gpio3_io23_P_pin_lpsr 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_gpio3_io23_P_pin_lpsr_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_gpio3_io23_P_pin_snvs 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_gpio3_io23_P_pin_snvs_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B1_05_GPIO3_IO25
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_05_gpio3_io25
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_05_gpio3_io25_PATH "/soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B1_05_GPIO3_IO25"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_05_gpio3_io25_FULL_NAME "IOMUXC_GPIO_SD_B1_05_GPIO3_IO25"

/* Node parent (/soc/iomuxc@401f8000) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_05_gpio3_io25_PARENT DT_N_S_soc_S_iomuxc_401f8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_05_gpio3_io25_CHILD_IDX 121

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_05_gpio3_io25_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_05_gpio3_io25_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_05_gpio3_io25_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_05_gpio3_io25_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_05_gpio3_io25_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_05_gpio3_io25_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_05_gpio3_io25_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_05_gpio3_io25_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_05_gpio3_io25_ORD 306

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_05_gpio3_io25_REQUIRES_ORDS \
	13, /* /soc/iomuxc@401f8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_05_gpio3_io25_SUPPORTS_ORDS \
	313, /* /soc/gpio@401c0000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_05_gpio3_io25_EXISTS 1
#define DT_N_NODELABEL_iomuxc_gpio_sd_b1_05_gpio3_io25 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_05_gpio3_io25

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_05_gpio3_io25_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_05_gpio3_io25_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_05_gpio3_io25_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_05_gpio3_io25_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_05_gpio3_io25_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_05_gpio3_io25_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_05_gpio3_io25_P_pinmux {1075806572 /* 0x401f816c */, 5 /* 0x5 */, 0 /* 0x0 */, 0 /* 0x0 */, 1075806944 /* 0x401f82e0 */}
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_05_gpio3_io25_P_pinmux_IDX_0 1075806572
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_05_gpio3_io25_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_05_gpio3_io25_P_pinmux_IDX_1 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_05_gpio3_io25_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_05_gpio3_io25_P_pinmux_IDX_2 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_05_gpio3_io25_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_05_gpio3_io25_P_pinmux_IDX_3 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_05_gpio3_io25_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_05_gpio3_io25_P_pinmux_IDX_4 1075806944
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_05_gpio3_io25_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_05_gpio3_io25_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_05_gpio3_io25, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_05_gpio3_io25, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_05_gpio3_io25, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_05_gpio3_io25, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_05_gpio3_io25, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_05_gpio3_io25_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_05_gpio3_io25, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_05_gpio3_io25, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_05_gpio3_io25, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_05_gpio3_io25, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_05_gpio3_io25, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_05_gpio3_io25_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_05_gpio3_io25, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_05_gpio3_io25, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_05_gpio3_io25, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_05_gpio3_io25, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_05_gpio3_io25, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_05_gpio3_io25_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_05_gpio3_io25, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_05_gpio3_io25, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_05_gpio3_io25, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_05_gpio3_io25, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_05_gpio3_io25, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_05_gpio3_io25_P_pinmux_LEN 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_05_gpio3_io25_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_05_gpio3_io25_P_pin_pue 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_05_gpio3_io25_P_pin_pue_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_05_gpio3_io25_P_pin_pdrv 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_05_gpio3_io25_P_pin_pdrv_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_05_gpio3_io25_P_pin_lpsr 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_05_gpio3_io25_P_pin_lpsr_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_05_gpio3_io25_P_pin_snvs 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_05_gpio3_io25_P_pin_snvs_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B1_06_GPIO3_IO26
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_gpio3_io26
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_gpio3_io26_PATH "/soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B1_06_GPIO3_IO26"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_gpio3_io26_FULL_NAME "IOMUXC_GPIO_SD_B1_06_GPIO3_IO26"

/* Node parent (/soc/iomuxc@401f8000) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_gpio3_io26_PARENT DT_N_S_soc_S_iomuxc_401f8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_gpio3_io26_CHILD_IDX 122

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_gpio3_io26_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_gpio3_io26_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_gpio3_io26_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_gpio3_io26_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_gpio3_io26_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_gpio3_io26_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_gpio3_io26_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_gpio3_io26_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_gpio3_io26_ORD 307

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_gpio3_io26_REQUIRES_ORDS \
	13, /* /soc/iomuxc@401f8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_gpio3_io26_SUPPORTS_ORDS \
	313, /* /soc/gpio@401c0000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_gpio3_io26_EXISTS 1
#define DT_N_NODELABEL_iomuxc_gpio_sd_b1_06_gpio3_io26 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_gpio3_io26

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_gpio3_io26_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_gpio3_io26_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_gpio3_io26_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_gpio3_io26_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_gpio3_io26_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_gpio3_io26_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_gpio3_io26_P_pinmux {1075806576 /* 0x401f8170 */, 5 /* 0x5 */, 0 /* 0x0 */, 0 /* 0x0 */, 1075806948 /* 0x401f82e4 */}
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_gpio3_io26_P_pinmux_IDX_0 1075806576
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_gpio3_io26_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_gpio3_io26_P_pinmux_IDX_1 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_gpio3_io26_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_gpio3_io26_P_pinmux_IDX_2 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_gpio3_io26_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_gpio3_io26_P_pinmux_IDX_3 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_gpio3_io26_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_gpio3_io26_P_pinmux_IDX_4 1075806948
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_gpio3_io26_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_gpio3_io26_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_gpio3_io26, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_gpio3_io26, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_gpio3_io26, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_gpio3_io26, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_gpio3_io26, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_gpio3_io26_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_gpio3_io26, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_gpio3_io26, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_gpio3_io26, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_gpio3_io26, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_gpio3_io26, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_gpio3_io26_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_gpio3_io26, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_gpio3_io26, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_gpio3_io26, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_gpio3_io26, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_gpio3_io26, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_gpio3_io26_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_gpio3_io26, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_gpio3_io26, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_gpio3_io26, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_gpio3_io26, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_gpio3_io26, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_gpio3_io26_P_pinmux_LEN 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_gpio3_io26_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_gpio3_io26_P_pin_pue 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_gpio3_io26_P_pin_pue_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_gpio3_io26_P_pin_pdrv 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_gpio3_io26_P_pin_pdrv_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_gpio3_io26_P_pin_lpsr 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_gpio3_io26_P_pin_lpsr_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_gpio3_io26_P_pin_snvs 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_gpio3_io26_P_pin_snvs_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B1_07_GPIO3_IO27
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_gpio3_io27
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_gpio3_io27_PATH "/soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B1_07_GPIO3_IO27"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_gpio3_io27_FULL_NAME "IOMUXC_GPIO_SD_B1_07_GPIO3_IO27"

/* Node parent (/soc/iomuxc@401f8000) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_gpio3_io27_PARENT DT_N_S_soc_S_iomuxc_401f8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_gpio3_io27_CHILD_IDX 124

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_gpio3_io27_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_gpio3_io27_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_gpio3_io27_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_gpio3_io27_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_gpio3_io27_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_gpio3_io27_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_gpio3_io27_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_gpio3_io27_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_gpio3_io27_ORD 308

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_gpio3_io27_REQUIRES_ORDS \
	13, /* /soc/iomuxc@401f8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_gpio3_io27_SUPPORTS_ORDS \
	313, /* /soc/gpio@401c0000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_gpio3_io27_EXISTS 1
#define DT_N_NODELABEL_iomuxc_gpio_sd_b1_07_gpio3_io27 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_gpio3_io27

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_gpio3_io27_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_gpio3_io27_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_gpio3_io27_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_gpio3_io27_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_gpio3_io27_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_gpio3_io27_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_gpio3_io27_P_pinmux {1075806580 /* 0x401f8174 */, 5 /* 0x5 */, 0 /* 0x0 */, 0 /* 0x0 */, 1075806952 /* 0x401f82e8 */}
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_gpio3_io27_P_pinmux_IDX_0 1075806580
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_gpio3_io27_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_gpio3_io27_P_pinmux_IDX_1 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_gpio3_io27_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_gpio3_io27_P_pinmux_IDX_2 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_gpio3_io27_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_gpio3_io27_P_pinmux_IDX_3 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_gpio3_io27_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_gpio3_io27_P_pinmux_IDX_4 1075806952
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_gpio3_io27_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_gpio3_io27_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_gpio3_io27, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_gpio3_io27, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_gpio3_io27, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_gpio3_io27, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_gpio3_io27, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_gpio3_io27_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_gpio3_io27, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_gpio3_io27, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_gpio3_io27, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_gpio3_io27, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_gpio3_io27, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_gpio3_io27_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_gpio3_io27, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_gpio3_io27, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_gpio3_io27, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_gpio3_io27, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_gpio3_io27, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_gpio3_io27_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_gpio3_io27, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_gpio3_io27, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_gpio3_io27, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_gpio3_io27, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_gpio3_io27, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_gpio3_io27_P_pinmux_LEN 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_gpio3_io27_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_gpio3_io27_P_pin_pue 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_gpio3_io27_P_pin_pue_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_gpio3_io27_P_pin_pdrv 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_gpio3_io27_P_pin_pdrv_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_gpio3_io27_P_pin_lpsr 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_gpio3_io27_P_pin_lpsr_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_gpio3_io27_P_pin_snvs 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_gpio3_io27_P_pin_snvs_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B1_08_GPIO3_IO28
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_gpio3_io28
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_gpio3_io28_PATH "/soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B1_08_GPIO3_IO28"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_gpio3_io28_FULL_NAME "IOMUXC_GPIO_SD_B1_08_GPIO3_IO28"

/* Node parent (/soc/iomuxc@401f8000) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_gpio3_io28_PARENT DT_N_S_soc_S_iomuxc_401f8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_gpio3_io28_CHILD_IDX 126

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_gpio3_io28_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_gpio3_io28_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_gpio3_io28_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_gpio3_io28_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_gpio3_io28_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_gpio3_io28_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_gpio3_io28_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_gpio3_io28_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_gpio3_io28_ORD 309

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_gpio3_io28_REQUIRES_ORDS \
	13, /* /soc/iomuxc@401f8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_gpio3_io28_SUPPORTS_ORDS \
	313, /* /soc/gpio@401c0000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_gpio3_io28_EXISTS 1
#define DT_N_NODELABEL_iomuxc_gpio_sd_b1_08_gpio3_io28 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_gpio3_io28

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_gpio3_io28_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_gpio3_io28_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_gpio3_io28_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_gpio3_io28_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_gpio3_io28_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_gpio3_io28_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_gpio3_io28_P_pinmux {1075806584 /* 0x401f8178 */, 5 /* 0x5 */, 0 /* 0x0 */, 0 /* 0x0 */, 1075806956 /* 0x401f82ec */}
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_gpio3_io28_P_pinmux_IDX_0 1075806584
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_gpio3_io28_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_gpio3_io28_P_pinmux_IDX_1 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_gpio3_io28_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_gpio3_io28_P_pinmux_IDX_2 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_gpio3_io28_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_gpio3_io28_P_pinmux_IDX_3 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_gpio3_io28_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_gpio3_io28_P_pinmux_IDX_4 1075806956
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_gpio3_io28_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_gpio3_io28_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_gpio3_io28, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_gpio3_io28, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_gpio3_io28, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_gpio3_io28, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_gpio3_io28, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_gpio3_io28_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_gpio3_io28, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_gpio3_io28, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_gpio3_io28, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_gpio3_io28, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_gpio3_io28, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_gpio3_io28_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_gpio3_io28, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_gpio3_io28, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_gpio3_io28, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_gpio3_io28, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_gpio3_io28, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_gpio3_io28_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_gpio3_io28, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_gpio3_io28, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_gpio3_io28, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_gpio3_io28, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_gpio3_io28, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_gpio3_io28_P_pinmux_LEN 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_gpio3_io28_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_gpio3_io28_P_pin_pue 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_gpio3_io28_P_pin_pue_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_gpio3_io28_P_pin_pdrv 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_gpio3_io28_P_pin_pdrv_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_gpio3_io28_P_pin_lpsr 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_gpio3_io28_P_pin_lpsr_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_gpio3_io28_P_pin_snvs 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_gpio3_io28_P_pin_snvs_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B1_09_GPIO3_IO29
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_09_gpio3_io29
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_09_gpio3_io29_PATH "/soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B1_09_GPIO3_IO29"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_09_gpio3_io29_FULL_NAME "IOMUXC_GPIO_SD_B1_09_GPIO3_IO29"

/* Node parent (/soc/iomuxc@401f8000) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_09_gpio3_io29_PARENT DT_N_S_soc_S_iomuxc_401f8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_09_gpio3_io29_CHILD_IDX 128

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_09_gpio3_io29_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_09_gpio3_io29_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_09_gpio3_io29_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_09_gpio3_io29_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_09_gpio3_io29_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_09_gpio3_io29_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_09_gpio3_io29_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_09_gpio3_io29_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_09_gpio3_io29_ORD 310

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_09_gpio3_io29_REQUIRES_ORDS \
	13, /* /soc/iomuxc@401f8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_09_gpio3_io29_SUPPORTS_ORDS \
	313, /* /soc/gpio@401c0000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_09_gpio3_io29_EXISTS 1
#define DT_N_NODELABEL_iomuxc_gpio_sd_b1_09_gpio3_io29 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_09_gpio3_io29

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_09_gpio3_io29_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_09_gpio3_io29_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_09_gpio3_io29_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_09_gpio3_io29_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_09_gpio3_io29_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_09_gpio3_io29_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_09_gpio3_io29_P_pinmux {1075806588 /* 0x401f817c */, 5 /* 0x5 */, 0 /* 0x0 */, 0 /* 0x0 */, 1075806960 /* 0x401f82f0 */}
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_09_gpio3_io29_P_pinmux_IDX_0 1075806588
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_09_gpio3_io29_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_09_gpio3_io29_P_pinmux_IDX_1 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_09_gpio3_io29_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_09_gpio3_io29_P_pinmux_IDX_2 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_09_gpio3_io29_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_09_gpio3_io29_P_pinmux_IDX_3 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_09_gpio3_io29_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_09_gpio3_io29_P_pinmux_IDX_4 1075806960
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_09_gpio3_io29_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_09_gpio3_io29_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_09_gpio3_io29, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_09_gpio3_io29, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_09_gpio3_io29, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_09_gpio3_io29, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_09_gpio3_io29, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_09_gpio3_io29_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_09_gpio3_io29, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_09_gpio3_io29, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_09_gpio3_io29, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_09_gpio3_io29, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_09_gpio3_io29, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_09_gpio3_io29_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_09_gpio3_io29, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_09_gpio3_io29, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_09_gpio3_io29, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_09_gpio3_io29, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_09_gpio3_io29, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_09_gpio3_io29_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_09_gpio3_io29, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_09_gpio3_io29, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_09_gpio3_io29, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_09_gpio3_io29, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_09_gpio3_io29, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_09_gpio3_io29_P_pinmux_LEN 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_09_gpio3_io29_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_09_gpio3_io29_P_pin_pue 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_09_gpio3_io29_P_pin_pue_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_09_gpio3_io29_P_pin_pdrv 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_09_gpio3_io29_P_pin_pdrv_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_09_gpio3_io29_P_pin_lpsr 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_09_gpio3_io29_P_pin_lpsr_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_09_gpio3_io29_P_pin_snvs 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_09_gpio3_io29_P_pin_snvs_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B1_10_GPIO3_IO30
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_10_gpio3_io30
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_10_gpio3_io30_PATH "/soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B1_10_GPIO3_IO30"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_10_gpio3_io30_FULL_NAME "IOMUXC_GPIO_SD_B1_10_GPIO3_IO30"

/* Node parent (/soc/iomuxc@401f8000) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_10_gpio3_io30_PARENT DT_N_S_soc_S_iomuxc_401f8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_10_gpio3_io30_CHILD_IDX 129

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_10_gpio3_io30_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_10_gpio3_io30_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_10_gpio3_io30_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_10_gpio3_io30_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_10_gpio3_io30_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_10_gpio3_io30_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_10_gpio3_io30_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_10_gpio3_io30_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_10_gpio3_io30_ORD 311

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_10_gpio3_io30_REQUIRES_ORDS \
	13, /* /soc/iomuxc@401f8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_10_gpio3_io30_SUPPORTS_ORDS \
	313, /* /soc/gpio@401c0000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_10_gpio3_io30_EXISTS 1
#define DT_N_NODELABEL_iomuxc_gpio_sd_b1_10_gpio3_io30 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_10_gpio3_io30

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_10_gpio3_io30_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_10_gpio3_io30_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_10_gpio3_io30_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_10_gpio3_io30_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_10_gpio3_io30_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_10_gpio3_io30_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_10_gpio3_io30_P_pinmux {1075806592 /* 0x401f8180 */, 5 /* 0x5 */, 0 /* 0x0 */, 0 /* 0x0 */, 1075806964 /* 0x401f82f4 */}
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_10_gpio3_io30_P_pinmux_IDX_0 1075806592
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_10_gpio3_io30_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_10_gpio3_io30_P_pinmux_IDX_1 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_10_gpio3_io30_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_10_gpio3_io30_P_pinmux_IDX_2 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_10_gpio3_io30_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_10_gpio3_io30_P_pinmux_IDX_3 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_10_gpio3_io30_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_10_gpio3_io30_P_pinmux_IDX_4 1075806964
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_10_gpio3_io30_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_10_gpio3_io30_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_10_gpio3_io30, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_10_gpio3_io30, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_10_gpio3_io30, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_10_gpio3_io30, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_10_gpio3_io30, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_10_gpio3_io30_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_10_gpio3_io30, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_10_gpio3_io30, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_10_gpio3_io30, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_10_gpio3_io30, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_10_gpio3_io30, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_10_gpio3_io30_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_10_gpio3_io30, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_10_gpio3_io30, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_10_gpio3_io30, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_10_gpio3_io30, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_10_gpio3_io30, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_10_gpio3_io30_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_10_gpio3_io30, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_10_gpio3_io30, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_10_gpio3_io30, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_10_gpio3_io30, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_10_gpio3_io30, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_10_gpio3_io30_P_pinmux_LEN 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_10_gpio3_io30_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_10_gpio3_io30_P_pin_pue 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_10_gpio3_io30_P_pin_pue_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_10_gpio3_io30_P_pin_pdrv 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_10_gpio3_io30_P_pin_pdrv_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_10_gpio3_io30_P_pin_lpsr 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_10_gpio3_io30_P_pin_lpsr_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_10_gpio3_io30_P_pin_snvs 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_10_gpio3_io30_P_pin_snvs_EXISTS 1

/*
 * Devicetree node: /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B1_11_GPIO3_IO31
 *
 * Node identifier: DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_gpio3_io31
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_gpio3_io31_PATH "/soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B1_11_GPIO3_IO31"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_gpio3_io31_FULL_NAME "IOMUXC_GPIO_SD_B1_11_GPIO3_IO31"

/* Node parent (/soc/iomuxc@401f8000) identifier: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_gpio3_io31_PARENT DT_N_S_soc_S_iomuxc_401f8000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_gpio3_io31_CHILD_IDX 130

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_gpio3_io31_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_gpio3_io31_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_gpio3_io31_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_gpio3_io31_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_gpio3_io31_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_gpio3_io31_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_gpio3_io31_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_gpio3_io31_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_gpio3_io31_ORD 312

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_gpio3_io31_REQUIRES_ORDS \
	13, /* /soc/iomuxc@401f8000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_gpio3_io31_SUPPORTS_ORDS \
	313, /* /soc/gpio@401c0000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_gpio3_io31_EXISTS 1
#define DT_N_NODELABEL_iomuxc_gpio_sd_b1_11_gpio3_io31 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_gpio3_io31

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_gpio3_io31_REG_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_gpio3_io31_RANGES_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_gpio3_io31_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_gpio3_io31_IRQ_NUM 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_gpio3_io31_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_gpio3_io31_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_gpio3_io31_P_pinmux {1075806596 /* 0x401f8184 */, 5 /* 0x5 */, 0 /* 0x0 */, 0 /* 0x0 */, 1075806968 /* 0x401f82f8 */}
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_gpio3_io31_P_pinmux_IDX_0 1075806596
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_gpio3_io31_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_gpio3_io31_P_pinmux_IDX_1 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_gpio3_io31_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_gpio3_io31_P_pinmux_IDX_2 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_gpio3_io31_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_gpio3_io31_P_pinmux_IDX_3 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_gpio3_io31_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_gpio3_io31_P_pinmux_IDX_4 1075806968
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_gpio3_io31_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_gpio3_io31_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_gpio3_io31, pinmux, 0) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_gpio3_io31, pinmux, 1) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_gpio3_io31, pinmux, 2) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_gpio3_io31, pinmux, 3) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_gpio3_io31, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_gpio3_io31_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_gpio3_io31, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_gpio3_io31, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_gpio3_io31, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_gpio3_io31, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_gpio3_io31, pinmux, 4)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_gpio3_io31_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_gpio3_io31, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_gpio3_io31, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_gpio3_io31, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_gpio3_io31, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_gpio3_io31, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_gpio3_io31_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_gpio3_io31, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_gpio3_io31, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_gpio3_io31, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_gpio3_io31, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_gpio3_io31, pinmux, 4, __VA_ARGS__)
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_gpio3_io31_P_pinmux_LEN 5
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_gpio3_io31_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_gpio3_io31_P_pin_pue 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_gpio3_io31_P_pin_pue_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_gpio3_io31_P_pin_pdrv 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_gpio3_io31_P_pin_pdrv_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_gpio3_io31_P_pin_lpsr 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_gpio3_io31_P_pin_lpsr_EXISTS 1
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_gpio3_io31_P_pin_snvs 0
#define DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_gpio3_io31_P_pin_snvs_EXISTS 1

/*
 * Devicetree node: /soc/gpio@401c0000
 *
 * Node identifier: DT_N_S_soc_S_gpio_401c0000
 *
 * Binding (compatible = nxp,imx-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/nxp,imx-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_gpio_401c0000_PATH "/soc/gpio@401c0000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_gpio_401c0000_FULL_NAME "gpio@401c0000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_gpio_401c0000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_gpio_401c0000_CHILD_IDX 15

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_gpio_401c0000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_gpio_401c0000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_gpio_401c0000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_gpio_401c0000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_gpio_401c0000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_gpio_401c0000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_gpio_401c0000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_gpio_401c0000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_gpio_401c0000_ORD 313

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_gpio_401c0000_REQUIRES_ORDS \
	11, /* /soc */ \
	12, /* /soc/interrupt-controller@e000e100 */ \
	235, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B0_06_GPIO3_IO19 */ \
	239, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B1_04_GPIO3_IO24 */ \
	286, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_32_GPIO3_IO00 */ \
	287, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_33_GPIO3_IO01 */ \
	288, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_34_GPIO3_IO02 */ \
	289, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_35_GPIO3_IO03 */ \
	290, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_36_GPIO3_IO04 */ \
	291, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_37_GPIO3_IO05 */ \
	292, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_38_GPIO3_IO06 */ \
	293, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_39_GPIO3_IO07 */ \
	294, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_40_GPIO3_IO08 */ \
	295, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_EMC_41_GPIO3_IO09 */ \
	296, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B0_00_GPIO3_IO13 */ \
	297, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B0_01_GPIO3_IO14 */ \
	298, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B0_02_GPIO3_IO15 */ \
	299, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B0_03_GPIO3_IO16 */ \
	300, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B0_04_GPIO3_IO17 */ \
	301, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B0_05_GPIO3_IO18 */ \
	302, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B1_00_GPIO3_IO20 */ \
	303, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B1_01_GPIO3_IO21 */ \
	304, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B1_02_GPIO3_IO22 */ \
	305, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B1_03_GPIO3_IO23 */ \
	306, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B1_05_GPIO3_IO25 */ \
	307, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B1_06_GPIO3_IO26 */ \
	308, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B1_07_GPIO3_IO27 */ \
	309, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B1_08_GPIO3_IO28 */ \
	310, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B1_09_GPIO3_IO29 */ \
	311, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B1_10_GPIO3_IO30 */ \
	312, /* /soc/iomuxc@401f8000/IOMUXC_GPIO_SD_B1_11_GPIO3_IO31 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_gpio_401c0000_SUPPORTS_ORDS \
	314, /* /soc/usdhc@402c0000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_gpio_401c0000_EXISTS 1
#define DT_N_INST_2_nxp_imx_gpio DT_N_S_soc_S_gpio_401c0000
#define DT_N_NODELABEL_gpio3     DT_N_S_soc_S_gpio_401c0000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_gpio_401c0000_REG_NUM 1
#define DT_N_S_soc_S_gpio_401c0000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_401c0000_REG_IDX_0_VAL_ADDRESS 1075576832 /* 0x401c0000 */
#define DT_N_S_soc_S_gpio_401c0000_REG_IDX_0_VAL_SIZE 16384 /* 0x4000 */
#define DT_N_S_soc_S_gpio_401c0000_RANGES_NUM 0
#define DT_N_S_soc_S_gpio_401c0000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_gpio_401c0000_IRQ_NUM 2
#define DT_N_S_soc_S_gpio_401c0000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_401c0000_IRQ_IDX_0_VAL_irq 84
#define DT_N_S_soc_S_gpio_401c0000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_gpio_401c0000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_401c0000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_gpio_401c0000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_gpio_401c0000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpio_401c0000_IRQ_IDX_1_VAL_irq 85
#define DT_N_S_soc_S_gpio_401c0000_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_gpio_401c0000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpio_401c0000_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_gpio_401c0000_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_gpio_401c0000_COMPAT_MATCHES_nxp_imx_gpio 1
#define DT_N_S_soc_S_gpio_401c0000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_401c0000_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_soc_S_gpio_401c0000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_401c0000_COMPAT_MODEL_IDX_0 "imx-gpio"
#define DT_N_S_soc_S_gpio_401c0000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_gpio_401c0000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_gpio_401c0000_P_reg {1075576832 /* 0x401c0000 */, 16384 /* 0x4000 */}
#define DT_N_S_soc_S_gpio_401c0000_P_reg_IDX_0 1075576832
#define DT_N_S_soc_S_gpio_401c0000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_401c0000_P_reg_IDX_1 16384
#define DT_N_S_soc_S_gpio_401c0000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpio_401c0000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_401c0000, reg, 0) \
	fn(DT_N_S_soc_S_gpio_401c0000, reg, 1)
#define DT_N_S_soc_S_gpio_401c0000_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_401c0000, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401c0000, reg, 1)
#define DT_N_S_soc_S_gpio_401c0000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_401c0000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_401c0000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_401c0000_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_401c0000, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401c0000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_401c0000_P_reg_EXISTS 1
#define DT_N_S_soc_S_gpio_401c0000_P_pinmux_IDX_0 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_32_gpio3_io00
#define DT_N_S_soc_S_gpio_401c0000_P_pinmux_IDX_0_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_32_gpio3_io00
#define DT_N_S_soc_S_gpio_401c0000_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_401c0000_P_pinmux_IDX_1 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_33_gpio3_io01
#define DT_N_S_soc_S_gpio_401c0000_P_pinmux_IDX_1_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_33_gpio3_io01
#define DT_N_S_soc_S_gpio_401c0000_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpio_401c0000_P_pinmux_IDX_2 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_34_gpio3_io02
#define DT_N_S_soc_S_gpio_401c0000_P_pinmux_IDX_2_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_34_gpio3_io02
#define DT_N_S_soc_S_gpio_401c0000_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_gpio_401c0000_P_pinmux_IDX_3 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_35_gpio3_io03
#define DT_N_S_soc_S_gpio_401c0000_P_pinmux_IDX_3_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_35_gpio3_io03
#define DT_N_S_soc_S_gpio_401c0000_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_gpio_401c0000_P_pinmux_IDX_4 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_36_gpio3_io04
#define DT_N_S_soc_S_gpio_401c0000_P_pinmux_IDX_4_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_36_gpio3_io04
#define DT_N_S_soc_S_gpio_401c0000_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_gpio_401c0000_P_pinmux_IDX_5 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_37_gpio3_io05
#define DT_N_S_soc_S_gpio_401c0000_P_pinmux_IDX_5_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_37_gpio3_io05
#define DT_N_S_soc_S_gpio_401c0000_P_pinmux_IDX_5_EXISTS 1
#define DT_N_S_soc_S_gpio_401c0000_P_pinmux_IDX_6 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_38_gpio3_io06
#define DT_N_S_soc_S_gpio_401c0000_P_pinmux_IDX_6_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_38_gpio3_io06
#define DT_N_S_soc_S_gpio_401c0000_P_pinmux_IDX_6_EXISTS 1
#define DT_N_S_soc_S_gpio_401c0000_P_pinmux_IDX_7 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_39_gpio3_io07
#define DT_N_S_soc_S_gpio_401c0000_P_pinmux_IDX_7_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_39_gpio3_io07
#define DT_N_S_soc_S_gpio_401c0000_P_pinmux_IDX_7_EXISTS 1
#define DT_N_S_soc_S_gpio_401c0000_P_pinmux_IDX_8 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_gpio3_io08
#define DT_N_S_soc_S_gpio_401c0000_P_pinmux_IDX_8_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_gpio3_io08
#define DT_N_S_soc_S_gpio_401c0000_P_pinmux_IDX_8_EXISTS 1
#define DT_N_S_soc_S_gpio_401c0000_P_pinmux_IDX_9 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_gpio3_io09
#define DT_N_S_soc_S_gpio_401c0000_P_pinmux_IDX_9_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_gpio3_io09
#define DT_N_S_soc_S_gpio_401c0000_P_pinmux_IDX_9_EXISTS 1
#define DT_N_S_soc_S_gpio_401c0000_P_pinmux_IDX_10 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_gpio3_io13
#define DT_N_S_soc_S_gpio_401c0000_P_pinmux_IDX_10_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_gpio3_io13
#define DT_N_S_soc_S_gpio_401c0000_P_pinmux_IDX_10_EXISTS 1
#define DT_N_S_soc_S_gpio_401c0000_P_pinmux_IDX_11 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_gpio3_io14
#define DT_N_S_soc_S_gpio_401c0000_P_pinmux_IDX_11_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_gpio3_io14
#define DT_N_S_soc_S_gpio_401c0000_P_pinmux_IDX_11_EXISTS 1
#define DT_N_S_soc_S_gpio_401c0000_P_pinmux_IDX_12 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_gpio3_io15
#define DT_N_S_soc_S_gpio_401c0000_P_pinmux_IDX_12_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_gpio3_io15
#define DT_N_S_soc_S_gpio_401c0000_P_pinmux_IDX_12_EXISTS 1
#define DT_N_S_soc_S_gpio_401c0000_P_pinmux_IDX_13 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_gpio3_io16
#define DT_N_S_soc_S_gpio_401c0000_P_pinmux_IDX_13_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_gpio3_io16
#define DT_N_S_soc_S_gpio_401c0000_P_pinmux_IDX_13_EXISTS 1
#define DT_N_S_soc_S_gpio_401c0000_P_pinmux_IDX_14 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_gpio3_io17
#define DT_N_S_soc_S_gpio_401c0000_P_pinmux_IDX_14_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_gpio3_io17
#define DT_N_S_soc_S_gpio_401c0000_P_pinmux_IDX_14_EXISTS 1
#define DT_N_S_soc_S_gpio_401c0000_P_pinmux_IDX_15 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_gpio3_io18
#define DT_N_S_soc_S_gpio_401c0000_P_pinmux_IDX_15_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_gpio3_io18
#define DT_N_S_soc_S_gpio_401c0000_P_pinmux_IDX_15_EXISTS 1
#define DT_N_S_soc_S_gpio_401c0000_P_pinmux_IDX_16 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_06_gpio3_io19
#define DT_N_S_soc_S_gpio_401c0000_P_pinmux_IDX_16_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_06_gpio3_io19
#define DT_N_S_soc_S_gpio_401c0000_P_pinmux_IDX_16_EXISTS 1
#define DT_N_S_soc_S_gpio_401c0000_P_pinmux_IDX_17 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_gpio3_io20
#define DT_N_S_soc_S_gpio_401c0000_P_pinmux_IDX_17_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_gpio3_io20
#define DT_N_S_soc_S_gpio_401c0000_P_pinmux_IDX_17_EXISTS 1
#define DT_N_S_soc_S_gpio_401c0000_P_pinmux_IDX_18 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_gpio3_io21
#define DT_N_S_soc_S_gpio_401c0000_P_pinmux_IDX_18_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_gpio3_io21
#define DT_N_S_soc_S_gpio_401c0000_P_pinmux_IDX_18_EXISTS 1
#define DT_N_S_soc_S_gpio_401c0000_P_pinmux_IDX_19 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_gpio3_io22
#define DT_N_S_soc_S_gpio_401c0000_P_pinmux_IDX_19_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_gpio3_io22
#define DT_N_S_soc_S_gpio_401c0000_P_pinmux_IDX_19_EXISTS 1
#define DT_N_S_soc_S_gpio_401c0000_P_pinmux_IDX_20 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_gpio3_io23
#define DT_N_S_soc_S_gpio_401c0000_P_pinmux_IDX_20_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_gpio3_io23
#define DT_N_S_soc_S_gpio_401c0000_P_pinmux_IDX_20_EXISTS 1
#define DT_N_S_soc_S_gpio_401c0000_P_pinmux_IDX_21 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_04_gpio3_io24
#define DT_N_S_soc_S_gpio_401c0000_P_pinmux_IDX_21_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_04_gpio3_io24
#define DT_N_S_soc_S_gpio_401c0000_P_pinmux_IDX_21_EXISTS 1
#define DT_N_S_soc_S_gpio_401c0000_P_pinmux_IDX_22 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_05_gpio3_io25
#define DT_N_S_soc_S_gpio_401c0000_P_pinmux_IDX_22_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_05_gpio3_io25
#define DT_N_S_soc_S_gpio_401c0000_P_pinmux_IDX_22_EXISTS 1
#define DT_N_S_soc_S_gpio_401c0000_P_pinmux_IDX_23 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_gpio3_io26
#define DT_N_S_soc_S_gpio_401c0000_P_pinmux_IDX_23_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_gpio3_io26
#define DT_N_S_soc_S_gpio_401c0000_P_pinmux_IDX_23_EXISTS 1
#define DT_N_S_soc_S_gpio_401c0000_P_pinmux_IDX_24 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_gpio3_io27
#define DT_N_S_soc_S_gpio_401c0000_P_pinmux_IDX_24_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_gpio3_io27
#define DT_N_S_soc_S_gpio_401c0000_P_pinmux_IDX_24_EXISTS 1
#define DT_N_S_soc_S_gpio_401c0000_P_pinmux_IDX_25 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_gpio3_io28
#define DT_N_S_soc_S_gpio_401c0000_P_pinmux_IDX_25_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_gpio3_io28
#define DT_N_S_soc_S_gpio_401c0000_P_pinmux_IDX_25_EXISTS 1
#define DT_N_S_soc_S_gpio_401c0000_P_pinmux_IDX_26 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_09_gpio3_io29
#define DT_N_S_soc_S_gpio_401c0000_P_pinmux_IDX_26_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_09_gpio3_io29
#define DT_N_S_soc_S_gpio_401c0000_P_pinmux_IDX_26_EXISTS 1
#define DT_N_S_soc_S_gpio_401c0000_P_pinmux_IDX_27 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_10_gpio3_io30
#define DT_N_S_soc_S_gpio_401c0000_P_pinmux_IDX_27_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_10_gpio3_io30
#define DT_N_S_soc_S_gpio_401c0000_P_pinmux_IDX_27_EXISTS 1
#define DT_N_S_soc_S_gpio_401c0000_P_pinmux_IDX_28 DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_gpio3_io31
#define DT_N_S_soc_S_gpio_401c0000_P_pinmux_IDX_28_PH DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_gpio3_io31
#define DT_N_S_soc_S_gpio_401c0000_P_pinmux_IDX_28_EXISTS 1
#define DT_N_S_soc_S_gpio_401c0000_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_401c0000, pinmux, 0) \
	fn(DT_N_S_soc_S_gpio_401c0000, pinmux, 1) \
	fn(DT_N_S_soc_S_gpio_401c0000, pinmux, 2) \
	fn(DT_N_S_soc_S_gpio_401c0000, pinmux, 3) \
	fn(DT_N_S_soc_S_gpio_401c0000, pinmux, 4) \
	fn(DT_N_S_soc_S_gpio_401c0000, pinmux, 5) \
	fn(DT_N_S_soc_S_gpio_401c0000, pinmux, 6) \
	fn(DT_N_S_soc_S_gpio_401c0000, pinmux, 7) \
	fn(DT_N_S_soc_S_gpio_401c0000, pinmux, 8) \
	fn(DT_N_S_soc_S_gpio_401c0000, pinmux, 9) \
	fn(DT_N_S_soc_S_gpio_401c0000, pinmux, 10) \
	fn(DT_N_S_soc_S_gpio_401c0000, pinmux, 11) \
	fn(DT_N_S_soc_S_gpio_401c0000, pinmux, 12) \
	fn(DT_N_S_soc_S_gpio_401c0000, pinmux, 13) \
	fn(DT_N_S_soc_S_gpio_401c0000, pinmux, 14) \
	fn(DT_N_S_soc_S_gpio_401c0000, pinmux, 15) \
	fn(DT_N_S_soc_S_gpio_401c0000, pinmux, 16) \
	fn(DT_N_S_soc_S_gpio_401c0000, pinmux, 17) \
	fn(DT_N_S_soc_S_gpio_401c0000, pinmux, 18) \
	fn(DT_N_S_soc_S_gpio_401c0000, pinmux, 19) \
	fn(DT_N_S_soc_S_gpio_401c0000, pinmux, 20) \
	fn(DT_N_S_soc_S_gpio_401c0000, pinmux, 21) \
	fn(DT_N_S_soc_S_gpio_401c0000, pinmux, 22) \
	fn(DT_N_S_soc_S_gpio_401c0000, pinmux, 23) \
	fn(DT_N_S_soc_S_gpio_401c0000, pinmux, 24) \
	fn(DT_N_S_soc_S_gpio_401c0000, pinmux, 25) \
	fn(DT_N_S_soc_S_gpio_401c0000, pinmux, 26) \
	fn(DT_N_S_soc_S_gpio_401c0000, pinmux, 27) \
	fn(DT_N_S_soc_S_gpio_401c0000, pinmux, 28)
#define DT_N_S_soc_S_gpio_401c0000_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_401c0000, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401c0000, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401c0000, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401c0000, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401c0000, pinmux, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401c0000, pinmux, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401c0000, pinmux, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401c0000, pinmux, 7) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401c0000, pinmux, 8) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401c0000, pinmux, 9) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401c0000, pinmux, 10) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401c0000, pinmux, 11) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401c0000, pinmux, 12) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401c0000, pinmux, 13) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401c0000, pinmux, 14) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401c0000, pinmux, 15) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401c0000, pinmux, 16) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401c0000, pinmux, 17) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401c0000, pinmux, 18) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401c0000, pinmux, 19) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401c0000, pinmux, 20) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401c0000, pinmux, 21) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401c0000, pinmux, 22) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401c0000, pinmux, 23) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401c0000, pinmux, 24) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401c0000, pinmux, 25) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401c0000, pinmux, 26) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401c0000, pinmux, 27) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401c0000, pinmux, 28)
#define DT_N_S_soc_S_gpio_401c0000_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_401c0000, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_401c0000, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_401c0000, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_401c0000, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_401c0000, pinmux, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_401c0000, pinmux, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_401c0000, pinmux, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_401c0000, pinmux, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_401c0000, pinmux, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_401c0000, pinmux, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_401c0000, pinmux, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_401c0000, pinmux, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_401c0000, pinmux, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_401c0000, pinmux, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_401c0000, pinmux, 14, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_401c0000, pinmux, 15, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_401c0000, pinmux, 16, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_401c0000, pinmux, 17, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_401c0000, pinmux, 18, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_401c0000, pinmux, 19, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_401c0000, pinmux, 20, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_401c0000, pinmux, 21, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_401c0000, pinmux, 22, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_401c0000, pinmux, 23, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_401c0000, pinmux, 24, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_401c0000, pinmux, 25, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_401c0000, pinmux, 26, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_401c0000, pinmux, 27, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_401c0000, pinmux, 28, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_401c0000_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_401c0000, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401c0000, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401c0000, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401c0000, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401c0000, pinmux, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401c0000, pinmux, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401c0000, pinmux, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401c0000, pinmux, 7, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401c0000, pinmux, 8, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401c0000, pinmux, 9, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401c0000, pinmux, 10, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401c0000, pinmux, 11, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401c0000, pinmux, 12, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401c0000, pinmux, 13, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401c0000, pinmux, 14, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401c0000, pinmux, 15, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401c0000, pinmux, 16, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401c0000, pinmux, 17, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401c0000, pinmux, 18, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401c0000, pinmux, 19, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401c0000, pinmux, 20, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401c0000, pinmux, 21, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401c0000, pinmux, 22, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401c0000, pinmux, 23, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401c0000, pinmux, 24, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401c0000, pinmux, 25, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401c0000, pinmux, 26, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401c0000, pinmux, 27, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401c0000, pinmux, 28, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_401c0000_P_pinmux_LEN 29
#define DT_N_S_soc_S_gpio_401c0000_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_gpio_401c0000_P_gpio_controller 1
#define DT_N_S_soc_S_gpio_401c0000_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_gpio_401c0000_P_ngpios 32
#define DT_N_S_soc_S_gpio_401c0000_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_gpio_401c0000_P_gpio_reserved_ranges {10 /* 0xa */, 3 /* 0x3 */}
#define DT_N_S_soc_S_gpio_401c0000_P_gpio_reserved_ranges_IDX_0 10
#define DT_N_S_soc_S_gpio_401c0000_P_gpio_reserved_ranges_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_401c0000_P_gpio_reserved_ranges_IDX_1 3
#define DT_N_S_soc_S_gpio_401c0000_P_gpio_reserved_ranges_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpio_401c0000_P_gpio_reserved_ranges_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_401c0000, gpio_reserved_ranges, 0) \
	fn(DT_N_S_soc_S_gpio_401c0000, gpio_reserved_ranges, 1)
#define DT_N_S_soc_S_gpio_401c0000_P_gpio_reserved_ranges_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_401c0000, gpio_reserved_ranges, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401c0000, gpio_reserved_ranges, 1)
#define DT_N_S_soc_S_gpio_401c0000_P_gpio_reserved_ranges_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_401c0000, gpio_reserved_ranges, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_401c0000, gpio_reserved_ranges, 1, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_401c0000_P_gpio_reserved_ranges_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_401c0000, gpio_reserved_ranges, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401c0000, gpio_reserved_ranges, 1, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_401c0000_P_gpio_reserved_ranges_LEN 2
#define DT_N_S_soc_S_gpio_401c0000_P_gpio_reserved_ranges_EXISTS 1
#define DT_N_S_soc_S_gpio_401c0000_P_compatible {"nxp,imx-gpio"}
#define DT_N_S_soc_S_gpio_401c0000_P_compatible_IDX_0 "nxp,imx-gpio"
#define DT_N_S_soc_S_gpio_401c0000_P_compatible_IDX_0_STRING_UNQUOTED nxp,imx-gpio
#define DT_N_S_soc_S_gpio_401c0000_P_compatible_IDX_0_STRING_TOKEN nxp_imx_gpio
#define DT_N_S_soc_S_gpio_401c0000_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_IMX_GPIO
#define DT_N_S_soc_S_gpio_401c0000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_401c0000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_401c0000, compatible, 0)
#define DT_N_S_soc_S_gpio_401c0000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_401c0000, compatible, 0)
#define DT_N_S_soc_S_gpio_401c0000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_401c0000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_401c0000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_401c0000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_401c0000_P_compatible_LEN 1
#define DT_N_S_soc_S_gpio_401c0000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_gpio_401c0000_P_interrupts {84 /* 0x54 */, 0 /* 0x0 */, 85 /* 0x55 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_gpio_401c0000_P_interrupts_IDX_0 84
#define DT_N_S_soc_S_gpio_401c0000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_401c0000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_gpio_401c0000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpio_401c0000_P_interrupts_IDX_2 85
#define DT_N_S_soc_S_gpio_401c0000_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_gpio_401c0000_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_gpio_401c0000_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_gpio_401c0000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_401c0000, interrupts, 0) \
	fn(DT_N_S_soc_S_gpio_401c0000, interrupts, 1) \
	fn(DT_N_S_soc_S_gpio_401c0000, interrupts, 2) \
	fn(DT_N_S_soc_S_gpio_401c0000, interrupts, 3)
#define DT_N_S_soc_S_gpio_401c0000_P_interrupts_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_401c0000, interrupts, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401c0000, interrupts, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401c0000, interrupts, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401c0000, interrupts, 3)
#define DT_N_S_soc_S_gpio_401c0000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_401c0000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_401c0000, interrupts, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_401c0000, interrupts, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_401c0000, interrupts, 3, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_401c0000_P_interrupts_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_401c0000, interrupts, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401c0000, interrupts, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401c0000, interrupts, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_401c0000, interrupts, 3, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_401c0000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_gpio_401c0000_P_wakeup_source 0
#define DT_N_S_soc_S_gpio_401c0000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/usdhc@402c0000
 *
 * Node identifier: DT_N_S_soc_S_usdhc_402c0000
 *
 * Binding (compatible = nxp,imx-usdhc):
 *   $ZEPHYR_BASE/dts/bindings/sdhc/nxp,imx-usdhc.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_usdhc_402c0000_PATH "/soc/usdhc@402c0000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_usdhc_402c0000_FULL_NAME "usdhc@402c0000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_usdhc_402c0000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_usdhc_402c0000_CHILD_IDX 46

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_usdhc_402c0000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_usdhc_402c0000_S_sdmmc)
#define DT_N_S_soc_S_usdhc_402c0000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_usdhc_402c0000_S_sdmmc)
#define DT_N_S_soc_S_usdhc_402c0000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_usdhc_402c0000_S_sdmmc, __VA_ARGS__)
#define DT_N_S_soc_S_usdhc_402c0000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usdhc_402c0000_S_sdmmc, __VA_ARGS__)
#define DT_N_S_soc_S_usdhc_402c0000_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_usdhc_402c0000_S_sdmmc)
#define DT_N_S_soc_S_usdhc_402c0000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_usdhc_402c0000_S_sdmmc)
#define DT_N_S_soc_S_usdhc_402c0000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_usdhc_402c0000_S_sdmmc, __VA_ARGS__)
#define DT_N_S_soc_S_usdhc_402c0000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usdhc_402c0000_S_sdmmc, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_usdhc_402c0000_ORD 314

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_usdhc_402c0000_REQUIRES_ORDS \
	11, /* /soc */ \
	12, /* /soc/interrupt-controller@e000e100 */ \
	60, /* /soc/ccm@400fc000 */ \
	228, /* /soc/iomuxc@401f8000/pinctrl/pinmux_usdhc1 */ \
	241, /* /soc/iomuxc@401f8000/pinctrl/pinmux_usdhc1_fast */ \
	244, /* /soc/iomuxc@401f8000/pinctrl/pinmux_usdhc1_med */ \
	247, /* /soc/iomuxc@401f8000/pinctrl/pinmux_usdhc1_slow */ \
	313, /* /soc/gpio@401c0000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_usdhc_402c0000_SUPPORTS_ORDS \
	315, /* /soc/usdhc@402c0000/sdmmc */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_usdhc_402c0000_EXISTS 1
#define DT_N_ALIAS_sdhc0          DT_N_S_soc_S_usdhc_402c0000
#define DT_N_INST_0_nxp_imx_usdhc DT_N_S_soc_S_usdhc_402c0000
#define DT_N_NODELABEL_usdhc1     DT_N_S_soc_S_usdhc_402c0000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_usdhc_402c0000_REG_NUM 1
#define DT_N_S_soc_S_usdhc_402c0000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usdhc_402c0000_REG_IDX_0_VAL_ADDRESS 1076625408 /* 0x402c0000 */
#define DT_N_S_soc_S_usdhc_402c0000_REG_IDX_0_VAL_SIZE 16384 /* 0x4000 */
#define DT_N_S_soc_S_usdhc_402c0000_RANGES_NUM 0
#define DT_N_S_soc_S_usdhc_402c0000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_usdhc_402c0000_IRQ_NUM 1
#define DT_N_S_soc_S_usdhc_402c0000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usdhc_402c0000_IRQ_IDX_0_VAL_irq 110
#define DT_N_S_soc_S_usdhc_402c0000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_usdhc_402c0000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usdhc_402c0000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_usdhc_402c0000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_usdhc_402c0000_COMPAT_MATCHES_nxp_imx_usdhc 1
#define DT_N_S_soc_S_usdhc_402c0000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usdhc_402c0000_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_soc_S_usdhc_402c0000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usdhc_402c0000_COMPAT_MODEL_IDX_0 "imx-usdhc"
#define DT_N_S_soc_S_usdhc_402c0000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_usdhc_402c0000_PINCTRL_NUM 4
#define DT_N_S_soc_S_usdhc_402c0000_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usdhc_402c0000_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_usdhc_402c0000_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_usdhc_402c0000_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_usdhc_402c0000_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_usdhc_402c0000_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1
#define DT_N_S_soc_S_usdhc_402c0000_PINCTRL_IDX_1_EXISTS 1
#define DT_N_S_soc_S_usdhc_402c0000_PINCTRL_IDX_1_TOKEN slow
#define DT_N_S_soc_S_usdhc_402c0000_PINCTRL_IDX_1_UPPER_TOKEN SLOW
#define DT_N_S_soc_S_usdhc_402c0000_PINCTRL_NAME_slow_EXISTS 1
#define DT_N_S_soc_S_usdhc_402c0000_PINCTRL_NAME_slow_IDX 1
#define DT_N_S_soc_S_usdhc_402c0000_PINCTRL_NAME_slow_IDX_0_PH DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow
#define DT_N_S_soc_S_usdhc_402c0000_PINCTRL_IDX_2_EXISTS 1
#define DT_N_S_soc_S_usdhc_402c0000_PINCTRL_IDX_2_TOKEN med
#define DT_N_S_soc_S_usdhc_402c0000_PINCTRL_IDX_2_UPPER_TOKEN MED
#define DT_N_S_soc_S_usdhc_402c0000_PINCTRL_NAME_med_EXISTS 1
#define DT_N_S_soc_S_usdhc_402c0000_PINCTRL_NAME_med_IDX 2
#define DT_N_S_soc_S_usdhc_402c0000_PINCTRL_NAME_med_IDX_0_PH DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med
#define DT_N_S_soc_S_usdhc_402c0000_PINCTRL_IDX_3_EXISTS 1
#define DT_N_S_soc_S_usdhc_402c0000_PINCTRL_IDX_3_TOKEN fast
#define DT_N_S_soc_S_usdhc_402c0000_PINCTRL_IDX_3_UPPER_TOKEN FAST
#define DT_N_S_soc_S_usdhc_402c0000_PINCTRL_NAME_fast_EXISTS 1
#define DT_N_S_soc_S_usdhc_402c0000_PINCTRL_NAME_fast_IDX 3
#define DT_N_S_soc_S_usdhc_402c0000_PINCTRL_NAME_fast_IDX_0_PH DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast

/* Generic property macros: */
#define DT_N_S_soc_S_usdhc_402c0000_P_reg {1076625408 /* 0x402c0000 */, 16384 /* 0x4000 */}
#define DT_N_S_soc_S_usdhc_402c0000_P_reg_IDX_0 1076625408
#define DT_N_S_soc_S_usdhc_402c0000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usdhc_402c0000_P_reg_IDX_1 16384
#define DT_N_S_soc_S_usdhc_402c0000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_usdhc_402c0000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usdhc_402c0000, reg, 0) \
	fn(DT_N_S_soc_S_usdhc_402c0000, reg, 1)
#define DT_N_S_soc_S_usdhc_402c0000_P_reg_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_usdhc_402c0000, reg, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_usdhc_402c0000, reg, 1)
#define DT_N_S_soc_S_usdhc_402c0000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usdhc_402c0000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usdhc_402c0000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_usdhc_402c0000_P_reg_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usdhc_402c0000, reg, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_usdhc_402c0000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_usdhc_402c0000_P_reg_EXISTS 1
#define DT_N_S_soc_S_usdhc_402c0000_P_data_timeout 15
#define DT_N_S_soc_S_usdhc_402c0000_P_data_timeout_EXISTS 1
#define DT_N_S_soc_S_usdhc_402c0000_P_read_watermark 128
#define DT_N_S_soc_S_usdhc_402c0000_P_read_watermark_EXISTS 1
#define DT_N_S_soc_S_usdhc_402c0000_P_write_watermark 128
#define DT_N_S_soc_S_usdhc_402c0000_P_write_watermark_EXISTS 1
#define DT_N_S_soc_S_usdhc_402c0000_P_max_current_330 1020
#define DT_N_S_soc_S_usdhc_402c0000_P_max_current_330_EXISTS 1
#define DT_N_S_soc_S_usdhc_402c0000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usdhc_402c0000_P_clocks_IDX_0_PH DT_N_S_soc_S_ccm_400fc000
#define DT_N_S_soc_S_usdhc_402c0000_P_clocks_IDX_0_VAL_name 1536
#define DT_N_S_soc_S_usdhc_402c0000_P_clocks_IDX_0_VAL_name_EXISTS 1
#define DT_N_S_soc_S_usdhc_402c0000_P_clocks_IDX_0_VAL_offset 0
#define DT_N_S_soc_S_usdhc_402c0000_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_usdhc_402c0000_P_clocks_IDX_0_VAL_bits 0
#define DT_N_S_soc_S_usdhc_402c0000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_usdhc_402c0000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usdhc_402c0000, clocks, 0)
#define DT_N_S_soc_S_usdhc_402c0000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_usdhc_402c0000, clocks, 0)
#define DT_N_S_soc_S_usdhc_402c0000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usdhc_402c0000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usdhc_402c0000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usdhc_402c0000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usdhc_402c0000_P_clocks_LEN 1
#define DT_N_S_soc_S_usdhc_402c0000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_usdhc_402c0000_P_pwr_gpios_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usdhc_402c0000_P_pwr_gpios_IDX_0_PH DT_N_S_soc_S_gpio_401c0000
#define DT_N_S_soc_S_usdhc_402c0000_P_pwr_gpios_IDX_0_VAL_pin 24
#define DT_N_S_soc_S_usdhc_402c0000_P_pwr_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_soc_S_usdhc_402c0000_P_pwr_gpios_IDX_0_VAL_flags 0
#define DT_N_S_soc_S_usdhc_402c0000_P_pwr_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_usdhc_402c0000_P_pwr_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usdhc_402c0000, pwr_gpios, 0)
#define DT_N_S_soc_S_usdhc_402c0000_P_pwr_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_usdhc_402c0000, pwr_gpios, 0)
#define DT_N_S_soc_S_usdhc_402c0000_P_pwr_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usdhc_402c0000, pwr_gpios, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usdhc_402c0000_P_pwr_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usdhc_402c0000, pwr_gpios, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usdhc_402c0000_P_pwr_gpios_LEN 1
#define DT_N_S_soc_S_usdhc_402c0000_P_pwr_gpios_EXISTS 1
#define DT_N_S_soc_S_usdhc_402c0000_P_cd_gpios_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usdhc_402c0000_P_cd_gpios_IDX_0_PH DT_N_S_soc_S_gpio_401c0000
#define DT_N_S_soc_S_usdhc_402c0000_P_cd_gpios_IDX_0_VAL_pin 19
#define DT_N_S_soc_S_usdhc_402c0000_P_cd_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_soc_S_usdhc_402c0000_P_cd_gpios_IDX_0_VAL_flags 1
#define DT_N_S_soc_S_usdhc_402c0000_P_cd_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_usdhc_402c0000_P_cd_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usdhc_402c0000, cd_gpios, 0)
#define DT_N_S_soc_S_usdhc_402c0000_P_cd_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_usdhc_402c0000, cd_gpios, 0)
#define DT_N_S_soc_S_usdhc_402c0000_P_cd_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usdhc_402c0000, cd_gpios, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usdhc_402c0000_P_cd_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usdhc_402c0000, cd_gpios, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usdhc_402c0000_P_cd_gpios_LEN 1
#define DT_N_S_soc_S_usdhc_402c0000_P_cd_gpios_EXISTS 1
#define DT_N_S_soc_S_usdhc_402c0000_P_no_1_8_v 1
#define DT_N_S_soc_S_usdhc_402c0000_P_no_1_8_v_EXISTS 1
#define DT_N_S_soc_S_usdhc_402c0000_P_detect_dat3 0
#define DT_N_S_soc_S_usdhc_402c0000_P_detect_dat3_EXISTS 1
#define DT_N_S_soc_S_usdhc_402c0000_P_max_current_300 0
#define DT_N_S_soc_S_usdhc_402c0000_P_max_current_300_EXISTS 1
#define DT_N_S_soc_S_usdhc_402c0000_P_max_current_180 1020
#define DT_N_S_soc_S_usdhc_402c0000_P_max_current_180_EXISTS 1
#define DT_N_S_soc_S_usdhc_402c0000_P_max_bus_freq 208000000
#define DT_N_S_soc_S_usdhc_402c0000_P_max_bus_freq_EXISTS 1
#define DT_N_S_soc_S_usdhc_402c0000_P_min_bus_freq 400000
#define DT_N_S_soc_S_usdhc_402c0000_P_min_bus_freq_EXISTS 1
#define DT_N_S_soc_S_usdhc_402c0000_P_power_delay_ms 500
#define DT_N_S_soc_S_usdhc_402c0000_P_power_delay_ms_EXISTS 1
#define DT_N_S_soc_S_usdhc_402c0000_P_mmc_hs200_1_8v 0
#define DT_N_S_soc_S_usdhc_402c0000_P_mmc_hs200_1_8v_EXISTS 1
#define DT_N_S_soc_S_usdhc_402c0000_P_mmc_hs400_1_8v 0
#define DT_N_S_soc_S_usdhc_402c0000_P_mmc_hs400_1_8v_EXISTS 1
#define DT_N_S_soc_S_usdhc_402c0000_P_status "okay"
#define DT_N_S_soc_S_usdhc_402c0000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_usdhc_402c0000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_usdhc_402c0000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_usdhc_402c0000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_usdhc_402c0000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_usdhc_402c0000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_usdhc_402c0000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usdhc_402c0000, status, 0) \
	fn(DT_N_S_soc_S_usdhc_402c0000, status, 1) \
	fn(DT_N_S_soc_S_usdhc_402c0000, status, 2) \
	fn(DT_N_S_soc_S_usdhc_402c0000, status, 3)
#define DT_N_S_soc_S_usdhc_402c0000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_usdhc_402c0000, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_usdhc_402c0000, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_usdhc_402c0000, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_usdhc_402c0000, status, 3)
#define DT_N_S_soc_S_usdhc_402c0000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usdhc_402c0000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usdhc_402c0000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usdhc_402c0000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usdhc_402c0000, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_usdhc_402c0000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usdhc_402c0000, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_usdhc_402c0000, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_usdhc_402c0000, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_usdhc_402c0000, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_usdhc_402c0000_P_status_EXISTS 1
#define DT_N_S_soc_S_usdhc_402c0000_P_compatible {"nxp,imx-usdhc"}
#define DT_N_S_soc_S_usdhc_402c0000_P_compatible_IDX_0 "nxp,imx-usdhc"
#define DT_N_S_soc_S_usdhc_402c0000_P_compatible_IDX_0_STRING_UNQUOTED nxp,imx-usdhc
#define DT_N_S_soc_S_usdhc_402c0000_P_compatible_IDX_0_STRING_TOKEN nxp_imx_usdhc
#define DT_N_S_soc_S_usdhc_402c0000_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_IMX_USDHC
#define DT_N_S_soc_S_usdhc_402c0000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usdhc_402c0000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usdhc_402c0000, compatible, 0)
#define DT_N_S_soc_S_usdhc_402c0000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_usdhc_402c0000, compatible, 0)
#define DT_N_S_soc_S_usdhc_402c0000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usdhc_402c0000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usdhc_402c0000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usdhc_402c0000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usdhc_402c0000_P_compatible_LEN 1
#define DT_N_S_soc_S_usdhc_402c0000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_usdhc_402c0000_P_interrupts {110 /* 0x6e */, 0 /* 0x0 */}
#define DT_N_S_soc_S_usdhc_402c0000_P_interrupts_IDX_0 110
#define DT_N_S_soc_S_usdhc_402c0000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usdhc_402c0000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_usdhc_402c0000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_usdhc_402c0000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usdhc_402c0000, interrupts, 0) \
	fn(DT_N_S_soc_S_usdhc_402c0000, interrupts, 1)
#define DT_N_S_soc_S_usdhc_402c0000_P_interrupts_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_usdhc_402c0000, interrupts, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_usdhc_402c0000, interrupts, 1)
#define DT_N_S_soc_S_usdhc_402c0000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usdhc_402c0000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usdhc_402c0000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_usdhc_402c0000_P_interrupts_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usdhc_402c0000, interrupts, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_usdhc_402c0000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_usdhc_402c0000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_usdhc_402c0000_P_wakeup_source 0
#define DT_N_S_soc_S_usdhc_402c0000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_usdhc_402c0000_P_pinctrl_0_IDX_0 DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1
#define DT_N_S_soc_S_usdhc_402c0000_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1
#define DT_N_S_soc_S_usdhc_402c0000_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usdhc_402c0000_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usdhc_402c0000, pinctrl_0, 0)
#define DT_N_S_soc_S_usdhc_402c0000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_usdhc_402c0000, pinctrl_0, 0)
#define DT_N_S_soc_S_usdhc_402c0000_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usdhc_402c0000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usdhc_402c0000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usdhc_402c0000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usdhc_402c0000_P_pinctrl_0_LEN 1
#define DT_N_S_soc_S_usdhc_402c0000_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_usdhc_402c0000_P_pinctrl_1_IDX_0 DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow
#define DT_N_S_soc_S_usdhc_402c0000_P_pinctrl_1_IDX_0_PH DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow
#define DT_N_S_soc_S_usdhc_402c0000_P_pinctrl_1_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usdhc_402c0000_P_pinctrl_1_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usdhc_402c0000, pinctrl_1, 0)
#define DT_N_S_soc_S_usdhc_402c0000_P_pinctrl_1_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_usdhc_402c0000, pinctrl_1, 0)
#define DT_N_S_soc_S_usdhc_402c0000_P_pinctrl_1_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usdhc_402c0000, pinctrl_1, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usdhc_402c0000_P_pinctrl_1_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usdhc_402c0000, pinctrl_1, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usdhc_402c0000_P_pinctrl_1_LEN 1
#define DT_N_S_soc_S_usdhc_402c0000_P_pinctrl_1_EXISTS 1
#define DT_N_S_soc_S_usdhc_402c0000_P_pinctrl_2_IDX_0 DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med
#define DT_N_S_soc_S_usdhc_402c0000_P_pinctrl_2_IDX_0_PH DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med
#define DT_N_S_soc_S_usdhc_402c0000_P_pinctrl_2_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usdhc_402c0000_P_pinctrl_2_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usdhc_402c0000, pinctrl_2, 0)
#define DT_N_S_soc_S_usdhc_402c0000_P_pinctrl_2_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_usdhc_402c0000, pinctrl_2, 0)
#define DT_N_S_soc_S_usdhc_402c0000_P_pinctrl_2_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usdhc_402c0000, pinctrl_2, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usdhc_402c0000_P_pinctrl_2_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usdhc_402c0000, pinctrl_2, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usdhc_402c0000_P_pinctrl_2_LEN 1
#define DT_N_S_soc_S_usdhc_402c0000_P_pinctrl_2_EXISTS 1
#define DT_N_S_soc_S_usdhc_402c0000_P_pinctrl_3_IDX_0 DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast
#define DT_N_S_soc_S_usdhc_402c0000_P_pinctrl_3_IDX_0_PH DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast
#define DT_N_S_soc_S_usdhc_402c0000_P_pinctrl_3_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usdhc_402c0000_P_pinctrl_3_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usdhc_402c0000, pinctrl_3, 0)
#define DT_N_S_soc_S_usdhc_402c0000_P_pinctrl_3_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_usdhc_402c0000, pinctrl_3, 0)
#define DT_N_S_soc_S_usdhc_402c0000_P_pinctrl_3_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usdhc_402c0000, pinctrl_3, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usdhc_402c0000_P_pinctrl_3_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usdhc_402c0000, pinctrl_3, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usdhc_402c0000_P_pinctrl_3_LEN 1
#define DT_N_S_soc_S_usdhc_402c0000_P_pinctrl_3_EXISTS 1
#define DT_N_S_soc_S_usdhc_402c0000_P_pinctrl_names {"default", "slow", "med", "fast"}
#define DT_N_S_soc_S_usdhc_402c0000_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_usdhc_402c0000_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_usdhc_402c0000_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_usdhc_402c0000_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_usdhc_402c0000_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usdhc_402c0000_P_pinctrl_names_IDX_1 "slow"
#define DT_N_S_soc_S_usdhc_402c0000_P_pinctrl_names_IDX_1_STRING_UNQUOTED slow
#define DT_N_S_soc_S_usdhc_402c0000_P_pinctrl_names_IDX_1_STRING_TOKEN slow
#define DT_N_S_soc_S_usdhc_402c0000_P_pinctrl_names_IDX_1_STRING_UPPER_TOKEN SLOW
#define DT_N_S_soc_S_usdhc_402c0000_P_pinctrl_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_usdhc_402c0000_P_pinctrl_names_IDX_2 "med"
#define DT_N_S_soc_S_usdhc_402c0000_P_pinctrl_names_IDX_2_STRING_UNQUOTED med
#define DT_N_S_soc_S_usdhc_402c0000_P_pinctrl_names_IDX_2_STRING_TOKEN med
#define DT_N_S_soc_S_usdhc_402c0000_P_pinctrl_names_IDX_2_STRING_UPPER_TOKEN MED
#define DT_N_S_soc_S_usdhc_402c0000_P_pinctrl_names_IDX_2_EXISTS 1
#define DT_N_S_soc_S_usdhc_402c0000_P_pinctrl_names_IDX_3 "fast"
#define DT_N_S_soc_S_usdhc_402c0000_P_pinctrl_names_IDX_3_STRING_UNQUOTED fast
#define DT_N_S_soc_S_usdhc_402c0000_P_pinctrl_names_IDX_3_STRING_TOKEN fast
#define DT_N_S_soc_S_usdhc_402c0000_P_pinctrl_names_IDX_3_STRING_UPPER_TOKEN FAST
#define DT_N_S_soc_S_usdhc_402c0000_P_pinctrl_names_IDX_3_EXISTS 1
#define DT_N_S_soc_S_usdhc_402c0000_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usdhc_402c0000, pinctrl_names, 0) \
	fn(DT_N_S_soc_S_usdhc_402c0000, pinctrl_names, 1) \
	fn(DT_N_S_soc_S_usdhc_402c0000, pinctrl_names, 2) \
	fn(DT_N_S_soc_S_usdhc_402c0000, pinctrl_names, 3)
#define DT_N_S_soc_S_usdhc_402c0000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_usdhc_402c0000, pinctrl_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_usdhc_402c0000, pinctrl_names, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_usdhc_402c0000, pinctrl_names, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_usdhc_402c0000, pinctrl_names, 3)
#define DT_N_S_soc_S_usdhc_402c0000_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usdhc_402c0000, pinctrl_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usdhc_402c0000, pinctrl_names, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usdhc_402c0000, pinctrl_names, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usdhc_402c0000, pinctrl_names, 3, __VA_ARGS__)
#define DT_N_S_soc_S_usdhc_402c0000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usdhc_402c0000, pinctrl_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_usdhc_402c0000, pinctrl_names, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_usdhc_402c0000, pinctrl_names, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_usdhc_402c0000, pinctrl_names, 3, __VA_ARGS__)
#define DT_N_S_soc_S_usdhc_402c0000_P_pinctrl_names_LEN 4
#define DT_N_S_soc_S_usdhc_402c0000_P_pinctrl_names_EXISTS 1

/*
 * Devicetree node: /soc/usdhc@402c0000/sdmmc
 *
 * Node identifier: DT_N_S_soc_S_usdhc_402c0000_S_sdmmc
 *
 * Binding (compatible = zephyr,sdmmc-disk):
 *   $ZEPHYR_BASE/dts/bindings/sd/zephyr,sdmmc-disk.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_usdhc_402c0000_S_sdmmc_PATH "/soc/usdhc@402c0000/sdmmc"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_usdhc_402c0000_S_sdmmc_FULL_NAME "sdmmc"

/* Node parent (/soc/usdhc@402c0000) identifier: */
#define DT_N_S_soc_S_usdhc_402c0000_S_sdmmc_PARENT DT_N_S_soc_S_usdhc_402c0000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_usdhc_402c0000_S_sdmmc_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_usdhc_402c0000_S_sdmmc_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_usdhc_402c0000_S_sdmmc_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_usdhc_402c0000_S_sdmmc_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_usdhc_402c0000_S_sdmmc_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_usdhc_402c0000_S_sdmmc_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_usdhc_402c0000_S_sdmmc_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_usdhc_402c0000_S_sdmmc_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_usdhc_402c0000_S_sdmmc_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_usdhc_402c0000_S_sdmmc_ORD 315

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_usdhc_402c0000_S_sdmmc_REQUIRES_ORDS \
	314, /* /soc/usdhc@402c0000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_usdhc_402c0000_S_sdmmc_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_usdhc_402c0000_S_sdmmc_EXISTS 1
#define DT_N_INST_0_zephyr_sdmmc_disk DT_N_S_soc_S_usdhc_402c0000_S_sdmmc

/* Bus info (controller: '/soc/usdhc@402c0000', type: '['sd']') */
#define DT_N_S_soc_S_usdhc_402c0000_S_sdmmc_BUS_sd 1
#define DT_N_S_soc_S_usdhc_402c0000_S_sdmmc_BUS DT_N_S_soc_S_usdhc_402c0000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_usdhc_402c0000_S_sdmmc_REG_NUM 0
#define DT_N_S_soc_S_usdhc_402c0000_S_sdmmc_RANGES_NUM 0
#define DT_N_S_soc_S_usdhc_402c0000_S_sdmmc_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_usdhc_402c0000_S_sdmmc_IRQ_NUM 0
#define DT_N_S_soc_S_usdhc_402c0000_S_sdmmc_COMPAT_MATCHES_zephyr_sdmmc_disk 1
#define DT_N_S_soc_S_usdhc_402c0000_S_sdmmc_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usdhc_402c0000_S_sdmmc_COMPAT_VENDOR_IDX_0 "Zephyr-specific binding"
#define DT_N_S_soc_S_usdhc_402c0000_S_sdmmc_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usdhc_402c0000_S_sdmmc_COMPAT_MODEL_IDX_0 "sdmmc-disk"
#define DT_N_S_soc_S_usdhc_402c0000_S_sdmmc_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_usdhc_402c0000_S_sdmmc_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_usdhc_402c0000_S_sdmmc_P_status "okay"
#define DT_N_S_soc_S_usdhc_402c0000_S_sdmmc_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_usdhc_402c0000_S_sdmmc_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_usdhc_402c0000_S_sdmmc_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_usdhc_402c0000_S_sdmmc_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_usdhc_402c0000_S_sdmmc_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_usdhc_402c0000_S_sdmmc_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_usdhc_402c0000_S_sdmmc_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usdhc_402c0000_S_sdmmc, status, 0) \
	fn(DT_N_S_soc_S_usdhc_402c0000_S_sdmmc, status, 1) \
	fn(DT_N_S_soc_S_usdhc_402c0000_S_sdmmc, status, 2) \
	fn(DT_N_S_soc_S_usdhc_402c0000_S_sdmmc, status, 3)
#define DT_N_S_soc_S_usdhc_402c0000_S_sdmmc_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_usdhc_402c0000_S_sdmmc, status, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_usdhc_402c0000_S_sdmmc, status, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_usdhc_402c0000_S_sdmmc, status, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_usdhc_402c0000_S_sdmmc, status, 3)
#define DT_N_S_soc_S_usdhc_402c0000_S_sdmmc_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usdhc_402c0000_S_sdmmc, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usdhc_402c0000_S_sdmmc, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usdhc_402c0000_S_sdmmc, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usdhc_402c0000_S_sdmmc, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_usdhc_402c0000_S_sdmmc_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usdhc_402c0000_S_sdmmc, status, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_usdhc_402c0000_S_sdmmc, status, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_usdhc_402c0000_S_sdmmc, status, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_usdhc_402c0000_S_sdmmc, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_usdhc_402c0000_S_sdmmc_P_status_EXISTS 1
#define DT_N_S_soc_S_usdhc_402c0000_S_sdmmc_P_compatible {"zephyr,sdmmc-disk"}
#define DT_N_S_soc_S_usdhc_402c0000_S_sdmmc_P_compatible_IDX_0 "zephyr,sdmmc-disk"
#define DT_N_S_soc_S_usdhc_402c0000_S_sdmmc_P_compatible_IDX_0_STRING_UNQUOTED zephyr,sdmmc-disk
#define DT_N_S_soc_S_usdhc_402c0000_S_sdmmc_P_compatible_IDX_0_STRING_TOKEN zephyr_sdmmc_disk
#define DT_N_S_soc_S_usdhc_402c0000_S_sdmmc_P_compatible_IDX_0_STRING_UPPER_TOKEN ZEPHYR_SDMMC_DISK
#define DT_N_S_soc_S_usdhc_402c0000_S_sdmmc_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usdhc_402c0000_S_sdmmc_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usdhc_402c0000_S_sdmmc, compatible, 0)
#define DT_N_S_soc_S_usdhc_402c0000_S_sdmmc_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_usdhc_402c0000_S_sdmmc, compatible, 0)
#define DT_N_S_soc_S_usdhc_402c0000_S_sdmmc_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usdhc_402c0000_S_sdmmc, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usdhc_402c0000_S_sdmmc_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usdhc_402c0000_S_sdmmc, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usdhc_402c0000_S_sdmmc_P_compatible_LEN 1
#define DT_N_S_soc_S_usdhc_402c0000_S_sdmmc_P_compatible_EXISTS 1
#define DT_N_S_soc_S_usdhc_402c0000_S_sdmmc_P_wakeup_source 0
#define DT_N_S_soc_S_usdhc_402c0000_S_sdmmc_P_wakeup_source_EXISTS 1

/*
 * Chosen nodes
 */
#define DT_CHOSEN_zephyr_entropy                 DT_N_S_soc_S_random_400cc000
#define DT_CHOSEN_zephyr_entropy_EXISTS          1
#define DT_CHOSEN_zephyr_flash_controller        DT_N_S_soc_S_spi_402a8000_S_is25wp064_0
#define DT_CHOSEN_zephyr_flash_controller_EXISTS 1
#define DT_CHOSEN_zephyr_flash                   DT_N_S_soc_S_spi_402a8000_S_is25wp064_0
#define DT_CHOSEN_zephyr_flash_EXISTS            1
#define DT_CHOSEN_zephyr_code_partition          DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_10000
#define DT_CHOSEN_zephyr_code_partition_EXISTS   1
#define DT_CHOSEN_zephyr_sram                    DT_N_S_memory_80000000
#define DT_CHOSEN_zephyr_sram_EXISTS             1
#define DT_CHOSEN_zephyr_itcm                    DT_N_S_soc_S_flexram_400b0000_S_itcm_0
#define DT_CHOSEN_zephyr_itcm_EXISTS             1
#define DT_CHOSEN_zephyr_dtcm                    DT_N_S_soc_S_flexram_400b0000_S_dtcm_20000000
#define DT_CHOSEN_zephyr_dtcm_EXISTS             1
#define DT_CHOSEN_zephyr_console                 DT_N_S_soc_S_uart_40184000
#define DT_CHOSEN_zephyr_console_EXISTS          1
#define DT_CHOSEN_zephyr_shell_uart              DT_N_S_soc_S_uart_40184000
#define DT_CHOSEN_zephyr_shell_uart_EXISTS       1

/* Macros for iterating over all nodes and enabled nodes */
#define DT_FOREACH_HELPER(fn) fn(DT_N) fn(DT_N_S_chosen) fn(DT_N_S_aliases) fn(DT_N_S_soc) fn(DT_N_S_soc_S_interrupt_controller_e000e100) fn(DT_N_S_soc_S_timer_e000e010) fn(DT_N_S_soc_S_flexram_400b0000) fn(DT_N_S_soc_S_flexram_400b0000_S_itcm_0) fn(DT_N_S_soc_S_flexram_400b0000_S_dtcm_20000000) fn(DT_N_S_soc_S_flexram_400b0000_S_ocram_20200000) fn(DT_N_S_soc_S_spi_402a8000) fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0) fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions) fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_0) fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_10000) fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_310000) fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_610000) fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_630000) fn(DT_N_S_soc_S_semc0_402f0000) fn(DT_N_S_soc_S_gpt_401ec000) fn(DT_N_S_soc_S_gpt_401f0000) fn(DT_N_S_soc_S_qtmr_401dc000) fn(DT_N_S_soc_S_qtmr_401dc000_S_timer0) fn(DT_N_S_soc_S_qtmr_401dc000_S_timer1) fn(DT_N_S_soc_S_qtmr_401dc000_S_timer2) fn(DT_N_S_soc_S_qtmr_401dc000_S_timer3) fn(DT_N_S_soc_S_qtmr_401e0000) fn(DT_N_S_soc_S_qtmr_401e0000_S_timer0) fn(DT_N_S_soc_S_qtmr_401e0000_S_timer1) fn(DT_N_S_soc_S_qtmr_401e0000_S_timer2) fn(DT_N_S_soc_S_qtmr_401e0000_S_timer3) fn(DT_N_S_soc_S_qtmr_401e4000) fn(DT_N_S_soc_S_qtmr_401e4000_S_timer0) fn(DT_N_S_soc_S_qtmr_401e4000_S_timer1) fn(DT_N_S_soc_S_qtmr_401e4000_S_timer2) fn(DT_N_S_soc_S_qtmr_401e4000_S_timer3) fn(DT_N_S_soc_S_qtmr_401e8000) fn(DT_N_S_soc_S_qtmr_401e8000_S_timer0) fn(DT_N_S_soc_S_qtmr_401e8000_S_timer1) fn(DT_N_S_soc_S_qtmr_401e8000_S_timer2) fn(DT_N_S_soc_S_qtmr_401e8000_S_timer3) fn(DT_N_S_soc_S_ccm_400fc000) fn(DT_N_S_soc_S_ccm_400fc000_S_arm_podf) fn(DT_N_S_soc_S_ccm_400fc000_S_ahb_podf) fn(DT_N_S_soc_S_ccm_400fc000_S_ipg_podf) fn(DT_N_S_soc_S_snvs_400d4000) fn(DT_N_S_soc_S_snvs_400d4000_S_rtc) fn(DT_N_S_soc_S_gpio_401b8000) fn(DT_N_S_soc_S_gpio_401bc000) fn(DT_N_S_soc_S_gpio_401c0000) fn(DT_N_S_soc_S_gpio_400c0000) fn(DT_N_S_soc_S_i2c_403f0000) fn(DT_N_S_soc_S_i2c_403f4000) fn(DT_N_S_soc_S_i2c_403f8000) fn(DT_N_S_soc_S_i2c_403fc000) fn(DT_N_S_soc_S_iomuxc_401f8000) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_ptp) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_00_gpio1_io00) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_01_gpio1_io01) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_02_gpio1_io02) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_03_gpio1_io03) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_04_gpio1_io04) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_05_gpio1_io05) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_gpio1_io06) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_lpuart1_tx) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_gpio1_io07) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_lpuart1_rx) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_enet_ref_clk) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_gpio1_io08) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_enet_rx_data1) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_gpio1_io09) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_enet_rx_data0) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_gpio1_io10) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_lpspi1_sck) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_enet_rx_en) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_gpio1_io11) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_lpspi1_pcs0) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_enet_rx_er) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_gpio1_io12) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_lpspi1_sdo) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_enet_tx_en) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_gpio1_io13) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_lpspi1_sdi) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_enet_tx_data0) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_gpio1_io14) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_enet_tx_data1) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_gpio1_io15) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_00_gpio1_io16) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_01_gpio1_io17) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_02_gpio1_io18) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_03_gpio1_io19) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_04_gpio1_io20) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_05_gpio1_io21) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_06_gpio1_io22) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_gpio1_io23) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_usdhc1_vselect) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_gpio1_io24) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_lpuart2_tx) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_gpio1_io25) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_lpuart2_rx) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_adc1_in10) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_gpio1_io26) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_adc1_in11) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_gpio1_io27) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_12_gpio1_io28) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_13_gpio1_io29) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_gpio1_io30) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_lpi2c1_scl) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_gpio1_io31) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_lpi2c1_sda) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_00_gpio2_io00) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_01_gpio2_io01) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_02_gpio2_io02) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_03_gpio2_io03) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_04_gpio2_io04) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_05_gpio2_io05) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_06_gpio2_io06) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_07_gpio2_io07) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_08_gpio2_io08) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_09_gpio2_io09) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_10_gpio2_io10) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_11_gpio2_io11) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_12_gpio2_io12) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_13_gpio2_io13) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_14_gpio2_io14) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_15_gpio2_io15) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_16_gpio2_io16) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_17_gpio2_io17) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_18_gpio2_io18) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_19_gpio2_io19) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_20_gpio2_io20) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_21_gpio2_io21) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_22_gpio2_io22) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_23_gpio2_io23) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_24_gpio2_io24) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_25_gpio2_io25) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_26_gpio2_io26) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_27_gpio2_io27) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_gpio2_io28) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_sai3_mclk) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_29_gpio2_io29) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_30_gpio2_io30) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_31_gpio2_io31) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_32_gpio3_io00) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_33_gpio3_io01) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_34_gpio3_io02) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_35_gpio3_io03) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_36_gpio3_io04) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_37_gpio3_io05) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_38_gpio3_io06) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_39_gpio3_io07) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_enet_mdio) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_gpio3_io08) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_enet_mdc) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_gpio3_io09) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_gpio3_io13) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_usdhc1_data2) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_gpio3_io14) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_usdhc1_data3) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_gpio3_io15) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_usdhc1_cmd) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_gpio3_io16) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_usdhc1_clk) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_gpio3_io17) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_usdhc1_data0) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_gpio3_io18) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_usdhc1_data1) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_06_gpio3_io19) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_flexcan1_tx) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_gpio3_io20) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_flexcan1_rx) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_gpio3_io21) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_gpio3_io22) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_lpi2c4_scl) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_gpio3_io23) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_lpi2c4_sda) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_04_gpio3_io24) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_05_gpio3_io25) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_gpio3_io26) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_sai3_tx_bclk) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_gpio3_io27) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_sai3_tx_sync) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_gpio3_io28) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_sai3_tx_data) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_09_gpio3_io29) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_10_gpio3_io30) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_gpio3_io31) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_sai3_rx_data) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_on_req_gpio5_io01) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_stby_req_gpio5_io02) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_wakeup_gpio5_io00) fn(DT_N_S_soc_S_display_controller_402b8000) fn(DT_N_S_soc_S_spi_40394000) fn(DT_N_S_soc_S_spi_40394000_S_slow_0) fn(DT_N_S_soc_S_spi_40394000_S_fast_0) fn(DT_N_S_soc_S_spi_40398000) fn(DT_N_S_soc_S_spi_4039c000) fn(DT_N_S_soc_S_spi_403a0000) fn(DT_N_S_soc_S_uart_40184000) fn(DT_N_S_soc_S_uart_40188000) fn(DT_N_S_soc_S_uart_4018c000) fn(DT_N_S_soc_S_uart_40190000) fn(DT_N_S_soc_S_uart_40194000) fn(DT_N_S_soc_S_uart_40198000) fn(DT_N_S_soc_S_uart_4019c000) fn(DT_N_S_soc_S_uart_401a0000) fn(DT_N_S_soc_S_adc_400c4000) fn(DT_N_S_soc_S_adc_400c8000) fn(DT_N_S_soc_S_flexpwm_403dc000) fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm0) fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm1) fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm2) fn(DT_N_S_soc_S_flexpwm_403dc000_S_pwm3) fn(DT_N_S_soc_S_flexpwm_403e0000) fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm0) fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm1) fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm2) fn(DT_N_S_soc_S_flexpwm_403e0000_S_pwm3) fn(DT_N_S_soc_S_flexpwm_403e4000) fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm0) fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm1) fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm2) fn(DT_N_S_soc_S_flexpwm_403e4000_S_pwm3) fn(DT_N_S_soc_S_flexpwm_403e8000) fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm0) fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm1) fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm2) fn(DT_N_S_soc_S_flexpwm_403e8000_S_pwm3) fn(DT_N_S_soc_S_ethernet_402d8000) fn(DT_N_S_soc_S_ethernet_402d8000_S_ptp) fn(DT_N_S_soc_S_reset_controller_400f8000) fn(DT_N_S_soc_S_random_400cc000) fn(DT_N_S_soc_S_usbd_402e0000) fn(DT_N_S_soc_S_usbd_402e0200) fn(DT_N_S_soc_S_usdhc_402c0000) fn(DT_N_S_soc_S_usdhc_402c0000_S_sdmmc) fn(DT_N_S_soc_S_usdhc_402c4000) fn(DT_N_S_soc_S_csi_402bc000) fn(DT_N_S_soc_S_dma_controller_400e8000) fn(DT_N_S_soc_S_can_401d0000) fn(DT_N_S_soc_S_can_401d4000) fn(DT_N_S_soc_S_can_401d8000) fn(DT_N_S_soc_S_wdog_400b8000) fn(DT_N_S_soc_S_wdog_400d0000) fn(DT_N_S_soc_S_anatop_400d8000) fn(DT_N_S_soc_S_iomuxcgpr_400ac000) fn(DT_N_S_soc_S_sai_40384000) fn(DT_N_S_soc_S_sai_40388000) fn(DT_N_S_soc_S_sai_4038c000) fn(DT_N_S_soc_S_qdec_403c8000) fn(DT_N_S_soc_S_qdec_403cc000) fn(DT_N_S_soc_S_qdec_403d0000) fn(DT_N_S_soc_S_qdec_403d4000) fn(DT_N_S_soc_S_xbar1_403bc000) fn(DT_N_S_soc_S_xbar2_403c0000) fn(DT_N_S_soc_S_xbar3_403c4000) fn(DT_N_S_cpus) fn(DT_N_S_cpus_S_cpu_0) fn(DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90) fn(DT_N_S_cpus_S_cpu_0_S_itm_e0000000) fn(DT_N_S_system_clock) fn(DT_N_S_clock_xtal) fn(DT_N_S_clock_rtc_xtal) fn(DT_N_S_usbpll_clock) fn(DT_N_S_memory_80000000) fn(DT_N_S_leds) fn(DT_N_S_leds_S_led_1) fn(DT_N_S_gpio_keys) fn(DT_N_S_gpio_keys_S_button_1) fn(DT_N_S_connector)
#define DT_FOREACH_OKAY_HELPER(fn) fn(DT_N) fn(DT_N_S_chosen) fn(DT_N_S_aliases) fn(DT_N_S_soc) fn(DT_N_S_soc_S_interrupt_controller_e000e100) fn(DT_N_S_soc_S_timer_e000e010) fn(DT_N_S_soc_S_flexram_400b0000) fn(DT_N_S_soc_S_flexram_400b0000_S_itcm_0) fn(DT_N_S_soc_S_flexram_400b0000_S_dtcm_20000000) fn(DT_N_S_soc_S_flexram_400b0000_S_ocram_20200000) fn(DT_N_S_soc_S_spi_402a8000) fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0) fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions) fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_0) fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_10000) fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_310000) fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_610000) fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_630000) fn(DT_N_S_soc_S_semc0_402f0000) fn(DT_N_S_soc_S_gpt_401ec000) fn(DT_N_S_soc_S_gpt_401f0000) fn(DT_N_S_soc_S_qtmr_401dc000) fn(DT_N_S_soc_S_qtmr_401e0000) fn(DT_N_S_soc_S_qtmr_401e4000) fn(DT_N_S_soc_S_qtmr_401e8000) fn(DT_N_S_soc_S_ccm_400fc000) fn(DT_N_S_soc_S_ccm_400fc000_S_arm_podf) fn(DT_N_S_soc_S_ccm_400fc000_S_ahb_podf) fn(DT_N_S_soc_S_ccm_400fc000_S_ipg_podf) fn(DT_N_S_soc_S_snvs_400d4000) fn(DT_N_S_soc_S_snvs_400d4000_S_rtc) fn(DT_N_S_soc_S_gpio_401b8000) fn(DT_N_S_soc_S_gpio_401bc000) fn(DT_N_S_soc_S_gpio_401c0000) fn(DT_N_S_soc_S_gpio_400c0000) fn(DT_N_S_soc_S_i2c_403f0000) fn(DT_N_S_soc_S_i2c_403fc000) fn(DT_N_S_soc_S_iomuxc_401f8000) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_adc1_S_group0) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group0) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group1) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group2) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group3) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_enet_S_group4) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_flexcan1_S_group0) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c1_S_group0) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpi2c4_S_group0) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpspi1_S_group0) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_S_group0) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group0) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart1_sleep_S_group1) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_S_group0) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group0) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_lpuart2_sleep_S_group1) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_ptp) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_sai3_S_group0) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group0) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group1) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group2) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_S_group3) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group0) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_fast_S_group1) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group0) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_med_S_group1) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group0) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_usdhc1_slow_S_group1) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group0) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl_S_pinmux_user_S_group1) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_00_gpio1_io00) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_01_gpio1_io01) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_02_gpio1_io02) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_03_gpio1_io03) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_04_gpio1_io04) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_05_gpio1_io05) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_gpio1_io06) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_06_lpuart1_tx) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_gpio1_io07) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_07_lpuart1_rx) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_enet_ref_clk) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_08_gpio1_io08) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_enet_rx_data1) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_09_gpio1_io09) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_enet_rx_data0) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_gpio1_io10) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_10_lpspi1_sck) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_enet_rx_en) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_gpio1_io11) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_11_lpspi1_pcs0) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_enet_rx_er) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_gpio1_io12) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_12_lpspi1_sdo) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_enet_tx_en) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_gpio1_io13) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_13_lpspi1_sdi) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_enet_tx_data0) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_14_gpio1_io14) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_enet_tx_data1) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b0_15_gpio1_io15) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_00_gpio1_io16) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_01_gpio1_io17) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_02_gpio1_io18) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_03_gpio1_io19) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_04_gpio1_io20) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_05_gpio1_io21) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_06_gpio1_io22) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_gpio1_io23) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_07_usdhc1_vselect) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_gpio1_io24) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_08_lpuart2_tx) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_gpio1_io25) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_09_lpuart2_rx) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_adc1_in10) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_10_gpio1_io26) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_adc1_in11) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_11_gpio1_io27) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_12_gpio1_io28) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_13_gpio1_io29) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_gpio1_io30) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_14_lpi2c1_scl) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_gpio1_io31) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_ad_b1_15_lpi2c1_sda) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_00_gpio2_io00) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_01_gpio2_io01) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_02_gpio2_io02) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_03_gpio2_io03) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_04_gpio2_io04) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_05_gpio2_io05) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_06_gpio2_io06) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_07_gpio2_io07) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_08_gpio2_io08) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_09_gpio2_io09) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_10_gpio2_io10) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_11_gpio2_io11) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_12_gpio2_io12) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_13_gpio2_io13) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_14_gpio2_io14) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_15_gpio2_io15) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_16_gpio2_io16) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_17_gpio2_io17) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_18_gpio2_io18) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_19_gpio2_io19) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_20_gpio2_io20) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_21_gpio2_io21) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_22_gpio2_io22) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_23_gpio2_io23) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_24_gpio2_io24) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_25_gpio2_io25) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_26_gpio2_io26) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_27_gpio2_io27) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_gpio2_io28) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_28_sai3_mclk) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_29_gpio2_io29) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_30_gpio2_io30) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_31_gpio2_io31) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_32_gpio3_io00) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_33_gpio3_io01) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_34_gpio3_io02) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_35_gpio3_io03) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_36_gpio3_io04) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_37_gpio3_io05) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_38_gpio3_io06) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_39_gpio3_io07) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_enet_mdio) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_40_gpio3_io08) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_enet_mdc) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_emc_41_gpio3_io09) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_gpio3_io13) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_00_usdhc1_data2) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_gpio3_io14) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_01_usdhc1_data3) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_gpio3_io15) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_02_usdhc1_cmd) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_gpio3_io16) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_03_usdhc1_clk) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_gpio3_io17) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_04_usdhc1_data0) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_gpio3_io18) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_05_usdhc1_data1) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b0_06_gpio3_io19) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_flexcan1_tx) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_00_gpio3_io20) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_flexcan1_rx) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_01_gpio3_io21) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_gpio3_io22) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_02_lpi2c4_scl) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_gpio3_io23) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_03_lpi2c4_sda) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_04_gpio3_io24) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_05_gpio3_io25) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_gpio3_io26) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_06_sai3_tx_bclk) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_gpio3_io27) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_07_sai3_tx_sync) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_gpio3_io28) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_08_sai3_tx_data) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_09_gpio3_io29) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_10_gpio3_io30) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_gpio3_io31) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_gpio_sd_b1_11_sai3_rx_data) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_on_req_gpio5_io01) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_pmic_stby_req_gpio5_io02) fn(DT_N_S_soc_S_iomuxc_401f8000_S_iomuxc_snvs_wakeup_gpio5_io00) fn(DT_N_S_soc_S_spi_40394000) fn(DT_N_S_soc_S_spi_40394000_S_slow_0) fn(DT_N_S_soc_S_spi_40394000_S_fast_0) fn(DT_N_S_soc_S_uart_40184000) fn(DT_N_S_soc_S_adc_400c4000) fn(DT_N_S_soc_S_flexpwm_403dc000) fn(DT_N_S_soc_S_flexpwm_403e0000) fn(DT_N_S_soc_S_flexpwm_403e4000) fn(DT_N_S_soc_S_flexpwm_403e8000) fn(DT_N_S_soc_S_ethernet_402d8000) fn(DT_N_S_soc_S_ethernet_402d8000_S_ptp) fn(DT_N_S_soc_S_reset_controller_400f8000) fn(DT_N_S_soc_S_random_400cc000) fn(DT_N_S_soc_S_usbd_402e0000) fn(DT_N_S_soc_S_usdhc_402c0000) fn(DT_N_S_soc_S_usdhc_402c0000_S_sdmmc) fn(DT_N_S_soc_S_dma_controller_400e8000) fn(DT_N_S_soc_S_anatop_400d8000) fn(DT_N_S_soc_S_iomuxcgpr_400ac000) fn(DT_N_S_cpus) fn(DT_N_S_cpus_S_cpu_0) fn(DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90) fn(DT_N_S_cpus_S_cpu_0_S_itm_e0000000) fn(DT_N_S_system_clock) fn(DT_N_S_clock_xtal) fn(DT_N_S_clock_rtc_xtal) fn(DT_N_S_usbpll_clock) fn(DT_N_S_memory_80000000) fn(DT_N_S_leds) fn(DT_N_S_leds_S_led_1) fn(DT_N_S_gpio_keys) fn(DT_N_S_gpio_keys_S_button_1) fn(DT_N_S_connector)
#define DT_COMPAT_fixed_partitions_LABEL_mcuboot DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_0
#define DT_COMPAT_fixed_partitions_LABEL_mcuboot_EXISTS 1
#define DT_COMPAT_fixed_partitions_LABEL_image_0 DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_10000
#define DT_COMPAT_fixed_partitions_LABEL_image_0_EXISTS 1
#define DT_COMPAT_fixed_partitions_LABEL_image_1 DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_310000
#define DT_COMPAT_fixed_partitions_LABEL_image_1_EXISTS 1
#define DT_COMPAT_fixed_partitions_LABEL_image_scratch DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_610000
#define DT_COMPAT_fixed_partitions_LABEL_image_scratch_EXISTS 1
#define DT_COMPAT_fixed_partitions_LABEL_storage DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions_S_partition_630000
#define DT_COMPAT_fixed_partitions_LABEL_storage_EXISTS 1

/*
 * Macros for compatibles with status "okay" nodes
 */
#define DT_COMPAT_HAS_OKAY_nxp_mimxrt1021 1
#define DT_COMPAT_HAS_OKAY_simple_bus 1
#define DT_COMPAT_HAS_OKAY_arm_v7m_nvic 1
#define DT_COMPAT_HAS_OKAY_arm_armv7m_systick 1
#define DT_COMPAT_HAS_OKAY_nxp_imx_flexram 1
#define DT_COMPAT_HAS_OKAY_zephyr_memory_region 1
#define DT_COMPAT_HAS_OKAY_nxp_imx_itcm 1
#define DT_COMPAT_HAS_OKAY_nxp_imx_dtcm 1
#define DT_COMPAT_HAS_OKAY_mmio_sram 1
#define DT_COMPAT_HAS_OKAY_nxp_imx_flexspi 1
#define DT_COMPAT_HAS_OKAY_nxp_imx_flexspi_nor 1
#define DT_COMPAT_HAS_OKAY_fixed_partitions 1
#define DT_COMPAT_HAS_OKAY_nxp_imx_semc 1
#define DT_COMPAT_HAS_OKAY_nxp_gpt_hw_timer 1
#define DT_COMPAT_HAS_OKAY_nxp_imx_gpt 1
#define DT_COMPAT_HAS_OKAY_nxp_imx_qtmr 1
#define DT_COMPAT_HAS_OKAY_nxp_imx_ccm 1
#define DT_COMPAT_HAS_OKAY_fixed_factor_clock 1
#define DT_COMPAT_HAS_OKAY_nxp_imx_snvs 1
#define DT_COMPAT_HAS_OKAY_nxp_imx_snvs_rtc 1
#define DT_COMPAT_HAS_OKAY_nxp_imx_gpio 1
#define DT_COMPAT_HAS_OKAY_nxp_imx_lpi2c 1
#define DT_COMPAT_HAS_OKAY_nxp_imx_iomuxc 1
#define DT_COMPAT_HAS_OKAY_nxp_mcux_rt_pinctrl 1
#define DT_COMPAT_HAS_OKAY_nxp_imx_lpspi 1
#define DT_COMPAT_HAS_OKAY_test 1
#define DT_COMPAT_HAS_OKAY_test_spi_loopback_fast 1
#define DT_COMPAT_HAS_OKAY_nxp_kinetis_lpuart 1
#define DT_COMPAT_HAS_OKAY_nxp_mcux_12b1msps_sar 1
#define DT_COMPAT_HAS_OKAY_nxp_flexpwm 1
#define DT_COMPAT_HAS_OKAY_nxp_kinetis_ethernet 1
#define DT_COMPAT_HAS_OKAY_nxp_kinetis_ptp 1
#define DT_COMPAT_HAS_OKAY_nxp_imx_src 1
#define DT_COMPAT_HAS_OKAY_nxp_kinetis_trng 1
#define DT_COMPAT_HAS_OKAY_nxp_mcux_usbd 1
#define DT_COMPAT_HAS_OKAY_nxp_imx_usdhc 1
#define DT_COMPAT_HAS_OKAY_zephyr_sdmmc_disk 1
#define DT_COMPAT_HAS_OKAY_nxp_mcux_edma 1
#define DT_COMPAT_HAS_OKAY_nxp_imx_anatop 1
#define DT_COMPAT_HAS_OKAY_nxp_imx_gpr 1
#define DT_COMPAT_HAS_OKAY_arm_cortex_m7 1
#define DT_COMPAT_HAS_OKAY_arm_armv7m_mpu 1
#define DT_COMPAT_HAS_OKAY_arm_armv7m_itm 1
#define DT_COMPAT_HAS_OKAY_fixed_clock 1
#define DT_COMPAT_HAS_OKAY_gpio_leds 1
#define DT_COMPAT_HAS_OKAY_gpio_keys 1
#define DT_COMPAT_HAS_OKAY_arduino_header_r3 1

/*
 * Macros for status "okay" instances of each compatible
 */
#define DT_N_INST_nxp_mimxrt1021_NUM_OKAY 1
#define DT_N_INST_simple_bus_NUM_OKAY 1
#define DT_N_INST_arm_v7m_nvic_NUM_OKAY 1
#define DT_N_INST_arm_armv7m_systick_NUM_OKAY 1
#define DT_N_INST_nxp_imx_flexram_NUM_OKAY 1
#define DT_N_INST_zephyr_memory_region_NUM_OKAY 3
#define DT_N_INST_nxp_imx_itcm_NUM_OKAY 1
#define DT_N_INST_nxp_imx_dtcm_NUM_OKAY 1
#define DT_N_INST_mmio_sram_NUM_OKAY 1
#define DT_N_INST_nxp_imx_flexspi_NUM_OKAY 1
#define DT_N_INST_nxp_imx_flexspi_nor_NUM_OKAY 1
#define DT_N_INST_fixed_partitions_NUM_OKAY 1
#define DT_N_INST_nxp_imx_semc_NUM_OKAY 1
#define DT_N_INST_nxp_gpt_hw_timer_NUM_OKAY 1
#define DT_N_INST_nxp_imx_gpt_NUM_OKAY 1
#define DT_N_INST_nxp_imx_qtmr_NUM_OKAY 4
#define DT_N_INST_nxp_imx_ccm_NUM_OKAY 1
#define DT_N_INST_fixed_factor_clock_NUM_OKAY 3
#define DT_N_INST_nxp_imx_snvs_NUM_OKAY 1
#define DT_N_INST_nxp_imx_snvs_rtc_NUM_OKAY 1
#define DT_N_INST_nxp_imx_gpio_NUM_OKAY 4
#define DT_N_INST_nxp_imx_lpi2c_NUM_OKAY 2
#define DT_N_INST_nxp_imx_iomuxc_NUM_OKAY 1
#define DT_N_INST_nxp_mcux_rt_pinctrl_NUM_OKAY 1
#define DT_N_INST_nxp_imx_lpspi_NUM_OKAY 1
#define DT_N_INST_test_NUM_OKAY 1
#define DT_N_INST_test_spi_loopback_fast_NUM_OKAY 1
#define DT_N_INST_nxp_kinetis_lpuart_NUM_OKAY 1
#define DT_N_INST_nxp_mcux_12b1msps_sar_NUM_OKAY 1
#define DT_N_INST_nxp_flexpwm_NUM_OKAY 4
#define DT_N_INST_nxp_kinetis_ethernet_NUM_OKAY 1
#define DT_N_INST_nxp_kinetis_ptp_NUM_OKAY 1
#define DT_N_INST_nxp_imx_src_NUM_OKAY 1
#define DT_N_INST_nxp_kinetis_trng_NUM_OKAY 1
#define DT_N_INST_nxp_mcux_usbd_NUM_OKAY 1
#define DT_N_INST_nxp_imx_usdhc_NUM_OKAY 1
#define DT_N_INST_zephyr_sdmmc_disk_NUM_OKAY 1
#define DT_N_INST_nxp_mcux_edma_NUM_OKAY 1
#define DT_N_INST_nxp_imx_anatop_NUM_OKAY 1
#define DT_N_INST_nxp_imx_gpr_NUM_OKAY 1
#define DT_N_INST_arm_cortex_m7_NUM_OKAY 1
#define DT_N_INST_arm_armv7m_mpu_NUM_OKAY 1
#define DT_N_INST_arm_armv7m_itm_NUM_OKAY 1
#define DT_N_INST_fixed_clock_NUM_OKAY 4
#define DT_N_INST_gpio_leds_NUM_OKAY 1
#define DT_N_INST_gpio_keys_NUM_OKAY 1
#define DT_N_INST_arduino_header_r3_NUM_OKAY 1
#define DT_FOREACH_OKAY_nxp_mimxrt1021(fn) fn(DT_N)
#define DT_FOREACH_OKAY_VARGS_nxp_mimxrt1021(fn, ...) fn(DT_N, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nxp_mimxrt1021(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nxp_mimxrt1021(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_simple_bus(fn) fn(DT_N_S_soc)
#define DT_FOREACH_OKAY_VARGS_simple_bus(fn, ...) fn(DT_N_S_soc, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_simple_bus(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_simple_bus(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_arm_v7m_nvic(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100)
#define DT_FOREACH_OKAY_VARGS_arm_v7m_nvic(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_arm_v7m_nvic(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_arm_v7m_nvic(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_arm_armv7m_systick(fn) fn(DT_N_S_soc_S_timer_e000e010)
#define DT_FOREACH_OKAY_VARGS_arm_armv7m_systick(fn, ...) fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_arm_armv7m_systick(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_arm_armv7m_systick(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nxp_imx_flexram(fn) fn(DT_N_S_soc_S_flexram_400b0000)
#define DT_FOREACH_OKAY_VARGS_nxp_imx_flexram(fn, ...) fn(DT_N_S_soc_S_flexram_400b0000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nxp_imx_flexram(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nxp_imx_flexram(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_zephyr_memory_region(fn) fn(DT_N_S_soc_S_flexram_400b0000_S_itcm_0) fn(DT_N_S_soc_S_flexram_400b0000_S_dtcm_20000000) fn(DT_N_S_soc_S_flexram_400b0000_S_ocram_20200000)
#define DT_FOREACH_OKAY_VARGS_zephyr_memory_region(fn, ...) fn(DT_N_S_soc_S_flexram_400b0000_S_itcm_0, __VA_ARGS__) fn(DT_N_S_soc_S_flexram_400b0000_S_dtcm_20000000, __VA_ARGS__) fn(DT_N_S_soc_S_flexram_400b0000_S_ocram_20200000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_zephyr_memory_region(fn) fn(0) fn(1) fn(2)
#define DT_FOREACH_OKAY_INST_VARGS_zephyr_memory_region(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__) fn(2, __VA_ARGS__)
#define DT_FOREACH_OKAY_nxp_imx_itcm(fn) fn(DT_N_S_soc_S_flexram_400b0000_S_itcm_0)
#define DT_FOREACH_OKAY_VARGS_nxp_imx_itcm(fn, ...) fn(DT_N_S_soc_S_flexram_400b0000_S_itcm_0, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nxp_imx_itcm(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nxp_imx_itcm(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nxp_imx_dtcm(fn) fn(DT_N_S_soc_S_flexram_400b0000_S_dtcm_20000000)
#define DT_FOREACH_OKAY_VARGS_nxp_imx_dtcm(fn, ...) fn(DT_N_S_soc_S_flexram_400b0000_S_dtcm_20000000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nxp_imx_dtcm(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nxp_imx_dtcm(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_mmio_sram(fn) fn(DT_N_S_soc_S_flexram_400b0000_S_ocram_20200000)
#define DT_FOREACH_OKAY_VARGS_mmio_sram(fn, ...) fn(DT_N_S_soc_S_flexram_400b0000_S_ocram_20200000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_mmio_sram(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_mmio_sram(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nxp_imx_flexspi(fn) fn(DT_N_S_soc_S_spi_402a8000)
#define DT_FOREACH_OKAY_VARGS_nxp_imx_flexspi(fn, ...) fn(DT_N_S_soc_S_spi_402a8000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nxp_imx_flexspi(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nxp_imx_flexspi(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nxp_imx_flexspi_nor(fn) fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0)
#define DT_FOREACH_OKAY_VARGS_nxp_imx_flexspi_nor(fn, ...) fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nxp_imx_flexspi_nor(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nxp_imx_flexspi_nor(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_fixed_partitions(fn) fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions)
#define DT_FOREACH_OKAY_VARGS_fixed_partitions(fn, ...) fn(DT_N_S_soc_S_spi_402a8000_S_is25wp064_0_S_partitions, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_fixed_partitions(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_fixed_partitions(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nxp_imx_semc(fn) fn(DT_N_S_soc_S_semc0_402f0000)
#define DT_FOREACH_OKAY_VARGS_nxp_imx_semc(fn, ...) fn(DT_N_S_soc_S_semc0_402f0000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nxp_imx_semc(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nxp_imx_semc(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nxp_gpt_hw_timer(fn) fn(DT_N_S_soc_S_gpt_401ec000)
#define DT_FOREACH_OKAY_VARGS_nxp_gpt_hw_timer(fn, ...) fn(DT_N_S_soc_S_gpt_401ec000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nxp_gpt_hw_timer(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nxp_gpt_hw_timer(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nxp_imx_gpt(fn) fn(DT_N_S_soc_S_gpt_401f0000)
#define DT_FOREACH_OKAY_VARGS_nxp_imx_gpt(fn, ...) fn(DT_N_S_soc_S_gpt_401f0000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nxp_imx_gpt(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nxp_imx_gpt(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nxp_imx_qtmr(fn) fn(DT_N_S_soc_S_qtmr_401dc000) fn(DT_N_S_soc_S_qtmr_401e0000) fn(DT_N_S_soc_S_qtmr_401e4000) fn(DT_N_S_soc_S_qtmr_401e8000)
#define DT_FOREACH_OKAY_VARGS_nxp_imx_qtmr(fn, ...) fn(DT_N_S_soc_S_qtmr_401dc000, __VA_ARGS__) fn(DT_N_S_soc_S_qtmr_401e0000, __VA_ARGS__) fn(DT_N_S_soc_S_qtmr_401e4000, __VA_ARGS__) fn(DT_N_S_soc_S_qtmr_401e8000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nxp_imx_qtmr(fn) fn(0) fn(1) fn(2) fn(3)
#define DT_FOREACH_OKAY_INST_VARGS_nxp_imx_qtmr(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__) fn(2, __VA_ARGS__) fn(3, __VA_ARGS__)
#define DT_FOREACH_OKAY_nxp_imx_ccm(fn) fn(DT_N_S_soc_S_ccm_400fc000)
#define DT_FOREACH_OKAY_VARGS_nxp_imx_ccm(fn, ...) fn(DT_N_S_soc_S_ccm_400fc000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nxp_imx_ccm(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nxp_imx_ccm(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_fixed_factor_clock(fn) fn(DT_N_S_soc_S_ccm_400fc000_S_arm_podf) fn(DT_N_S_soc_S_ccm_400fc000_S_ahb_podf) fn(DT_N_S_soc_S_ccm_400fc000_S_ipg_podf)
#define DT_FOREACH_OKAY_VARGS_fixed_factor_clock(fn, ...) fn(DT_N_S_soc_S_ccm_400fc000_S_arm_podf, __VA_ARGS__) fn(DT_N_S_soc_S_ccm_400fc000_S_ahb_podf, __VA_ARGS__) fn(DT_N_S_soc_S_ccm_400fc000_S_ipg_podf, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_fixed_factor_clock(fn) fn(0) fn(1) fn(2)
#define DT_FOREACH_OKAY_INST_VARGS_fixed_factor_clock(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__) fn(2, __VA_ARGS__)
#define DT_FOREACH_OKAY_nxp_imx_snvs(fn) fn(DT_N_S_soc_S_snvs_400d4000)
#define DT_FOREACH_OKAY_VARGS_nxp_imx_snvs(fn, ...) fn(DT_N_S_soc_S_snvs_400d4000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nxp_imx_snvs(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nxp_imx_snvs(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nxp_imx_snvs_rtc(fn) fn(DT_N_S_soc_S_snvs_400d4000_S_rtc)
#define DT_FOREACH_OKAY_VARGS_nxp_imx_snvs_rtc(fn, ...) fn(DT_N_S_soc_S_snvs_400d4000_S_rtc, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nxp_imx_snvs_rtc(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nxp_imx_snvs_rtc(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nxp_imx_gpio(fn) fn(DT_N_S_soc_S_gpio_401b8000) fn(DT_N_S_soc_S_gpio_401bc000) fn(DT_N_S_soc_S_gpio_401c0000) fn(DT_N_S_soc_S_gpio_400c0000)
#define DT_FOREACH_OKAY_VARGS_nxp_imx_gpio(fn, ...) fn(DT_N_S_soc_S_gpio_401b8000, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_401bc000, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_401c0000, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_400c0000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nxp_imx_gpio(fn) fn(0) fn(1) fn(2) fn(3)
#define DT_FOREACH_OKAY_INST_VARGS_nxp_imx_gpio(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__) fn(2, __VA_ARGS__) fn(3, __VA_ARGS__)
#define DT_FOREACH_OKAY_nxp_imx_lpi2c(fn) fn(DT_N_S_soc_S_i2c_403f0000) fn(DT_N_S_soc_S_i2c_403fc000)
#define DT_FOREACH_OKAY_VARGS_nxp_imx_lpi2c(fn, ...) fn(DT_N_S_soc_S_i2c_403f0000, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_403fc000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nxp_imx_lpi2c(fn) fn(0) fn(1)
#define DT_FOREACH_OKAY_INST_VARGS_nxp_imx_lpi2c(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__)
#define DT_FOREACH_OKAY_nxp_imx_iomuxc(fn) fn(DT_N_S_soc_S_iomuxc_401f8000)
#define DT_FOREACH_OKAY_VARGS_nxp_imx_iomuxc(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nxp_imx_iomuxc(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nxp_imx_iomuxc(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nxp_mcux_rt_pinctrl(fn) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl)
#define DT_FOREACH_OKAY_VARGS_nxp_mcux_rt_pinctrl(fn, ...) fn(DT_N_S_soc_S_iomuxc_401f8000_S_pinctrl, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nxp_mcux_rt_pinctrl(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nxp_mcux_rt_pinctrl(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nxp_imx_lpspi(fn) fn(DT_N_S_soc_S_spi_40394000)
#define DT_FOREACH_OKAY_VARGS_nxp_imx_lpspi(fn, ...) fn(DT_N_S_soc_S_spi_40394000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nxp_imx_lpspi(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nxp_imx_lpspi(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_test(fn) fn(DT_N_S_soc_S_spi_40394000_S_slow_0)
#define DT_FOREACH_OKAY_VARGS_test(fn, ...) fn(DT_N_S_soc_S_spi_40394000_S_slow_0, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_test(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_test(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_test_spi_loopback_fast(fn) fn(DT_N_S_soc_S_spi_40394000_S_fast_0)
#define DT_FOREACH_OKAY_VARGS_test_spi_loopback_fast(fn, ...) fn(DT_N_S_soc_S_spi_40394000_S_fast_0, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_test_spi_loopback_fast(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_test_spi_loopback_fast(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nxp_kinetis_lpuart(fn) fn(DT_N_S_soc_S_uart_40184000)
#define DT_FOREACH_OKAY_VARGS_nxp_kinetis_lpuart(fn, ...) fn(DT_N_S_soc_S_uart_40184000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nxp_kinetis_lpuart(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nxp_kinetis_lpuart(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nxp_mcux_12b1msps_sar(fn) fn(DT_N_S_soc_S_adc_400c4000)
#define DT_FOREACH_OKAY_VARGS_nxp_mcux_12b1msps_sar(fn, ...) fn(DT_N_S_soc_S_adc_400c4000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nxp_mcux_12b1msps_sar(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nxp_mcux_12b1msps_sar(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nxp_flexpwm(fn) fn(DT_N_S_soc_S_flexpwm_403dc000) fn(DT_N_S_soc_S_flexpwm_403e0000) fn(DT_N_S_soc_S_flexpwm_403e4000) fn(DT_N_S_soc_S_flexpwm_403e8000)
#define DT_FOREACH_OKAY_VARGS_nxp_flexpwm(fn, ...) fn(DT_N_S_soc_S_flexpwm_403dc000, __VA_ARGS__) fn(DT_N_S_soc_S_flexpwm_403e0000, __VA_ARGS__) fn(DT_N_S_soc_S_flexpwm_403e4000, __VA_ARGS__) fn(DT_N_S_soc_S_flexpwm_403e8000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nxp_flexpwm(fn) fn(0) fn(1) fn(2) fn(3)
#define DT_FOREACH_OKAY_INST_VARGS_nxp_flexpwm(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__) fn(2, __VA_ARGS__) fn(3, __VA_ARGS__)
#define DT_FOREACH_OKAY_nxp_kinetis_ethernet(fn) fn(DT_N_S_soc_S_ethernet_402d8000)
#define DT_FOREACH_OKAY_VARGS_nxp_kinetis_ethernet(fn, ...) fn(DT_N_S_soc_S_ethernet_402d8000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nxp_kinetis_ethernet(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nxp_kinetis_ethernet(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nxp_kinetis_ptp(fn) fn(DT_N_S_soc_S_ethernet_402d8000_S_ptp)
#define DT_FOREACH_OKAY_VARGS_nxp_kinetis_ptp(fn, ...) fn(DT_N_S_soc_S_ethernet_402d8000_S_ptp, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nxp_kinetis_ptp(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nxp_kinetis_ptp(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nxp_imx_src(fn) fn(DT_N_S_soc_S_reset_controller_400f8000)
#define DT_FOREACH_OKAY_VARGS_nxp_imx_src(fn, ...) fn(DT_N_S_soc_S_reset_controller_400f8000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nxp_imx_src(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nxp_imx_src(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nxp_kinetis_trng(fn) fn(DT_N_S_soc_S_random_400cc000)
#define DT_FOREACH_OKAY_VARGS_nxp_kinetis_trng(fn, ...) fn(DT_N_S_soc_S_random_400cc000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nxp_kinetis_trng(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nxp_kinetis_trng(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nxp_mcux_usbd(fn) fn(DT_N_S_soc_S_usbd_402e0000)
#define DT_FOREACH_OKAY_VARGS_nxp_mcux_usbd(fn, ...) fn(DT_N_S_soc_S_usbd_402e0000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nxp_mcux_usbd(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nxp_mcux_usbd(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nxp_imx_usdhc(fn) fn(DT_N_S_soc_S_usdhc_402c0000)
#define DT_FOREACH_OKAY_VARGS_nxp_imx_usdhc(fn, ...) fn(DT_N_S_soc_S_usdhc_402c0000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nxp_imx_usdhc(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nxp_imx_usdhc(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_zephyr_sdmmc_disk(fn) fn(DT_N_S_soc_S_usdhc_402c0000_S_sdmmc)
#define DT_FOREACH_OKAY_VARGS_zephyr_sdmmc_disk(fn, ...) fn(DT_N_S_soc_S_usdhc_402c0000_S_sdmmc, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_zephyr_sdmmc_disk(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_zephyr_sdmmc_disk(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nxp_mcux_edma(fn) fn(DT_N_S_soc_S_dma_controller_400e8000)
#define DT_FOREACH_OKAY_VARGS_nxp_mcux_edma(fn, ...) fn(DT_N_S_soc_S_dma_controller_400e8000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nxp_mcux_edma(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nxp_mcux_edma(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nxp_imx_anatop(fn) fn(DT_N_S_soc_S_anatop_400d8000)
#define DT_FOREACH_OKAY_VARGS_nxp_imx_anatop(fn, ...) fn(DT_N_S_soc_S_anatop_400d8000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nxp_imx_anatop(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nxp_imx_anatop(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nxp_imx_gpr(fn) fn(DT_N_S_soc_S_iomuxcgpr_400ac000)
#define DT_FOREACH_OKAY_VARGS_nxp_imx_gpr(fn, ...) fn(DT_N_S_soc_S_iomuxcgpr_400ac000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nxp_imx_gpr(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nxp_imx_gpr(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_arm_cortex_m7(fn) fn(DT_N_S_cpus_S_cpu_0)
#define DT_FOREACH_OKAY_VARGS_arm_cortex_m7(fn, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_arm_cortex_m7(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_arm_cortex_m7(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_arm_armv7m_mpu(fn) fn(DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90)
#define DT_FOREACH_OKAY_VARGS_arm_armv7m_mpu(fn, ...) fn(DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_arm_armv7m_mpu(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_arm_armv7m_mpu(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_arm_armv7m_itm(fn) fn(DT_N_S_cpus_S_cpu_0_S_itm_e0000000)
#define DT_FOREACH_OKAY_VARGS_arm_armv7m_itm(fn, ...) fn(DT_N_S_cpus_S_cpu_0_S_itm_e0000000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_arm_armv7m_itm(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_arm_armv7m_itm(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_fixed_clock(fn) fn(DT_N_S_system_clock) fn(DT_N_S_clock_xtal) fn(DT_N_S_clock_rtc_xtal) fn(DT_N_S_usbpll_clock)
#define DT_FOREACH_OKAY_VARGS_fixed_clock(fn, ...) fn(DT_N_S_system_clock, __VA_ARGS__) fn(DT_N_S_clock_xtal, __VA_ARGS__) fn(DT_N_S_clock_rtc_xtal, __VA_ARGS__) fn(DT_N_S_usbpll_clock, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_fixed_clock(fn) fn(0) fn(1) fn(2) fn(3)
#define DT_FOREACH_OKAY_INST_VARGS_fixed_clock(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__) fn(2, __VA_ARGS__) fn(3, __VA_ARGS__)
#define DT_FOREACH_OKAY_gpio_leds(fn) fn(DT_N_S_leds)
#define DT_FOREACH_OKAY_VARGS_gpio_leds(fn, ...) fn(DT_N_S_leds, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_gpio_leds(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_gpio_leds(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_gpio_keys(fn) fn(DT_N_S_gpio_keys)
#define DT_FOREACH_OKAY_VARGS_gpio_keys(fn, ...) fn(DT_N_S_gpio_keys, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_gpio_keys(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_gpio_keys(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_arduino_header_r3(fn) fn(DT_N_S_connector)
#define DT_FOREACH_OKAY_VARGS_arduino_header_r3(fn, ...) fn(DT_N_S_connector, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_arduino_header_r3(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_arduino_header_r3(fn, ...) fn(0, __VA_ARGS__)

/*
 * Bus information for status "okay" nodes of each compatible
 */
#define DT_COMPAT_nxp_imx_flexspi_nor_BUS_spi 1
#define DT_COMPAT_test_BUS_spi 1
#define DT_COMPAT_test_spi_loopback_fast_BUS_spi 1
#define DT_COMPAT_zephyr_sdmmc_disk_BUS_sd 1
